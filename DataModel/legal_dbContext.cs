using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace DataModel
{
    public partial class legal_dbContext : DbContext
    {
        public legal_dbContext()
        {
        }

        public legal_dbContext(DbContextOptions<legal_dbContext> options)
            : base(options)
        {
        }

        public virtual DbSet<AccessControlVw> AccessControlVws { get; set; } = null!;
        public virtual DbSet<AccessControlVw1> AccessControlVws1 { get; set; } = null!;
        public virtual DbSet<AccountMaster> AccountMasters { get; set; } = null!;
        public virtual DbSet<ActiveCustomer> ActiveCustomers { get; set; } = null!;
        public virtual DbSet<ActiveCustomerTmp> ActiveCustomerTmps { get; set; } = null!;
        public virtual DbSet<AggregatedCounter> AggregatedCounters { get; set; } = null!;
        public virtual DbSet<Booking> Bookings { get; set; } = null!;
        public virtual DbSet<Booking1> Bookings1 { get; set; } = null!;
        public virtual DbSet<BookingsAm> BookingsAms { get; set; } = null!;
        public virtual DbSet<BookingsAmMetaVw> BookingsAmMetaVws { get; set; } = null!;
        public virtual DbSet<BookingsApr2018> BookingsApr2018s { get; set; } = null!;
        public virtual DbSet<BookingsFeb2018> BookingsFeb2018s { get; set; } = null!;
        public virtual DbSet<BookingsJan2018> BookingsJan2018s { get; set; } = null!;
        public virtual DbSet<BookingsJunaug2018> BookingsJunaug2018s { get; set; } = null!;
        public virtual DbSet<BookingsMar2018> BookingsMar2018s { get; set; } = null!;
        public virtual DbSet<BookingsMay2018> BookingsMay2018s { get; set; } = null!;
        public virtual DbSet<BookingsMetaVw> BookingsMetaVws { get; set; } = null!;
        public virtual DbSet<BookingsPartyInfo> BookingsPartyInfos { get; set; } = null!;
        public virtual DbSet<BookingsPartyInfo1> BookingsPartyInfo1s { get; set; } = null!;
        public virtual DbSet<BookingsPartyKey> BookingsPartyKeys { get; set; } = null!;
        public virtual DbSet<BookingsQ42017> BookingsQ42017s { get; set; } = null!;
        public virtual DbSet<BookingsQuote> BookingsQuotes { get; set; } = null!;
        public virtual DbSet<BookingsResAm> BookingsResAms { get; set; } = null!;
        public virtual DbSet<BookingsResAm20180123> BookingsResAm20180123s { get; set; } = null!;
        public virtual DbSet<BookingsResAmJulsep2018> BookingsResAmJulsep2018s { get; set; } = null!;
        public virtual DbSet<BookingsResAmJun2018> BookingsResAmJun2018s { get; set; } = null!;
        public virtual DbSet<BookingsResAmMetaVw> BookingsResAmMetaVws { get; set; } = null!;
        public virtual DbSet<BookingsResAmOctdec2018> BookingsResAmOctdec2018s { get; set; } = null!;
        public virtual DbSet<BookingsSepdec2018> BookingsSepdec2018s { get; set; } = null!;
        public virtual DbSet<BpTarget> BpTargets { get; set; } = null!;
        public virtual DbSet<BulkinsertTest> BulkinsertTests { get; set; } = null!;
        public virtual DbSet<CertDatum> CertData { get; set; } = null!;
        public virtual DbSet<CertificationDataTest> CertificationDataTests { get; set; } = null!;
        public virtual DbSet<CertificationStage> CertificationStages { get; set; } = null!;
        public virtual DbSet<CertificationStageRevenueSort> CertificationStageRevenueSorts { get; set; } = null!;
        public virtual DbSet<CertificationStagingRevenuesort> CertificationStagingRevenuesorts { get; set; } = null!;
        public virtual DbSet<Counter> Counters { get; set; } = null!;
        public virtual DbSet<CountryRegionMapping> CountryRegionMappings { get; set; } = null!;
        public virtual DbSet<CountryTheaterMapping> CountryTheaterMappings { get; set; } = null!;
        public virtual DbSet<Cpi> Cpis { get; set; } = null!;
        public virtual DbSet<Cpi1> Cpis1 { get; set; } = null!;
        public virtual DbSet<CrmAccountNonu> CrmAccountNonus { get; set; } = null!;
        public virtual DbSet<CrmAccountNonus1> CrmAccountNonus1s { get; set; } = null!;
        public virtual DbSet<CrmAccountU> CrmAccountUs { get; set; } = null!;
        public virtual DbSet<CrmAccountU1> CrmAccountUs1 { get; set; } = null!;
        public virtual DbSet<CtyGrouping> CtyGroupings { get; set; } = null!;
        public virtual DbSet<CustProfiling> CustProfilings { get; set; } = null!;
        public virtual DbSet<CustomerHier05102018> CustomerHier05102018s { get; set; } = null!;
        public virtual DbSet<CustomerMasterMetaVw> CustomerMasterMetaVws { get; set; } = null!;
        public virtual DbSet<CustomerNewupdateTest> CustomerNewupdateTests { get; set; } = null!;
        public virtual DbSet<CustomerNewupdated092518> CustomerNewupdated092518s { get; set; } = null!;
        public virtual DbSet<CustomerNewupdated102218> CustomerNewupdated102218s { get; set; } = null!;
        public virtual DbSet<CustomerNonus06282018> CustomerNonus06282018s { get; set; } = null!;
        public virtual DbSet<CustomerNonusArch06282018> CustomerNonusArch06282018s { get; set; } = null!;
        public virtual DbSet<CustomerSnow> CustomerSnows { get; set; } = null!;
        public virtual DbSet<CustomerSnow20181818> CustomerSnow20181818s { get; set; } = null!;
        public virtual DbSet<CustomerTempTable> CustomerTempTables { get; set; } = null!;
        public virtual DbSet<CustomerUs06282018> CustomerUs06282018s { get; set; } = null!;
        public virtual DbSet<CustomerUsArch06282018> CustomerUsArch06282018s { get; set; } = null!;
        public virtual DbSet<CustomersSnow091918> CustomersSnow091918s { get; set; } = null!;
        public virtual DbSet<CustomersSnow20181019> CustomersSnow20181019s { get; set; } = null!;
        public virtual DbSet<DalianBooking> DalianBookings { get; set; } = null!;
        public virtual DbSet<DevTestDatatype> DevTestDatatypes { get; set; } = null!;
        public virtual DbSet<DfToSqlTest> DfToSqlTests { get; set; } = null!;
        public virtual DbSet<DocusignEnvelopeSatusTemp> DocusignEnvelopeSatusTemps { get; set; } = null!;
        public virtual DbSet<DocusignEnvelopesTemp> DocusignEnvelopesTemps { get; set; } = null!;
        public virtual DbSet<DrspPosSvcMerged> DrspPosSvcMergeds { get; set; } = null!;
        public virtual DbSet<Dutchfinal> Dutchfinals { get; set; } = null!;
        public virtual DbSet<Dutchreport> Dutchreports { get; set; } = null!;
        public virtual DbSet<EtlPo> EtlPos { get; set; } = null!;
        public virtual DbSet<EwmdFinal> EwmdFinals { get; set; } = null!;
        public virtual DbSet<EwmdNov17Jan18> EwmdNov17Jan18s { get; set; } = null!;
        public virtual DbSet<Export> Exports { get; set; } = null!;
        public virtual DbSet<ExtUser> ExtUsers { get; set; } = null!;
        public virtual DbSet<ExtUser1> ExtUsers1 { get; set; } = null!;
        public virtual DbSet<FullCustomer> FullCustomers { get; set; } = null!;
        public virtual DbSet<FullCustomersSnow20181009> FullCustomersSnow20181009s { get; set; } = null!;
        public virtual DbSet<G2Customer2senzing> G2Customer2senzings { get; set; } = null!;
        public virtual DbSet<GlobalAcct> GlobalAccts { get; set; } = null!;
        public virtual DbSet<GlobalAcct1Tmp> GlobalAcct1Tmps { get; set; } = null!;
        public virtual DbSet<GlobalProfile> GlobalProfiles { get; set; } = null!;
        public virtual DbSet<GmSampleDatum> GmSampleData { get; set; } = null!;
        public virtual DbSet<GmSourceDestination> GmSourceDestinations { get; set; } = null!;
        public virtual DbSet<GmeBookingAggr> GmeBookingAggrs { get; set; } = null!;
        public virtual DbSet<GmeBookingsShipment> GmeBookingsShipments { get; set; } = null!;
        public virtual DbSet<GmeBookingsSummary> GmeBookingsSummaries { get; set; } = null!;
        public virtual DbSet<GmeCustomerG2> GmeCustomerG2s { get; set; } = null!;
        public virtual DbSet<GmeCustomerSenzing011818> GmeCustomerSenzing011818s { get; set; } = null!;
        public virtual DbSet<GmeCustomersMaster> GmeCustomersMasters { get; set; } = null!;
        public virtual DbSet<GmeCustomersMaster1> GmeCustomersMasters1 { get; set; } = null!;
        public virtual DbSet<GmeCustomersSenzing> GmeCustomersSenzings { get; set; } = null!;
        public virtual DbSet<GmeCustomersSenzing1> GmeCustomersSenzings1 { get; set; } = null!;
        public virtual DbSet<GmeCustomersShp> GmeCustomersShps { get; set; } = null!;
        public virtual DbSet<GmeCustomersSvc> GmeCustomersSvcs { get; set; } = null!;
        public virtual DbSet<GmeCustomersSvc1> GmeCustomersSvcs1 { get; set; } = null!;
        public virtual DbSet<GmeDataset> GmeDatasets { get; set; } = null!;
        public virtual DbSet<GmeDataset08142018> GmeDataset08142018s { get; set; } = null!;
        public virtual DbSet<GmeDataset082818> GmeDataset082818s { get; set; } = null!;
        public virtual DbSet<GmeDataset082918> GmeDataset082918s { get; set; } = null!;
        public virtual DbSet<GmeDataset1> GmeDatasets1 { get; set; } = null!;
        public virtual DbSet<GmeDataset20181112> GmeDataset20181112s { get; set; } = null!;
        public virtual DbSet<GmeDataset20190131> GmeDataset20190131s { get; set; } = null!;
        public virtual DbSet<GmeDatasetBak> GmeDatasetBaks { get; set; } = null!;
        public virtual DbSet<GmeDatasetStg> GmeDatasetStgs { get; set; } = null!;
        public virtual DbSet<GmeDatasetTmp> GmeDatasetTmps { get; set; } = null!;
        public virtual DbSet<GmeDatasetTwbVw> GmeDatasetTwbVws { get; set; } = null!;
        public virtual DbSet<GmeDeltum> GmeDelta { get; set; } = null!;
        public virtual DbSet<GmeDetail> GmeDetails { get; set; } = null!;
        public virtual DbSet<GmeDetail1> GmeDetails1 { get; set; } = null!;
        public virtual DbSet<GmeDetailsBak> GmeDetailsBaks { get; set; } = null!;
        public virtual DbSet<GmeDetailsBak1> GmeDetailsBaks1 { get; set; } = null!;
        public virtual DbSet<GmeDetailsDedup> GmeDetailsDedups { get; set; } = null!;
        public virtual DbSet<GmeDetailsDom> GmeDetailsDoms { get; set; } = null!;
        public virtual DbSet<GmeDetailsMw> GmeDetailsMws { get; set; } = null!;
        public virtual DbSet<GmeDetailsStg> GmeDetailsStgs { get; set; } = null!;
        public virtual DbSet<GmeDetailsVw> GmeDetailsVws { get; set; } = null!;
        public virtual DbSet<GmeDropship> GmeDropships { get; set; } = null!;
        public virtual DbSet<GmeDrspPosSvc> GmeDrspPosSvcs { get; set; } = null!;
        public virtual DbSet<GmeDrspPosSvc20190130> GmeDrspPosSvc20190130s { get; set; } = null!;
        public virtual DbSet<GmeDrspPosSvcBak> GmeDrspPosSvcBaks { get; set; } = null!;
        public virtual DbSet<GmeDrspPosSvcMerged> GmeDrspPosSvcMergeds { get; set; } = null!;
        public virtual DbSet<GmeEntityException> GmeEntityExceptions { get; set; } = null!;
        public virtual DbSet<GmeFalsePositive> GmeFalsePositives { get; set; } = null!;
        public virtual DbSet<GmeFilterAnalysis> GmeFilterAnalyses { get; set; } = null!;
        public virtual DbSet<GmeFilterAnalysis1> GmeFilterAnalysis1s { get; set; } = null!;
        public virtual DbSet<GmeFilterAnalysisBak> GmeFilterAnalysisBaks { get; set; } = null!;
        public virtual DbSet<GmeFlagged> GmeFlaggeds { get; set; } = null!;
        public virtual DbSet<GmeFlagged20180423> GmeFlagged20180423s { get; set; } = null!;
        public virtual DbSet<GmeFlagged20180515> GmeFlagged20180515s { get; set; } = null!;
        public virtual DbSet<GmeFlagged20180516> GmeFlagged20180516s { get; set; } = null!;
        public virtual DbSet<GmeFlagged20180520> GmeFlagged20180520s { get; set; } = null!;
        public virtual DbSet<GmeFlagged20180522> GmeFlagged20180522s { get; set; } = null!;
        public virtual DbSet<GmeFlagged20180529> GmeFlagged20180529s { get; set; } = null!;
        public virtual DbSet<GmeFlagged20180626> GmeFlagged20180626s { get; set; } = null!;
        public virtual DbSet<GmeFlagged20180705> GmeFlagged20180705s { get; set; } = null!;
        public virtual DbSet<GmeFlagged20180829> GmeFlagged20180829s { get; set; } = null!;
        public virtual DbSet<GmeFlagged20190131> GmeFlagged20190131s { get; set; } = null!;
        public virtual DbSet<GmeFlaggedBak> GmeFlaggedBaks { get; set; } = null!;
        public virtual DbSet<GmeFlaggedHi> GmeFlaggedHis { get; set; } = null!;
        public virtual DbSet<GmeFlaggedStg> GmeFlaggedStgs { get; set; } = null!;
        public virtual DbSet<GmeFlaggedTableau> GmeFlaggedTableaus { get; set; } = null!;
        public virtual DbSet<GmeFlaggedTwb> GmeFlaggedTwbs { get; set; } = null!;
        public virtual DbSet<GmeFlaggedTwb121118> GmeFlaggedTwb121118s { get; set; } = null!;
        public virtual DbSet<GmeFlaggedTwbBak> GmeFlaggedTwbBaks { get; set; } = null!;
        public virtual DbSet<GmeFlaggedTwbe> GmeFlaggedTwbes { get; set; } = null!;
        public virtual DbSet<GmeFlaggedTwbe1> GmeFlaggedTwbe1s { get; set; } = null!;
        public virtual DbSet<GmeFlaggedTwbe1Vw> GmeFlaggedTwbe1Vws { get; set; } = null!;
        public virtual DbSet<GmeFlaggedTwbe2> GmeFlaggedTwbe2s { get; set; } = null!;
        public virtual DbSet<GmeFlaggedTwbe2Vw> GmeFlaggedTwbe2Vws { get; set; } = null!;
        public virtual DbSet<GmeFlaggedTwbe2a> GmeFlaggedTwbe2as { get; set; } = null!;
        public virtual DbSet<GmeFlaggedTwbe3> GmeFlaggedTwbe3s { get; set; } = null!;
        public virtual DbSet<GmeFlaggedTwbe3Vw> GmeFlaggedTwbe3Vws { get; set; } = null!;
        public virtual DbSet<GmeFlaggedTwbe4> GmeFlaggedTwbe4s { get; set; } = null!;
        public virtual DbSet<GmeFlaggedTwbe4Vw> GmeFlaggedTwbe4Vws { get; set; } = null!;
        public virtual DbSet<GmeFlaggedTwbe5> GmeFlaggedTwbe5s { get; set; } = null!;
        public virtual DbSet<GmeFlaggedTwbeBak> GmeFlaggedTwbeBaks { get; set; } = null!;
        public virtual DbSet<GmeFlaggedVw> GmeFlaggedVws { get; set; } = null!;
        public virtual DbSet<GmeKpiDashTwb> GmeKpiDashTwbs { get; set; } = null!;
        public virtual DbSet<GmeKpiDashVw> GmeKpiDashVws { get; set; } = null!;
        public virtual DbSet<GmeKpiDashVw1> GmeKpiDashVws1 { get; set; } = null!;
        public virtual DbSet<GmeKpiOecSummary> GmeKpiOecSummaries { get; set; } = null!;
        public virtual DbSet<GmeKpiOecSummary1> GmeKpiOecSummaries1 { get; set; } = null!;
        public virtual DbSet<GmeKpiOecSummaryVw> GmeKpiOecSummaryVws { get; set; } = null!;
        public virtual DbSet<GmeKpiPartnerAnalyzerVw> GmeKpiPartnerAnalyzerVws { get; set; } = null!;
        public virtual DbSet<GmeKpiPartnerSummary> GmeKpiPartnerSummaries { get; set; } = null!;
        public virtual DbSet<GmeKpiPartnerSummary1> GmeKpiPartnerSummary1s { get; set; } = null!;
        public virtual DbSet<GmeKpiPartnerSummaryTwb> GmeKpiPartnerSummaryTwbs { get; set; } = null!;
        public virtual DbSet<GmeKpiPartnerSummaryTwb1> GmeKpiPartnerSummaryTwbs1 { get; set; } = null!;
        public virtual DbSet<GmeKpiPartnerSummaryTwb20190401> GmeKpiPartnerSummaryTwb20190401s { get; set; } = null!;
        public virtual DbSet<GmeKpiPartnerSummaryVw> GmeKpiPartnerSummaryVws { get; set; } = null!;
        public virtual DbSet<GmeKpiTargetPartner> GmeKpiTargetPartners { get; set; } = null!;
        public virtual DbSet<GmeKpiTargetTwb> GmeKpiTargetTwbs { get; set; } = null!;
        public virtual DbSet<GmeKpiTargetTwb1> GmeKpiTargetTwbs1 { get; set; } = null!;
        public virtual DbSet<GmeKpiTargetsOecVw> GmeKpiTargetsOecVws { get; set; } = null!;
        public virtual DbSet<GmeKpiTargetsTwb20190219> GmeKpiTargetsTwb20190219s { get; set; } = null!;
        public virtual DbSet<GmeMeasurePartnerSo> GmeMeasurePartnerSos { get; set; } = null!;
        public virtual DbSet<GmeMeasurePartnerSoBak> GmeMeasurePartnerSoBaks { get; set; } = null!;
        public virtual DbSet<GmeMeasureSo> GmeMeasureSos { get; set; } = null!;
        public virtual DbSet<GmeNewPartnerDom> GmeNewPartnerDoms { get; set; } = null!;
        public virtual DbSet<GmeNewPartnerDomestic> GmeNewPartnerDomestics { get; set; } = null!;
        public virtual DbSet<GmeNewPartnerDomestic1> GmeNewPartnerDomestic1s { get; set; } = null!;
        public virtual DbSet<GmePartnerAnalyzer1Twb> GmePartnerAnalyzer1Twbs { get; set; } = null!;
        public virtual DbSet<GmePartnerAnalyzerTwb> GmePartnerAnalyzerTwbs { get; set; } = null!;
        public virtual DbSet<GmePartnerAnalyzerTwb121118> GmePartnerAnalyzerTwb121118s { get; set; } = null!;
        public virtual DbSet<GmePartnerAnalyzerTwbBak> GmePartnerAnalyzerTwbBaks { get; set; } = null!;
        public virtual DbSet<GmePartnerAnalyzerVw> GmePartnerAnalyzerVws { get; set; } = null!;
        public virtual DbSet<GmePartnerSummary> GmePartnerSummaries { get; set; } = null!;
        public virtual DbSet<GmePartnerSummary1> GmePartnerSummaries1 { get; set; } = null!;
        public virtual DbSet<GmePartnerSummary11> GmePartnerSummary1s { get; set; } = null!;
        public virtual DbSet<GmePartnerSummary2> GmePartnerSummary2s { get; set; } = null!;
        public virtual DbSet<GmePartnerSummaryBak> GmePartnerSummaryBaks { get; set; } = null!;
        public virtual DbSet<GmePartnerSummaryVw> GmePartnerSummaryVws { get; set; } = null!;
        public virtual DbSet<GmeRelatedCustomerG2> GmeRelatedCustomerG2s { get; set; } = null!;
        public virtual DbSet<GmeStocking> GmeStockings { get; set; } = null!;
        public virtual DbSet<GmeSummary> GmeSummaries { get; set; } = null!;
        public virtual DbSet<GmeSummaryBak> GmeSummaryBaks { get; set; } = null!;
        public virtual DbSet<GmeSummaryMeasure> GmeSummaryMeasures { get; set; } = null!;
        public virtual DbSet<GmeSummaryMeasureBySvcEc> GmeSummaryMeasureBySvcEcs { get; set; } = null!;
        public virtual DbSet<GmeSummaryVw> GmeSummaryVws { get; set; } = null!;
        public virtual DbSet<GmeTarget> GmeTargets { get; set; } = null!;
        public virtual DbSet<GmeTargetDetail> GmeTargetDetails { get; set; } = null!;
        public virtual DbSet<GmeTargetSummary> GmeTargetSummaries { get; set; } = null!;
        public virtual DbSet<GmeTargetsTwb> GmeTargetsTwbs { get; set; } = null!;
        public virtual DbSet<Hash> Hashes { get; set; } = null!;
        public virtual DbSet<HrExtract> HrExtracts { get; set; } = null!;
        public virtual DbSet<Job> Jobs { get; set; } = null!;
        public virtual DbSet<JobParameter> JobParameters { get; set; } = null!;
        public virtual DbSet<JobQueue> JobQueues { get; set; } = null!;
        public virtual DbSet<LampBooking> LampBookings { get; set; } = null!;
        public virtual DbSet<LampBookingsStg> LampBookingsStgs { get; set; } = null!;
        public virtual DbSet<LampBpProfile> LampBpProfiles { get; set; } = null!;
        public virtual DbSet<LampBpProfile1> LampBpProfiles1 { get; set; } = null!;
        public virtual DbSet<LampBpProfile20181022> LampBpProfile20181022s { get; set; } = null!;
        public virtual DbSet<LampBpProfileBak> LampBpProfileBaks { get; set; } = null!;
        public virtual DbSet<LampBpProfileUi> LampBpProfileUis { get; set; } = null!;
        public virtual DbSet<LampBpProfileVw> LampBpProfileVws { get; set; } = null!;
        public virtual DbSet<LampBpProfileVw1> LampBpProfileVws1 { get; set; } = null!;
        public virtual DbSet<LampBpProfileVwTest> LampBpProfileVwTests { get; set; } = null!;
        public virtual DbSet<LampCountry> LampCountries { get; set; } = null!;
        public virtual DbSet<LampCustomerEr> LampCustomerErs { get; set; } = null!;
        public virtual DbSet<LampCustomerEr1> LampCustomerErs1 { get; set; } = null!;
        public virtual DbSet<LampCustomerEr2> LampCustomerErs2 { get; set; } = null!;
        public virtual DbSet<LampCustomerErBak> LampCustomerErBaks { get; set; } = null!;
        public virtual DbSet<LampCustomerHier> LampCustomerHiers { get; set; } = null!;
        public virtual DbSet<LampCustomerHier1> LampCustomerHiers1 { get; set; } = null!;
        public virtual DbSet<LampCustomerHierMetaVw> LampCustomerHierMetaVws { get; set; } = null!;
        public virtual DbSet<LampCustomerMaster> LampCustomerMasters { get; set; } = null!;
        public virtual DbSet<LampCustomerMaster1> LampCustomerMasters1 { get; set; } = null!;
        public virtual DbSet<LampCustomerMaster20181019> LampCustomerMaster20181019s { get; set; } = null!;
        public virtual DbSet<LampCustomerMasterBak> LampCustomerMasterBaks { get; set; } = null!;
        public virtual DbSet<LampCustomerMasterTmp> LampCustomerMasterTmps { get; set; } = null!;
        public virtual DbSet<LampCustomerMasterTmpBak> LampCustomerMasterTmpBaks { get; set; } = null!;
        public virtual DbSet<LampCustomerNewupdated> LampCustomerNewupdateds { get; set; } = null!;
        public virtual DbSet<LampCustomerNewupdated1> LampCustomerNewupdateds1 { get; set; } = null!;
        public virtual DbSet<LampCustomerNewupdatedBak> LampCustomerNewupdatedBaks { get; set; } = null!;
        public virtual DbSet<LampDrspPosMerged> LampDrspPosMergeds { get; set; } = null!;
        public virtual DbSet<LampDrspPosMerged1> LampDrspPosMergeds1 { get; set; } = null!;
        public virtual DbSet<LampDrspPosMerged2> LampDrspPosMergeds2 { get; set; } = null!;
        public virtual DbSet<LampDrspPosMerged20190130> LampDrspPosMerged20190130s { get; set; } = null!;
        public virtual DbSet<LampDrspPosMergedStg> LampDrspPosMergedStgs { get; set; } = null!;
        public virtual DbSet<LampDrspPosMergedStg1> LampDrspPosMergedStgs1 { get; set; } = null!;
        public virtual DbSet<LampDrspPosSvcMerged> LampDrspPosSvcMergeds { get; set; } = null!;
        public virtual DbSet<LampEtlLog> LampEtlLogs { get; set; } = null!;
        public virtual DbSet<LampEtlLog1> LampEtlLogs1 { get; set; } = null!;
        public virtual DbSet<LampGlobalAcct> LampGlobalAccts { get; set; } = null!;
        public virtual DbSet<LampGlobalAcct1> LampGlobalAccts1 { get; set; } = null!;
        public virtual DbSet<LampGmeDataset> LampGmeDatasets { get; set; } = null!;
        public virtual DbSet<LampMspAcct> LampMspAccts { get; set; } = null!;
        public virtual DbSet<LampNewUpdateValidation> LampNewUpdateValidations { get; set; } = null!;
        public virtual DbSet<LampPartnerHier> LampPartnerHiers { get; set; } = null!;
        public virtual DbSet<LampPartnerMaster> LampPartnerMasters { get; set; } = null!;
        public virtual DbSet<LampPo> LampPos { get; set; } = null!;
        public virtual DbSet<LampPos20190131> LampPos20190131s { get; set; } = null!;
        public virtual DbSet<LampPos2snow> LampPos2snows { get; set; } = null!;
        public virtual DbSet<LampPosStg> LampPosStgs { get; set; } = null!;
        public virtual DbSet<LampProductMaster> LampProductMasters { get; set; } = null!;
        public virtual DbSet<LampProductMasterBak> LampProductMasterBaks { get; set; } = null!;
        public virtual DbSet<LampProfileLog> LampProfileLogs { get; set; } = null!;
        public virtual DbSet<LampProfileLog20181107> LampProfileLog20181107s { get; set; } = null!;
        public virtual DbSet<LampReport> LampReports { get; set; } = null!;
        public virtual DbSet<LampRma> LampRmas { get; set; } = null!;
        public virtual DbSet<LampRmaStg> LampRmaStgs { get; set; } = null!;
        public virtual DbSet<LampRole> LampRoles { get; set; } = null!;
        public virtual DbSet<LampServiceContract> LampServiceContracts { get; set; } = null!;
        public virtual DbSet<LampServiceContractStg> LampServiceContractStgs { get; set; } = null!;
        public virtual DbSet<LampShipmentLine> LampShipmentLines { get; set; } = null!;
        public virtual DbSet<LampShipmentLineBak> LampShipmentLineBaks { get; set; } = null!;
        public virtual DbSet<LampSvcValidation> LampSvcValidations { get; set; } = null!;
        public virtual DbSet<LampSvcValidation1> LampSvcValidations1 { get; set; } = null!;
        public virtual DbSet<LampSvcValidation20190130> LampSvcValidation20190130s { get; set; } = null!;
        public virtual DbSet<LampSvcValidationBak> LampSvcValidationBaks { get; set; } = null!;
        public virtual DbSet<LampTcCountry> LampTcCountries { get; set; } = null!;
        public virtual DbSet<LampTcCountryChart> LampTcCountryCharts { get; set; } = null!;
        public virtual DbSet<LampTcCountryChartBak> LampTcCountryChartBaks { get; set; } = null!;
        public virtual DbSet<LampUser> LampUsers { get; set; } = null!;
        public virtual DbSet<List> Lists { get; set; } = null!;
        public virtual DbSet<Log> Logs { get; set; } = null!;
        public virtual DbSet<MaterialsCounterfeit> MaterialsCounterfeits { get; set; } = null!;
        public virtual DbSet<MaterialsFinalMedian> MaterialsFinalMedians { get; set; } = null!;
        public virtual DbSet<MedianTest> MedianTests { get; set; } = null!;
        public virtual DbSet<MspAcct> MspAccts { get; set; } = null!;
        public virtual DbSet<NameEmailVal> NameEmailVals { get; set; } = null!;
        public virtual DbSet<NewDomesticReseller> NewDomesticResellers { get; set; } = null!;
        public virtual DbSet<NodeabilisimRpt> NodeabilisimRpts { get; set; } = null!;
        public virtual DbSet<NsAlteryxSample> NsAlteryxSamples { get; set; } = null!;
        public virtual DbSet<NsAlteryxSample2> NsAlteryxSample2s { get; set; } = null!;
        public virtual DbSet<NsAvgDiscPerCountry> NsAvgDiscPerCountries { get; set; } = null!;
        public virtual DbSet<NsAvgDiscPerCountry1> NsAvgDiscPerCountries1 { get; set; } = null!;
        public virtual DbSet<NsFixLp> NsFixLps { get; set; } = null!;
        public virtual DbSet<NsKpi01> NsKpi01s { get; set; } = null!;
        public virtual DbSet<NsLookup> NsLookups { get; set; } = null!;
        public virtual DbSet<NsPartnerAddinfo> NsPartnerAddinfos { get; set; } = null!;
        public virtual DbSet<NsPartnerAddinfo1> NsPartnerAddinfo1s { get; set; } = null!;
        public virtual DbSet<NsPartnerAddinfo2> NsPartnerAddinfo2s { get; set; } = null!;
        public virtual DbSet<NsPos2018> NsPos2018s { get; set; } = null!;
        public virtual DbSet<NsPsCust> NsPsCusts { get; set; } = null!;
        public virtual DbSet<NsShipmentLines2018> NsShipmentLines2018s { get; set; } = null!;
        public virtual DbSet<NsSoResellerAm2018> NsSoResellerAm2018s { get; set; } = null!;
        public virtual DbSet<NsTest> NsTests { get; set; } = null!;
        public virtual DbSet<NsTmp> NsTmps { get; set; } = null!;
        public virtual DbSet<PartnerAnalyzer> PartnerAnalyzers { get; set; } = null!;
        public virtual DbSet<PartnerAnalyzerDVw> PartnerAnalyzerDVws { get; set; } = null!;
        public virtual DbSet<PartnerAnalyzerDestOrig> PartnerAnalyzerDestOrigs { get; set; } = null!;
        public virtual DbSet<PartnerAnalyzerDestOrig1> PartnerAnalyzerDestOrig1s { get; set; } = null!;
        public virtual DbSet<PartnerAnalyzerDistiDrsp> PartnerAnalyzerDistiDrsps { get; set; } = null!;
        public virtual DbSet<PartnerAnalyzerDistiStck> PartnerAnalyzerDistiStcks { get; set; } = null!;
        public virtual DbSet<PartnerAnalyzerDvarDrsp> PartnerAnalyzerDvarDrsps { get; set; } = null!;
        public virtual DbSet<PartnerAnalyzerOrigDest> PartnerAnalyzerOrigDests { get; set; } = null!;
        public virtual DbSet<PartnerAnalyzerOrigDest1> PartnerAnalyzerOrigDest1s { get; set; } = null!;
        public virtual DbSet<PartnerAnalyzerSVw> PartnerAnalyzerSVws { get; set; } = null!;
        public virtual DbSet<PartnerOnboardingEffVw> PartnerOnboardingEffVws { get; set; } = null!;
        public virtual DbSet<PartnerOnboardingTwb> PartnerOnboardingTwbs { get; set; } = null!;
        public virtual DbSet<PartnerOnboardingTwbBak> PartnerOnboardingTwbBaks { get; set; } = null!;
        public virtual DbSet<PartnerOnboardingVw> PartnerOnboardingVws { get; set; } = null!;
        public virtual DbSet<PkTemp> PkTemps { get; set; } = null!;
        public virtual DbSet<PlantsTest> PlantsTests { get; set; } = null!;
        public virtual DbSet<Po> Pos { get; set; } = null!;
        public virtual DbSet<PosApr2018> PosApr2018s { get; set; } = null!;
        public virtual DbSet<PosDomesticDiversion> PosDomesticDiversions { get; set; } = null!;
        public virtual DbSet<PosFeb2018> PosFeb2018s { get; set; } = null!;
        public virtual DbSet<PosJan2018> PosJan2018s { get; set; } = null!;
        public virtual DbSet<PosJunOct2018> PosJunOct2018s { get; set; } = null!;
        public virtual DbSet<PosMar2018> PosMar2018s { get; set; } = null!;
        public virtual DbSet<PosMay2018> PosMay2018s { get; set; } = null!;
        public virtual DbSet<PosMetaVw> PosMetaVws { get; set; } = null!;
        public virtual DbSet<PosMetaVw1> PosMetaVws1 { get; set; } = null!;
        public virtual DbSet<PosMetum> PosMeta { get; set; } = null!;
        public virtual DbSet<PosNewListPrice2016> PosNewListPrice2016s { get; set; } = null!;
        public virtual DbSet<PosNewListPrice2017> PosNewListPrice2017s { get; set; } = null!;
        public virtual DbSet<PosNewprice> PosNewprices { get; set; } = null!;
        public virtual DbSet<PosNewpriceMetaVw> PosNewpriceMetaVws { get; set; } = null!;
        public virtual DbSet<PosSepdec2018a> PosSepdec2018as { get; set; } = null!;
        public virtual DbSet<ProductClassification> ProductClassifications { get; set; } = null!;
        public virtual DbSet<ProductClassification08072019> ProductClassification08072019s { get; set; } = null!;
        public virtual DbSet<ProductClassification080720191> ProductClassification08072019s1 { get; set; } = null!;
        public virtual DbSet<ProductClassification1> ProductClassifications1 { get; set; } = null!;
        public virtual DbSet<ProductClassification10032019> ProductClassification10032019s { get; set; } = null!;
        public virtual DbSet<ProductHardware> ProductHardwares { get; set; } = null!;
        public virtual DbSet<ProductListPrice> ProductListPrices { get; set; } = null!;
        public virtual DbSet<ProductListPrice012918> ProductListPrice012918s { get; set; } = null!;
        public virtual DbSet<ProductMaster> ProductMasters { get; set; } = null!;
        public virtual DbSet<ProductMaster082318> ProductMaster082318s { get; set; } = null!;
        public virtual DbSet<ProductMasterMetaVw> ProductMasterMetaVws { get; set; } = null!;
        public virtual DbSet<Productclassificationdelete> Productclassificationdeletes { get; set; } = null!;
        public virtual DbSet<ProfileLegacy> ProfileLegacies { get; set; } = null!;
        public virtual DbSet<ProfileTmpTable> ProfileTmpTables { get; set; } = null!;
        public virtual DbSet<Profiled2014> Profiled2014s { get; set; } = null!;
        public virtual DbSet<Profiled2015a> Profiled2015as { get; set; } = null!;
        public virtual DbSet<Profiled2015a2> Profiled2015a2s { get; set; } = null!;
        public virtual DbSet<Profiled2015aa> Profiled2015aas { get; set; } = null!;
        public virtual DbSet<Profiled2015b> Profiled2015bs { get; set; } = null!;
        public virtual DbSet<Profiled2015b2> Profiled2015b2s { get; set; } = null!;
        public virtual DbSet<Profiled2015c> Profiled2015cs { get; set; } = null!;
        public virtual DbSet<Profiled2016> Profiled2016s { get; set; } = null!;
        public virtual DbSet<Profiled2016a> Profiled2016as { get; set; } = null!;
        public virtual DbSet<Profiled2017> Profiled2017s { get; set; } = null!;
        public virtual DbSet<Profiled2017a> Profiled2017as { get; set; } = null!;
        public virtual DbSet<Q3Q417PosFinal> Q3Q417PosFinals { get; set; } = null!;
        public virtual DbSet<QuoteOrderJanMay2018> QuoteOrderJanMay2018s { get; set; } = null!;
        public virtual DbSet<QuoteSoMap> QuoteSoMaps { get; set; } = null!;
        public virtual DbSet<QuoteSoMetric> QuoteSoMetrics { get; set; } = null!;
        public virtual DbSet<QuotesOrders2018q1> QuotesOrders2018q1s { get; set; } = null!;
        public virtual DbSet<RawBooking> RawBookings { get; set; } = null!;
        public virtual DbSet<RawBookingsAm> RawBookingsAms { get; set; } = null!;
        public virtual DbSet<RawBookingsResAm> RawBookingsResAms { get; set; } = null!;
        public virtual DbSet<RawBookingsReseller> RawBookingsResellers { get; set; } = null!;
        public virtual DbSet<RawCustomerMaster> RawCustomerMasters { get; set; } = null!;
        public virtual DbSet<RawPo> RawPos { get; set; } = null!;
        public virtual DbSet<RawPo1> RawPos1 { get; set; } = null!;
        public virtual DbSet<RawRma> RawRmas { get; set; } = null!;
        public virtual DbSet<RawRma1> RawRmas1 { get; set; } = null!;
        public virtual DbSet<RawServiceContract> RawServiceContracts { get; set; } = null!;
        public virtual DbSet<RawServiceContractTmp> RawServiceContractTmps { get; set; } = null!;
        public virtual DbSet<RawShipmentHdr> RawShipmentHdrs { get; set; } = null!;
        public virtual DbSet<RawShipmentLine> RawShipmentLines { get; set; } = null!;
        public virtual DbSet<RawShipmentLineTmp> RawShipmentLineTmps { get; set; } = null!;
        public virtual DbSet<ResellerMissing> ResellerMissings { get; set; } = null!;
        public virtual DbSet<RmaLinesApr2018> RmaLinesApr2018s { get; set; } = null!;
        public virtual DbSet<RmaLinesAugsep2018> RmaLinesAugsep2018s { get; set; } = null!;
        public virtual DbSet<RmaLinesFeb2018> RmaLinesFeb2018s { get; set; } = null!;
        public virtual DbSet<RmaLinesJan2018> RmaLinesJan2018s { get; set; } = null!;
        public virtual DbSet<RmaLinesJunjul2018> RmaLinesJunjul2018s { get; set; } = null!;
        public virtual DbSet<RmaLinesMar2018> RmaLinesMar2018s { get; set; } = null!;
        public virtual DbSet<RmaLinesMay2018> RmaLinesMay2018s { get; set; } = null!;
        public virtual DbSet<RmaLinesOctdec2018> RmaLinesOctdec2018s { get; set; } = null!;
        public virtual DbSet<RmaMetaVw> RmaMetaVws { get; set; } = null!;
        public virtual DbSet<RoleReportMapping> RoleReportMappings { get; set; } = null!;
        public virtual DbSet<SameResellerSvcEndCustomer> SameResellerSvcEndCustomers { get; set; } = null!;
        public virtual DbSet<Schema> Schemas { get; set; } = null!;
        public virtual DbSet<Server> Servers { get; set; } = null!;
        public virtual DbSet<ServiceContractApr2016> ServiceContractApr2016s { get; set; } = null!;
        public virtual DbSet<ServiceContractApr2017> ServiceContractApr2017s { get; set; } = null!;
        public virtual DbSet<ServiceContractAprmay2018> ServiceContractAprmay2018s { get; set; } = null!;
        public virtual DbSet<ServiceContractAug2016> ServiceContractAug2016s { get; set; } = null!;
        public virtual DbSet<ServiceContractAug2017> ServiceContractAug2017s { get; set; } = null!;
        public virtual DbSet<ServiceContractDec2016> ServiceContractDec2016s { get; set; } = null!;
        public virtual DbSet<ServiceContractFeb2016> ServiceContractFeb2016s { get; set; } = null!;
        public virtual DbSet<ServiceContractFeb2017> ServiceContractFeb2017s { get; set; } = null!;
        public virtual DbSet<ServiceContractFebmar2018> ServiceContractFebmar2018s { get; set; } = null!;
        public virtual DbSet<ServiceContractJan2016> ServiceContractJan2016s { get; set; } = null!;
        public virtual DbSet<ServiceContractJan2017> ServiceContractJan2017s { get; set; } = null!;
        public virtual DbSet<ServiceContractJan2018> ServiceContractJan2018s { get; set; } = null!;
        public virtual DbSet<ServiceContractJul2016> ServiceContractJul2016s { get; set; } = null!;
        public virtual DbSet<ServiceContractJul2017> ServiceContractJul2017s { get; set; } = null!;
        public virtual DbSet<ServiceContractJulaug2018> ServiceContractJulaug2018s { get; set; } = null!;
        public virtual DbSet<ServiceContractJun2016> ServiceContractJun2016s { get; set; } = null!;
        public virtual DbSet<ServiceContractJun2017> ServiceContractJun2017s { get; set; } = null!;
        public virtual DbSet<ServiceContractJun2018> ServiceContractJun2018s { get; set; } = null!;
        public virtual DbSet<ServiceContractMar2016> ServiceContractMar2016s { get; set; } = null!;
        public virtual DbSet<ServiceContractMar2017> ServiceContractMar2017s { get; set; } = null!;
        public virtual DbSet<ServiceContractMay2016> ServiceContractMay2016s { get; set; } = null!;
        public virtual DbSet<ServiceContractMay2017> ServiceContractMay2017s { get; set; } = null!;
        public virtual DbSet<ServiceContractMetaVw> ServiceContractMetaVws { get; set; } = null!;
        public virtual DbSet<ServiceContractMetaVw1> ServiceContractMetaVws1 { get; set; } = null!;
        public virtual DbSet<ServiceContractNov2016> ServiceContractNov2016s { get; set; } = null!;
        public virtual DbSet<ServiceContractNovdec2018> ServiceContractNovdec2018s { get; set; } = null!;
        public virtual DbSet<ServiceContractOct2016> ServiceContractOct2016s { get; set; } = null!;
        public virtual DbSet<ServiceContractSep2016> ServiceContractSep2016s { get; set; } = null!;
        public virtual DbSet<ServiceContractSep2017> ServiceContractSep2017s { get; set; } = null!;
        public virtual DbSet<ServiceContractSepoct2018> ServiceContractSepoct2018s { get; set; } = null!;
        public virtual DbSet<ServiceContractsQ42017> ServiceContractsQ42017s { get; set; } = null!;
        public virtual DbSet<Set> Sets { get; set; } = null!;
        public virtual DbSet<SetGlobalAcct1> SetGlobalAcct1s { get; set; } = null!;
        public virtual DbSet<SetGlobalAcct2> SetGlobalAcct2s { get; set; } = null!;
        public virtual DbSet<SetGlobalIdStg> SetGlobalIdStgs { get; set; } = null!;
        public virtual DbSet<ShipmentHdrMetaVw> ShipmentHdrMetaVws { get; set; } = null!;
        public virtual DbSet<ShipmentLineApr2017> ShipmentLineApr2017s { get; set; } = null!;
        public virtual DbSet<ShipmentLineAug2016> ShipmentLineAug2016s { get; set; } = null!;
        public virtual DbSet<ShipmentLineAug2017> ShipmentLineAug2017s { get; set; } = null!;
        public virtual DbSet<ShipmentLineDec2016> ShipmentLineDec2016s { get; set; } = null!;
        public virtual DbSet<ShipmentLineFeb2017> ShipmentLineFeb2017s { get; set; } = null!;
        public virtual DbSet<ShipmentLineJan2017> ShipmentLineJan2017s { get; set; } = null!;
        public virtual DbSet<ShipmentLineJul2016> ShipmentLineJul2016s { get; set; } = null!;
        public virtual DbSet<ShipmentLineJul2017> ShipmentLineJul2017s { get; set; } = null!;
        public virtual DbSet<ShipmentLineJun2016> ShipmentLineJun2016s { get; set; } = null!;
        public virtual DbSet<ShipmentLineJun2017> ShipmentLineJun2017s { get; set; } = null!;
        public virtual DbSet<ShipmentLineMar2017> ShipmentLineMar2017s { get; set; } = null!;
        public virtual DbSet<ShipmentLineMay2017> ShipmentLineMay2017s { get; set; } = null!;
        public virtual DbSet<ShipmentLineMetaVw> ShipmentLineMetaVws { get; set; } = null!;
        public virtual DbSet<ShipmentLineNov2016> ShipmentLineNov2016s { get; set; } = null!;
        public virtual DbSet<ShipmentLineOct2016> ShipmentLineOct2016s { get; set; } = null!;
        public virtual DbSet<ShipmentLineSep2016> ShipmentLineSep2016s { get; set; } = null!;
        public virtual DbSet<ShipmentLineSep2017> ShipmentLineSep2017s { get; set; } = null!;
        public virtual DbSet<ShipmentLinesApr2018> ShipmentLinesApr2018s { get; set; } = null!;
        public virtual DbSet<ShipmentLinesAugsep2018> ShipmentLinesAugsep2018s { get; set; } = null!;
        public virtual DbSet<ShipmentLinesFeb2018> ShipmentLinesFeb2018s { get; set; } = null!;
        public virtual DbSet<ShipmentLinesJan2018> ShipmentLinesJan2018s { get; set; } = null!;
        public virtual DbSet<ShipmentLinesJunjul2018> ShipmentLinesJunjul2018s { get; set; } = null!;
        public virtual DbSet<ShipmentLinesMar2018> ShipmentLinesMar2018s { get; set; } = null!;
        public virtual DbSet<ShipmentLinesMay2018> ShipmentLinesMay2018s { get; set; } = null!;
        public virtual DbSet<ShipmentLinesOctdec2018> ShipmentLinesOctdec2018s { get; set; } = null!;
        public virtual DbSet<SnShipmentsQ42017> SnShipmentsQ42017s { get; set; } = null!;
        public virtual DbSet<SnowflakeToSql> SnowflakeToSqls { get; set; } = null!;
        public virtual DbSet<SoResellerAm2016> SoResellerAm2016s { get; set; } = null!;
        public virtual DbSet<SoResellerAm2017> SoResellerAm2017s { get; set; } = null!;
        public virtual DbSet<SoResellerAmFebmay2018> SoResellerAmFebmay2018s { get; set; } = null!;
        public virtual DbSet<SoResellerAmJan2018> SoResellerAmJan2018s { get; set; } = null!;
        public virtual DbSet<SoResellerAmQ42017> SoResellerAmQ42017s { get; set; } = null!;
        public virtual DbSet<SqlalchemyPo> SqlalchemyPos { get; set; } = null!;
        public virtual DbSet<State> States { get; set; } = null!;
        public virtual DbSet<StatusCases061218> StatusCases061218s { get; set; } = null!;
        public virtual DbSet<StatusCases07132018> StatusCases07132018s { get; set; } = null!;
        public virtual DbSet<StatusCases07242018> StatusCases07242018s { get; set; } = null!;
        public virtual DbSet<StatusCases20180921> StatusCases20180921s { get; set; } = null!;
        public virtual DbSet<StatusCases20181203> StatusCases20181203s { get; set; } = null!;
        public virtual DbSet<StatusCasesSr> StatusCasesSrs { get; set; } = null!;
        public virtual DbSet<StatusClassification061218> StatusClassification061218s { get; set; } = null!;
        public virtual DbSet<StatusClassification07132018> StatusClassification07132018s { get; set; } = null!;
        public virtual DbSet<StatusClassification07242018> StatusClassification07242018s { get; set; } = null!;
        public virtual DbSet<StatusClassification20180921> StatusClassification20180921s { get; set; } = null!;
        public virtual DbSet<StatusClassification20181203> StatusClassification20181203s { get; set; } = null!;
        public virtual DbSet<StatusClassification20181210> StatusClassification20181210s { get; set; } = null!;
        public virtual DbSet<StatusData06252018> StatusData06252018s { get; set; } = null!;
        public virtual DbSet<StatusFbc061218> StatusFbc061218s { get; set; } = null!;
        public virtual DbSet<StatusFbc07242018> StatusFbc07242018s { get; set; } = null!;
        public virtual DbSet<StatusFbc20180921> StatusFbc20180921s { get; set; } = null!;
        public virtual DbSet<StatusNobSr> StatusNobSrs { get; set; } = null!;
        public virtual DbSet<StatusPartner07132018> StatusPartner07132018s { get; set; } = null!;
        public virtual DbSet<StatusPartner07242018> StatusPartner07242018s { get; set; } = null!;
        public virtual DbSet<StatusPartner20180921> StatusPartner20180921s { get; set; } = null!;
        public virtual DbSet<StatusPartner20180921a> StatusPartner20180921as { get; set; } = null!;
        public virtual DbSet<StatusPartner20181203> StatusPartner20181203s { get; set; } = null!;
        public virtual DbSet<StatusPartnerCases20181210> StatusPartnerCases20181210s { get; set; } = null!;
        public virtual DbSet<StatusQcApac07242018> StatusQcApac07242018s { get; set; } = null!;
        public virtual DbSet<Svc4ewmd> Svc4ewmds { get; set; } = null!;
        public virtual DbSet<TEmployee> TEmployees { get; set; } = null!;
        public virtual DbSet<TblConsigneeUndertaking> TblConsigneeUndertakings { get; set; } = null!;
        public virtual DbSet<Tbldocusignpowerform> Tbldocusignpowerforms { get; set; } = null!;
        public virtual DbSet<Tbldocusigntemplate> Tbldocusigntemplates { get; set; } = null!;
        public virtual DbSet<TcCountry> TcCountries { get; set; } = null!;
        public virtual DbSet<TcProfileForm> TcProfileForms { get; set; } = null!;
        public virtual DbSet<Test2CertDatum> Test2CertData { get; set; } = null!;
        public virtual DbSet<TestCertDatum> TestCertData { get; set; } = null!;
        public virtual DbSet<TestRownum> TestRownums { get; set; } = null!;
        public virtual DbSet<TestSvc> TestSvcs { get; set; } = null!;
        public virtual DbSet<TestTable> TestTables { get; set; } = null!;
        public virtual DbSet<TransposeTest> TransposeTests { get; set; } = null!;
        public virtual DbSet<TransposeTest2> TransposeTest2s { get; set; } = null!;
        public virtual DbSet<UniqEcSvc> UniqEcSvcs { get; set; } = null!;
        public virtual DbSet<UserRoleMapping> UserRoleMappings { get; set; } = null!;
        public virtual DbSet<Wapp11302017> Wapp11302017s { get; set; } = null!;

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
                optionsBuilder.UseSqlServer("Server=p-lda-sqldb.cjppsdhni2np.us-west-2.rds.amazonaws.com,7899;User Id=legal_srv;password=Opportunity1;Database=legal_db;");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<AccessControlVw>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("access_control_vw");

                entity.Property(e => e.Department)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("department");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("first_name");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.LastName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("last_name");

                entity.Property(e => e.ReportId).HasColumnName("report_id");

                entity.Property(e => e.ReportLink)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("report_link");

                entity.Property(e => e.ReportName)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("report_name");

                entity.Property(e => e.RoleId).HasColumnName("role_id");

                entity.Property(e => e.RoleName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("role_name");

                entity.Property(e => e.Userid)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("userid");
            });

            modelBuilder.Entity<AccessControlVw1>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("access_control_vw", "dev");

                entity.Property(e => e.Department)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("department");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("first_name");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.LastName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("last_name");

                entity.Property(e => e.ReportId).HasColumnName("report_id");

                entity.Property(e => e.ReportLink)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("report_link");

                entity.Property(e => e.ReportName)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("report_name");

                entity.Property(e => e.RoleId).HasColumnName("role_id");

                entity.Property(e => e.RoleName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("role_name");

                entity.Property(e => e.Userid)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("userid");
            });

            modelBuilder.Entity<AccountMaster>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("account_master", "dsf");

                entity.Property(e => e.Accountcategory).HasColumnName("accountcategory");

                entity.Property(e => e.Accountclass).HasColumnName("accountclass");

                entity.Property(e => e.Accountgroup).HasColumnName("accountgroup");

                entity.Property(e => e.Accounttype).HasColumnName("accounttype");

                entity.Property(e => e.Addrnumber).HasColumnName("addrnumber");

                entity.Property(e => e.ArchivingFlag).HasColumnName("archiving_flag");

                entity.Property(e => e.Attr4).HasColumnName("attr4");

                entity.Property(e => e.BilBlockReason).HasColumnName("bil_block_reason");

                entity.Property(e => e.Billtorole).HasColumnName("billtorole");

                entity.Property(e => e.BpLastUpd)
                    .HasColumnType("datetime")
                    .HasColumnName("bp_last_upd");

                entity.Property(e => e.Bpid)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("bpid");

                entity.Property(e => e.Buildingcode).HasColumnName("buildingcode");

                entity.Property(e => e.CentralBlock).HasColumnName("central_block");

                entity.Property(e => e.Chusr).HasColumnName("chusr");

                entity.Property(e => e.City).HasColumnName("city");

                entity.Property(e => e.Commonid).HasColumnName("commonid");

                entity.Property(e => e.Country).HasColumnName("country");

                entity.Property(e => e.County).HasColumnName("county");

                entity.Property(e => e.Customersince).HasColumnName("customersince");

                entity.Property(e => e.DelBlockReason).HasColumnName("del_block_reason");

                entity.Property(e => e.Distributorrole).HasColumnName("distributorrole");

                entity.Property(e => e.Domduns).HasColumnName("domduns");

                entity.Property(e => e.Donotcontact).HasColumnName("donotcontact");

                entity.Property(e => e.Duns).HasColumnName("duns");

                entity.Property(e => e.Edbid).HasColumnName("edbid");

                entity.Property(e => e.EdiId).HasColumnName("edi_id");

                entity.Property(e => e.EmpLogin).HasColumnName("emp_login");

                entity.Property(e => e.EmpName).HasColumnName("emp_name");

                entity.Property(e => e.EmpOrgCode).HasColumnName("emp_org_code");

                entity.Property(e => e.EmpOrgUnit).HasColumnName("emp_org_unit");

                entity.Property(e => e.EmpOrgUntiName).HasColumnName("emp_org_unti_name");

                entity.Property(e => e.Endcustomerrole).HasColumnName("endcustomerrole");

                entity.Property(e => e.FaxNumber).HasColumnName("fax_number");

                entity.Property(e => e.Floor).HasColumnName("floor");

                entity.Property(e => e.Globalultduns).HasColumnName("globalultduns");

                entity.Property(e => e.Grouping)
                    .HasMaxLength(150)
                    .HasColumnName("grouping");

                entity.Property(e => e.Housenumber).HasColumnName("housenumber");

                entity.Property(e => e.Housenumbersupplement).HasColumnName("housenumbersupplement");

                entity.Property(e => e.Iscustomer).HasColumnName("iscustomer");

                entity.Property(e => e.JuniperIndustryCode).HasColumnName("juniper_industry_code");

                entity.Property(e => e.Langu).HasColumnName("langu");

                entity.Property(e => e.Mastermergeind).HasColumnName("mastermergeind");

                entity.Property(e => e.Name1).HasColumnName("name1");

                entity.Property(e => e.Name2).HasColumnName("name2");

                entity.Property(e => e.Name3).HasColumnName("name3");

                entity.Property(e => e.Name4).HasColumnName("name4");

                entity.Property(e => e.NameCo).HasColumnName("name_co");

                entity.Property(e => e.Oracleid).HasColumnName("oracleid");

                entity.Property(e => e.OrdBlockReason).HasColumnName("ord_block_reason");

                entity.Property(e => e.PartnerAuthCode).HasColumnName("partner_auth_code");

                entity.Property(e => e.Payerrole).HasColumnName("payerrole");

                entity.Property(e => e.Postalcode).HasColumnName("postalcode");

                entity.Property(e => e.PrimaryVarId).HasColumnName("primary_var_id");

                entity.Property(e => e.Region).HasColumnName("region");

                entity.Property(e => e.Resellerrole).HasColumnName("resellerrole");

                entity.Property(e => e.Roomnumber).HasColumnName("roomnumber");

                entity.Property(e => e.Salessystemflag).HasColumnName("salessystemflag");

                entity.Property(e => e.Searchterm1).HasColumnName("searchterm1");

                entity.Property(e => e.Searchterm2).HasColumnName("searchterm2");

                entity.Property(e => e.SfdcId).HasColumnName("sfdc_id");

                entity.Property(e => e.SfdcVictimId).HasColumnName("sfdc_victim_id");

                entity.Property(e => e.Shiptorole).HasColumnName("shiptorole");

                entity.Property(e => e.Siebelid).HasColumnName("siebelid");

                entity.Property(e => e.Soldtorole).HasColumnName("soldtorole");

                entity.Property(e => e.Source).HasColumnName("source");

                entity.Property(e => e.Street1).HasColumnName("street1");

                entity.Property(e => e.Street2).HasColumnName("street2");

                entity.Property(e => e.Street3).HasColumnName("street3");

                entity.Property(e => e.Street4).HasColumnName("street4");

                entity.Property(e => e.Street5).HasColumnName("street5");

                entity.Property(e => e.TelNumber).HasColumnName("tel_number");

                entity.Property(e => e.TransZone).HasColumnName("trans_zone");

                entity.Property(e => e.UcmId).HasColumnName("ucm_id");

                entity.Property(e => e.UriAddr).HasColumnName("uri_addr");

                entity.Property(e => e.VarId).HasColumnName("var_id");

                entity.Property(e => e.Verifydate).HasColumnName("verifydate");
            });

            modelBuilder.Entity<ActiveCustomer>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("active_customers");

                entity.Property(e => e.Bpid)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("BPID");
            });

            modelBuilder.Entity<ActiveCustomerTmp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("active_customer_tmp");

                entity.Property(e => e.ArchivingFlag)
                    .HasMaxLength(50)
                    .HasColumnName("archiving_flag");

                entity.Property(e => e.Bpid)
                    .HasMaxLength(50)
                    .HasColumnName("bpid");

                entity.Property(e => e.City)
                    .HasMaxLength(255)
                    .HasColumnName("city");

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(20)
                    .HasColumnName("country_code");

                entity.Property(e => e.NameConc)
                    .HasMaxLength(500)
                    .HasColumnName("name_conc");

                entity.Property(e => e.PrimaryVarId)
                    .HasMaxLength(255)
                    .HasColumnName("primary_var_id");

                entity.Property(e => e.StreetConc)
                    .HasMaxLength(1000)
                    .HasColumnName("street_conc");

                entity.Property(e => e.SuppGroup)
                    .HasMaxLength(255)
                    .HasColumnName("Supp_Group");
            });

            modelBuilder.Entity<AggregatedCounter>(entity =>
            {
                entity.ToTable("AggregatedCounter", "HangFire");

                entity.HasIndex(e => e.Key, "UX_HangFire_CounterAggregated_Key")
                    .IsUnique();

                entity.Property(e => e.ExpireAt).HasColumnType("datetime");

                entity.Property(e => e.Key).HasMaxLength(100);
            });

            modelBuilder.Entity<Booking>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("bookings");

                entity.HasIndex(e => e.SoNumber, "bookings_ndx1");

                entity.HasIndex(e => e.ImportStatus, "bookings_ndx2");

                entity.Property(e => e.BilltoCountry)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("billto_country");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoLoc)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("billto_loc");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("billto_name");

                entity.Property(e => e.BilltoPostalCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("billto_postal_code");

                entity.Property(e => e.BilltoStreet1)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("billto_street1");

                entity.Property(e => e.BilltoStreet2)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("billto_street2");

                entity.Property(e => e.BilltoStreet3)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("billto_street3");

                entity.Property(e => e.BilltoStreet4)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("billto_street4");

                entity.Property(e => e.BookedDate)
                    .HasColumnType("date")
                    .HasColumnName("booked_date");

                entity.Property(e => e.BookingNetValue).HasColumnName("booking_net_value");

                entity.Property(e => e.BookingQty).HasColumnName("booking_qty");

                entity.Property(e => e.CompleteDelivery)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("complete_delivery");

                entity.Property(e => e.Compliance)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("compliance");

                entity.Property(e => e.CustomerPo)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("customer_po");

                entity.Property(e => e.DeliveryStatus)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("delivery_status");

                entity.Property(e => e.EmbargoLineStatus)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("embargo_line_status");

                entity.Property(e => e.EndUser)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("end_user");

                entity.Property(e => e.EndUserCountry)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("end_user_country");

                entity.Property(e => e.EndUserCountryCode)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("end_user_country_code");

                entity.Property(e => e.EndUserKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("end_user_key");

                entity.Property(e => e.EndUserLocation)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("end_user_location");

                entity.Property(e => e.EndUserPostalCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("end_user_postal_code");

                entity.Property(e => e.EndUserStreet1)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("end_user_street1");

                entity.Property(e => e.EndUserStreet2)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("end_user_street2");

                entity.Property(e => e.EndUserStreet3)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("end_user_street3");

                entity.Property(e => e.EndUserStreet4)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("end_user_street4");

                entity.Property(e => e.FrieghtForwarder1)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder1");

                entity.Property(e => e.FrieghtForwarder1Country)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder1_country");

                entity.Property(e => e.FrieghtForwarder1Loc)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder1_loc");

                entity.Property(e => e.FrieghtForwarder1Street1)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder1_street1");

                entity.Property(e => e.FrieghtForwarder1Street2)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder1_street2");

                entity.Property(e => e.FrieghtForwarder1Street3)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder1_street3");

                entity.Property(e => e.FrieghtForwarder1Street4)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder1_street4");

                entity.Property(e => e.FrieghtForwarder2)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder2");

                entity.Property(e => e.FrieghtForwarder2Country)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder2_country");

                entity.Property(e => e.FrieghtForwarder2Loc)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder2_loc");

                entity.Property(e => e.FrieghtForwarder2Street1)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder2_street1");

                entity.Property(e => e.FrieghtForwarder2Street2)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder2_street2");

                entity.Property(e => e.FrieghtForwarder2Street3)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder2_street3");

                entity.Property(e => e.FrieghtForwarder2Street4)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder2_street4");

                entity.Property(e => e.FrieghtForwarder3)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder3");

                entity.Property(e => e.FrieghtForwarder3Country)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder3_country");

                entity.Property(e => e.FrieghtForwarder3Loc)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder3_loc");

                entity.Property(e => e.FrieghtForwarder3Street1)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder3_street1");

                entity.Property(e => e.FrieghtForwarder3Street2)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder3_street2");

                entity.Property(e => e.FrieghtForwarder3Street3)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder3_street3");

                entity.Property(e => e.FrieghtForwarder3Street4)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder3_street4");

                entity.Property(e => e.GtsOverallStatus)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("gts_overall_status");

                entity.Property(e => e.ImportDate)
                    .HasColumnType("datetime")
                    .HasColumnName("import_date");

                entity.Property(e => e.ImportId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("import_id");

                entity.Property(e => e.ImportStatus)
                    .HasMaxLength(255)
                    .HasColumnName("import_status");

                entity.Property(e => e.Incoterms1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("incoterms1");

                entity.Property(e => e.Incoterms2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("incoterms2");

                entity.Property(e => e.LicenseBlocked)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("license_blocked");

                entity.Property(e => e.Material)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("material");

                entity.Property(e => e.MaterialEccn)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("material_eccn");

                entity.Property(e => e.MaterialHts)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("material_hts");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("material_key");

                entity.Property(e => e.MaterialMedium)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("material_medium");

                entity.Property(e => e.MaterialPlantCountryOrig)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("material_plant_country_orig");

                entity.Property(e => e.Mit)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("mit");

                entity.Property(e => e.Payer)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("payer");

                entity.Property(e => e.PlantCountryCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("plant_country_code");

                entity.Property(e => e.PlantKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("plant_key");

                entity.Property(e => e.PlantMedium)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("plant_medium");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("po_type");

                entity.Property(e => e.ResasonCode)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("resason_code");

                entity.Property(e => e.RtphStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("rtph_status");

                entity.Property(e => e.SalesDocItemCat)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("sales_doc_item_cat");

                entity.Property(e => e.ScheduleLineDate)
                    .HasColumnType("date")
                    .HasColumnName("schedule_line_date");

                entity.Property(e => e.ShippingNote)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("shipping_note");

                entity.Property(e => e.ShippingType)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("shipping_type");

                entity.Property(e => e.ShiptoCountry)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("shipto_country");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShiptoLoc)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("shipto_loc");

                entity.Property(e => e.ShiptoName)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("shipto_name");

                entity.Property(e => e.ShiptoPostalCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("shipto_postal_code");

                entity.Property(e => e.ShiptoStreet1)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street1");

                entity.Property(e => e.ShiptoStreet2)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street2");

                entity.Property(e => e.ShiptoStreet3)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street3");

                entity.Property(e => e.ShiptoStreet4)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street4");

                entity.Property(e => e.SoLineNum).HasColumnName("so_line_num");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoSchedLineNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("so_sched_line_no");

                entity.Property(e => e.SoType)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoTypeKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("so_type_key");

                entity.Property(e => e.SoldtoCountry)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("soldto_country");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoLoc)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("soldto_loc");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SoldtoPostalCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("soldto_postal_code");

                entity.Property(e => e.SoldtoStreet1)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("soldto_street1");

                entity.Property(e => e.SoldtoStreet2)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("soldto_street2");

                entity.Property(e => e.SoldtoStreet3)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("soldto_street3");

                entity.Property(e => e.SoldtoStreet4)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("soldto_street4");

                entity.Property(e => e.SplLineStatus)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("spl_line_status");
            });

            modelBuilder.Entity<Booking1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("bookings", "dev");

                entity.HasIndex(e => e.SoNumber, "so_number_idx");

                entity.Property(e => e.BilltoBusinessPartner)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("billto_business_partner");

                entity.Property(e => e.BilltoLoc)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("billto_loc");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("billto_name");

                entity.Property(e => e.BilltoPostalCode)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("billto_postal_code");

                entity.Property(e => e.BilltoStreet1)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("billto_street1");

                entity.Property(e => e.BilltoStreet2)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("billto_street2");

                entity.Property(e => e.BilltoStreet3)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("billto_street3");

                entity.Property(e => e.BilltoStreet4)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("billto_street4");

                entity.Property(e => e.BilltoStreetCountry)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("billto_street_country");

                entity.Property(e => e.BookedDate)
                    .HasColumnType("date")
                    .HasColumnName("booked_date");

                entity.Property(e => e.BookingNetValue).HasColumnName("booking_net_value");

                entity.Property(e => e.BookingQty).HasColumnName("booking_qty");

                entity.Property(e => e.CompleteDelivery)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("complete_delivery");

                entity.Property(e => e.Compliance)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("compliance");

                entity.Property(e => e.CustomerPo)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("customer_po");

                entity.Property(e => e.DeliveryStatus)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("delivery_status");

                entity.Property(e => e.EmbargoLineStatus)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("embargo_line_status");

                entity.Property(e => e.EndUser)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("end_user");

                entity.Property(e => e.EuCountry)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("eu_country");

                entity.Property(e => e.EuCountryCode)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("eu_country_code");

                entity.Property(e => e.EuKey)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("eu_key");

                entity.Property(e => e.EuLocation)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("eu_location");

                entity.Property(e => e.EuPostalCode)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("eu_postal_code");

                entity.Property(e => e.EuStreet1)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("eu_street1");

                entity.Property(e => e.EuStreet2)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("eu_street2");

                entity.Property(e => e.EuStreet3)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("eu_street3");

                entity.Property(e => e.EuStreet4)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("eu_street4");

                entity.Property(e => e.FrieghtForwarder1)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder1");

                entity.Property(e => e.FrieghtForwarder1Country)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder1_country");

                entity.Property(e => e.FrieghtForwarder1Loc)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder1_loc");

                entity.Property(e => e.FrieghtForwarder1Street1)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder1_street1");

                entity.Property(e => e.FrieghtForwarder1Street2)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder1_street2");

                entity.Property(e => e.FrieghtForwarder1Street3)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder1_street3");

                entity.Property(e => e.FrieghtForwarder1Street4)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder1_street4");

                entity.Property(e => e.FrieghtForwarder2)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder2");

                entity.Property(e => e.FrieghtForwarder2Country)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder2_country");

                entity.Property(e => e.FrieghtForwarder2Loc)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder2_loc");

                entity.Property(e => e.FrieghtForwarder2Street1)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder2_street1");

                entity.Property(e => e.FrieghtForwarder2Street2)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder2_street2");

                entity.Property(e => e.FrieghtForwarder2Street3)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder2_street3");

                entity.Property(e => e.FrieghtForwarder2Street4)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder2_street4");

                entity.Property(e => e.FrieghtForwarder3)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder3");

                entity.Property(e => e.FrieghtForwarder3Country)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder3_country");

                entity.Property(e => e.FrieghtForwarder3Loc)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder3_loc");

                entity.Property(e => e.FrieghtForwarder3Street1)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder3_street1");

                entity.Property(e => e.FrieghtForwarder3Street2)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder3_street2");

                entity.Property(e => e.FrieghtForwarder3Street3)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder3_street3");

                entity.Property(e => e.FrieghtForwarder3Street4)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder3_street4");

                entity.Property(e => e.GtsOverallStatus)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("gts_overall_status");

                entity.Property(e => e.ImportDate)
                    .HasColumnType("datetime")
                    .HasColumnName("import_date");

                entity.Property(e => e.ImportId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("import_id");

                entity.Property(e => e.ImportStatus)
                    .HasMaxLength(255)
                    .HasColumnName("import_status");

                entity.Property(e => e.Incoterms1)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("incoterms1");

                entity.Property(e => e.Incoterms2)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("incoterms2");

                entity.Property(e => e.LicenseBlocked)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("license_blocked");

                entity.Property(e => e.Material)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("material");

                entity.Property(e => e.MaterialEccn)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("material_eccn");

                entity.Property(e => e.MaterialHts)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("material_hts");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("material_key");

                entity.Property(e => e.MaterialMedium)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("material_medium");

                entity.Property(e => e.MaterialPlantCountryOrig)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("material_plant_country_orig");

                entity.Property(e => e.Mit)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("mit");

                entity.Property(e => e.Payer)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("payer");

                entity.Property(e => e.Plant)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("plant");

                entity.Property(e => e.PlantCountry)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("plant_country");

                entity.Property(e => e.PlantMedium)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("plant_medium");

                entity.Property(e => e.PoType)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("po_type");

                entity.Property(e => e.ResasonCode)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("resason_code");

                entity.Property(e => e.RtphStatus)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("rtph_status");

                entity.Property(e => e.SalesDocItemCat)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("sales_doc_item_cat");

                entity.Property(e => e.ScheduleLineDate)
                    .HasColumnType("date")
                    .HasColumnName("schedule_line_date");

                entity.Property(e => e.ShippingNote)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("shipping_note");

                entity.Property(e => e.ShippingType)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("shipping_type");

                entity.Property(e => e.ShiptoBusinessPartner)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("shipto_business_partner");

                entity.Property(e => e.ShiptoCountry)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("shipto_country");

                entity.Property(e => e.ShiptoLoc)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("shipto_loc");

                entity.Property(e => e.ShiptoName)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("shipto_name");

                entity.Property(e => e.ShiptoPostalCode)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("shipto_postal_code");

                entity.Property(e => e.ShiptoStreet1)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street1");

                entity.Property(e => e.ShiptoStreet2)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street2");

                entity.Property(e => e.ShiptoStreet3)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street3");

                entity.Property(e => e.ShiptoStreet4)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street4");

                entity.Property(e => e.SoLineNum).HasColumnName("so_line_num");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoSchedLineNo)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("so_sched_line_no");

                entity.Property(e => e.SoType)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoTypeKey)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("so_type_key");

                entity.Property(e => e.SoldtoBusinessPartner)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("soldto_business_partner");

                entity.Property(e => e.SoldtoCountry)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("soldto_country");

                entity.Property(e => e.SoldtoLoc)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("soldto_loc");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SoldtoPostalCode)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("soldto_postal_code");

                entity.Property(e => e.SoldtoStreet1)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("soldto_street1");

                entity.Property(e => e.SoldtoStreet2)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("soldto_street2");

                entity.Property(e => e.SoldtoStreet3)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("soldto_street3");

                entity.Property(e => e.SoldtoStreet4)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("soldto_street4");

                entity.Property(e => e.SplLineStatus)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("spl_line_status");
            });

            modelBuilder.Entity<BookingsAm>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("bookings_am", "dev");

                entity.HasIndex(e => e.SoNumber, "bookings_am_ndx1");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.EndCustomerGsaFlag)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("end_customer_gsa_flag");

                entity.Property(e => e.EndCustomerPartnerLevel)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("end_customer_partner_level");

                entity.Property(e => e.ImportId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("import_id");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerDistrict)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("reseller_district");

                entity.Property(e => e.ResellerGsaFlag)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("reseller_gsa_flag");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerPartnerLevelKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("reseller_partner_level_key");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoldtoPartyGsaFlag)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("soldto_party_gsa_flag");

                entity.Property(e => e.TransactionCreated)
                    .HasColumnType("date")
                    .HasColumnName("transaction_created");
            });

            modelBuilder.Entity<BookingsAmMetaVw>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("bookings_am_meta_vw");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.EndCustomerGsaFlag)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("end_customer_gsa_flag");

                entity.Property(e => e.EndCustomerPartnerLevel)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("end_customer_partner_level");

                entity.Property(e => e.ImportId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("import_id");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerDistrict)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("reseller_district");

                entity.Property(e => e.ResellerGsaFlag)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("reseller_gsa_flag");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerPartnerLevelKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("reseller_partner_level_key");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoldtoPartyGsaFlag)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("soldto_party_gsa_flag");

                entity.Property(e => e.TransactionCreated)
                    .HasColumnType("date")
                    .HasColumnName("transaction_created");
            });

            modelBuilder.Entity<BookingsApr2018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("bookings_apr2018", "dsf");

                entity.Property(e => e.BillToPartyBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___BAS__Postal_Code__Key_");

                entity.Property(e => e.BillToPartyBasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party___BAS___Street_2__Key_");

                entity.Property(e => e.BillToPartyBasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party___BAS___Street_3__Key_");

                entity.Property(e => e.BillToPartyBasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party___BAS___Street_4__Key_");

                entity.Property(e => e.BillToPartyBusinessPartnerKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___Business_Partner__Key_");

                entity.Property(e => e.BillToPartyCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___Country__Text_");

                entity.Property(e => e.BillToPartyLocationKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___Location__Key_");

                entity.Property(e => e.BillToPartyNameKey)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party___Name__Key_");

                entity.Property(e => e.BillToPartyStreetNameKey)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party___Street_Name__Key_");

                entity.Property(e => e.BookDate0createdon)
                    .HasMaxLength(50)
                    .HasColumnName("Book_Date__0CREATEDON_");

                entity.Property(e => e.BookingQuantity)
                    .HasMaxLength(50)
                    .HasColumnName("Booking_Quantity");

                entity.Property(e => e.BookingsNetValue)
                    .HasMaxLength(50)
                    .HasColumnName("Bookings_Net_Value");

                entity.Property(e => e.CompleteDelivery)
                    .HasMaxLength(50)
                    .HasColumnName("Complete_Delivery");

                entity.Property(e => e.Compliance).HasMaxLength(50);

                entity.Property(e => e.CustomerPoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Customer_PO_Number");

                entity.Property(e => e.DeliveryStatus)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Status");

                entity.Property(e => e.EmbargoStatusAtTheLineLevel)
                    .HasMaxLength(50)
                    .HasColumnName("Embargo_Status_at_the_line_level");

                entity.Property(e => e.EndUser).HasMaxLength(250);

                entity.Property(e => e.EndUserBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("EndUser___BAS__Postal_Code__Key_");

                entity.Property(e => e.EndUserBasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("EndUser___BAS___Street_2__Key_");

                entity.Property(e => e.EndUserBasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("EndUser___BAS___Street_3__Key_");

                entity.Property(e => e.EndUserBasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("EndUser___BAS___Street_4__Key_");

                entity.Property(e => e.EndUserCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("EndUser___Country__Key_");

                entity.Property(e => e.EndUserCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("EndUser___Country__Text_");

                entity.Property(e => e.EndUserKey)
                    .HasMaxLength(50)
                    .HasColumnName("EndUser___Key");

                entity.Property(e => e.EndUserLocationKey)
                    .HasMaxLength(50)
                    .HasColumnName("EndUser___Location__Key_");

                entity.Property(e => e.EndUserStreetNameKey)
                    .HasMaxLength(250)
                    .HasColumnName("EndUser___Street_Name__Key_");

                entity.Property(e => e.FrieghtForwarder1)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_1");

                entity.Property(e => e.FrieghtForwarder1BasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_1___BAS___Street_2__Key_");

                entity.Property(e => e.FrieghtForwarder1BasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_1___BAS___Street_3__Key_");

                entity.Property(e => e.FrieghtForwarder1BasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_1___BAS___Street_4__Key_");

                entity.Property(e => e.FrieghtForwarder1CountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Frieght_Forwarder_1___Country__Text_");

                entity.Property(e => e.FrieghtForwarder1LocationKey)
                    .HasMaxLength(50)
                    .HasColumnName("Frieght_Forwarder_1___Location__Key_");

                entity.Property(e => e.FrieghtForwarder1StreetNameKey)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_1___Street_Name__Key_");

                entity.Property(e => e.FrieghtForwarder2)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_2");

                entity.Property(e => e.FrieghtForwarder2BasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_2___BAS___Street_2__Key_");

                entity.Property(e => e.FrieghtForwarder2BasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_2___BAS___Street_3__Key_");

                entity.Property(e => e.FrieghtForwarder2BasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_2___BAS___Street_4__Key_");

                entity.Property(e => e.FrieghtForwarder2CountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Frieght_Forwarder_2___Country__Text_");

                entity.Property(e => e.FrieghtForwarder2LocationKey)
                    .HasMaxLength(50)
                    .HasColumnName("Frieght_Forwarder_2___Location__Key_");

                entity.Property(e => e.FrieghtForwarder2StreetNameKey)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_2___Street_Name__Key_");

                entity.Property(e => e.FrieghtForwarder3)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_3");

                entity.Property(e => e.FrieghtForwarder3BasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_3___BAS___Street_2__Key_");

                entity.Property(e => e.FrieghtForwarder3BasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_3___BAS___Street_3__Key_");

                entity.Property(e => e.FrieghtForwarder3BasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_3___BAS___Street_4__Key_");

                entity.Property(e => e.FrieghtForwarder3CountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Frieght_Forwarder_3___Country__Text_");

                entity.Property(e => e.FrieghtForwarder3LocationKey)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_3___Location__Key_");

                entity.Property(e => e.FrieghtForwarder3StreetNameKey)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_3___Street_Name__Key_");

                entity.Property(e => e.GtsOverallStatus)
                    .HasMaxLength(50)
                    .HasColumnName("GTS_Overall__Status");

                entity.Property(e => e.Incoterms1)
                    .HasMaxLength(50)
                    .HasColumnName("Incoterms_1");

                entity.Property(e => e.Incoterms2)
                    .HasMaxLength(50)
                    .HasColumnName("Incoterms_2");

                entity.Property(e => e.LicenseForBlocked)
                    .HasMaxLength(50)
                    .HasColumnName("License_for_blocked");

                entity.Property(e => e.Material).HasMaxLength(50);

                entity.Property(e => e.MaterialEccnKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___ECCN__Key_");

                entity.Property(e => e.MaterialHtsKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___HTS__Key_");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___Key");

                entity.Property(e => e.MaterialMediumKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___Medium__Key_");

                entity.Property(e => e.MaterialPlantViewCountryOfOriginText)
                    .HasMaxLength(50)
                    .HasColumnName("Material_Plant_View___Country_of_Origin__Text_");

                entity.Property(e => e.Mit)
                    .HasMaxLength(50)
                    .HasColumnName("MIT");

                entity.Property(e => e.OrderType1)
                    .HasMaxLength(50)
                    .HasColumnName("Order_Type1");

                entity.Property(e => e.OrderType2)
                    .HasMaxLength(50)
                    .HasColumnName("Order_Type2");

                entity.Property(e => e.PayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("Payer___Key");

                entity.Property(e => e.PlantCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("Plant___Country__Key_");

                entity.Property(e => e.PlantKey)
                    .HasMaxLength(50)
                    .HasColumnName("Plant___Key");

                entity.Property(e => e.PlantMediumText)
                    .HasMaxLength(50)
                    .HasColumnName("Plant___Medium_Text");

                entity.Property(e => e.PurchaseOrderType)
                    .HasMaxLength(50)
                    .HasColumnName("Purchase_Order_Type");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("Quote_ID");

                entity.Property(e => e.ReasonCode)
                    .HasMaxLength(50)
                    .HasColumnName("Reason_Code");

                entity.Property(e => e.RtphStatus)
                    .HasMaxLength(50)
                    .HasColumnName("RTPH_status");

                entity.Property(e => e.SalesDocumentItemCategory)
                    .HasMaxLength(50)
                    .HasColumnName("Sales_Document_Item_Category");

                entity.Property(e => e.SalesOrderLineItem)
                    .HasMaxLength(50)
                    .HasColumnName("Sales_Order_Line_Item");

                entity.Property(e => e.SalesOrderNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Sales_Order_Number");

                entity.Property(e => e.SalesOrderScheduleLineNo)
                    .HasMaxLength(50)
                    .HasColumnName("Sales_Order_Schedule_Line_No");

                entity.Property(e => e.ScheduleLineDate)
                    .HasMaxLength(50)
                    .HasColumnName("Schedule_Line_Date");

                entity.Property(e => e.ShipToPartyBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_Party___BAS__Postal_Code__Key_");

                entity.Property(e => e.ShipToPartyBasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Party___BAS___Street_2__Key_");

                entity.Property(e => e.ShipToPartyBasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Party___BAS___Street_3__Key_");

                entity.Property(e => e.ShipToPartyBasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Party___BAS___Street_4__Key_");

                entity.Property(e => e.ShipToPartyBusinessPartnerKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_Party___Business_Partner__Key_");

                entity.Property(e => e.ShipToPartyCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_Party___Country__Text_");

                entity.Property(e => e.ShipToPartyLocationKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_Party___Location__Key_");

                entity.Property(e => e.ShipToPartyNameKey)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Party___Name__Key_");

                entity.Property(e => e.ShipToPartyStreetNameKey)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Party___Street_Name__Key_");

                entity.Property(e => e.ShippingType)
                    .HasMaxLength(50)
                    .HasColumnName("Shipping_Type");

                entity.Property(e => e.SoldToPartyBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Sold_To_Party___BAS__Postal_Code__Key_");

                entity.Property(e => e.SoldToPartyBasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Party___BAS___Street_2__Key_");

                entity.Property(e => e.SoldToPartyBasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Party___BAS___Street_3__Key_");

                entity.Property(e => e.SoldToPartyBasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Party___BAS___Street_4__Key_");

                entity.Property(e => e.SoldToPartyBusinessPartnerKey)
                    .HasMaxLength(50)
                    .HasColumnName("Sold_To_Party___Business_Partner__Key_");

                entity.Property(e => e.SoldToPartyCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Sold_To_Party___Country__Text_");

                entity.Property(e => e.SoldToPartyLocationKey)
                    .HasMaxLength(50)
                    .HasColumnName("Sold_To_Party___Location__Key_");

                entity.Property(e => e.SoldToPartyNameKey)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Party___Name__Key_");

                entity.Property(e => e.SoldToPartyStreetNameKey)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Party___Street_Name__Key_");

                entity.Property(e => e.SplStatusAtTheLineLevel)
                    .HasMaxLength(50)
                    .HasColumnName("SPL__Status_at_the_Line_level");
            });

            modelBuilder.Entity<BookingsFeb2018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("bookings_feb2018", "dsf");

                entity.Property(e => e.BillToPartyBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___BAS__Postal_Code__Key_");

                entity.Property(e => e.BillToPartyBasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party___BAS___Street_2__Key_");

                entity.Property(e => e.BillToPartyBasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party___BAS___Street_3__Key_");

                entity.Property(e => e.BillToPartyBasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party___BAS___Street_4__Key_");

                entity.Property(e => e.BillToPartyBusinessPartnerKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___Business_Partner__Key_");

                entity.Property(e => e.BillToPartyCountryText)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party___Country__Text_");

                entity.Property(e => e.BillToPartyLocationKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___Location__Key_");

                entity.Property(e => e.BillToPartyNameKey)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party___Name__Key_");

                entity.Property(e => e.BillToPartyStreetNameKey)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party___Street_Name__Key_");

                entity.Property(e => e.BookDate0createdon)
                    .HasMaxLength(50)
                    .HasColumnName("Book_Date__0CREATEDON_");

                entity.Property(e => e.BookingQuantity)
                    .HasMaxLength(50)
                    .HasColumnName("Booking_Quantity");

                entity.Property(e => e.BookingsNetValue)
                    .HasMaxLength(50)
                    .HasColumnName("Bookings_Net_Value");

                entity.Property(e => e.CompleteDelivery)
                    .HasMaxLength(50)
                    .HasColumnName("Complete_Delivery");

                entity.Property(e => e.Compliance).HasMaxLength(50);

                entity.Property(e => e.CustomerPoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Customer_PO_Number");

                entity.Property(e => e.DeliveryStatus)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Status");

                entity.Property(e => e.EmbargoStatusAtTheLineLevel)
                    .HasMaxLength(50)
                    .HasColumnName("Embargo_Status_at_the_line_level");

                entity.Property(e => e.EndUser).HasMaxLength(250);

                entity.Property(e => e.EndUserBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("EndUser___BAS__Postal_Code__Key_");

                entity.Property(e => e.EndUserBasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("EndUser___BAS___Street_2__Key_");

                entity.Property(e => e.EndUserBasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("EndUser___BAS___Street_3__Key_");

                entity.Property(e => e.EndUserBasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("EndUser___BAS___Street_4__Key_");

                entity.Property(e => e.EndUserCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("EndUser___Country__Key_");

                entity.Property(e => e.EndUserCountryText)
                    .HasMaxLength(250)
                    .HasColumnName("EndUser___Country__Text_");

                entity.Property(e => e.EndUserKey)
                    .HasMaxLength(50)
                    .HasColumnName("EndUser___Key");

                entity.Property(e => e.EndUserLocationKey)
                    .HasMaxLength(50)
                    .HasColumnName("EndUser___Location__Key_");

                entity.Property(e => e.EndUserStreetNameKey)
                    .HasMaxLength(250)
                    .HasColumnName("EndUser___Street_Name__Key_");

                entity.Property(e => e.FrieghtForwarder1)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_1");

                entity.Property(e => e.FrieghtForwarder1BasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_1___BAS___Street_2__Key_");

                entity.Property(e => e.FrieghtForwarder1BasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_1___BAS___Street_3__Key_");

                entity.Property(e => e.FrieghtForwarder1BasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_1___BAS___Street_4__Key_");

                entity.Property(e => e.FrieghtForwarder1CountryText)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_1___Country__Text_");

                entity.Property(e => e.FrieghtForwarder1LocationKey)
                    .HasMaxLength(50)
                    .HasColumnName("Frieght_Forwarder_1___Location__Key_");

                entity.Property(e => e.FrieghtForwarder1StreetNameKey)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_1___Street_Name__Key_");

                entity.Property(e => e.FrieghtForwarder2)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_2");

                entity.Property(e => e.FrieghtForwarder2BasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_2___BAS___Street_2__Key_");

                entity.Property(e => e.FrieghtForwarder2BasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_2___BAS___Street_3__Key_");

                entity.Property(e => e.FrieghtForwarder2BasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_2___BAS___Street_4__Key_");

                entity.Property(e => e.FrieghtForwarder2CountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Frieght_Forwarder_2___Country__Text_");

                entity.Property(e => e.FrieghtForwarder2LocationKey)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_2___Location__Key_");

                entity.Property(e => e.FrieghtForwarder2StreetNameKey)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_2___Street_Name__Key_");

                entity.Property(e => e.FrieghtForwarder3)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_3");

                entity.Property(e => e.FrieghtForwarder3BasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_3___BAS___Street_2__Key_");

                entity.Property(e => e.FrieghtForwarder3BasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_3___BAS___Street_3__Key_");

                entity.Property(e => e.FrieghtForwarder3BasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_3___BAS___Street_4__Key_");

                entity.Property(e => e.FrieghtForwarder3CountryText)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_3___Country__Text_");

                entity.Property(e => e.FrieghtForwarder3LocationKey)
                    .HasMaxLength(50)
                    .HasColumnName("Frieght_Forwarder_3___Location__Key_");

                entity.Property(e => e.FrieghtForwarder3StreetNameKey)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_3___Street_Name__Key_");

                entity.Property(e => e.GtsOverallStatus)
                    .HasMaxLength(50)
                    .HasColumnName("GTS_Overall__Status");

                entity.Property(e => e.Incoterms1)
                    .HasMaxLength(50)
                    .HasColumnName("Incoterms_1");

                entity.Property(e => e.Incoterms2)
                    .HasMaxLength(50)
                    .HasColumnName("Incoterms_2");

                entity.Property(e => e.LicenseForBlocked)
                    .HasMaxLength(50)
                    .HasColumnName("License_for_blocked");

                entity.Property(e => e.Material).HasMaxLength(50);

                entity.Property(e => e.MaterialEccnKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___ECCN__Key_");

                entity.Property(e => e.MaterialHtsKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___HTS__Key_");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___Key");

                entity.Property(e => e.MaterialMediumKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___Medium__Key_");

                entity.Property(e => e.MaterialPlantViewCountryOfOriginText)
                    .HasMaxLength(50)
                    .HasColumnName("Material_Plant_View___Country_of_Origin__Text_");

                entity.Property(e => e.Mit)
                    .HasMaxLength(50)
                    .HasColumnName("MIT");

                entity.Property(e => e.OrderType1)
                    .HasMaxLength(50)
                    .HasColumnName("Order_Type1");

                entity.Property(e => e.OrderType2)
                    .HasMaxLength(50)
                    .HasColumnName("Order_Type2");

                entity.Property(e => e.PayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("Payer___Key");

                entity.Property(e => e.PlantCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("Plant___Country__Key_");

                entity.Property(e => e.PlantKey)
                    .HasMaxLength(50)
                    .HasColumnName("Plant___Key");

                entity.Property(e => e.PlantMediumText)
                    .HasMaxLength(50)
                    .HasColumnName("Plant___Medium_Text");

                entity.Property(e => e.PurchaseOrderType)
                    .HasMaxLength(50)
                    .HasColumnName("Purchase_Order_Type");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("Quote_ID");

                entity.Property(e => e.ReasonCode)
                    .HasMaxLength(50)
                    .HasColumnName("Reason_Code");

                entity.Property(e => e.RtphStatus)
                    .HasMaxLength(50)
                    .HasColumnName("RTPH_status");

                entity.Property(e => e.SalesDocumentItemCategory)
                    .HasMaxLength(50)
                    .HasColumnName("Sales_Document_Item_Category");

                entity.Property(e => e.SalesOrderLineItem)
                    .HasMaxLength(50)
                    .HasColumnName("Sales_Order_Line_Item");

                entity.Property(e => e.SalesOrderNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Sales_Order_Number");

                entity.Property(e => e.SalesOrderScheduleLineNo)
                    .HasMaxLength(50)
                    .HasColumnName("Sales_Order_Schedule_Line_No");

                entity.Property(e => e.ScheduleLineDate)
                    .HasMaxLength(50)
                    .HasColumnName("Schedule_Line_Date");

                entity.Property(e => e.ShipToPartyBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_Party___BAS__Postal_Code__Key_");

                entity.Property(e => e.ShipToPartyBasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Party___BAS___Street_2__Key_");

                entity.Property(e => e.ShipToPartyBasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Party___BAS___Street_3__Key_");

                entity.Property(e => e.ShipToPartyBasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Party___BAS___Street_4__Key_");

                entity.Property(e => e.ShipToPartyBusinessPartnerKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_Party___Business_Partner__Key_");

                entity.Property(e => e.ShipToPartyCountryText)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Party___Country__Text_");

                entity.Property(e => e.ShipToPartyLocationKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_Party___Location__Key_");

                entity.Property(e => e.ShipToPartyNameKey)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Party___Name__Key_");

                entity.Property(e => e.ShipToPartyStreetNameKey)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Party___Street_Name__Key_");

                entity.Property(e => e.ShippingType)
                    .HasMaxLength(50)
                    .HasColumnName("Shipping_Type");

                entity.Property(e => e.SoldToPartyBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Sold_To_Party___BAS__Postal_Code__Key_");

                entity.Property(e => e.SoldToPartyBasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Party___BAS___Street_2__Key_");

                entity.Property(e => e.SoldToPartyBasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Party___BAS___Street_3__Key_");

                entity.Property(e => e.SoldToPartyBasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Party___BAS___Street_4__Key_");

                entity.Property(e => e.SoldToPartyBusinessPartnerKey)
                    .HasMaxLength(50)
                    .HasColumnName("Sold_To_Party___Business_Partner__Key_");

                entity.Property(e => e.SoldToPartyCountryText)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Party___Country__Text_");

                entity.Property(e => e.SoldToPartyLocationKey)
                    .HasMaxLength(50)
                    .HasColumnName("Sold_To_Party___Location__Key_");

                entity.Property(e => e.SoldToPartyNameKey)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Party___Name__Key_");

                entity.Property(e => e.SoldToPartyStreetNameKey)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Party___Street_Name__Key_");

                entity.Property(e => e.SplStatusAtTheLineLevel)
                    .HasMaxLength(50)
                    .HasColumnName("SPL__Status_at_the_Line_level");
            });

            modelBuilder.Entity<BookingsJan2018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("bookings_jan2018", "dsf");

                entity.Property(e => e.BillToPartyBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___BAS__Postal_Code__Key_");

                entity.Property(e => e.BillToPartyBasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party___BAS___Street_2__Key_");

                entity.Property(e => e.BillToPartyBasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party___BAS___Street_3__Key_");

                entity.Property(e => e.BillToPartyBasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party___BAS___Street_4__Key_");

                entity.Property(e => e.BillToPartyBusinessPartnerKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___Business_Partner__Key_");

                entity.Property(e => e.BillToPartyCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___Country__Text_");

                entity.Property(e => e.BillToPartyLocationKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___Location__Key_");

                entity.Property(e => e.BillToPartyNameKey)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party___Name__Key_");

                entity.Property(e => e.BillToPartyStreetNameKey)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party___Street_Name__Key_");

                entity.Property(e => e.BookDate0createdon)
                    .HasMaxLength(50)
                    .HasColumnName("Book_Date__0CREATEDON_");

                entity.Property(e => e.BookingQuantity)
                    .HasMaxLength(50)
                    .HasColumnName("Booking_Quantity");

                entity.Property(e => e.BookingsNetValue)
                    .HasMaxLength(50)
                    .HasColumnName("Bookings_Net_Value");

                entity.Property(e => e.CompleteDelivery)
                    .HasMaxLength(50)
                    .HasColumnName("Complete_Delivery");

                entity.Property(e => e.Compliance).HasMaxLength(50);

                entity.Property(e => e.CustomerPoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Customer_PO_Number");

                entity.Property(e => e.DeliveryStatus)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Status");

                entity.Property(e => e.EmbargoStatusAtTheLineLevel)
                    .HasMaxLength(50)
                    .HasColumnName("Embargo_Status_at_the_line_level");

                entity.Property(e => e.EndUser).HasMaxLength(250);

                entity.Property(e => e.EndUserBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("EndUser___BAS__Postal_Code__Key_");

                entity.Property(e => e.EndUserBasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("EndUser___BAS___Street_2__Key_");

                entity.Property(e => e.EndUserBasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("EndUser___BAS___Street_3__Key_");

                entity.Property(e => e.EndUserBasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("EndUser___BAS___Street_4__Key_");

                entity.Property(e => e.EndUserCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("EndUser___Country__Key_");

                entity.Property(e => e.EndUserCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("EndUser___Country__Text_");

                entity.Property(e => e.EndUserKey)
                    .HasMaxLength(50)
                    .HasColumnName("EndUser___Key");

                entity.Property(e => e.EndUserLocationKey)
                    .HasMaxLength(250)
                    .HasColumnName("EndUser___Location__Key_");

                entity.Property(e => e.EndUserStreetNameKey)
                    .HasMaxLength(250)
                    .HasColumnName("EndUser___Street_Name__Key_");

                entity.Property(e => e.FrieghtForwarder1)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_1");

                entity.Property(e => e.FrieghtForwarder1BasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_1___BAS___Street_2__Key_");

                entity.Property(e => e.FrieghtForwarder1BasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_1___BAS___Street_3__Key_");

                entity.Property(e => e.FrieghtForwarder1BasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_1___BAS___Street_4__Key_");

                entity.Property(e => e.FrieghtForwarder1CountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Frieght_Forwarder_1___Country__Text_");

                entity.Property(e => e.FrieghtForwarder1LocationKey)
                    .HasMaxLength(50)
                    .HasColumnName("Frieght_Forwarder_1___Location__Key_");

                entity.Property(e => e.FrieghtForwarder1StreetNameKey)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_1___Street_Name__Key_");

                entity.Property(e => e.FrieghtForwarder2)
                    .HasMaxLength(50)
                    .HasColumnName("Frieght_Forwarder_2");

                entity.Property(e => e.FrieghtForwarder2BasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_2___BAS___Street_2__Key_");

                entity.Property(e => e.FrieghtForwarder2BasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_2___BAS___Street_3__Key_");

                entity.Property(e => e.FrieghtForwarder2BasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_2___BAS___Street_4__Key_");

                entity.Property(e => e.FrieghtForwarder2CountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Frieght_Forwarder_2___Country__Text_");

                entity.Property(e => e.FrieghtForwarder2LocationKey)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_2___Location__Key_");

                entity.Property(e => e.FrieghtForwarder2StreetNameKey)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_2___Street_Name__Key_");

                entity.Property(e => e.FrieghtForwarder3)
                    .HasMaxLength(50)
                    .HasColumnName("Frieght_Forwarder_3");

                entity.Property(e => e.FrieghtForwarder3BasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_3___BAS___Street_2__Key_");

                entity.Property(e => e.FrieghtForwarder3BasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_3___BAS___Street_3__Key_");

                entity.Property(e => e.FrieghtForwarder3BasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_3___BAS___Street_4__Key_");

                entity.Property(e => e.FrieghtForwarder3CountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Frieght_Forwarder_3___Country__Text_");

                entity.Property(e => e.FrieghtForwarder3LocationKey)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_3___Location__Key_");

                entity.Property(e => e.FrieghtForwarder3StreetNameKey)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_3___Street_Name__Key_");

                entity.Property(e => e.GtsOverallStatus)
                    .HasMaxLength(50)
                    .HasColumnName("GTS_Overall__Status");

                entity.Property(e => e.Incoterms1)
                    .HasMaxLength(50)
                    .HasColumnName("Incoterms_1");

                entity.Property(e => e.Incoterms2)
                    .HasMaxLength(50)
                    .HasColumnName("Incoterms_2");

                entity.Property(e => e.LicenseForBlocked)
                    .HasMaxLength(50)
                    .HasColumnName("License_for_blocked");

                entity.Property(e => e.Material).HasMaxLength(50);

                entity.Property(e => e.MaterialEccnKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___ECCN__Key_");

                entity.Property(e => e.MaterialHtsKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___HTS__Key_");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___Key");

                entity.Property(e => e.MaterialMediumKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___Medium__Key_");

                entity.Property(e => e.MaterialPlantViewCountryOfOriginText)
                    .HasMaxLength(50)
                    .HasColumnName("Material_Plant_View___Country_of_Origin__Text_");

                entity.Property(e => e.Mit)
                    .HasMaxLength(50)
                    .HasColumnName("MIT");

                entity.Property(e => e.OrderType1)
                    .HasMaxLength(50)
                    .HasColumnName("Order_Type1");

                entity.Property(e => e.OrderType2)
                    .HasMaxLength(50)
                    .HasColumnName("Order_Type2");

                entity.Property(e => e.PayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("Payer___Key");

                entity.Property(e => e.PlantCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("Plant___Country__Key_");

                entity.Property(e => e.PlantKey)
                    .HasMaxLength(50)
                    .HasColumnName("Plant___Key");

                entity.Property(e => e.PlantMediumText)
                    .HasMaxLength(50)
                    .HasColumnName("Plant___Medium_Text");

                entity.Property(e => e.PurchaseOrderType)
                    .HasMaxLength(50)
                    .HasColumnName("Purchase_Order_Type");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("Quote_ID");

                entity.Property(e => e.ReasonCode)
                    .HasMaxLength(50)
                    .HasColumnName("Reason_Code");

                entity.Property(e => e.RtphStatus)
                    .HasMaxLength(50)
                    .HasColumnName("RTPH_status");

                entity.Property(e => e.SalesDocumentItemCategory)
                    .HasMaxLength(50)
                    .HasColumnName("Sales_Document_Item_Category");

                entity.Property(e => e.SalesOrderLineItem)
                    .HasMaxLength(50)
                    .HasColumnName("Sales_Order_Line_Item");

                entity.Property(e => e.SalesOrderNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Sales_Order_Number");

                entity.Property(e => e.SalesOrderScheduleLineNo)
                    .HasMaxLength(50)
                    .HasColumnName("Sales_Order_Schedule_Line_No");

                entity.Property(e => e.ScheduleLineDate)
                    .HasMaxLength(50)
                    .HasColumnName("Schedule_Line_Date");

                entity.Property(e => e.ShipToPartyBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_Party___BAS__Postal_Code__Key_");

                entity.Property(e => e.ShipToPartyBasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Party___BAS___Street_2__Key_");

                entity.Property(e => e.ShipToPartyBasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Party___BAS___Street_3__Key_");

                entity.Property(e => e.ShipToPartyBasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Party___BAS___Street_4__Key_");

                entity.Property(e => e.ShipToPartyBusinessPartnerKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_Party___Business_Partner__Key_");

                entity.Property(e => e.ShipToPartyCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_Party___Country__Text_");

                entity.Property(e => e.ShipToPartyLocationKey)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Party___Location__Key_");

                entity.Property(e => e.ShipToPartyNameKey)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Party___Name__Key_");

                entity.Property(e => e.ShipToPartyStreetNameKey)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Party___Street_Name__Key_");

                entity.Property(e => e.ShippingType)
                    .HasMaxLength(50)
                    .HasColumnName("Shipping_Type");

                entity.Property(e => e.SoldToPartyBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Sold_To_Party___BAS__Postal_Code__Key_");

                entity.Property(e => e.SoldToPartyBasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Party___BAS___Street_2__Key_");

                entity.Property(e => e.SoldToPartyBasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Party___BAS___Street_3__Key_");

                entity.Property(e => e.SoldToPartyBasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Party___BAS___Street_4__Key_");

                entity.Property(e => e.SoldToPartyBusinessPartnerKey)
                    .HasMaxLength(50)
                    .HasColumnName("Sold_To_Party___Business_Partner__Key_");

                entity.Property(e => e.SoldToPartyCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Sold_To_Party___Country__Text_");

                entity.Property(e => e.SoldToPartyLocationKey)
                    .HasMaxLength(50)
                    .HasColumnName("Sold_To_Party___Location__Key_");

                entity.Property(e => e.SoldToPartyNameKey)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Party___Name__Key_");

                entity.Property(e => e.SoldToPartyStreetNameKey)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Party___Street_Name__Key_");

                entity.Property(e => e.SplStatusAtTheLineLevel)
                    .HasMaxLength(50)
                    .HasColumnName("SPL__Status_at_the_Line_level");
            });

            modelBuilder.Entity<BookingsJunaug2018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("bookings_junaug2018", "dsf");

                entity.Property(e => e.BillToPartyBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___BAS__Postal_Code__Key_");

                entity.Property(e => e.BillToPartyBasStreet2Key)
                    .HasMaxLength(150)
                    .HasColumnName("Bill_To_Party___BAS___Street_2__Key_");

                entity.Property(e => e.BillToPartyBasStreet3Key)
                    .HasMaxLength(150)
                    .HasColumnName("Bill_To_Party___BAS___Street_3__Key_");

                entity.Property(e => e.BillToPartyBasStreet4Key)
                    .HasMaxLength(150)
                    .HasColumnName("Bill_To_Party___BAS___Street_4__Key_");

                entity.Property(e => e.BillToPartyBusinessPartnerKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___Business_Partner__Key_");

                entity.Property(e => e.BillToPartyCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___Country__Text_");

                entity.Property(e => e.BillToPartyLocationKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___Location__Key_");

                entity.Property(e => e.BillToPartyNameKey)
                    .HasMaxLength(150)
                    .HasColumnName("Bill_To_Party___Name__Key_");

                entity.Property(e => e.BillToPartyStreetNameKey)
                    .HasMaxLength(150)
                    .HasColumnName("Bill_To_Party___Street_Name__Key_");

                entity.Property(e => e.BookDate0createdon)
                    .HasMaxLength(50)
                    .HasColumnName("Book_Date__0CREATEDON_");

                entity.Property(e => e.BookingQuantity)
                    .HasMaxLength(50)
                    .HasColumnName("Booking_Quantity");

                entity.Property(e => e.BookingsNetValue)
                    .HasMaxLength(50)
                    .HasColumnName("Bookings_Net_Value");

                entity.Property(e => e.CompleteDelivery)
                    .HasMaxLength(50)
                    .HasColumnName("Complete_Delivery");

                entity.Property(e => e.Compliance).HasMaxLength(50);

                entity.Property(e => e.CustomerPoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Customer_PO_Number");

                entity.Property(e => e.DeliveryStatus)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Status");

                entity.Property(e => e.EmbargoStatusAtTheLineLevel)
                    .HasMaxLength(50)
                    .HasColumnName("Embargo_Status_at_the_line_level");

                entity.Property(e => e.EndUser).HasMaxLength(150);

                entity.Property(e => e.EndUserBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("EndUser___BAS__Postal_Code__Key_");

                entity.Property(e => e.EndUserBasStreet2Key)
                    .HasMaxLength(150)
                    .HasColumnName("EndUser___BAS___Street_2__Key_");

                entity.Property(e => e.EndUserBasStreet3Key)
                    .HasMaxLength(150)
                    .HasColumnName("EndUser___BAS___Street_3__Key_");

                entity.Property(e => e.EndUserBasStreet4Key)
                    .HasMaxLength(150)
                    .HasColumnName("EndUser___BAS___Street_4__Key_");

                entity.Property(e => e.EndUserCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("EndUser___Country__Key_");

                entity.Property(e => e.EndUserCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("EndUser___Country__Text_");

                entity.Property(e => e.EndUserKey)
                    .HasMaxLength(50)
                    .HasColumnName("EndUser___Key");

                entity.Property(e => e.EndUserLocationKey)
                    .HasMaxLength(50)
                    .HasColumnName("EndUser___Location__Key_");

                entity.Property(e => e.EndUserStreetNameKey)
                    .HasMaxLength(150)
                    .HasColumnName("EndUser___Street_Name__Key_");

                entity.Property(e => e.EstimatedTariff)
                    .HasMaxLength(50)
                    .HasColumnName("Estimated_Tariff");

                entity.Property(e => e.FrieghtForwarder1)
                    .HasMaxLength(150)
                    .HasColumnName("Frieght_Forwarder_1");

                entity.Property(e => e.FrieghtForwarder1BasStreet2Key)
                    .HasMaxLength(150)
                    .HasColumnName("Frieght_Forwarder_1___BAS___Street_2__Key_");

                entity.Property(e => e.FrieghtForwarder1BasStreet3Key)
                    .HasMaxLength(150)
                    .HasColumnName("Frieght_Forwarder_1___BAS___Street_3__Key_");

                entity.Property(e => e.FrieghtForwarder1BasStreet4Key)
                    .HasMaxLength(150)
                    .HasColumnName("Frieght_Forwarder_1___BAS___Street_4__Key_");

                entity.Property(e => e.FrieghtForwarder1CountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Frieght_Forwarder_1___Country__Text_");

                entity.Property(e => e.FrieghtForwarder1LocationKey)
                    .HasMaxLength(50)
                    .HasColumnName("Frieght_Forwarder_1___Location__Key_");

                entity.Property(e => e.FrieghtForwarder1StreetNameKey)
                    .HasMaxLength(150)
                    .HasColumnName("Frieght_Forwarder_1___Street_Name__Key_");

                entity.Property(e => e.FrieghtForwarder2)
                    .HasMaxLength(150)
                    .HasColumnName("Frieght_Forwarder_2");

                entity.Property(e => e.FrieghtForwarder2BasStreet2Key)
                    .HasMaxLength(150)
                    .HasColumnName("Frieght_Forwarder_2___BAS___Street_2__Key_");

                entity.Property(e => e.FrieghtForwarder2BasStreet3Key)
                    .HasMaxLength(150)
                    .HasColumnName("Frieght_Forwarder_2___BAS___Street_3__Key_");

                entity.Property(e => e.FrieghtForwarder2BasStreet4Key)
                    .HasMaxLength(150)
                    .HasColumnName("Frieght_Forwarder_2___BAS___Street_4__Key_");

                entity.Property(e => e.FrieghtForwarder2CountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Frieght_Forwarder_2___Country__Text_");

                entity.Property(e => e.FrieghtForwarder2LocationKey)
                    .HasMaxLength(50)
                    .HasColumnName("Frieght_Forwarder_2___Location__Key_");

                entity.Property(e => e.FrieghtForwarder2StreetNameKey)
                    .HasMaxLength(150)
                    .HasColumnName("Frieght_Forwarder_2___Street_Name__Key_");

                entity.Property(e => e.FrieghtForwarder3)
                    .HasMaxLength(50)
                    .HasColumnName("Frieght_Forwarder_3");

                entity.Property(e => e.FrieghtForwarder3BasStreet2Key)
                    .HasMaxLength(150)
                    .HasColumnName("Frieght_Forwarder_3___BAS___Street_2__Key_");

                entity.Property(e => e.FrieghtForwarder3BasStreet3Key)
                    .HasMaxLength(150)
                    .HasColumnName("Frieght_Forwarder_3___BAS___Street_3__Key_");

                entity.Property(e => e.FrieghtForwarder3BasStreet4Key)
                    .HasMaxLength(150)
                    .HasColumnName("Frieght_Forwarder_3___BAS___Street_4__Key_");

                entity.Property(e => e.FrieghtForwarder3CountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Frieght_Forwarder_3___Country__Text_");

                entity.Property(e => e.FrieghtForwarder3LocationKey)
                    .HasMaxLength(50)
                    .HasColumnName("Frieght_Forwarder_3___Location__Key_");

                entity.Property(e => e.FrieghtForwarder3StreetNameKey)
                    .HasMaxLength(150)
                    .HasColumnName("Frieght_Forwarder_3___Street_Name__Key_");

                entity.Property(e => e.GtsOverallStatus)
                    .HasMaxLength(50)
                    .HasColumnName("GTS_Overall__Status");

                entity.Property(e => e.ImportValue)
                    .HasMaxLength(50)
                    .HasColumnName("Import_Value");

                entity.Property(e => e.Incoterms1)
                    .HasMaxLength(50)
                    .HasColumnName("Incoterms_1");

                entity.Property(e => e.Incoterms2)
                    .HasMaxLength(50)
                    .HasColumnName("Incoterms_2");

                entity.Property(e => e.LicenseForBlocked)
                    .HasMaxLength(50)
                    .HasColumnName("License_for_blocked");

                entity.Property(e => e.Material).HasMaxLength(50);

                entity.Property(e => e.MaterialEccnKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___ECCN__Key_");

                entity.Property(e => e.MaterialHtsKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___HTS__Key_");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___Key");

                entity.Property(e => e.MaterialMediumKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___Medium__Key_");

                entity.Property(e => e.MaterialOverLengthPartNumKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___Over_Length_Part_Num__Key_");

                entity.Property(e => e.MaterialPlantViewCountryOfOriginText)
                    .HasMaxLength(50)
                    .HasColumnName("Material_Plant_View___Country_of_Origin__Text_");

                entity.Property(e => e.Mit)
                    .HasMaxLength(50)
                    .HasColumnName("MIT");

                entity.Property(e => e.OrderType1)
                    .HasMaxLength(50)
                    .HasColumnName("Order_Type1");

                entity.Property(e => e.OrderType2)
                    .HasMaxLength(50)
                    .HasColumnName("Order_Type2");

                entity.Property(e => e.PayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("Payer___Key");

                entity.Property(e => e.PlantCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("Plant___Country__Key_");

                entity.Property(e => e.PlantKey)
                    .HasMaxLength(50)
                    .HasColumnName("Plant___Key");

                entity.Property(e => e.PlantMediumText)
                    .HasMaxLength(150)
                    .HasColumnName("Plant___Medium_Text");

                entity.Property(e => e.PurchaseOrderType)
                    .HasMaxLength(50)
                    .HasColumnName("Purchase_Order_Type");

                entity.Property(e => e.ReasonCode)
                    .HasMaxLength(50)
                    .HasColumnName("Reason_Code");

                entity.Property(e => e.RtphStatus)
                    .HasMaxLength(50)
                    .HasColumnName("RTPH_status");

                entity.Property(e => e.SalesDocumentItemCategory)
                    .HasMaxLength(50)
                    .HasColumnName("Sales_Document_Item_Category");

                entity.Property(e => e.SalesOrderLineItem)
                    .HasMaxLength(50)
                    .HasColumnName("Sales_Order_Line_Item");

                entity.Property(e => e.SalesOrderNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Sales_Order_Number");

                entity.Property(e => e.SalesOrderScheduleLineNo)
                    .HasMaxLength(50)
                    .HasColumnName("Sales_Order_Schedule_Line_No");

                entity.Property(e => e.ScheduleLineDate)
                    .HasMaxLength(50)
                    .HasColumnName("Schedule_Line_Date");

                entity.Property(e => e.ShipToPartyBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_Party___BAS__Postal_Code__Key_");

                entity.Property(e => e.ShipToPartyBasStreet2Key)
                    .HasMaxLength(150)
                    .HasColumnName("Ship_To_Party___BAS___Street_2__Key_");

                entity.Property(e => e.ShipToPartyBasStreet3Key)
                    .HasMaxLength(150)
                    .HasColumnName("Ship_To_Party___BAS___Street_3__Key_");

                entity.Property(e => e.ShipToPartyBasStreet4Key)
                    .HasMaxLength(150)
                    .HasColumnName("Ship_To_Party___BAS___Street_4__Key_");

                entity.Property(e => e.ShipToPartyBusinessPartnerKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_Party___Business_Partner__Key_");

                entity.Property(e => e.ShipToPartyCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_Party___Country__Text_");

                entity.Property(e => e.ShipToPartyLocationKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_Party___Location__Key_");

                entity.Property(e => e.ShipToPartyNameKey)
                    .HasMaxLength(150)
                    .HasColumnName("Ship_To_Party___Name__Key_");

                entity.Property(e => e.ShipToPartyStreetNameKey)
                    .HasMaxLength(150)
                    .HasColumnName("Ship_To_Party___Street_Name__Key_");

                entity.Property(e => e.ShippingType)
                    .HasMaxLength(50)
                    .HasColumnName("Shipping_Type");

                entity.Property(e => e.SoldToPartyBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Sold_To_Party___BAS__Postal_Code__Key_");

                entity.Property(e => e.SoldToPartyBasStreet2Key)
                    .HasMaxLength(150)
                    .HasColumnName("Sold_To_Party___BAS___Street_2__Key_");

                entity.Property(e => e.SoldToPartyBasStreet3Key)
                    .HasMaxLength(150)
                    .HasColumnName("Sold_To_Party___BAS___Street_3__Key_");

                entity.Property(e => e.SoldToPartyBasStreet4Key)
                    .HasMaxLength(150)
                    .HasColumnName("Sold_To_Party___BAS___Street_4__Key_");

                entity.Property(e => e.SoldToPartyBusinessPartnerKey)
                    .HasMaxLength(50)
                    .HasColumnName("Sold_To_Party___Business_Partner__Key_");

                entity.Property(e => e.SoldToPartyCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Sold_To_Party___Country__Text_");

                entity.Property(e => e.SoldToPartyLocationKey)
                    .HasMaxLength(50)
                    .HasColumnName("Sold_To_Party___Location__Key_");

                entity.Property(e => e.SoldToPartyNameKey)
                    .HasMaxLength(150)
                    .HasColumnName("Sold_To_Party___Name__Key_");

                entity.Property(e => e.SoldToPartyStreetNameKey)
                    .HasMaxLength(150)
                    .HasColumnName("Sold_To_Party___Street_Name__Key_");

                entity.Property(e => e.SplStatusAtTheLineLevel)
                    .HasMaxLength(50)
                    .HasColumnName("SPL__Status_at_the_Line_level");

                entity.Property(e => e.UsImportTaxIndicator)
                    .HasMaxLength(50)
                    .HasColumnName("US_Import_Tax_Indicator");
            });

            modelBuilder.Entity<BookingsMar2018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("bookings_mar2018", "dsf");

                entity.Property(e => e.BillToPartyBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___BAS__Postal_Code__Key_");

                entity.Property(e => e.BillToPartyBasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party___BAS___Street_2__Key_");

                entity.Property(e => e.BillToPartyBasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party___BAS___Street_3__Key_");

                entity.Property(e => e.BillToPartyBasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party___BAS___Street_4__Key_");

                entity.Property(e => e.BillToPartyBusinessPartnerKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___Business_Partner__Key_");

                entity.Property(e => e.BillToPartyCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___Country__Text_");

                entity.Property(e => e.BillToPartyLocationKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___Location__Key_");

                entity.Property(e => e.BillToPartyNameKey)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party___Name__Key_");

                entity.Property(e => e.BillToPartyStreetNameKey)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party___Street_Name__Key_");

                entity.Property(e => e.BookDate0createdon)
                    .HasMaxLength(50)
                    .HasColumnName("Book_Date__0CREATEDON_");

                entity.Property(e => e.BookingQuantity)
                    .HasMaxLength(50)
                    .HasColumnName("Booking_Quantity");

                entity.Property(e => e.BookingsNetValue)
                    .HasMaxLength(50)
                    .HasColumnName("Bookings_Net_Value");

                entity.Property(e => e.CompleteDelivery)
                    .HasMaxLength(50)
                    .HasColumnName("Complete_Delivery");

                entity.Property(e => e.Compliance).HasMaxLength(50);

                entity.Property(e => e.CustomerPoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Customer_PO_Number");

                entity.Property(e => e.DeliveryStatus)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Status");

                entity.Property(e => e.EmbargoStatusAtTheLineLevel)
                    .HasMaxLength(50)
                    .HasColumnName("Embargo_Status_at_the_line_level");

                entity.Property(e => e.EndUser).HasMaxLength(250);

                entity.Property(e => e.EndUserBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("EndUser___BAS__Postal_Code__Key_");

                entity.Property(e => e.EndUserBasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("EndUser___BAS___Street_2__Key_");

                entity.Property(e => e.EndUserBasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("EndUser___BAS___Street_3__Key_");

                entity.Property(e => e.EndUserBasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("EndUser___BAS___Street_4__Key_");

                entity.Property(e => e.EndUserCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("EndUser___Country__Key_");

                entity.Property(e => e.EndUserCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("EndUser___Country__Text_");

                entity.Property(e => e.EndUserKey)
                    .HasMaxLength(50)
                    .HasColumnName("EndUser___Key");

                entity.Property(e => e.EndUserLocationKey)
                    .HasMaxLength(50)
                    .HasColumnName("EndUser___Location__Key_");

                entity.Property(e => e.EndUserStreetNameKey)
                    .HasMaxLength(250)
                    .HasColumnName("EndUser___Street_Name__Key_");

                entity.Property(e => e.FrieghtForwarder1)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_1");

                entity.Property(e => e.FrieghtForwarder1BasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_1___BAS___Street_2__Key_");

                entity.Property(e => e.FrieghtForwarder1BasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_1___BAS___Street_3__Key_");

                entity.Property(e => e.FrieghtForwarder1BasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_1___BAS___Street_4__Key_");

                entity.Property(e => e.FrieghtForwarder1CountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Frieght_Forwarder_1___Country__Text_");

                entity.Property(e => e.FrieghtForwarder1LocationKey)
                    .HasMaxLength(50)
                    .HasColumnName("Frieght_Forwarder_1___Location__Key_");

                entity.Property(e => e.FrieghtForwarder1StreetNameKey)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_1___Street_Name__Key_");

                entity.Property(e => e.FrieghtForwarder2)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_2");

                entity.Property(e => e.FrieghtForwarder2BasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_2___BAS___Street_2__Key_");

                entity.Property(e => e.FrieghtForwarder2BasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_2___BAS___Street_3__Key_");

                entity.Property(e => e.FrieghtForwarder2BasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_2___BAS___Street_4__Key_");

                entity.Property(e => e.FrieghtForwarder2CountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Frieght_Forwarder_2___Country__Text_");

                entity.Property(e => e.FrieghtForwarder2LocationKey)
                    .HasMaxLength(50)
                    .HasColumnName("Frieght_Forwarder_2___Location__Key_");

                entity.Property(e => e.FrieghtForwarder2StreetNameKey)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_2___Street_Name__Key_");

                entity.Property(e => e.FrieghtForwarder3)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_3");

                entity.Property(e => e.FrieghtForwarder3BasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_3___BAS___Street_2__Key_");

                entity.Property(e => e.FrieghtForwarder3BasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_3___BAS___Street_3__Key_");

                entity.Property(e => e.FrieghtForwarder3BasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_3___BAS___Street_4__Key_");

                entity.Property(e => e.FrieghtForwarder3CountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Frieght_Forwarder_3___Country__Text_");

                entity.Property(e => e.FrieghtForwarder3LocationKey)
                    .HasMaxLength(50)
                    .HasColumnName("Frieght_Forwarder_3___Location__Key_");

                entity.Property(e => e.FrieghtForwarder3StreetNameKey)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_3___Street_Name__Key_");

                entity.Property(e => e.GtsOverallStatus)
                    .HasMaxLength(50)
                    .HasColumnName("GTS_Overall__Status");

                entity.Property(e => e.Incoterms1)
                    .HasMaxLength(50)
                    .HasColumnName("Incoterms_1");

                entity.Property(e => e.Incoterms2)
                    .HasMaxLength(50)
                    .HasColumnName("Incoterms_2");

                entity.Property(e => e.LicenseForBlocked)
                    .HasMaxLength(50)
                    .HasColumnName("License_for_blocked");

                entity.Property(e => e.Material).HasMaxLength(50);

                entity.Property(e => e.MaterialEccnKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___ECCN__Key_");

                entity.Property(e => e.MaterialHtsKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___HTS__Key_");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___Key");

                entity.Property(e => e.MaterialMediumKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___Medium__Key_");

                entity.Property(e => e.MaterialPlantViewCountryOfOriginText)
                    .HasMaxLength(50)
                    .HasColumnName("Material_Plant_View___Country_of_Origin__Text_");

                entity.Property(e => e.Mit)
                    .HasMaxLength(50)
                    .HasColumnName("MIT");

                entity.Property(e => e.OrderType1)
                    .HasMaxLength(50)
                    .HasColumnName("Order_Type1");

                entity.Property(e => e.OrderType2)
                    .HasMaxLength(50)
                    .HasColumnName("Order_Type2");

                entity.Property(e => e.PayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("Payer___Key");

                entity.Property(e => e.PlantCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("Plant___Country__Key_");

                entity.Property(e => e.PlantKey)
                    .HasMaxLength(50)
                    .HasColumnName("Plant___Key");

                entity.Property(e => e.PlantMediumText)
                    .HasMaxLength(50)
                    .HasColumnName("Plant___Medium_Text");

                entity.Property(e => e.PurchaseOrderType)
                    .HasMaxLength(50)
                    .HasColumnName("Purchase_Order_Type");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("Quote_ID");

                entity.Property(e => e.ReasonCode)
                    .HasMaxLength(50)
                    .HasColumnName("Reason_Code");

                entity.Property(e => e.RtphStatus)
                    .HasMaxLength(50)
                    .HasColumnName("RTPH_status");

                entity.Property(e => e.SalesDocumentItemCategory)
                    .HasMaxLength(50)
                    .HasColumnName("Sales_Document_Item_Category");

                entity.Property(e => e.SalesOrderLineItem)
                    .HasMaxLength(50)
                    .HasColumnName("Sales_Order_Line_Item");

                entity.Property(e => e.SalesOrderNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Sales_Order_Number");

                entity.Property(e => e.SalesOrderScheduleLineNo)
                    .HasMaxLength(50)
                    .HasColumnName("Sales_Order_Schedule_Line_No");

                entity.Property(e => e.ScheduleLineDate)
                    .HasMaxLength(50)
                    .HasColumnName("Schedule_Line_Date");

                entity.Property(e => e.ShipToPartyBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_Party___BAS__Postal_Code__Key_");

                entity.Property(e => e.ShipToPartyBasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Party___BAS___Street_2__Key_");

                entity.Property(e => e.ShipToPartyBasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Party___BAS___Street_3__Key_");

                entity.Property(e => e.ShipToPartyBasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Party___BAS___Street_4__Key_");

                entity.Property(e => e.ShipToPartyBusinessPartnerKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_Party___Business_Partner__Key_");

                entity.Property(e => e.ShipToPartyCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_Party___Country__Text_");

                entity.Property(e => e.ShipToPartyLocationKey)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Party___Location__Key_");

                entity.Property(e => e.ShipToPartyNameKey)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Party___Name__Key_");

                entity.Property(e => e.ShipToPartyStreetNameKey)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Party___Street_Name__Key_");

                entity.Property(e => e.ShippingType)
                    .HasMaxLength(50)
                    .HasColumnName("Shipping_Type");

                entity.Property(e => e.SoldToPartyBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Sold_To_Party___BAS__Postal_Code__Key_");

                entity.Property(e => e.SoldToPartyBasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Party___BAS___Street_2__Key_");

                entity.Property(e => e.SoldToPartyBasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Party___BAS___Street_3__Key_");

                entity.Property(e => e.SoldToPartyBasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Party___BAS___Street_4__Key_");

                entity.Property(e => e.SoldToPartyBusinessPartnerKey)
                    .HasMaxLength(50)
                    .HasColumnName("Sold_To_Party___Business_Partner__Key_");

                entity.Property(e => e.SoldToPartyCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Sold_To_Party___Country__Text_");

                entity.Property(e => e.SoldToPartyLocationKey)
                    .HasMaxLength(50)
                    .HasColumnName("Sold_To_Party___Location__Key_");

                entity.Property(e => e.SoldToPartyNameKey)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Party___Name__Key_");

                entity.Property(e => e.SoldToPartyStreetNameKey)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Party___Street_Name__Key_");

                entity.Property(e => e.SplStatusAtTheLineLevel)
                    .HasMaxLength(50)
                    .HasColumnName("SPL__Status_at_the_Line_level");
            });

            modelBuilder.Entity<BookingsMay2018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("bookings_may2018", "dsf");

                entity.Property(e => e.BillToPartyBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___BAS__Postal_Code__Key_");

                entity.Property(e => e.BillToPartyBasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party___BAS___Street_2__Key_");

                entity.Property(e => e.BillToPartyBasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party___BAS___Street_3__Key_");

                entity.Property(e => e.BillToPartyBasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party___BAS___Street_4__Key_");

                entity.Property(e => e.BillToPartyBusinessPartnerKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___Business_Partner__Key_");

                entity.Property(e => e.BillToPartyCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___Country__Text_");

                entity.Property(e => e.BillToPartyLocationKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___Location__Key_");

                entity.Property(e => e.BillToPartyNameKey)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party___Name__Key_");

                entity.Property(e => e.BillToPartyStreetNameKey)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party___Street_Name__Key_");

                entity.Property(e => e.BookDate0createdon)
                    .HasMaxLength(50)
                    .HasColumnName("Book_Date__0CREATEDON_");

                entity.Property(e => e.BookingQuantity)
                    .HasMaxLength(50)
                    .HasColumnName("Booking_Quantity");

                entity.Property(e => e.BookingsNetValue)
                    .HasMaxLength(50)
                    .HasColumnName("Bookings_Net_Value");

                entity.Property(e => e.CompleteDelivery)
                    .HasMaxLength(50)
                    .HasColumnName("Complete_Delivery");

                entity.Property(e => e.Compliance).HasMaxLength(50);

                entity.Property(e => e.CustomerPoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Customer_PO_Number");

                entity.Property(e => e.DeliveryStatus)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Status");

                entity.Property(e => e.EmbargoStatusAtTheLineLevel)
                    .HasMaxLength(50)
                    .HasColumnName("Embargo_Status_at_the_line_level");

                entity.Property(e => e.EndUser).HasMaxLength(250);

                entity.Property(e => e.EndUserBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("EndUser___BAS__Postal_Code__Key_");

                entity.Property(e => e.EndUserBasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("EndUser___BAS___Street_2__Key_");

                entity.Property(e => e.EndUserBasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("EndUser___BAS___Street_3__Key_");

                entity.Property(e => e.EndUserBasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("EndUser___BAS___Street_4__Key_");

                entity.Property(e => e.EndUserCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("EndUser___Country__Key_");

                entity.Property(e => e.EndUserCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("EndUser___Country__Text_");

                entity.Property(e => e.EndUserKey)
                    .HasMaxLength(50)
                    .HasColumnName("EndUser___Key");

                entity.Property(e => e.EndUserLocationKey)
                    .HasMaxLength(250)
                    .HasColumnName("EndUser___Location__Key_");

                entity.Property(e => e.EndUserStreetNameKey)
                    .HasMaxLength(250)
                    .HasColumnName("EndUser___Street_Name__Key_");

                entity.Property(e => e.FrieghtForwarder1)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_1");

                entity.Property(e => e.FrieghtForwarder1BasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_1___BAS___Street_2__Key_");

                entity.Property(e => e.FrieghtForwarder1BasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_1___BAS___Street_3__Key_");

                entity.Property(e => e.FrieghtForwarder1BasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_1___BAS___Street_4__Key_");

                entity.Property(e => e.FrieghtForwarder1CountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Frieght_Forwarder_1___Country__Text_");

                entity.Property(e => e.FrieghtForwarder1LocationKey)
                    .HasMaxLength(50)
                    .HasColumnName("Frieght_Forwarder_1___Location__Key_");

                entity.Property(e => e.FrieghtForwarder1StreetNameKey)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_1___Street_Name__Key_");

                entity.Property(e => e.FrieghtForwarder2)
                    .HasMaxLength(50)
                    .HasColumnName("Frieght_Forwarder_2");

                entity.Property(e => e.FrieghtForwarder2BasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_2___BAS___Street_2__Key_");

                entity.Property(e => e.FrieghtForwarder2BasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_2___BAS___Street_3__Key_");

                entity.Property(e => e.FrieghtForwarder2BasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_2___BAS___Street_4__Key_");

                entity.Property(e => e.FrieghtForwarder2CountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Frieght_Forwarder_2___Country__Text_");

                entity.Property(e => e.FrieghtForwarder2LocationKey)
                    .HasMaxLength(50)
                    .HasColumnName("Frieght_Forwarder_2___Location__Key_");

                entity.Property(e => e.FrieghtForwarder2StreetNameKey)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_2___Street_Name__Key_");

                entity.Property(e => e.FrieghtForwarder3)
                    .HasMaxLength(50)
                    .HasColumnName("Frieght_Forwarder_3");

                entity.Property(e => e.FrieghtForwarder3BasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_3___BAS___Street_2__Key_");

                entity.Property(e => e.FrieghtForwarder3BasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_3___BAS___Street_3__Key_");

                entity.Property(e => e.FrieghtForwarder3BasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_3___BAS___Street_4__Key_");

                entity.Property(e => e.FrieghtForwarder3CountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Frieght_Forwarder_3___Country__Text_");

                entity.Property(e => e.FrieghtForwarder3LocationKey)
                    .HasMaxLength(50)
                    .HasColumnName("Frieght_Forwarder_3___Location__Key_");

                entity.Property(e => e.FrieghtForwarder3StreetNameKey)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght_Forwarder_3___Street_Name__Key_");

                entity.Property(e => e.GtsOverallStatus)
                    .HasMaxLength(50)
                    .HasColumnName("GTS_Overall__Status");

                entity.Property(e => e.Incoterms1)
                    .HasMaxLength(50)
                    .HasColumnName("Incoterms_1");

                entity.Property(e => e.Incoterms2)
                    .HasMaxLength(50)
                    .HasColumnName("Incoterms_2");

                entity.Property(e => e.LicenseForBlocked)
                    .HasMaxLength(50)
                    .HasColumnName("License_for_blocked");

                entity.Property(e => e.Material).HasMaxLength(50);

                entity.Property(e => e.MaterialEccnKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___ECCN__Key_");

                entity.Property(e => e.MaterialHtsKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___HTS__Key_");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___Key");

                entity.Property(e => e.MaterialMediumKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___Medium__Key_");

                entity.Property(e => e.MaterialPlantViewCountryOfOriginText)
                    .HasMaxLength(50)
                    .HasColumnName("Material_Plant_View___Country_of_Origin__Text_");

                entity.Property(e => e.Mit)
                    .HasMaxLength(50)
                    .HasColumnName("MIT");

                entity.Property(e => e.OrderType1)
                    .HasMaxLength(50)
                    .HasColumnName("Order_Type1");

                entity.Property(e => e.OrderType2)
                    .HasMaxLength(50)
                    .HasColumnName("Order_Type2");

                entity.Property(e => e.PayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("Payer___Key");

                entity.Property(e => e.PlantCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("Plant___Country__Key_");

                entity.Property(e => e.PlantKey)
                    .HasMaxLength(50)
                    .HasColumnName("Plant___Key");

                entity.Property(e => e.PlantMediumText)
                    .HasMaxLength(50)
                    .HasColumnName("Plant___Medium_Text");

                entity.Property(e => e.PurchaseOrderType)
                    .HasMaxLength(50)
                    .HasColumnName("Purchase_Order_Type");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("Quote_ID");

                entity.Property(e => e.ReasonCode)
                    .HasMaxLength(50)
                    .HasColumnName("Reason_Code");

                entity.Property(e => e.RtphStatus)
                    .HasMaxLength(50)
                    .HasColumnName("RTPH_status");

                entity.Property(e => e.SalesDocumentItemCategory)
                    .HasMaxLength(50)
                    .HasColumnName("Sales_Document_Item_Category");

                entity.Property(e => e.SalesOrderLineItem)
                    .HasMaxLength(50)
                    .HasColumnName("Sales_Order_Line_Item");

                entity.Property(e => e.SalesOrderNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Sales_Order_Number");

                entity.Property(e => e.SalesOrderScheduleLineNo)
                    .HasMaxLength(50)
                    .HasColumnName("Sales_Order_Schedule_Line_No");

                entity.Property(e => e.ScheduleLineDate)
                    .HasMaxLength(50)
                    .HasColumnName("Schedule_Line_Date");

                entity.Property(e => e.ShipToPartyBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_Party___BAS__Postal_Code__Key_");

                entity.Property(e => e.ShipToPartyBasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Party___BAS___Street_2__Key_");

                entity.Property(e => e.ShipToPartyBasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Party___BAS___Street_3__Key_");

                entity.Property(e => e.ShipToPartyBasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Party___BAS___Street_4__Key_");

                entity.Property(e => e.ShipToPartyBusinessPartnerKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_Party___Business_Partner__Key_");

                entity.Property(e => e.ShipToPartyCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_Party___Country__Text_");

                entity.Property(e => e.ShipToPartyLocationKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_Party___Location__Key_");

                entity.Property(e => e.ShipToPartyNameKey)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Party___Name__Key_");

                entity.Property(e => e.ShipToPartyStreetNameKey)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Party___Street_Name__Key_");

                entity.Property(e => e.ShippingType)
                    .HasMaxLength(50)
                    .HasColumnName("Shipping_Type");

                entity.Property(e => e.SoldToPartyBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Sold_To_Party___BAS__Postal_Code__Key_");

                entity.Property(e => e.SoldToPartyBasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Party___BAS___Street_2__Key_");

                entity.Property(e => e.SoldToPartyBasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Party___BAS___Street_3__Key_");

                entity.Property(e => e.SoldToPartyBasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Party___BAS___Street_4__Key_");

                entity.Property(e => e.SoldToPartyBusinessPartnerKey)
                    .HasMaxLength(50)
                    .HasColumnName("Sold_To_Party___Business_Partner__Key_");

                entity.Property(e => e.SoldToPartyCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Sold_To_Party___Country__Text_");

                entity.Property(e => e.SoldToPartyLocationKey)
                    .HasMaxLength(50)
                    .HasColumnName("Sold_To_Party___Location__Key_");

                entity.Property(e => e.SoldToPartyNameKey)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Party___Name__Key_");

                entity.Property(e => e.SoldToPartyStreetNameKey)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Party___Street_Name__Key_");

                entity.Property(e => e.SplStatusAtTheLineLevel)
                    .HasMaxLength(50)
                    .HasColumnName("SPL__Status_at_the_Line_level");
            });

            modelBuilder.Entity<BookingsMetaVw>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("bookings_meta_vw");

                entity.Property(e => e.BilltoCountry)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("billto_country");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoLoc)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("billto_loc");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("billto_name");

                entity.Property(e => e.BilltoPostalCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("billto_postal_code");

                entity.Property(e => e.BilltoStreet1)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("billto_street1");

                entity.Property(e => e.BilltoStreet2)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("billto_street2");

                entity.Property(e => e.BilltoStreet3)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("billto_street3");

                entity.Property(e => e.BilltoStreet4)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("billto_street4");

                entity.Property(e => e.BookedDate)
                    .HasColumnType("date")
                    .HasColumnName("booked_date");

                entity.Property(e => e.BookingNetValue).HasColumnName("booking_net_value");

                entity.Property(e => e.BookingQty).HasColumnName("booking_qty");

                entity.Property(e => e.CompleteDelivery)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("complete_delivery");

                entity.Property(e => e.Compliance)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("compliance");

                entity.Property(e => e.CustomerPo)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("customer_po");

                entity.Property(e => e.DeliveryStatus)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("delivery_status");

                entity.Property(e => e.EmbargoLineStatus)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("embargo_line_status");

                entity.Property(e => e.EndUser)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("end_user");

                entity.Property(e => e.EndUserCountry)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("end_user_country");

                entity.Property(e => e.EndUserCountryCode)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("end_user_country_code");

                entity.Property(e => e.EndUserKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("end_user_key");

                entity.Property(e => e.EndUserLocation)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("end_user_location");

                entity.Property(e => e.EndUserPostalCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("end_user_postal_code");

                entity.Property(e => e.EndUserStreet1)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("end_user_street1");

                entity.Property(e => e.EndUserStreet2)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("end_user_street2");

                entity.Property(e => e.EndUserStreet3)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("end_user_street3");

                entity.Property(e => e.EndUserStreet4)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("end_user_street4");

                entity.Property(e => e.FrieghtForwarder1)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder1");

                entity.Property(e => e.FrieghtForwarder1Country)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder1_country");

                entity.Property(e => e.FrieghtForwarder1Loc)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder1_loc");

                entity.Property(e => e.FrieghtForwarder1Street1)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder1_street1");

                entity.Property(e => e.FrieghtForwarder1Street2)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder1_street2");

                entity.Property(e => e.FrieghtForwarder1Street3)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder1_street3");

                entity.Property(e => e.FrieghtForwarder1Street4)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder1_street4");

                entity.Property(e => e.FrieghtForwarder2)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder2");

                entity.Property(e => e.FrieghtForwarder2Country)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder2_country");

                entity.Property(e => e.FrieghtForwarder2Loc)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder2_loc");

                entity.Property(e => e.FrieghtForwarder2Street1)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder2_street1");

                entity.Property(e => e.FrieghtForwarder2Street2)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder2_street2");

                entity.Property(e => e.FrieghtForwarder2Street3)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder2_street3");

                entity.Property(e => e.FrieghtForwarder2Street4)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder2_street4");

                entity.Property(e => e.FrieghtForwarder3)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder3");

                entity.Property(e => e.FrieghtForwarder3Country)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder3_country");

                entity.Property(e => e.FrieghtForwarder3Loc)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder3_loc");

                entity.Property(e => e.FrieghtForwarder3Street1)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder3_street1");

                entity.Property(e => e.FrieghtForwarder3Street2)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder3_street2");

                entity.Property(e => e.FrieghtForwarder3Street3)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder3_street3");

                entity.Property(e => e.FrieghtForwarder3Street4)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder3_street4");

                entity.Property(e => e.GtsOverallStatus)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("gts_overall_status");

                entity.Property(e => e.ImportDate)
                    .HasColumnType("datetime")
                    .HasColumnName("import_date");

                entity.Property(e => e.ImportId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("import_id");

                entity.Property(e => e.ImportStatus)
                    .HasMaxLength(255)
                    .HasColumnName("import_status");

                entity.Property(e => e.Incoterms1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("incoterms1");

                entity.Property(e => e.Incoterms2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("incoterms2");

                entity.Property(e => e.LicenseBlocked)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("license_blocked");

                entity.Property(e => e.Material)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("material");

                entity.Property(e => e.MaterialEccn)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("material_eccn");

                entity.Property(e => e.MaterialHts)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("material_hts");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("material_key");

                entity.Property(e => e.MaterialMedium)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("material_medium");

                entity.Property(e => e.MaterialPlantCountryOrig)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("material_plant_country_orig");

                entity.Property(e => e.Mit)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("mit");

                entity.Property(e => e.Payer)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("payer");

                entity.Property(e => e.PlantCountryCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("plant_country_code");

                entity.Property(e => e.PlantKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("plant_key");

                entity.Property(e => e.PlantMedium)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("plant_medium");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("po_type");

                entity.Property(e => e.ResasonCode)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("resason_code");

                entity.Property(e => e.RtphStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("rtph_status");

                entity.Property(e => e.SalesDocItemCat)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("sales_doc_item_cat");

                entity.Property(e => e.ScheduleLineDate)
                    .HasColumnType("date")
                    .HasColumnName("schedule_line_date");

                entity.Property(e => e.ShippingNote)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("shipping_note");

                entity.Property(e => e.ShippingType)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("shipping_type");

                entity.Property(e => e.ShiptoCountry)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("shipto_country");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShiptoLoc)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("shipto_loc");

                entity.Property(e => e.ShiptoName)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("shipto_name");

                entity.Property(e => e.ShiptoPostalCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("shipto_postal_code");

                entity.Property(e => e.ShiptoStreet1)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street1");

                entity.Property(e => e.ShiptoStreet2)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street2");

                entity.Property(e => e.ShiptoStreet3)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street3");

                entity.Property(e => e.ShiptoStreet4)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street4");

                entity.Property(e => e.SoLineNum).HasColumnName("so_line_num");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoSchedLineNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("so_sched_line_no");

                entity.Property(e => e.SoType)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoTypeKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("so_type_key");

                entity.Property(e => e.SoldtoCountry)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("soldto_country");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoLoc)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("soldto_loc");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SoldtoPostalCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("soldto_postal_code");

                entity.Property(e => e.SoldtoStreet1)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("soldto_street1");

                entity.Property(e => e.SoldtoStreet2)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("soldto_street2");

                entity.Property(e => e.SoldtoStreet3)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("soldto_street3");

                entity.Property(e => e.SoldtoStreet4)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("soldto_street4");

                entity.Property(e => e.SplLineStatus)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("spl_line_status");
            });

            modelBuilder.Entity<BookingsPartyInfo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("bookings_party_info", "dev");

                entity.Property(e => e.City)
                    .HasMaxLength(255)
                    .HasColumnName("city");

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(20)
                    .HasColumnName("country_code");

                entity.Property(e => e.CountryName)
                    .HasMaxLength(250)
                    .HasColumnName("country_name");

                entity.Property(e => e.NameConc)
                    .HasMaxLength(500)
                    .HasColumnName("name_conc");

                entity.Property(e => e.PartyKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("party_key");

                entity.Property(e => e.Region)
                    .HasMaxLength(50)
                    .HasColumnName("region");
            });

            modelBuilder.Entity<BookingsPartyInfo1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("bookings_party_info1", "dev");

                entity.Property(e => e.City)
                    .HasMaxLength(255)
                    .HasColumnName("city");

                entity.Property(e => e.CountryName)
                    .HasMaxLength(250)
                    .HasColumnName("country_name");

                entity.Property(e => e.NameConc)
                    .HasMaxLength(500)
                    .HasColumnName("name_conc");

                entity.Property(e => e.PartyKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("party_key");

                entity.Property(e => e.Region)
                    .HasMaxLength(50)
                    .HasColumnName("region");

                entity.Property(e => e.StreetConc)
                    .HasMaxLength(1000)
                    .HasColumnName("street_conc");
            });

            modelBuilder.Entity<BookingsPartyKey>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("bookings_party_keys", "dev");

                entity.Property(e => e.PartyKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("party_key");
            });

            modelBuilder.Entity<BookingsQ42017>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Bookings_Q42017", "dsf");

                entity.Property(e => e.BillToPartyBasPostalCodeKey)
                    .HasMaxLength(250)
                    .HasColumnName("Bill To Party - BAS  Postal Code (Key)");

                entity.Property(e => e.BillToPartyBasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Bill To Party - BAS   Street 2 (Key)");

                entity.Property(e => e.BillToPartyBasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Bill To Party - BAS   Street 3 (Key)");

                entity.Property(e => e.BillToPartyBasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Bill To Party - BAS   Street 4 (Key)");

                entity.Property(e => e.BillToPartyBusinessPartnerKey)
                    .HasMaxLength(250)
                    .HasColumnName("Bill To Party - Business Partner (Key)");

                entity.Property(e => e.BillToPartyCountryText)
                    .HasMaxLength(250)
                    .HasColumnName("Bill To Party - Country (Text)");

                entity.Property(e => e.BillToPartyLocationKey)
                    .HasMaxLength(250)
                    .HasColumnName("Bill To Party - Location (Key)");

                entity.Property(e => e.BillToPartyNameKey)
                    .HasMaxLength(250)
                    .HasColumnName("Bill To Party - Name (Key)");

                entity.Property(e => e.BillToPartyStreetNameKey)
                    .HasMaxLength(250)
                    .HasColumnName("Bill To Party - Street Name (Key)");

                entity.Property(e => e.BookDate)
                    .HasMaxLength(250)
                    .HasColumnName("Book Date");

                entity.Property(e => e.BookingQuantity)
                    .HasMaxLength(250)
                    .HasColumnName("Booking Quantity");

                entity.Property(e => e.BookingsNetValue)
                    .HasMaxLength(250)
                    .HasColumnName("Bookings Net Value");

                entity.Property(e => e.CompleteDelivery)
                    .HasMaxLength(250)
                    .HasColumnName("Complete Delivery");

                entity.Property(e => e.Compliance).HasMaxLength(250);

                entity.Property(e => e.CustomerPoNumber)
                    .HasMaxLength(250)
                    .HasColumnName("Customer PO Number");

                entity.Property(e => e.DeliveryStatus)
                    .HasMaxLength(250)
                    .HasColumnName("Delivery Status");

                entity.Property(e => e.EmbargoStatusAtTheLineLevel)
                    .HasMaxLength(250)
                    .HasColumnName("Embargo Status at the line level");

                entity.Property(e => e.EndUser).HasMaxLength(250);

                entity.Property(e => e.EndUserBasPostalCodeKey)
                    .HasMaxLength(250)
                    .HasColumnName("EndUser - BAS  Postal Code (Key)");

                entity.Property(e => e.EndUserBasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("EndUser - BAS   Street 2 (Key)");

                entity.Property(e => e.EndUserBasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("EndUser - BAS   Street 3 (Key)");

                entity.Property(e => e.EndUserBasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("EndUser - BAS   Street 4 (Key)");

                entity.Property(e => e.EndUserCountryKey)
                    .HasMaxLength(250)
                    .HasColumnName("EndUser - Country (Key)");

                entity.Property(e => e.EndUserCountryText)
                    .HasMaxLength(250)
                    .HasColumnName("EndUser - Country (Text)");

                entity.Property(e => e.EndUserKey)
                    .HasMaxLength(250)
                    .HasColumnName("EndUser - Key");

                entity.Property(e => e.EndUserLocationKey)
                    .HasMaxLength(250)
                    .HasColumnName("EndUser - Location (Key)");

                entity.Property(e => e.EndUserStreetNameKey)
                    .HasMaxLength(250)
                    .HasColumnName("EndUser - Street Name (Key)");

                entity.Property(e => e.FrieghtForwarder1)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght Forwarder 1");

                entity.Property(e => e.FrieghtForwarder1BasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght Forwarder 1 - BAS   Street 2 (Key)");

                entity.Property(e => e.FrieghtForwarder1BasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght Forwarder 1 - BAS   Street 3 (Key)");

                entity.Property(e => e.FrieghtForwarder1BasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght Forwarder 1 - BAS   Street 4 (Key)");

                entity.Property(e => e.FrieghtForwarder1CountryText)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght Forwarder 1 - Country (Text)");

                entity.Property(e => e.FrieghtForwarder1LocationKey)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght Forwarder 1 - Location (Key)");

                entity.Property(e => e.FrieghtForwarder1StreetNameKey)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght Forwarder 1 - Street Name (Key)");

                entity.Property(e => e.FrieghtForwarder2)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght Forwarder 2");

                entity.Property(e => e.FrieghtForwarder2BasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght Forwarder 2 - BAS   Street 2 (Key)");

                entity.Property(e => e.FrieghtForwarder2BasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght Forwarder 2 - BAS   Street 3 (Key)");

                entity.Property(e => e.FrieghtForwarder2BasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght Forwarder 2 - BAS   Street 4 (Key)");

                entity.Property(e => e.FrieghtForwarder2CountryText)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght Forwarder 2 - Country (Text)");

                entity.Property(e => e.FrieghtForwarder2LocationKey)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght Forwarder 2 - Location (Key)");

                entity.Property(e => e.FrieghtForwarder2StreetNameKey)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght Forwarder 2 - Street Name (Key)");

                entity.Property(e => e.FrieghtForwarder3)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght Forwarder 3");

                entity.Property(e => e.FrieghtForwarder3BasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght Forwarder 3 - BAS   Street 2 (Key)");

                entity.Property(e => e.FrieghtForwarder3BasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght Forwarder 3 - BAS   Street 3 (Key)");

                entity.Property(e => e.FrieghtForwarder3BasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght Forwarder 3 - BAS   Street 4 (Key)");

                entity.Property(e => e.FrieghtForwarder3CountryText)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght Forwarder 3 - Country (Text)");

                entity.Property(e => e.FrieghtForwarder3LocationKey)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght Forwarder 3 - Location (Key)");

                entity.Property(e => e.FrieghtForwarder3StreetNameKey)
                    .HasMaxLength(250)
                    .HasColumnName("Frieght Forwarder 3 - Street Name (Key)");

                entity.Property(e => e.GtsOverallStatus)
                    .HasMaxLength(250)
                    .HasColumnName("GTS Overall  Status");

                entity.Property(e => e.Incoterms1)
                    .HasMaxLength(250)
                    .HasColumnName("Incoterms 1");

                entity.Property(e => e.Incoterms2)
                    .HasMaxLength(250)
                    .HasColumnName("Incoterms 2");

                entity.Property(e => e.LicenseForBlocked)
                    .HasMaxLength(250)
                    .HasColumnName("License for blocked");

                entity.Property(e => e.Material).HasMaxLength(250);

                entity.Property(e => e.MaterialEccnKey)
                    .HasMaxLength(250)
                    .HasColumnName("Material - ECCN (Key)");

                entity.Property(e => e.MaterialHtsKey)
                    .HasMaxLength(250)
                    .HasColumnName("Material - HTS (Key)");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(250)
                    .HasColumnName("Material - Key");

                entity.Property(e => e.MaterialMediumKey)
                    .HasMaxLength(250)
                    .HasColumnName("Material - Medium (Key)");

                entity.Property(e => e.MaterialPlantViewCountryOfOriginText)
                    .HasMaxLength(250)
                    .HasColumnName("Material Plant View - Country of Origin (Text)");

                entity.Property(e => e.Mit)
                    .HasMaxLength(250)
                    .HasColumnName("MIT");

                entity.Property(e => e.OrderType1)
                    .HasMaxLength(250)
                    .HasColumnName("Order Type1");

                entity.Property(e => e.OrderType2)
                    .HasMaxLength(250)
                    .HasColumnName("Order Type2");

                entity.Property(e => e.PayerKey)
                    .HasMaxLength(250)
                    .HasColumnName("Payer - Key");

                entity.Property(e => e.PlantCountryKey)
                    .HasMaxLength(250)
                    .HasColumnName("Plant - Country (Key)");

                entity.Property(e => e.PlantKey)
                    .HasMaxLength(250)
                    .HasColumnName("Plant - Key");

                entity.Property(e => e.PlantMediumText)
                    .HasMaxLength(250)
                    .HasColumnName("Plant - Medium Text");

                entity.Property(e => e.PurchaseOrderType)
                    .HasMaxLength(250)
                    .HasColumnName("Purchase Order Type");

                entity.Property(e => e.ReasonCode)
                    .HasMaxLength(250)
                    .HasColumnName("Reason Code");

                entity.Property(e => e.RtphStatus)
                    .HasMaxLength(250)
                    .HasColumnName("RTPH status");

                entity.Property(e => e.SalesDocumentItemCategory)
                    .HasMaxLength(250)
                    .HasColumnName("Sales Document Item Category");

                entity.Property(e => e.SalesOrderLineItem)
                    .HasMaxLength(250)
                    .HasColumnName("Sales Order Line Item");

                entity.Property(e => e.SalesOrderNumber)
                    .HasMaxLength(250)
                    .HasColumnName("Sales Order Number");

                entity.Property(e => e.SalesOrderScheduleLineNo)
                    .HasMaxLength(250)
                    .HasColumnName("Sales Order Schedule Line No");

                entity.Property(e => e.ScheduleLineDate)
                    .HasMaxLength(250)
                    .HasColumnName("Schedule Line Date");

                entity.Property(e => e.ShipToPartyBasPostalCodeKey)
                    .HasMaxLength(250)
                    .HasColumnName("Ship To Party - BAS  Postal Code (Key)");

                entity.Property(e => e.ShipToPartyBasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Ship To Party - BAS   Street 2 (Key)");

                entity.Property(e => e.ShipToPartyBasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Ship To Party - BAS   Street 3 (Key)");

                entity.Property(e => e.ShipToPartyBasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Ship To Party - BAS   Street 4 (Key)");

                entity.Property(e => e.ShipToPartyBusinessPartnerKey)
                    .HasMaxLength(250)
                    .HasColumnName("Ship To Party - Business Partner (Key)");

                entity.Property(e => e.ShipToPartyCountryText)
                    .HasMaxLength(250)
                    .HasColumnName("Ship To Party - Country (Text)");

                entity.Property(e => e.ShipToPartyLocationKey)
                    .HasMaxLength(250)
                    .HasColumnName("Ship To Party - Location (Key)");

                entity.Property(e => e.ShipToPartyNameKey)
                    .HasMaxLength(250)
                    .HasColumnName("Ship To Party - Name (Key)");

                entity.Property(e => e.ShipToPartyStreetNameKey)
                    .HasMaxLength(250)
                    .HasColumnName("Ship To Party - Street Name (Key)");

                entity.Property(e => e.ShippingType)
                    .HasMaxLength(250)
                    .HasColumnName("Shipping Type");

                entity.Property(e => e.SoldToPartyBasPostalCodeKey)
                    .HasMaxLength(250)
                    .HasColumnName("Sold To Party - BAS  Postal Code (Key)");

                entity.Property(e => e.SoldToPartyBasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Sold To Party - BAS   Street 2 (Key)");

                entity.Property(e => e.SoldToPartyBasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Sold To Party - BAS   Street 3 (Key)");

                entity.Property(e => e.SoldToPartyBasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Sold To Party - BAS   Street 4 (Key)");

                entity.Property(e => e.SoldToPartyBusinessPartnerKey)
                    .HasMaxLength(250)
                    .HasColumnName("Sold To Party - Business Partner (Key)");

                entity.Property(e => e.SoldToPartyCountryText)
                    .HasMaxLength(250)
                    .HasColumnName("Sold To Party - Country (Text)");

                entity.Property(e => e.SoldToPartyLocationKey)
                    .HasMaxLength(250)
                    .HasColumnName("Sold To Party - Location (Key)");

                entity.Property(e => e.SoldToPartyNameKey)
                    .HasMaxLength(250)
                    .HasColumnName("Sold To Party - Name (Key)");

                entity.Property(e => e.SoldToPartyStreetNameKey)
                    .HasMaxLength(250)
                    .HasColumnName("Sold To Party - Street Name (Key)");

                entity.Property(e => e.SplStatusAtTheLineLevel)
                    .HasMaxLength(250)
                    .HasColumnName("SPL  Status at the Line level");
            });

            modelBuilder.Entity<BookingsQuote>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("bookings_quote", "dev");

                entity.HasIndex(e => e.SoNumber, "bookings_quote_ndx1");

                entity.Property(e => e.BookedDate)
                    .HasColumnType("date")
                    .HasColumnName("booked_date");

                entity.Property(e => e.DedupId).HasColumnName("dedup_id");

                entity.Property(e => e.EndUserCountryCode)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("end_user_country_code");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoType)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("so_type");
            });

            modelBuilder.Entity<BookingsResAm>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("bookings_res_am");

                entity.HasIndex(e => e.SoNumberKey, "bookings_res_am_sok");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.DedupId).HasColumnName("dedup_id");

                entity.Property(e => e.EndCustomerGsaFlag)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("end_customer_gsa_flag");

                entity.Property(e => e.EndCustomerPartnerLevel)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("end_customer_partner_level");

                entity.Property(e => e.ImportId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("import_id");

                entity.Property(e => e.ImportedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("imported_date");

                entity.Property(e => e.ImportedStatus)
                    .HasMaxLength(255)
                    .HasColumnName("imported_status");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerDistrict)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("reseller_district");

                entity.Property(e => e.ResellerGsaFlag)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("reseller_gsa_flag");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerPartnerLevelKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("reseller_partner_level_key");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoNumberKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("so_number_key");

                entity.Property(e => e.SoldtoPartyGsaFlag)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("soldto_party_gsa_flag");

                entity.Property(e => e.TransactionCreated)
                    .HasColumnType("date")
                    .HasColumnName("transaction_created");
            });

            modelBuilder.Entity<BookingsResAm20180123>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("bookings_res_am_20180123", "bak");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.DedupId).HasColumnName("dedup_id");

                entity.Property(e => e.EndCustomerGsaFlag)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("end_customer_gsa_flag");

                entity.Property(e => e.EndCustomerPartnerLevel)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("end_customer_partner_level");

                entity.Property(e => e.ImportId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("import_id");

                entity.Property(e => e.ImportedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("imported_date");

                entity.Property(e => e.ImportedStatus)
                    .HasMaxLength(255)
                    .HasColumnName("imported_status");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerDistrict)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("reseller_district");

                entity.Property(e => e.ResellerGsaFlag)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("reseller_gsa_flag");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerPartnerLevelKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("reseller_partner_level_key");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoNumberKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("so_number_key");

                entity.Property(e => e.SoldtoPartyGsaFlag)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("soldto_party_gsa_flag");

                entity.Property(e => e.TransactionCreated)
                    .HasColumnType("date")
                    .HasColumnName("transaction_created");
            });

            modelBuilder.Entity<BookingsResAmJulsep2018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("bookings_res_am_julsep2018", "dsf");

                entity.Property(e => e.EmployeeResponsibleCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Employee_Responsible___Country__Key__");

                entity.Property(e => e.EmployeeResponsibleLongText)
                    .HasMaxLength(50)
                    .HasColumnName("_Employee_Responsible___Long_Text_");

                entity.Property(e => e.EndCustomerGsaFlagText)
                    .HasMaxLength(50)
                    .HasColumnName("_End_Customer___GSA_Flag__Text__");

                entity.Property(e => e.EndCustomerPartnerLevelText)
                    .HasMaxLength(50)
                    .HasColumnName("_End_Customer___Partner_Level__Text__");

                entity.Property(e => e.OrderIdKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Order_ID___Key_");

                entity.Property(e => e.ResellerBasDistrictText)
                    .HasMaxLength(50)
                    .HasColumnName("_Reseller___BAS__District__Text__");

                entity.Property(e => e.ResellerCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Reseller___Country__Key__");

                entity.Property(e => e.ResellerGsaFlagText)
                    .HasMaxLength(50)
                    .HasColumnName("_Reseller___GSA_Flag__Text__");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Reseller___Key_");

                entity.Property(e => e.ResellerLongText)
                    .HasMaxLength(150)
                    .HasColumnName("_Reseller___Long_Text_");

                entity.Property(e => e.ResellerPartnerLevelKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Reseller___Partner_Level__Key__");

                entity.Property(e => e.SoldToPartyGsaFlagText)
                    .HasMaxLength(50)
                    .HasColumnName("_Sold_To_Party___GSA_Flag__Text__");

                entity.Property(e => e.TransactionCreatedKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Transaction_Created___Key_");
            });

            modelBuilder.Entity<BookingsResAmJun2018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("bookings_res_am_jun2018", "dsf");

                entity.Property(e => e.EmployeeResponsibleCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Employee_Responsible___Country__Key__");

                entity.Property(e => e.EmployeeResponsibleLongText)
                    .HasMaxLength(50)
                    .HasColumnName("_Employee_Responsible___Long_Text_");

                entity.Property(e => e.EndCustomerGsaFlagText)
                    .HasMaxLength(50)
                    .HasColumnName("_End_Customer___GSA_Flag__Text__");

                entity.Property(e => e.EndCustomerPartnerLevelText)
                    .HasMaxLength(50)
                    .HasColumnName("_End_Customer___Partner_Level__Text__");

                entity.Property(e => e.OrderIdKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Order_ID___Key_");

                entity.Property(e => e.ResellerBasDistrictText)
                    .HasMaxLength(50)
                    .HasColumnName("_Reseller___BAS__District__Text__");

                entity.Property(e => e.ResellerCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Reseller___Country__Key__");

                entity.Property(e => e.ResellerGsaFlagText)
                    .HasMaxLength(50)
                    .HasColumnName("_Reseller___GSA_Flag__Text__");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Reseller___Key_");

                entity.Property(e => e.ResellerLongText)
                    .HasMaxLength(150)
                    .HasColumnName("_Reseller___Long_Text_");

                entity.Property(e => e.ResellerPartnerLevelKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Reseller___Partner_Level__Key__");

                entity.Property(e => e.SoldToPartyGsaFlagText)
                    .HasMaxLength(50)
                    .HasColumnName("_Sold_To_Party___GSA_Flag__Text__");

                entity.Property(e => e.TransactionCreatedKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Transaction_Created___Key_");
            });

            modelBuilder.Entity<BookingsResAmMetaVw>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("bookings_res_am_meta_vw");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.DedupId).HasColumnName("dedup_id");

                entity.Property(e => e.EndCustomerGsaFlag)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("end_customer_gsa_flag");

                entity.Property(e => e.EndCustomerPartnerLevel)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("end_customer_partner_level");

                entity.Property(e => e.ImportId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("import_id");

                entity.Property(e => e.ImportedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("imported_date");

                entity.Property(e => e.ImportedStatus)
                    .HasMaxLength(255)
                    .HasColumnName("imported_status");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerDistrict)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("reseller_district");

                entity.Property(e => e.ResellerGsaFlag)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("reseller_gsa_flag");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerPartnerLevelKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("reseller_partner_level_key");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoldtoPartyGsaFlag)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("soldto_party_gsa_flag");

                entity.Property(e => e.TransactionCreated)
                    .HasColumnType("date")
                    .HasColumnName("transaction_created");
            });

            modelBuilder.Entity<BookingsResAmOctdec2018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("bookings_res_am_octdec2018", "dsf");

                entity.Property(e => e.EmployeeResponsibleCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Employee_Responsible___Country__Key__");

                entity.Property(e => e.EmployeeResponsibleLongText)
                    .HasMaxLength(50)
                    .HasColumnName("_Employee_Responsible___Long_Text_");

                entity.Property(e => e.EndCustomerGsaFlagText)
                    .HasMaxLength(50)
                    .HasColumnName("_End_Customer___GSA_Flag__Text__");

                entity.Property(e => e.EndCustomerPartnerLevelText)
                    .HasMaxLength(50)
                    .HasColumnName("_End_Customer___Partner_Level__Text__");

                entity.Property(e => e.OrderIdKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Order_ID___Key_");

                entity.Property(e => e.ResellerBasDistrictText)
                    .HasMaxLength(50)
                    .HasColumnName("_Reseller___BAS__District__Text__");

                entity.Property(e => e.ResellerCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Reseller___Country__Key__");

                entity.Property(e => e.ResellerGsaFlagText)
                    .HasMaxLength(50)
                    .HasColumnName("_Reseller___GSA_Flag__Text__");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Reseller___Key_");

                entity.Property(e => e.ResellerLongText)
                    .HasMaxLength(150)
                    .HasColumnName("_Reseller___Long_Text_");

                entity.Property(e => e.ResellerPartnerLevelKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Reseller___Partner_Level__Key__");

                entity.Property(e => e.SoldToPartyGsaFlagText)
                    .HasMaxLength(50)
                    .HasColumnName("_Sold_To_Party___GSA_Flag__Text__");

                entity.Property(e => e.TransactionCreatedKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Transaction_Created___Key_");
            });

            modelBuilder.Entity<BookingsSepdec2018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("bookings_sepdec2018", "dsf");

                entity.Property(e => e.BillToPartyBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___BAS__Postal_Code__Key_");

                entity.Property(e => e.BillToPartyBasStreet2Key)
                    .HasMaxLength(150)
                    .HasColumnName("Bill_To_Party___BAS___Street_2__Key_");

                entity.Property(e => e.BillToPartyBasStreet3Key)
                    .HasMaxLength(150)
                    .HasColumnName("Bill_To_Party___BAS___Street_3__Key_");

                entity.Property(e => e.BillToPartyBasStreet4Key)
                    .HasMaxLength(150)
                    .HasColumnName("Bill_To_Party___BAS___Street_4__Key_");

                entity.Property(e => e.BillToPartyBusinessPartnerKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___Business_Partner__Key_");

                entity.Property(e => e.BillToPartyCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___Country__Text_");

                entity.Property(e => e.BillToPartyLocationKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___Location__Key_");

                entity.Property(e => e.BillToPartyNameKey)
                    .HasMaxLength(150)
                    .HasColumnName("Bill_To_Party___Name__Key_");

                entity.Property(e => e.BillToPartyStreetNameKey)
                    .HasMaxLength(150)
                    .HasColumnName("Bill_To_Party___Street_Name__Key_");

                entity.Property(e => e.BookDate0createdon)
                    .HasMaxLength(50)
                    .HasColumnName("Book_Date__0CREATEDON_");

                entity.Property(e => e.BookingQuantity)
                    .HasMaxLength(50)
                    .HasColumnName("Booking_Quantity");

                entity.Property(e => e.BookingsNetValue)
                    .HasMaxLength(50)
                    .HasColumnName("Bookings_Net_Value");

                entity.Property(e => e.CompleteDelivery)
                    .HasMaxLength(50)
                    .HasColumnName("Complete_Delivery");

                entity.Property(e => e.Compliance).HasMaxLength(50);

                entity.Property(e => e.CustomerPoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Customer_PO_Number");

                entity.Property(e => e.DeliveryStatus)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Status");

                entity.Property(e => e.EmbargoStatusAtTheLineLevel)
                    .HasMaxLength(50)
                    .HasColumnName("Embargo_Status_at_the_line_level");

                entity.Property(e => e.EndUser).HasMaxLength(150);

                entity.Property(e => e.EndUserBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("EndUser___BAS__Postal_Code__Key_");

                entity.Property(e => e.EndUserBasStreet2Key)
                    .HasMaxLength(150)
                    .HasColumnName("EndUser___BAS___Street_2__Key_");

                entity.Property(e => e.EndUserBasStreet3Key)
                    .HasMaxLength(150)
                    .HasColumnName("EndUser___BAS___Street_3__Key_");

                entity.Property(e => e.EndUserBasStreet4Key)
                    .HasMaxLength(150)
                    .HasColumnName("EndUser___BAS___Street_4__Key_");

                entity.Property(e => e.EndUserCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("EndUser___Country__Key_");

                entity.Property(e => e.EndUserCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("EndUser___Country__Text_");

                entity.Property(e => e.EndUserKey)
                    .HasMaxLength(50)
                    .HasColumnName("EndUser___Key");

                entity.Property(e => e.EndUserLocationKey)
                    .HasMaxLength(50)
                    .HasColumnName("EndUser___Location__Key_");

                entity.Property(e => e.EndUserStreetNameKey)
                    .HasMaxLength(150)
                    .HasColumnName("EndUser___Street_Name__Key_");

                entity.Property(e => e.EstimatedTariff)
                    .HasMaxLength(50)
                    .HasColumnName("Estimated_Tariff");

                entity.Property(e => e.FrieghtForwarder1)
                    .HasMaxLength(150)
                    .HasColumnName("Frieght_Forwarder_1");

                entity.Property(e => e.FrieghtForwarder1BasStreet2Key)
                    .HasMaxLength(150)
                    .HasColumnName("Frieght_Forwarder_1___BAS___Street_2__Key_");

                entity.Property(e => e.FrieghtForwarder1BasStreet3Key)
                    .HasMaxLength(150)
                    .HasColumnName("Frieght_Forwarder_1___BAS___Street_3__Key_");

                entity.Property(e => e.FrieghtForwarder1BasStreet4Key)
                    .HasMaxLength(150)
                    .HasColumnName("Frieght_Forwarder_1___BAS___Street_4__Key_");

                entity.Property(e => e.FrieghtForwarder1CountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Frieght_Forwarder_1___Country__Text_");

                entity.Property(e => e.FrieghtForwarder1LocationKey)
                    .HasMaxLength(50)
                    .HasColumnName("Frieght_Forwarder_1___Location__Key_");

                entity.Property(e => e.FrieghtForwarder1StreetNameKey)
                    .HasMaxLength(150)
                    .HasColumnName("Frieght_Forwarder_1___Street_Name__Key_");

                entity.Property(e => e.FrieghtForwarder2)
                    .HasMaxLength(50)
                    .HasColumnName("Frieght_Forwarder_2");

                entity.Property(e => e.FrieghtForwarder2BasStreet2Key)
                    .HasMaxLength(150)
                    .HasColumnName("Frieght_Forwarder_2___BAS___Street_2__Key_");

                entity.Property(e => e.FrieghtForwarder2BasStreet3Key)
                    .HasMaxLength(150)
                    .HasColumnName("Frieght_Forwarder_2___BAS___Street_3__Key_");

                entity.Property(e => e.FrieghtForwarder2BasStreet4Key)
                    .HasMaxLength(150)
                    .HasColumnName("Frieght_Forwarder_2___BAS___Street_4__Key_");

                entity.Property(e => e.FrieghtForwarder2CountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Frieght_Forwarder_2___Country__Text_");

                entity.Property(e => e.FrieghtForwarder2LocationKey)
                    .HasMaxLength(50)
                    .HasColumnName("Frieght_Forwarder_2___Location__Key_");

                entity.Property(e => e.FrieghtForwarder2StreetNameKey)
                    .HasMaxLength(150)
                    .HasColumnName("Frieght_Forwarder_2___Street_Name__Key_");

                entity.Property(e => e.FrieghtForwarder3)
                    .HasMaxLength(50)
                    .HasColumnName("Frieght_Forwarder_3");

                entity.Property(e => e.FrieghtForwarder3BasStreet2Key)
                    .HasMaxLength(150)
                    .HasColumnName("Frieght_Forwarder_3___BAS___Street_2__Key_");

                entity.Property(e => e.FrieghtForwarder3BasStreet3Key)
                    .HasMaxLength(150)
                    .HasColumnName("Frieght_Forwarder_3___BAS___Street_3__Key_");

                entity.Property(e => e.FrieghtForwarder3BasStreet4Key)
                    .HasMaxLength(150)
                    .HasColumnName("Frieght_Forwarder_3___BAS___Street_4__Key_");

                entity.Property(e => e.FrieghtForwarder3CountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Frieght_Forwarder_3___Country__Text_");

                entity.Property(e => e.FrieghtForwarder3LocationKey)
                    .HasMaxLength(150)
                    .HasColumnName("Frieght_Forwarder_3___Location__Key_");

                entity.Property(e => e.FrieghtForwarder3StreetNameKey)
                    .HasMaxLength(150)
                    .HasColumnName("Frieght_Forwarder_3___Street_Name__Key_");

                entity.Property(e => e.GtsOverallStatus)
                    .HasMaxLength(50)
                    .HasColumnName("GTS_Overall__Status");

                entity.Property(e => e.ImportValue)
                    .HasMaxLength(50)
                    .HasColumnName("Import_Value");

                entity.Property(e => e.Incoterms1)
                    .HasMaxLength(50)
                    .HasColumnName("Incoterms_1");

                entity.Property(e => e.Incoterms2)
                    .HasMaxLength(50)
                    .HasColumnName("Incoterms_2");

                entity.Property(e => e.LicenseForBlocked)
                    .HasMaxLength(50)
                    .HasColumnName("License_for_blocked");

                entity.Property(e => e.Material).HasMaxLength(50);

                entity.Property(e => e.MaterialEccnKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___ECCN__Key_");

                entity.Property(e => e.MaterialHtsKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___HTS__Key_");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___Key");

                entity.Property(e => e.MaterialMediumKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___Medium__Key_");

                entity.Property(e => e.MaterialOverLengthPartNumKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___Over_Length_Part_Num__Key_");

                entity.Property(e => e.MaterialPlantViewCountryOfOriginText)
                    .HasMaxLength(50)
                    .HasColumnName("Material_Plant_View___Country_of_Origin__Text_");

                entity.Property(e => e.Mit)
                    .HasMaxLength(50)
                    .HasColumnName("MIT");

                entity.Property(e => e.OrderType1)
                    .HasMaxLength(50)
                    .HasColumnName("Order_Type1");

                entity.Property(e => e.OrderType2)
                    .HasMaxLength(50)
                    .HasColumnName("Order_Type2");

                entity.Property(e => e.PayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("Payer___Key");

                entity.Property(e => e.PlantCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("Plant___Country__Key_");

                entity.Property(e => e.PlantKey)
                    .HasMaxLength(50)
                    .HasColumnName("Plant___Key");

                entity.Property(e => e.PlantMediumText)
                    .HasMaxLength(150)
                    .HasColumnName("Plant___Medium_Text");

                entity.Property(e => e.PurchaseOrderType)
                    .HasMaxLength(50)
                    .HasColumnName("Purchase_Order_Type");

                entity.Property(e => e.ReasonCode)
                    .HasMaxLength(50)
                    .HasColumnName("Reason_Code");

                entity.Property(e => e.RtphStatus)
                    .HasMaxLength(50)
                    .HasColumnName("RTPH_status");

                entity.Property(e => e.SalesDocumentItemCategory)
                    .HasMaxLength(50)
                    .HasColumnName("Sales_Document_Item_Category");

                entity.Property(e => e.SalesOrderLineItem)
                    .HasMaxLength(50)
                    .HasColumnName("Sales_Order_Line_Item");

                entity.Property(e => e.SalesOrderNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Sales_Order_Number");

                entity.Property(e => e.SalesOrderScheduleLineNo)
                    .HasMaxLength(50)
                    .HasColumnName("Sales_Order_Schedule_Line_No");

                entity.Property(e => e.ScheduleLineDate)
                    .HasMaxLength(50)
                    .HasColumnName("Schedule_Line_Date");

                entity.Property(e => e.ShipToPartyBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_Party___BAS__Postal_Code__Key_");

                entity.Property(e => e.ShipToPartyBasStreet2Key)
                    .HasMaxLength(150)
                    .HasColumnName("Ship_To_Party___BAS___Street_2__Key_");

                entity.Property(e => e.ShipToPartyBasStreet3Key)
                    .HasMaxLength(150)
                    .HasColumnName("Ship_To_Party___BAS___Street_3__Key_");

                entity.Property(e => e.ShipToPartyBasStreet4Key)
                    .HasMaxLength(150)
                    .HasColumnName("Ship_To_Party___BAS___Street_4__Key_");

                entity.Property(e => e.ShipToPartyBusinessPartnerKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_Party___Business_Partner__Key_");

                entity.Property(e => e.ShipToPartyCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_Party___Country__Text_");

                entity.Property(e => e.ShipToPartyLocationKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_Party___Location__Key_");

                entity.Property(e => e.ShipToPartyNameKey)
                    .HasMaxLength(150)
                    .HasColumnName("Ship_To_Party___Name__Key_");

                entity.Property(e => e.ShipToPartyStreetNameKey)
                    .HasMaxLength(150)
                    .HasColumnName("Ship_To_Party___Street_Name__Key_");

                entity.Property(e => e.ShippingType)
                    .HasMaxLength(50)
                    .HasColumnName("Shipping_Type");

                entity.Property(e => e.SoldToPartyBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Sold_To_Party___BAS__Postal_Code__Key_");

                entity.Property(e => e.SoldToPartyBasStreet2Key)
                    .HasMaxLength(150)
                    .HasColumnName("Sold_To_Party___BAS___Street_2__Key_");

                entity.Property(e => e.SoldToPartyBasStreet3Key)
                    .HasMaxLength(150)
                    .HasColumnName("Sold_To_Party___BAS___Street_3__Key_");

                entity.Property(e => e.SoldToPartyBasStreet4Key)
                    .HasMaxLength(150)
                    .HasColumnName("Sold_To_Party___BAS___Street_4__Key_");

                entity.Property(e => e.SoldToPartyBusinessPartnerKey)
                    .HasMaxLength(50)
                    .HasColumnName("Sold_To_Party___Business_Partner__Key_");

                entity.Property(e => e.SoldToPartyCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Sold_To_Party___Country__Text_");

                entity.Property(e => e.SoldToPartyLocationKey)
                    .HasMaxLength(50)
                    .HasColumnName("Sold_To_Party___Location__Key_");

                entity.Property(e => e.SoldToPartyNameKey)
                    .HasMaxLength(150)
                    .HasColumnName("Sold_To_Party___Name__Key_");

                entity.Property(e => e.SoldToPartyStreetNameKey)
                    .HasMaxLength(150)
                    .HasColumnName("Sold_To_Party___Street_Name__Key_");

                entity.Property(e => e.SplStatusAtTheLineLevel)
                    .HasMaxLength(50)
                    .HasColumnName("SPL__Status_at_the_Line_level");

                entity.Property(e => e.UsImportTaxIndicator)
                    .HasMaxLength(50)
                    .HasColumnName("US_Import_Tax_Indicator");
            });

            modelBuilder.Entity<BpTarget>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("bp_targets", "dsf");

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("country_code");

                entity.Property(e => e.CountryName)
                    .HasMaxLength(50)
                    .HasColumnName("country_name");

                entity.Property(e => e.CreatedDate)
                    .HasMaxLength(50)
                    .HasColumnName("created_date");

                entity.Property(e => e.DateComplete)
                    .HasMaxLength(50)
                    .HasColumnName("date_complete");

                entity.Property(e => e.DateOpened)
                    .HasMaxLength(50)
                    .HasColumnName("date_opened");

                entity.Property(e => e.DealSize)
                    .HasMaxLength(50)
                    .HasColumnName("deal_size");

                entity.Property(e => e.EmailForm)
                    .HasMaxLength(50)
                    .HasColumnName("email_form");

                entity.Property(e => e.EmailSent)
                    .HasMaxLength(50)
                    .HasColumnName("email_sent");

                entity.Property(e => e.EntityKey)
                    .HasMaxLength(250)
                    .HasColumnName("entity_key");

                entity.Property(e => e.EntityLevel)
                    .HasMaxLength(50)
                    .HasColumnName("entity_level");

                entity.Property(e => e.EntityName)
                    .HasMaxLength(50)
                    .HasColumnName("entity_name");

                entity.Property(e => e.EntityType)
                    .HasMaxLength(50)
                    .HasColumnName("entity_type");

                entity.Property(e => e.Notes)
                    .HasMaxLength(100)
                    .HasColumnName("notes");

                entity.Property(e => e.NsNotes)
                    .HasMaxLength(500)
                    .HasColumnName("ns_notes");

                entity.Property(e => e.Remediation)
                    .HasMaxLength(50)
                    .HasColumnName("remediation");

                entity.Property(e => e.RemediationStatus)
                    .HasMaxLength(50)
                    .HasColumnName("remediation_status");

                entity.Property(e => e.SfdcId)
                    .HasMaxLength(50)
                    .HasColumnName("sfdc_id");

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .HasColumnName("status");

                entity.Property(e => e.Theater)
                    .HasMaxLength(50)
                    .HasColumnName("theater");

                entity.Property(e => e.VarId)
                    .HasMaxLength(100)
                    .HasColumnName("var_id");

                entity.Property(e => e.Website)
                    .HasMaxLength(50)
                    .HasColumnName("website");

                entity.Property(e => e.WinFlag)
                    .HasMaxLength(50)
                    .HasColumnName("win_flag");
            });

            modelBuilder.Entity<BulkinsertTest>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("bulkinsert_test");

                entity.Property(e => e.CAcctbal)
                    .IsUnicode(false)
                    .HasColumnName("c_acctbal");

                entity.Property(e => e.CAddress)
                    .IsUnicode(false)
                    .HasColumnName("c_address");

                entity.Property(e => e.CComment)
                    .IsUnicode(false)
                    .HasColumnName("c_comment");

                entity.Property(e => e.CCustkey)
                    .IsUnicode(false)
                    .HasColumnName("c_custkey");

                entity.Property(e => e.CMktsegment)
                    .IsUnicode(false)
                    .HasColumnName("c_mktsegment");

                entity.Property(e => e.CName)
                    .IsUnicode(false)
                    .HasColumnName("c_name");

                entity.Property(e => e.CNationkey)
                    .IsUnicode(false)
                    .HasColumnName("c_nationkey");

                entity.Property(e => e.CPhone)
                    .IsUnicode(false)
                    .HasColumnName("c_phone");
            });

            modelBuilder.Entity<CertDatum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Cert_Data");

                entity.Property(e => e.Acceptance)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("acceptance")
                    .IsFixedLength();

                entity.Property(e => e.AcceptanceDate)
                    .HasColumnType("datetime")
                    .HasColumnName("acceptance_date");

                entity.Property(e => e.AdditionalComments)
                    .IsUnicode(false)
                    .HasColumnName("additional_comments");

                entity.Property(e => e.CertificationType)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("certification_type");

                entity.Property(e => e.ComplianceReview)
                    .IsUnicode(false)
                    .HasColumnName("compliance_review");

                entity.Property(e => e.ComplianceReviewComments)
                    .IsUnicode(false)
                    .HasColumnName("compliance_review_comments");

                entity.Property(e => e.CustomVal)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("custom_val");

                entity.Property(e => e.DisclosureType)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("disclosure_type");

                entity.Property(e => e.DisclosureTypeComments)
                    .IsUnicode(false)
                    .HasColumnName("disclosure_type_comments");

                entity.Property(e => e.EmployeeEmail)
                    .IsUnicode(false)
                    .HasColumnName("employee_email");

                entity.Property(e => e.EmployeeName)
                    .IsUnicode(false)
                    .HasColumnName("employee_name");

                entity.Property(e => e.FinanceReview)
                    .IsUnicode(false)
                    .HasColumnName("finance_review");

                entity.Property(e => e.FinanceReviewComments)
                    .IsUnicode(false)
                    .HasColumnName("finance_review_comments");

                entity.Property(e => e.Quarter)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("quarter");

                entity.Property(e => e.ResponseType)
                    .IsUnicode(false)
                    .HasColumnName("response_type");

                entity.Property(e => e.WorkflowName)
                    .IsUnicode(false)
                    .HasColumnName("workflow_name");
            });

            modelBuilder.Entity<CertificationDataTest>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Certification_Data_Test");

                entity.Property(e => e.EmployeeName)
                    .IsUnicode(false)
                    .HasColumnName("employee_name");

                entity.Property(e => e.WorkflowName)
                    .IsUnicode(false)
                    .HasColumnName("workflow_name");
            });

            modelBuilder.Entity<CertificationStage>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Certification_Stage$");

                entity.Property(e => e.Acceptance)
                    .HasMaxLength(255)
                    .HasColumnName("acceptance");

                entity.Property(e => e.AcceptanceDate)
                    .HasColumnType("datetime")
                    .HasColumnName("acceptance_date");

                entity.Property(e => e.AdditionalComments)
                    .HasMaxLength(255)
                    .HasColumnName("additional_comments");

                entity.Property(e => e.CertificationType)
                    .HasMaxLength(255)
                    .HasColumnName("certification_type");

                entity.Property(e => e.ComplianceReview)
                    .HasMaxLength(255)
                    .HasColumnName("compliance_review");

                entity.Property(e => e.ComplianceReviewComments)
                    .HasMaxLength(255)
                    .HasColumnName("compliance_review_comments");

                entity.Property(e => e.Custom).HasMaxLength(255);

                entity.Property(e => e.DisclosureType)
                    .HasMaxLength(255)
                    .HasColumnName("disclosure_type");

                entity.Property(e => e.DisclosureTypeComments).HasColumnName("disclosure_type_comments");

                entity.Property(e => e.EmployeeEmail)
                    .HasMaxLength(255)
                    .HasColumnName("employee_email");

                entity.Property(e => e.EmployeeName)
                    .HasMaxLength(255)
                    .HasColumnName("employee_name");

                entity.Property(e => e.FinanceReview)
                    .HasMaxLength(255)
                    .HasColumnName("finance_review");

                entity.Property(e => e.FinanceReviewComments)
                    .HasMaxLength(255)
                    .HasColumnName("finance_review_comments");

                entity.Property(e => e.Quarter)
                    .HasMaxLength(255)
                    .HasColumnName("quarter");

                entity.Property(e => e.ResponseType)
                    .HasMaxLength(255)
                    .HasColumnName("response_type");

                entity.Property(e => e.WorkflowName)
                    .HasMaxLength(255)
                    .HasColumnName("workflow_name");
            });

            modelBuilder.Entity<CertificationStageRevenueSort>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Certification_Stage_RevenueSort$");

                entity.Property(e => e.Acceptance)
                    .HasMaxLength(255)
                    .HasColumnName("acceptance");

                entity.Property(e => e.AcceptanceDate)
                    .HasColumnType("datetime")
                    .HasColumnName("acceptance_date");

                entity.Property(e => e.AdditionalComments)
                    .HasMaxLength(255)
                    .HasColumnName("additional_comments");

                entity.Property(e => e.CertificationType)
                    .HasMaxLength(255)
                    .HasColumnName("certification_type");

                entity.Property(e => e.ComplianceReview)
                    .HasMaxLength(255)
                    .HasColumnName("compliance_review");

                entity.Property(e => e.ComplianceReviewComments)
                    .HasMaxLength(255)
                    .HasColumnName("compliance_review_comments");

                entity.Property(e => e.Custom).HasMaxLength(255);

                entity.Property(e => e.DisclosureType)
                    .HasMaxLength(255)
                    .HasColumnName("disclosure_type");

                entity.Property(e => e.DisclosureTypeComments)
                    .HasMaxLength(255)
                    .HasColumnName("disclosure_type_comments");

                entity.Property(e => e.EmployeeEmail)
                    .HasMaxLength(255)
                    .HasColumnName("employee_email");

                entity.Property(e => e.EmployeeName)
                    .HasMaxLength(255)
                    .HasColumnName("employee_name");

                entity.Property(e => e.FinanceReview)
                    .HasMaxLength(255)
                    .HasColumnName("finance_review");

                entity.Property(e => e.FinanceReviewComments)
                    .HasMaxLength(255)
                    .HasColumnName("finance_review_comments");

                entity.Property(e => e.Quarter)
                    .HasMaxLength(255)
                    .HasColumnName("quarter");

                entity.Property(e => e.ResponseType)
                    .HasMaxLength(255)
                    .HasColumnName("response_type");

                entity.Property(e => e.WorkflowName)
                    .HasMaxLength(255)
                    .HasColumnName("workflow_name");
            });

            modelBuilder.Entity<CertificationStagingRevenuesort>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Certification_Staging_Revenuesort");

                entity.Property(e => e.Acceptance)
                    .IsUnicode(false)
                    .HasColumnName("acceptance");

                entity.Property(e => e.AcceptanceDate).HasColumnName("acceptance_date");

                entity.Property(e => e.AdditionalComments)
                    .IsUnicode(false)
                    .HasColumnName("additional_comments");

                entity.Property(e => e.CertificationType)
                    .IsUnicode(false)
                    .HasColumnName("certification_type");

                entity.Property(e => e.ComplianceReview)
                    .IsUnicode(false)
                    .HasColumnName("compliance_review");

                entity.Property(e => e.ComplianceReviewComments)
                    .IsUnicode(false)
                    .HasColumnName("compliance_review_comments");

                entity.Property(e => e.Custom).IsUnicode(false);

                entity.Property(e => e.DisclosureType)
                    .IsUnicode(false)
                    .HasColumnName("disclosure_type");

                entity.Property(e => e.DisclosureTypeComments)
                    .IsUnicode(false)
                    .HasColumnName("disclosure_type_comments");

                entity.Property(e => e.EmployeeEmail)
                    .IsUnicode(false)
                    .HasColumnName("employee_email");

                entity.Property(e => e.EmployeeName)
                    .IsUnicode(false)
                    .HasColumnName("employee_name");

                entity.Property(e => e.FinanceReview)
                    .IsUnicode(false)
                    .HasColumnName("finance_review");

                entity.Property(e => e.FinanceReviewComments)
                    .IsUnicode(false)
                    .HasColumnName("finance_review_comments");

                entity.Property(e => e.Quarter)
                    .IsUnicode(false)
                    .HasColumnName("quarter");

                entity.Property(e => e.ResponseType)
                    .IsUnicode(false)
                    .HasColumnName("response_type");

                entity.Property(e => e.WorkflowName)
                    .IsUnicode(false)
                    .HasColumnName("workflow_name");
            });

            modelBuilder.Entity<Counter>(entity =>
            {
                entity.ToTable("Counter", "HangFire");

                entity.HasIndex(e => e.Key, "IX_HangFire_Counter_Key");

                entity.Property(e => e.ExpireAt).HasColumnType("datetime");

                entity.Property(e => e.Key).HasMaxLength(100);
            });

            modelBuilder.Entity<CountryRegionMapping>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("country_region_mapping", "dev");

                entity.Property(e => e.Country).HasMaxLength(255);

                entity.Property(e => e.ReportingRegion)
                    .HasMaxLength(255)
                    .HasColumnName("Reporting Region");

                entity.Property(e => e.Theatre).HasMaxLength(255);
            });

            modelBuilder.Entity<CountryTheaterMapping>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("country_theater_mapping", "dev");

                entity.Property(e => e.Code)
                    .HasMaxLength(255)
                    .HasColumnName("code");

                entity.Property(e => e.Country)
                    .HasMaxLength(255)
                    .HasColumnName("country");

                entity.Property(e => e.Theater)
                    .HasMaxLength(255)
                    .HasColumnName("theater");
            });

            modelBuilder.Entity<Cpi>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("cpi", "dev");

                entity.Property(e => e.Country).HasMaxLength(255);

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("country_code");

                entity.Property(e => e.Region).HasMaxLength(255);

                entity.Property(e => e._2012Score).HasColumnName("2012_Score");

                entity.Property(e => e._2013Score).HasColumnName("2013_Score");

                entity.Property(e => e._2014Score).HasColumnName("2014_Score");

                entity.Property(e => e._2015Score).HasColumnName("2015_Score");

                entity.Property(e => e._2016Rank).HasColumnName("2016_Rank");

                entity.Property(e => e._2016Score).HasColumnName("2016_Score");
            });

            modelBuilder.Entity<Cpi1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("cpi", "dsf");

                entity.Property(e => e.Jurisdiction)
                    .HasMaxLength(150)
                    .HasColumnName("jurisdiction");

                entity.Property(e => e._1998)
                    .HasMaxLength(50)
                    .HasColumnName("1998");

                entity.Property(e => e._1999)
                    .HasMaxLength(50)
                    .HasColumnName("1999");

                entity.Property(e => e._2000)
                    .HasMaxLength(50)
                    .HasColumnName("2000");

                entity.Property(e => e._2001)
                    .HasMaxLength(50)
                    .HasColumnName("2001");

                entity.Property(e => e._2002)
                    .HasMaxLength(50)
                    .HasColumnName("2002");

                entity.Property(e => e._2003)
                    .HasMaxLength(50)
                    .HasColumnName("2003");

                entity.Property(e => e._2004)
                    .HasMaxLength(50)
                    .HasColumnName("2004");

                entity.Property(e => e._2005)
                    .HasMaxLength(50)
                    .HasColumnName("2005");

                entity.Property(e => e._2006)
                    .HasMaxLength(50)
                    .HasColumnName("2006");

                entity.Property(e => e._2007)
                    .HasMaxLength(50)
                    .HasColumnName("2007");

                entity.Property(e => e._2008)
                    .HasMaxLength(50)
                    .HasColumnName("2008");

                entity.Property(e => e._2009)
                    .HasMaxLength(50)
                    .HasColumnName("2009");

                entity.Property(e => e._2010)
                    .HasMaxLength(50)
                    .HasColumnName("2010");

                entity.Property(e => e._2011)
                    .HasMaxLength(50)
                    .HasColumnName("2011");

                entity.Property(e => e._2012)
                    .HasMaxLength(50)
                    .HasColumnName("2012");

                entity.Property(e => e._2013)
                    .HasMaxLength(50)
                    .HasColumnName("2013");

                entity.Property(e => e._2014)
                    .HasMaxLength(50)
                    .HasColumnName("2014");

                entity.Property(e => e._2015)
                    .HasMaxLength(50)
                    .HasColumnName("2015");
            });

            modelBuilder.Entity<CrmAccountNonu>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("crm_account_nonus", "dev");

                entity.Property(e => e.Accountcategory).HasColumnName("ACCOUNTCATEGORY");

                entity.Property(e => e.Accountclass).HasColumnName("ACCOUNTCLASS");

                entity.Property(e => e.Accountgroup).HasColumnName("ACCOUNTGROUP");

                entity.Property(e => e.Accounttype).HasColumnName("ACCOUNTTYPE");

                entity.Property(e => e.Addrnumber).HasColumnName("ADDRNUMBER");

                entity.Property(e => e.ArchivingFlag).HasColumnName("ARCHIVING_FLAG");

                entity.Property(e => e.Attr4).HasColumnName("ATTR4");

                entity.Property(e => e.BilBlockReason).HasColumnName("BIL_BLOCK_REASON");

                entity.Property(e => e.Billtorole).HasColumnName("BILLTOROLE");

                entity.Property(e => e.BpLastUpd).HasColumnName("BP_LAST_UPD");

                entity.Property(e => e.Bpid)
                    .HasMaxLength(150)
                    .HasColumnName("BPID");

                entity.Property(e => e.Buildingcode).HasColumnName("BUILDINGCODE");

                entity.Property(e => e.CentralBlock).HasColumnName("CENTRAL_BLOCK");

                entity.Property(e => e.Chusr).HasColumnName("CHUSR");

                entity.Property(e => e.City).HasColumnName("CITY");

                entity.Property(e => e.Commonid).HasColumnName("COMMONID");

                entity.Property(e => e.Country).HasColumnName("COUNTRY");

                entity.Property(e => e.County).HasColumnName("COUNTY");

                entity.Property(e => e.Customersince).HasColumnName("CUSTOMERSINCE");

                entity.Property(e => e.DedupId).HasColumnName("dedup_id");

                entity.Property(e => e.DelBlockReason).HasColumnName("DEL_BLOCK_REASON");

                entity.Property(e => e.Distributorrole).HasColumnName("DISTRIBUTORROLE");

                entity.Property(e => e.Domduns).HasColumnName("DOMDUNS");

                entity.Property(e => e.Donotcontact).HasColumnName("DONOTCONTACT");

                entity.Property(e => e.Duns).HasColumnName("DUNS");

                entity.Property(e => e.Edbid).HasColumnName("EDBID");

                entity.Property(e => e.EdiId).HasColumnName("EDI_ID");

                entity.Property(e => e.EmpLogin).HasColumnName("EMP_LOGIN");

                entity.Property(e => e.EmpName).HasColumnName("EMP_NAME");

                entity.Property(e => e.EmpOrgCode).HasColumnName("EMP_ORG_CODE");

                entity.Property(e => e.EmpOrgUnit).HasColumnName("EMP_ORG_UNIT");

                entity.Property(e => e.EmpOrgUntiName).HasColumnName("EMP_ORG_UNTI_NAME");

                entity.Property(e => e.Endcustomerrole).HasColumnName("ENDCUSTOMERROLE");

                entity.Property(e => e.FaxNumber).HasColumnName("FAX_NUMBER");

                entity.Property(e => e.Floor).HasColumnName("FLOOR");

                entity.Property(e => e.Globalultduns).HasColumnName("GLOBALULTDUNS");

                entity.Property(e => e.Grouping)
                    .HasMaxLength(150)
                    .HasColumnName("GROUPING");

                entity.Property(e => e.Housenumber).HasColumnName("HOUSENUMBER");

                entity.Property(e => e.Housenumbersupplement).HasColumnName("HOUSENUMBERSUPPLEMENT");

                entity.Property(e => e.Iscustomer).HasColumnName("ISCUSTOMER");

                entity.Property(e => e.JuniperIndustryCode).HasColumnName("JUNIPER_INDUSTRY_CODE");

                entity.Property(e => e.Langu).HasColumnName("LANGU");

                entity.Property(e => e.Mastermergeind).HasColumnName("MASTERMERGEIND");

                entity.Property(e => e.Name1).HasColumnName("NAME1");

                entity.Property(e => e.Name2).HasColumnName("NAME2");

                entity.Property(e => e.Name3).HasColumnName("NAME3");

                entity.Property(e => e.Name4).HasColumnName("NAME4");

                entity.Property(e => e.NameCo).HasColumnName("NAME_CO");

                entity.Property(e => e.Oracleid).HasColumnName("ORACLEID");

                entity.Property(e => e.OrdBlockReason).HasColumnName("ORD_BLOCK_REASON");

                entity.Property(e => e.PartnerAuthCode).HasColumnName("PARTNER_AUTH_CODE");

                entity.Property(e => e.Payerrole).HasColumnName("PAYERROLE");

                entity.Property(e => e.Postalcode).HasColumnName("POSTALCODE");

                entity.Property(e => e.PrimaryVarId).HasColumnName("PRIMARY_VAR_ID");

                entity.Property(e => e.Region).HasColumnName("REGION");

                entity.Property(e => e.Resellerrole).HasColumnName("RESELLERROLE");

                entity.Property(e => e.Roomnumber).HasColumnName("ROOMNUMBER");

                entity.Property(e => e.Salessystemflag).HasColumnName("SALESSYSTEMFLAG");

                entity.Property(e => e.Searchterm1).HasColumnName("SEARCHTERM1");

                entity.Property(e => e.Searchterm2).HasColumnName("SEARCHTERM2");

                entity.Property(e => e.SfdcId).HasColumnName("SFDC_ID");

                entity.Property(e => e.SfdcVictimId).HasColumnName("SFDC_VICTIM_ID");

                entity.Property(e => e.Shiptorole).HasColumnName("SHIPTOROLE");

                entity.Property(e => e.Siebelid).HasColumnName("SIEBELID");

                entity.Property(e => e.Soldtorole).HasColumnName("SOLDTOROLE");

                entity.Property(e => e.Source).HasColumnName("SOURCE");

                entity.Property(e => e.Street1).HasColumnName("STREET1");

                entity.Property(e => e.Street2).HasColumnName("STREET2");

                entity.Property(e => e.Street3).HasColumnName("STREET3");

                entity.Property(e => e.Street4).HasColumnName("STREET4");

                entity.Property(e => e.Street5).HasColumnName("STREET5");

                entity.Property(e => e.TelNumber).HasColumnName("TEL_NUMBER");

                entity.Property(e => e.TransZone).HasColumnName("TRANS_ZONE");

                entity.Property(e => e.UcmId).HasColumnName("UCM_ID");

                entity.Property(e => e.UriAddr).HasColumnName("URI_ADDR");

                entity.Property(e => e.VarId).HasColumnName("VAR_ID");

                entity.Property(e => e.Verifydate).HasColumnName("VERIFYDATE");
            });

            modelBuilder.Entity<CrmAccountNonus1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("crm_account_nonus1", "dsf");

                entity.Property(e => e.Accountcategory).HasColumnName("ACCOUNTCATEGORY");

                entity.Property(e => e.Accountclass).HasColumnName("ACCOUNTCLASS");

                entity.Property(e => e.Accountgroup).HasColumnName("ACCOUNTGROUP");

                entity.Property(e => e.Accounttype).HasColumnName("ACCOUNTTYPE");

                entity.Property(e => e.Addrnumber).HasColumnName("ADDRNUMBER");

                entity.Property(e => e.ArchivingFlag).HasColumnName("ARCHIVING_FLAG");

                entity.Property(e => e.Attr4).HasColumnName("ATTR4");

                entity.Property(e => e.BilBlockReason).HasColumnName("BIL_BLOCK_REASON");

                entity.Property(e => e.Billtorole).HasColumnName("BILLTOROLE");

                entity.Property(e => e.BpLastUpd).HasColumnName("BP_LAST_UPD");

                entity.Property(e => e.Bpid)
                    .HasMaxLength(150)
                    .HasColumnName("BPID");

                entity.Property(e => e.Buildingcode).HasColumnName("BUILDINGCODE");

                entity.Property(e => e.CentralBlock).HasColumnName("CENTRAL_BLOCK");

                entity.Property(e => e.Chusr).HasColumnName("CHUSR");

                entity.Property(e => e.City).HasColumnName("CITY");

                entity.Property(e => e.Commonid).HasColumnName("COMMONID");

                entity.Property(e => e.Country).HasColumnName("COUNTRY");

                entity.Property(e => e.County).HasColumnName("COUNTY");

                entity.Property(e => e.Customersince).HasColumnName("CUSTOMERSINCE");

                entity.Property(e => e.DelBlockReason).HasColumnName("DEL_BLOCK_REASON");

                entity.Property(e => e.Distributorrole).HasColumnName("DISTRIBUTORROLE");

                entity.Property(e => e.Domduns).HasColumnName("DOMDUNS");

                entity.Property(e => e.Donotcontact).HasColumnName("DONOTCONTACT");

                entity.Property(e => e.Duns).HasColumnName("DUNS");

                entity.Property(e => e.Edbid).HasColumnName("EDBID");

                entity.Property(e => e.EdiId).HasColumnName("EDI_ID");

                entity.Property(e => e.EmpLogin).HasColumnName("EMP_LOGIN");

                entity.Property(e => e.EmpName).HasColumnName("EMP_NAME");

                entity.Property(e => e.EmpOrgCode).HasColumnName("EMP_ORG_CODE");

                entity.Property(e => e.EmpOrgUnit).HasColumnName("EMP_ORG_UNIT");

                entity.Property(e => e.EmpOrgUntiName).HasColumnName("EMP_ORG_UNTI_NAME");

                entity.Property(e => e.Endcustomerrole).HasColumnName("ENDCUSTOMERROLE");

                entity.Property(e => e.FaxNumber).HasColumnName("FAX_NUMBER");

                entity.Property(e => e.Floor).HasColumnName("FLOOR");

                entity.Property(e => e.Globalultduns).HasColumnName("GLOBALULTDUNS");

                entity.Property(e => e.Grouping)
                    .HasMaxLength(150)
                    .HasColumnName("GROUPING");

                entity.Property(e => e.Housenumber).HasColumnName("HOUSENUMBER");

                entity.Property(e => e.Housenumbersupplement).HasColumnName("HOUSENUMBERSUPPLEMENT");

                entity.Property(e => e.Iscustomer).HasColumnName("ISCUSTOMER");

                entity.Property(e => e.JuniperIndustryCode).HasColumnName("JUNIPER_INDUSTRY_CODE");

                entity.Property(e => e.Langu).HasColumnName("LANGU");

                entity.Property(e => e.Mastermergeind).HasColumnName("MASTERMERGEIND");

                entity.Property(e => e.Name1).HasColumnName("NAME1");

                entity.Property(e => e.Name2).HasColumnName("NAME2");

                entity.Property(e => e.Name3).HasColumnName("NAME3");

                entity.Property(e => e.Name4).HasColumnName("NAME4");

                entity.Property(e => e.NameCo).HasColumnName("NAME_CO");

                entity.Property(e => e.Oracleid).HasColumnName("ORACLEID");

                entity.Property(e => e.OrdBlockReason).HasColumnName("ORD_BLOCK_REASON");

                entity.Property(e => e.PartnerAuthCode).HasColumnName("PARTNER_AUTH_CODE");

                entity.Property(e => e.Payerrole).HasColumnName("PAYERROLE");

                entity.Property(e => e.Postalcode).HasColumnName("POSTALCODE");

                entity.Property(e => e.PrimaryVarId).HasColumnName("PRIMARY_VAR_ID");

                entity.Property(e => e.Region).HasColumnName("REGION");

                entity.Property(e => e.Resellerrole).HasColumnName("RESELLERROLE");

                entity.Property(e => e.Roomnumber).HasColumnName("ROOMNUMBER");

                entity.Property(e => e.Salessystemflag).HasColumnName("SALESSYSTEMFLAG");

                entity.Property(e => e.Searchterm1).HasColumnName("SEARCHTERM1");

                entity.Property(e => e.Searchterm2).HasColumnName("SEARCHTERM2");

                entity.Property(e => e.SfdcId).HasColumnName("SFDC_ID");

                entity.Property(e => e.SfdcVictimId).HasColumnName("SFDC_VICTIM_ID");

                entity.Property(e => e.Shiptorole).HasColumnName("SHIPTOROLE");

                entity.Property(e => e.Siebelid).HasColumnName("SIEBELID");

                entity.Property(e => e.Soldtorole).HasColumnName("SOLDTOROLE");

                entity.Property(e => e.Source).HasColumnName("SOURCE");

                entity.Property(e => e.Street1).HasColumnName("STREET1");

                entity.Property(e => e.Street2).HasColumnName("STREET2");

                entity.Property(e => e.Street3).HasColumnName("STREET3");

                entity.Property(e => e.Street4).HasColumnName("STREET4");

                entity.Property(e => e.Street5).HasColumnName("STREET5");

                entity.Property(e => e.TelNumber).HasColumnName("TEL_NUMBER");

                entity.Property(e => e.TransZone).HasColumnName("TRANS_ZONE");

                entity.Property(e => e.UcmId).HasColumnName("UCM_ID");

                entity.Property(e => e.UriAddr).HasColumnName("URI_ADDR");

                entity.Property(e => e.VarId).HasColumnName("VAR_ID");

                entity.Property(e => e.Verifydate).HasColumnName("VERIFYDATE");
            });

            modelBuilder.Entity<CrmAccountU>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("crm_account_us", "dev");

                entity.Property(e => e.Accountclass)
                    .HasMaxLength(250)
                    .HasColumnName("ACCOUNTCLASS");

                entity.Property(e => e.Accountgroup)
                    .HasMaxLength(250)
                    .HasColumnName("ACCOUNTGROUP");

                entity.Property(e => e.Accounttype)
                    .HasMaxLength(250)
                    .HasColumnName("ACCOUNTTYPE");

                entity.Property(e => e.Addrnumber)
                    .HasMaxLength(250)
                    .HasColumnName("ADDRNUMBER");

                entity.Property(e => e.ArchivingFlag)
                    .HasMaxLength(250)
                    .HasColumnName("ARCHIVING_FLAG");

                entity.Property(e => e.Attr4)
                    .HasMaxLength(250)
                    .HasColumnName("ATTR4");

                entity.Property(e => e.Billtorole)
                    .HasMaxLength(250)
                    .HasColumnName("BILLTOROLE");

                entity.Property(e => e.BpLastUpd)
                    .HasMaxLength(250)
                    .HasColumnName("BP_LAST_UPD");

                entity.Property(e => e.Bpid)
                    .HasMaxLength(50)
                    .HasColumnName("BPID");

                entity.Property(e => e.Buildingcode)
                    .HasMaxLength(50)
                    .HasColumnName("BUILDINGCODE");

                entity.Property(e => e.CentralBlock)
                    .HasMaxLength(250)
                    .HasColumnName("CENTRAL_BLOCK");

                entity.Property(e => e.Chusr)
                    .HasMaxLength(250)
                    .HasColumnName("CHUSR");

                entity.Property(e => e.City)
                    .HasMaxLength(250)
                    .HasColumnName("CITY");

                entity.Property(e => e.Commonid)
                    .HasMaxLength(250)
                    .HasColumnName("COMMONID");

                entity.Property(e => e.Country)
                    .HasMaxLength(250)
                    .HasColumnName("COUNTRY");

                entity.Property(e => e.Customersince)
                    .HasMaxLength(50)
                    .HasColumnName("CUSTOMERSINCE");

                entity.Property(e => e.DedupId).HasColumnName("dedup_id");

                entity.Property(e => e.Distributorrole)
                    .HasMaxLength(250)
                    .HasColumnName("DISTRIBUTORROLE");

                entity.Property(e => e.Domduns)
                    .HasMaxLength(50)
                    .HasColumnName("DOMDUNS");

                entity.Property(e => e.Duns)
                    .HasMaxLength(50)
                    .HasColumnName("DUNS");

                entity.Property(e => e.EdiId)
                    .HasMaxLength(50)
                    .HasColumnName("EDI_ID");

                entity.Property(e => e.EmpLogin)
                    .HasMaxLength(1000)
                    .HasColumnName("EMP_LOGIN");

                entity.Property(e => e.EmpName)
                    .HasMaxLength(1000)
                    .HasColumnName("EMP_NAME");

                entity.Property(e => e.EmpOrgCode)
                    .HasMaxLength(250)
                    .HasColumnName("EMP_ORG_CODE");

                entity.Property(e => e.EmpOrgUnit)
                    .HasMaxLength(250)
                    .HasColumnName("EMP_ORG_UNIT");

                entity.Property(e => e.EmpOrgUntiName)
                    .HasMaxLength(1000)
                    .HasColumnName("EMP_ORG_UNTI_NAME");

                entity.Property(e => e.Endcustomerrole)
                    .HasMaxLength(250)
                    .HasColumnName("ENDCUSTOMERROLE");

                entity.Property(e => e.FaxNumber)
                    .HasMaxLength(50)
                    .HasColumnName("FAX_NUMBER");

                entity.Property(e => e.Floor)
                    .HasMaxLength(50)
                    .HasColumnName("FLOOR");

                entity.Property(e => e.Globalultduns)
                    .HasMaxLength(50)
                    .HasColumnName("GLOBALULTDUNS");

                entity.Property(e => e.Grouping)
                    .HasMaxLength(50)
                    .HasColumnName("GROUPING");

                entity.Property(e => e.Housenumber)
                    .HasMaxLength(50)
                    .HasColumnName("HOUSENUMBER");

                entity.Property(e => e.Housenumbersupplement)
                    .HasMaxLength(50)
                    .HasColumnName("HOUSENUMBERSUPPLEMENT");

                entity.Property(e => e.Iscustomer)
                    .HasMaxLength(250)
                    .HasColumnName("ISCUSTOMER");

                entity.Property(e => e.JuniperIndustryCode)
                    .HasMaxLength(250)
                    .HasColumnName("JUNIPER_INDUSTRY_CODE");

                entity.Property(e => e.Langu)
                    .HasMaxLength(1000)
                    .HasColumnName("LANGU");

                entity.Property(e => e.Name1)
                    .HasMaxLength(1000)
                    .HasColumnName("NAME1");

                entity.Property(e => e.Name2)
                    .HasMaxLength(1000)
                    .HasColumnName("NAME2");

                entity.Property(e => e.Name3)
                    .HasMaxLength(1000)
                    .HasColumnName("NAME3");

                entity.Property(e => e.Name4)
                    .HasMaxLength(1000)
                    .HasColumnName("NAME4");

                entity.Property(e => e.Oracleid)
                    .HasMaxLength(250)
                    .HasColumnName("ORACLEID");

                entity.Property(e => e.PartnerAuthCode)
                    .HasMaxLength(250)
                    .HasColumnName("PARTNER_AUTH_CODE");

                entity.Property(e => e.Payerrole)
                    .HasMaxLength(250)
                    .HasColumnName("PAYERROLE");

                entity.Property(e => e.Postalcode)
                    .HasMaxLength(50)
                    .HasColumnName("POSTALCODE");

                entity.Property(e => e.PrimaryVarId)
                    .HasMaxLength(250)
                    .HasColumnName("PRIMARY_VAR_ID");

                entity.Property(e => e.Region)
                    .HasMaxLength(250)
                    .HasColumnName("REGION");

                entity.Property(e => e.Resellerrole)
                    .HasMaxLength(250)
                    .HasColumnName("RESELLERROLE");

                entity.Property(e => e.Roomnumber)
                    .HasMaxLength(50)
                    .HasColumnName("ROOMNUMBER");

                entity.Property(e => e.Salessystemflag)
                    .HasMaxLength(250)
                    .HasColumnName("SALESSYSTEMFLAG");

                entity.Property(e => e.Searchterm1)
                    .HasMaxLength(1000)
                    .HasColumnName("SEARCHTERM1");

                entity.Property(e => e.Searchterm2)
                    .HasMaxLength(1000)
                    .HasColumnName("SEARCHTERM2");

                entity.Property(e => e.SfdcId)
                    .HasMaxLength(250)
                    .HasColumnName("SFDC_ID");

                entity.Property(e => e.SfdcVictimId)
                    .HasMaxLength(250)
                    .HasColumnName("SFDC_VICTIM_ID");

                entity.Property(e => e.Shiptorole)
                    .HasMaxLength(250)
                    .HasColumnName("SHIPTOROLE");

                entity.Property(e => e.Siebelid)
                    .HasMaxLength(250)
                    .HasColumnName("SIEBELID");

                entity.Property(e => e.Soldtorole)
                    .HasMaxLength(250)
                    .HasColumnName("SOLDTOROLE");

                entity.Property(e => e.Source)
                    .HasMaxLength(50)
                    .HasColumnName("SOURCE");

                entity.Property(e => e.Street1).HasColumnName("STREET1");

                entity.Property(e => e.Street2).HasColumnName("STREET2");

                entity.Property(e => e.Street3).HasColumnName("STREET3");

                entity.Property(e => e.Street4).HasColumnName("STREET4");

                entity.Property(e => e.Street5).HasColumnName("STREET5");

                entity.Property(e => e.TelNumber)
                    .HasMaxLength(50)
                    .HasColumnName("TEL_NUMBER");

                entity.Property(e => e.TransZone)
                    .HasMaxLength(50)
                    .HasColumnName("TRANS_ZONE");

                entity.Property(e => e.UcmId)
                    .HasMaxLength(50)
                    .HasColumnName("UCM_ID");

                entity.Property(e => e.UriAddr)
                    .HasMaxLength(50)
                    .HasColumnName("URI_ADDR");

                entity.Property(e => e.VarId)
                    .HasMaxLength(50)
                    .HasColumnName("VAR_ID");

                entity.Property(e => e.Verifydate)
                    .HasMaxLength(50)
                    .HasColumnName("VERIFYDATE");
            });

            modelBuilder.Entity<CrmAccountU1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("crm_account_us", "dsf");

                entity.Property(e => e.Accountclass)
                    .HasMaxLength(250)
                    .HasColumnName("ACCOUNTCLASS");

                entity.Property(e => e.Accountgroup)
                    .HasMaxLength(250)
                    .HasColumnName("ACCOUNTGROUP");

                entity.Property(e => e.Accounttype)
                    .HasMaxLength(250)
                    .HasColumnName("ACCOUNTTYPE");

                entity.Property(e => e.Addrnumber)
                    .HasMaxLength(250)
                    .HasColumnName("ADDRNUMBER");

                entity.Property(e => e.ArchivingFlag)
                    .HasMaxLength(250)
                    .HasColumnName("ARCHIVING_FLAG");

                entity.Property(e => e.Attr4)
                    .HasMaxLength(250)
                    .HasColumnName("ATTR4");

                entity.Property(e => e.Billtorole)
                    .HasMaxLength(250)
                    .HasColumnName("BILLTOROLE");

                entity.Property(e => e.BpLastUpd)
                    .HasMaxLength(250)
                    .HasColumnName("BP_LAST_UPD");

                entity.Property(e => e.Bpid)
                    .HasMaxLength(50)
                    .HasColumnName("BPID");

                entity.Property(e => e.Buildingcode)
                    .HasMaxLength(50)
                    .HasColumnName("BUILDINGCODE");

                entity.Property(e => e.CentralBlock)
                    .HasMaxLength(250)
                    .HasColumnName("CENTRAL_BLOCK");

                entity.Property(e => e.Chusr)
                    .HasMaxLength(250)
                    .HasColumnName("CHUSR");

                entity.Property(e => e.City)
                    .HasMaxLength(250)
                    .HasColumnName("CITY");

                entity.Property(e => e.Commonid)
                    .HasMaxLength(250)
                    .HasColumnName("COMMONID");

                entity.Property(e => e.Country)
                    .HasMaxLength(250)
                    .HasColumnName("COUNTRY");

                entity.Property(e => e.Customersince)
                    .HasMaxLength(50)
                    .HasColumnName("CUSTOMERSINCE");

                entity.Property(e => e.Distributorrole)
                    .HasMaxLength(250)
                    .HasColumnName("DISTRIBUTORROLE");

                entity.Property(e => e.Domduns)
                    .HasMaxLength(50)
                    .HasColumnName("DOMDUNS");

                entity.Property(e => e.Duns)
                    .HasMaxLength(50)
                    .HasColumnName("DUNS");

                entity.Property(e => e.EdiId)
                    .HasMaxLength(50)
                    .HasColumnName("EDI_ID");

                entity.Property(e => e.EmpLogin)
                    .HasMaxLength(1000)
                    .HasColumnName("EMP_LOGIN");

                entity.Property(e => e.EmpName)
                    .HasMaxLength(1000)
                    .HasColumnName("EMP_NAME");

                entity.Property(e => e.EmpOrgCode)
                    .HasMaxLength(250)
                    .HasColumnName("EMP_ORG_CODE");

                entity.Property(e => e.EmpOrgUnit)
                    .HasMaxLength(250)
                    .HasColumnName("EMP_ORG_UNIT");

                entity.Property(e => e.EmpOrgUntiName)
                    .HasMaxLength(1000)
                    .HasColumnName("EMP_ORG_UNTI_NAME");

                entity.Property(e => e.Endcustomerrole)
                    .HasMaxLength(250)
                    .HasColumnName("ENDCUSTOMERROLE");

                entity.Property(e => e.FaxNumber)
                    .HasMaxLength(50)
                    .HasColumnName("FAX_NUMBER");

                entity.Property(e => e.Floor)
                    .HasMaxLength(50)
                    .HasColumnName("FLOOR");

                entity.Property(e => e.Globalultduns)
                    .HasMaxLength(50)
                    .HasColumnName("GLOBALULTDUNS");

                entity.Property(e => e.Grouping)
                    .HasMaxLength(50)
                    .HasColumnName("GROUPING");

                entity.Property(e => e.Housenumber)
                    .HasMaxLength(50)
                    .HasColumnName("HOUSENUMBER");

                entity.Property(e => e.Housenumbersupplement)
                    .HasMaxLength(50)
                    .HasColumnName("HOUSENUMBERSUPPLEMENT");

                entity.Property(e => e.Iscustomer)
                    .HasMaxLength(250)
                    .HasColumnName("ISCUSTOMER");

                entity.Property(e => e.JuniperIndustryCode)
                    .HasMaxLength(250)
                    .HasColumnName("JUNIPER_INDUSTRY_CODE");

                entity.Property(e => e.Langu)
                    .HasMaxLength(1000)
                    .HasColumnName("LANGU");

                entity.Property(e => e.Name1)
                    .HasMaxLength(1000)
                    .HasColumnName("NAME1");

                entity.Property(e => e.Name2)
                    .HasMaxLength(1000)
                    .HasColumnName("NAME2");

                entity.Property(e => e.Name3)
                    .HasMaxLength(1000)
                    .HasColumnName("NAME3");

                entity.Property(e => e.Name4)
                    .HasMaxLength(1000)
                    .HasColumnName("NAME4");

                entity.Property(e => e.Oracleid)
                    .HasMaxLength(250)
                    .HasColumnName("ORACLEID");

                entity.Property(e => e.PartnerAuthCode)
                    .HasMaxLength(250)
                    .HasColumnName("PARTNER_AUTH_CODE");

                entity.Property(e => e.Payerrole)
                    .HasMaxLength(250)
                    .HasColumnName("PAYERROLE");

                entity.Property(e => e.Postalcode)
                    .HasMaxLength(50)
                    .HasColumnName("POSTALCODE");

                entity.Property(e => e.PrimaryVarId)
                    .HasMaxLength(250)
                    .HasColumnName("PRIMARY_VAR_ID");

                entity.Property(e => e.Region)
                    .HasMaxLength(250)
                    .HasColumnName("REGION");

                entity.Property(e => e.Resellerrole)
                    .HasMaxLength(250)
                    .HasColumnName("RESELLERROLE");

                entity.Property(e => e.Roomnumber)
                    .HasMaxLength(50)
                    .HasColumnName("ROOMNUMBER");

                entity.Property(e => e.Salessystemflag)
                    .HasMaxLength(250)
                    .HasColumnName("SALESSYSTEMFLAG");

                entity.Property(e => e.Searchterm1)
                    .HasMaxLength(1000)
                    .HasColumnName("SEARCHTERM1");

                entity.Property(e => e.Searchterm2)
                    .HasMaxLength(1000)
                    .HasColumnName("SEARCHTERM2");

                entity.Property(e => e.SfdcId)
                    .HasMaxLength(250)
                    .HasColumnName("SFDC_ID");

                entity.Property(e => e.SfdcVictimId)
                    .HasMaxLength(250)
                    .HasColumnName("SFDC_VICTIM_ID");

                entity.Property(e => e.Shiptorole)
                    .HasMaxLength(250)
                    .HasColumnName("SHIPTOROLE");

                entity.Property(e => e.Siebelid)
                    .HasMaxLength(250)
                    .HasColumnName("SIEBELID");

                entity.Property(e => e.Soldtorole)
                    .HasMaxLength(250)
                    .HasColumnName("SOLDTOROLE");

                entity.Property(e => e.Source)
                    .HasMaxLength(50)
                    .HasColumnName("SOURCE");

                entity.Property(e => e.Street1).HasColumnName("STREET1");

                entity.Property(e => e.Street2).HasColumnName("STREET2");

                entity.Property(e => e.Street3).HasColumnName("STREET3");

                entity.Property(e => e.Street4).HasColumnName("STREET4");

                entity.Property(e => e.Street5).HasColumnName("STREET5");

                entity.Property(e => e.TelNumber)
                    .HasMaxLength(50)
                    .HasColumnName("TEL_NUMBER");

                entity.Property(e => e.TransZone)
                    .HasMaxLength(50)
                    .HasColumnName("TRANS_ZONE");

                entity.Property(e => e.UcmId)
                    .HasMaxLength(50)
                    .HasColumnName("UCM_ID");

                entity.Property(e => e.UriAddr)
                    .HasMaxLength(50)
                    .HasColumnName("URI_ADDR");

                entity.Property(e => e.VarId)
                    .HasMaxLength(50)
                    .HasColumnName("VAR_ID");

                entity.Property(e => e.Verifydate)
                    .HasMaxLength(50)
                    .HasColumnName("VERIFYDATE");
            });

            modelBuilder.Entity<CtyGrouping>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Cty_Grouping");

                entity.Property(e => e.CtyCode)
                    .HasMaxLength(255)
                    .HasColumnName("Cty_Code");

                entity.Property(e => e.CtyGrp)
                    .HasMaxLength(255)
                    .HasColumnName("Cty_Grp");

                entity.Property(e => e.LongName)
                    .HasMaxLength(255)
                    .HasColumnName("Long_Name");
            });

            modelBuilder.Entity<CustProfiling>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Cust_Profiling");

                entity.Property(e => e.Bpid)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("bpid");

                entity.Property(e => e.City).HasColumnName("city");

                entity.Property(e => e.Country).HasColumnName("country");

                entity.Property(e => e.CreatedOn).HasColumnName("CREATED_ON");

                entity.Property(e => e.LastUpdatedOn)
                    .HasColumnType("datetime")
                    .HasColumnName("LAST_UPDATED_ON");

                entity.Property(e => e.Name).HasColumnName("NAME");

                entity.Property(e => e.PostalCode).HasColumnName("POSTAL_CODE");

                entity.Property(e => e.Region).HasColumnName("region");

                entity.Property(e => e.Street).HasColumnName("STREET");
            });

            modelBuilder.Entity<CustomerHier05102018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("customer_hier_05102018", "dsf");

                entity.Property(e => e.BusinessPartnerAcctClassText)
                    .HasMaxLength(250)
                    .HasColumnName("_Business_Partner___Acct_Class__Text__");

                entity.Property(e => e.BusinessPartnerBusinessPartnerCategoryKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Business_Partner___Business_Partner_Category__Key__");

                entity.Property(e => e.BusinessPartnerBusinessPartnerCategoryText)
                    .HasMaxLength(150)
                    .HasColumnName("_Business_Partner___Business_Partner_Category__Text__");

                entity.Property(e => e.BusinessPartnerCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Business_Partner___Country__Key__");

                entity.Property(e => e.BusinessPartnerCustomerSinceDateKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Business_Partner___Customer_Since_Date__Key__");

                entity.Property(e => e.BusinessPartnerGlobalUltimateParentKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Business_Partner___Global_Ultimate_Parent__Key__");

                entity.Property(e => e.BusinessPartnerKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Business_Partner___Key_");

                entity.Property(e => e.BusinessPartnerLongText)
                    .HasMaxLength(500)
                    .HasColumnName("_Business_Partner___Long_Text_");

                entity.Property(e => e.BusinessPartnerParentIdKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Business_Partner___Parent_ID__Key__");

                entity.Property(e => e.BusinessPartnerSectorText)
                    .HasMaxLength(250)
                    .HasColumnName("_Business_Partner___Sector__Text__");

                entity.Property(e => e.BusinessPartnerUltimateParentKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Business_Partner___Ultimate_Parent__Key__");

                entity.Property(e => e.BusinessPartnerVerticalKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Business_Partner___Vertical__Key__");

                entity.Property(e => e.CreatedOnKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Created_on___Key_");

                entity.Property(e => e.GlobalUltimateParentLongText)
                    .HasMaxLength(500)
                    .HasColumnName("_Global_Ultimate_Parent___Long_Text_");

                entity.Property(e => e.ParentIdLongText)
                    .HasMaxLength(500)
                    .HasColumnName("_Parent_ID___Long_Text_");

                entity.Property(e => e.UltimateParentLongText)
                    .HasMaxLength(500)
                    .HasColumnName("_Ultimate_Parent___Long_Text_");
            });

            modelBuilder.Entity<CustomerMasterMetaVw>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("customer_master_meta_vw");

                entity.Property(e => e.Accountclass)
                    .HasMaxLength(50)
                    .HasColumnName("accountclass");

                entity.Property(e => e.Accountgroup)
                    .HasMaxLength(50)
                    .HasColumnName("accountgroup");

                entity.Property(e => e.Accounttype)
                    .HasMaxLength(50)
                    .HasColumnName("accounttype");

                entity.Property(e => e.Addrnumber)
                    .HasMaxLength(50)
                    .HasColumnName("addrnumber");

                entity.Property(e => e.ArchivingFlag)
                    .HasMaxLength(50)
                    .HasColumnName("archiving_flag");

                entity.Property(e => e.Attr4)
                    .HasMaxLength(255)
                    .HasColumnName("attr4");

                entity.Property(e => e.Billtorole)
                    .HasMaxLength(50)
                    .HasColumnName("billtorole");

                entity.Property(e => e.BpLastUpd)
                    .HasColumnType("datetime")
                    .HasColumnName("BP_LAST_UPD");

                entity.Property(e => e.Bpid)
                    .HasMaxLength(50)
                    .HasColumnName("bpid");

                entity.Property(e => e.BpidOrig)
                    .HasMaxLength(50)
                    .HasColumnName("bpid_orig");

                entity.Property(e => e.Buildingcode)
                    .HasMaxLength(50)
                    .HasColumnName("buildingcode");

                entity.Property(e => e.CentralBlock)
                    .HasMaxLength(255)
                    .HasColumnName("central_block");

                entity.Property(e => e.Chusr)
                    .HasMaxLength(255)
                    .HasColumnName("chusr");

                entity.Property(e => e.City)
                    .HasMaxLength(255)
                    .HasColumnName("city");

                entity.Property(e => e.Commonid)
                    .HasMaxLength(50)
                    .HasColumnName("commonid");

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(20)
                    .HasColumnName("country_code");

                entity.Property(e => e.CountryName)
                    .HasMaxLength(250)
                    .HasColumnName("country_name");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("created_date");

                entity.Property(e => e.Customersince)
                    .HasColumnType("datetime")
                    .HasColumnName("customersince");

                entity.Property(e => e.Distributorrole)
                    .HasMaxLength(50)
                    .HasColumnName("distributorrole");

                entity.Property(e => e.Domduns)
                    .HasMaxLength(255)
                    .HasColumnName("domduns");

                entity.Property(e => e.Duns)
                    .HasMaxLength(50)
                    .HasColumnName("duns");

                entity.Property(e => e.EdiId)
                    .HasMaxLength(255)
                    .HasColumnName("edi_id");

                entity.Property(e => e.EmpLogin)
                    .HasMaxLength(100)
                    .HasColumnName("emp_login");

                entity.Property(e => e.EmpName)
                    .HasMaxLength(100)
                    .HasColumnName("emp_name");

                entity.Property(e => e.EmpOrgCode)
                    .HasMaxLength(50)
                    .HasColumnName("emp_org_code");

                entity.Property(e => e.EmpOrgUnit)
                    .HasMaxLength(50)
                    .HasColumnName("emp_org_unit");

                entity.Property(e => e.EmpOrgUntiName)
                    .HasMaxLength(255)
                    .HasColumnName("emp_org_unti_name");

                entity.Property(e => e.Endcustomerrole)
                    .HasMaxLength(50)
                    .HasColumnName("endcustomerrole");

                entity.Property(e => e.FaxNumber)
                    .HasMaxLength(50)
                    .HasColumnName("fax_number");

                entity.Property(e => e.Floor)
                    .HasMaxLength(50)
                    .HasColumnName("floor");

                entity.Property(e => e.Globalultduns)
                    .HasMaxLength(255)
                    .HasColumnName("globalultduns");

                entity.Property(e => e.Grouping)
                    .HasMaxLength(50)
                    .HasColumnName("grouping");

                entity.Property(e => e.Housenumber)
                    .HasMaxLength(255)
                    .HasColumnName("housenumber");

                entity.Property(e => e.Housenumbersupplement)
                    .HasMaxLength(255)
                    .HasColumnName("housenumbersupplement");

                entity.Property(e => e.Iscustomer)
                    .HasMaxLength(50)
                    .HasColumnName("iscustomer");

                entity.Property(e => e.JuniperIndustryCode)
                    .HasMaxLength(50)
                    .HasColumnName("juniper_industry_code");

                entity.Property(e => e.Langu)
                    .HasMaxLength(50)
                    .HasColumnName("langu");

                entity.Property(e => e.Name1)
                    .HasMaxLength(255)
                    .HasColumnName("name1");

                entity.Property(e => e.Name2)
                    .HasMaxLength(255)
                    .HasColumnName("name2");

                entity.Property(e => e.Name3)
                    .HasMaxLength(255)
                    .HasColumnName("name3");

                entity.Property(e => e.Name4)
                    .HasMaxLength(255)
                    .HasColumnName("name4");

                entity.Property(e => e.NameConc)
                    .HasMaxLength(500)
                    .HasColumnName("name_conc");

                entity.Property(e => e.Oracleid)
                    .HasMaxLength(255)
                    .HasColumnName("oracleid");

                entity.Property(e => e.PartnerAuthCode)
                    .HasMaxLength(255)
                    .HasColumnName("partner_auth_code");

                entity.Property(e => e.Payerrole)
                    .HasMaxLength(50)
                    .HasColumnName("payerrole");

                entity.Property(e => e.Postalcode)
                    .HasMaxLength(50)
                    .HasColumnName("postalcode");

                entity.Property(e => e.PrimaryVarId)
                    .HasMaxLength(255)
                    .HasColumnName("primary_var_id");

                entity.Property(e => e.Region)
                    .HasMaxLength(50)
                    .HasColumnName("region");

                entity.Property(e => e.Resellerrole)
                    .HasMaxLength(50)
                    .HasColumnName("resellerrole");

                entity.Property(e => e.Roomnumber)
                    .HasMaxLength(50)
                    .HasColumnName("roomnumber");

                entity.Property(e => e.Salessystemflag)
                    .HasMaxLength(50)
                    .HasColumnName("salessystemflag");

                entity.Property(e => e.Searchterm1)
                    .HasMaxLength(50)
                    .HasColumnName("searchterm1");

                entity.Property(e => e.Searchterm2)
                    .HasMaxLength(50)
                    .HasColumnName("searchterm2");

                entity.Property(e => e.SfdcId)
                    .HasMaxLength(255)
                    .HasColumnName("sfdc_id");

                entity.Property(e => e.SfdcVictimId)
                    .HasMaxLength(255)
                    .HasColumnName("sfdc_victim_id");

                entity.Property(e => e.Shiptorole)
                    .HasMaxLength(50)
                    .HasColumnName("shiptorole");

                entity.Property(e => e.Siebelid)
                    .HasMaxLength(255)
                    .HasColumnName("siebelid");

                entity.Property(e => e.Soldtorole)
                    .HasMaxLength(50)
                    .HasColumnName("soldtorole");

                entity.Property(e => e.Source)
                    .HasMaxLength(50)
                    .HasColumnName("source");

                entity.Property(e => e.Street1)
                    .HasMaxLength(255)
                    .HasColumnName("street1");

                entity.Property(e => e.Street2)
                    .HasMaxLength(255)
                    .HasColumnName("street2");

                entity.Property(e => e.Street3)
                    .HasMaxLength(255)
                    .HasColumnName("street3");

                entity.Property(e => e.Street4)
                    .HasMaxLength(255)
                    .HasColumnName("street4");

                entity.Property(e => e.Street5)
                    .HasMaxLength(255)
                    .HasColumnName("street5");

                entity.Property(e => e.StreetConc)
                    .HasMaxLength(1000)
                    .HasColumnName("street_conc");

                entity.Property(e => e.TelNumber)
                    .HasMaxLength(50)
                    .HasColumnName("tel_number");

                entity.Property(e => e.TransZone)
                    .HasMaxLength(50)
                    .HasColumnName("trans_zone");

                entity.Property(e => e.UcmId)
                    .HasMaxLength(255)
                    .HasColumnName("ucm_id");

                entity.Property(e => e.UriAddr)
                    .HasMaxLength(255)
                    .HasColumnName("uri_addr");

                entity.Property(e => e.VarId)
                    .HasMaxLength(255)
                    .HasColumnName("var_id");

                entity.Property(e => e.Verifydate)
                    .HasColumnType("datetime")
                    .HasColumnName("verifydate");
            });

            modelBuilder.Entity<CustomerNewupdateTest>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("customer_newupdate_test", "dev");

                entity.Property(e => e.AddressNo)
                    .HasMaxLength(50)
                    .HasColumnName("address_no");

                entity.Property(e => e.BpBillingHold)
                    .HasMaxLength(50)
                    .HasColumnName("bp_billing_hold");

                entity.Property(e => e.BpCategory)
                    .HasMaxLength(50)
                    .HasColumnName("bp_category");

                entity.Property(e => e.BpDeliveryHold)
                    .HasMaxLength(50)
                    .HasColumnName("bp_delivery_hold");

                entity.Property(e => e.BpExternalNo)
                    .HasMaxLength(50)
                    .HasColumnName("bp_external_no");

                entity.Property(e => e.BpGrouping)
                    .HasMaxLength(50)
                    .HasColumnName("bp_grouping");

                entity.Property(e => e.BpGuid)
                    .HasMaxLength(50)
                    .HasColumnName("bp_guid");

                entity.Property(e => e.BpRole)
                    .HasMaxLength(50)
                    .HasColumnName("bp_role");

                entity.Property(e => e.BpStatusCode)
                    .HasMaxLength(50)
                    .HasColumnName("bp_status_code");

                entity.Property(e => e.BpStatusDesc)
                    .HasMaxLength(50)
                    .HasColumnName("bp_status_desc");

                entity.Property(e => e.BpTransactionHold)
                    .HasMaxLength(50)
                    .HasColumnName("bp_transaction_hold");

                entity.Property(e => e.BpType)
                    .HasMaxLength(50)
                    .HasColumnName("bp_type");

                entity.Property(e => e.Bpid)
                    .HasMaxLength(50)
                    .HasColumnName("bpid");

                entity.Property(e => e.BuildingFloor)
                    .HasMaxLength(50)
                    .HasColumnName("building_floor");

                entity.Property(e => e.BuildingNo)
                    .HasMaxLength(50)
                    .HasColumnName("building_no");

                entity.Property(e => e.CentralArchiveFlag)
                    .HasMaxLength(50)
                    .HasColumnName("central_archive_flag");

                entity.Property(e => e.City)
                    .HasMaxLength(250)
                    .HasColumnName("city");

                entity.Property(e => e.ComplianceStatusCode)
                    .HasMaxLength(50)
                    .HasColumnName("compliance_status_code");

                entity.Property(e => e.ComplianceStatusDesc)
                    .HasMaxLength(50)
                    .HasColumnName("compliance_status_desc");

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("country_code");

                entity.Property(e => e.CountryGrp)
                    .HasMaxLength(50)
                    .HasColumnName("country_grp");

                entity.Property(e => e.CreatedAt)
                    .HasMaxLength(50)
                    .HasColumnName("created_at");

                entity.Property(e => e.CreatedOn).HasColumnName("created_on");

                entity.Property(e => e.Deleted)
                    .HasMaxLength(50)
                    .HasColumnName("deleted");

                entity.Property(e => e.District)
                    .HasMaxLength(250)
                    .HasColumnName("district");

                entity.Property(e => e.DistrictCode)
                    .HasMaxLength(250)
                    .HasColumnName("district_code");

                entity.Property(e => e.EdpCreated)
                    .HasMaxLength(50)
                    .HasColumnName("edp_created");

                entity.Property(e => e.EdpCreatedTxnId)
                    .HasMaxLength(50)
                    .HasColumnName("edp_created_txn_id");

                entity.Property(e => e.EdpLastUpdated)
                    .HasMaxLength(50)
                    .HasColumnName("edp_last_updated");

                entity.Property(e => e.EdpTxnId)
                    .HasMaxLength(50)
                    .HasColumnName("edp_txn_id");

                entity.Property(e => e.HouseNo)
                    .HasMaxLength(50)
                    .HasColumnName("house_no");

                entity.Property(e => e.IndustrySector)
                    .HasMaxLength(50)
                    .HasColumnName("industry_sector");

                entity.Property(e => e.IsPartnerConverted)
                    .HasMaxLength(50)
                    .HasColumnName("is_partner_converted");

                entity.Property(e => e.LastChangedAt)
                    .HasMaxLength(50)
                    .HasColumnName("last_changed_at");

                entity.Property(e => e.LastChangedOn).HasColumnName("last_changed_on");

                entity.Property(e => e.Name1)
                    .HasMaxLength(250)
                    .HasColumnName("name1");

                entity.Property(e => e.Name2)
                    .HasMaxLength(250)
                    .HasColumnName("name2");

                entity.Property(e => e.Name3)
                    .HasMaxLength(250)
                    .HasColumnName("name3");

                entity.Property(e => e.Name4)
                    .HasMaxLength(250)
                    .HasColumnName("name4");

                entity.Property(e => e.NameConc)
                    .HasMaxLength(1500)
                    .HasColumnName("name_conc");

                entity.Property(e => e.Postalcode)
                    .HasMaxLength(250)
                    .HasColumnName("postalcode");

                entity.Property(e => e.Region)
                    .HasMaxLength(250)
                    .HasColumnName("region");

                entity.Property(e => e.Street1)
                    .HasMaxLength(250)
                    .HasColumnName("street1");

                entity.Property(e => e.Street2)
                    .HasMaxLength(250)
                    .HasColumnName("street2");

                entity.Property(e => e.Street3)
                    .HasMaxLength(250)
                    .HasColumnName("street3");

                entity.Property(e => e.Street4)
                    .HasMaxLength(250)
                    .HasColumnName("street4");

                entity.Property(e => e.Street5)
                    .HasMaxLength(250)
                    .HasColumnName("street5");

                entity.Property(e => e.StreetConc)
                    .HasMaxLength(1500)
                    .HasColumnName("street_conc");
            });

            modelBuilder.Entity<CustomerNewupdated092518>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("customer_newupdated_092518", "dsf");

                entity.Property(e => e.AddressNo)
                    .HasMaxLength(50)
                    .HasColumnName("ADDRESS_NO");

                entity.Property(e => e.BpBillingHold)
                    .HasMaxLength(50)
                    .HasColumnName("BP_BILLING_HOLD");

                entity.Property(e => e.BpCategory)
                    .HasMaxLength(50)
                    .HasColumnName("BP_CATEGORY");

                entity.Property(e => e.BpDeliveryHold)
                    .HasMaxLength(50)
                    .HasColumnName("BP_DELIVERY_HOLD");

                entity.Property(e => e.BpExternalNo)
                    .HasMaxLength(50)
                    .HasColumnName("BP_EXTERNAL_NO");

                entity.Property(e => e.BpGrouping)
                    .HasMaxLength(50)
                    .HasColumnName("BP_GROUPING");

                entity.Property(e => e.BpGuid)
                    .HasMaxLength(50)
                    .HasColumnName("BP_GUID");

                entity.Property(e => e.BpRole)
                    .HasMaxLength(50)
                    .HasColumnName("BP_ROLE");

                entity.Property(e => e.BpStatusCode)
                    .HasMaxLength(50)
                    .HasColumnName("BP_STATUS_CODE");

                entity.Property(e => e.BpStatusDesc)
                    .HasMaxLength(50)
                    .HasColumnName("BP_STATUS_DESC");

                entity.Property(e => e.BpTransactionHold)
                    .HasMaxLength(50)
                    .HasColumnName("BP_TRANSACTION_HOLD");

                entity.Property(e => e.BpType)
                    .HasMaxLength(50)
                    .HasColumnName("BP_TYPE");

                entity.Property(e => e.Bpid)
                    .HasMaxLength(50)
                    .HasColumnName("BPID");

                entity.Property(e => e.BuildingFloor)
                    .HasMaxLength(50)
                    .HasColumnName("BUILDING_FLOOR");

                entity.Property(e => e.BuildingNo)
                    .HasMaxLength(50)
                    .HasColumnName("BUILDING_NO");

                entity.Property(e => e.CentralArchiveFlag)
                    .HasMaxLength(50)
                    .HasColumnName("CENTRAL_ARCHIVE_FLAG");

                entity.Property(e => e.City)
                    .HasMaxLength(50)
                    .HasColumnName("CITY");

                entity.Property(e => e.ComplianceStatusCode)
                    .HasMaxLength(50)
                    .HasColumnName("COMPLIANCE_STATUS_CODE");

                entity.Property(e => e.ComplianceStatusDesc)
                    .HasMaxLength(50)
                    .HasColumnName("COMPLIANCE_STATUS_DESC");

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("COUNTRY_CODE");

                entity.Property(e => e.CountryGrp)
                    .HasMaxLength(50)
                    .HasColumnName("COUNTRY_GRP");

                entity.Property(e => e.CreatedAt)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_AT");

                entity.Property(e => e.CreatedOn)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_ON");

                entity.Property(e => e.Deleted)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED");

                entity.Property(e => e.District)
                    .HasMaxLength(50)
                    .HasColumnName("DISTRICT");

                entity.Property(e => e.DistrictCode)
                    .HasMaxLength(50)
                    .HasColumnName("DISTRICT_CODE");

                entity.Property(e => e.EdpCreated)
                    .HasMaxLength(50)
                    .HasColumnName("EDP_CREATED");

                entity.Property(e => e.EdpCreatedTxnId)
                    .HasMaxLength(50)
                    .HasColumnName("EDP_CREATED_TXN_ID");

                entity.Property(e => e.EdpLastUpdated)
                    .HasMaxLength(50)
                    .HasColumnName("EDP_LAST_UPDATED");

                entity.Property(e => e.EdpTxnId)
                    .HasMaxLength(50)
                    .HasColumnName("EDP_TXN_ID");

                entity.Property(e => e.HouseNo)
                    .HasMaxLength(50)
                    .HasColumnName("HOUSE_NO");

                entity.Property(e => e.IndustrySector)
                    .HasMaxLength(50)
                    .HasColumnName("INDUSTRY_SECTOR");

                entity.Property(e => e.IsPartnerConverted)
                    .HasMaxLength(50)
                    .HasColumnName("IS_PARTNER_CONVERTED");

                entity.Property(e => e.LastChangedAt)
                    .HasMaxLength(50)
                    .HasColumnName("LAST_CHANGED_AT");

                entity.Property(e => e.LastChangedOn)
                    .HasMaxLength(50)
                    .HasColumnName("LAST_CHANGED_ON");

                entity.Property(e => e.Name1)
                    .HasMaxLength(250)
                    .HasColumnName("NAME1");

                entity.Property(e => e.Name2)
                    .HasMaxLength(250)
                    .HasColumnName("NAME2");

                entity.Property(e => e.Name3)
                    .HasMaxLength(250)
                    .HasColumnName("NAME3");

                entity.Property(e => e.Name4)
                    .HasMaxLength(250)
                    .HasColumnName("NAME4");

                entity.Property(e => e.NameConc)
                    .HasMaxLength(1000)
                    .HasColumnName("NAME_CONC");

                entity.Property(e => e.Postalcode)
                    .HasMaxLength(50)
                    .HasColumnName("POSTALCODE");

                entity.Property(e => e.Region)
                    .HasMaxLength(50)
                    .HasColumnName("REGION");

                entity.Property(e => e.Street1)
                    .HasMaxLength(250)
                    .HasColumnName("STREET1");

                entity.Property(e => e.Street2)
                    .HasMaxLength(250)
                    .HasColumnName("STREET2");

                entity.Property(e => e.Street3)
                    .HasMaxLength(250)
                    .HasColumnName("STREET3");

                entity.Property(e => e.Street4)
                    .HasMaxLength(250)
                    .HasColumnName("STREET4");

                entity.Property(e => e.Street5)
                    .HasMaxLength(250)
                    .HasColumnName("STREET5");

                entity.Property(e => e.StreetConc)
                    .HasMaxLength(1000)
                    .HasColumnName("STREET_CONC");
            });

            modelBuilder.Entity<CustomerNewupdated102218>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("customer_newupdated_102218", "dsf");

                entity.Property(e => e.AddressNo)
                    .HasMaxLength(50)
                    .HasColumnName("ADDRESS_NO");

                entity.Property(e => e.BpBillingHold)
                    .HasMaxLength(1)
                    .HasColumnName("BP_BILLING_HOLD");

                entity.Property(e => e.BpCategory)
                    .HasMaxLength(50)
                    .HasColumnName("BP_CATEGORY");

                entity.Property(e => e.BpDeliveryHold)
                    .HasMaxLength(1)
                    .HasColumnName("BP_DELIVERY_HOLD");

                entity.Property(e => e.BpExternalNo)
                    .HasMaxLength(50)
                    .HasColumnName("BP_EXTERNAL_NO");

                entity.Property(e => e.BpGrouping)
                    .HasMaxLength(50)
                    .HasColumnName("BP_GROUPING");

                entity.Property(e => e.BpGuid)
                    .HasMaxLength(50)
                    .HasColumnName("BP_GUID");

                entity.Property(e => e.BpRole)
                    .HasMaxLength(50)
                    .HasColumnName("BP_ROLE");

                entity.Property(e => e.BpStatusCode)
                    .HasMaxLength(50)
                    .HasColumnName("BP_STATUS_CODE");

                entity.Property(e => e.BpStatusDesc)
                    .HasMaxLength(50)
                    .HasColumnName("BP_STATUS_DESC");

                entity.Property(e => e.BpTransactionHold)
                    .HasMaxLength(50)
                    .HasColumnName("BP_TRANSACTION_HOLD");

                entity.Property(e => e.BpType)
                    .HasMaxLength(50)
                    .HasColumnName("BP_TYPE");

                entity.Property(e => e.Bpid)
                    .HasMaxLength(50)
                    .HasColumnName("BPID");

                entity.Property(e => e.BuildingFloor)
                    .HasMaxLength(50)
                    .HasColumnName("BUILDING_FLOOR");

                entity.Property(e => e.BuildingNo)
                    .HasMaxLength(50)
                    .HasColumnName("BUILDING_NO");

                entity.Property(e => e.CentralArchiveFlag)
                    .HasMaxLength(50)
                    .HasColumnName("CENTRAL_ARCHIVE_FLAG");

                entity.Property(e => e.City)
                    .HasMaxLength(50)
                    .HasColumnName("CITY");

                entity.Property(e => e.ComplianceStatusCode)
                    .HasMaxLength(50)
                    .HasColumnName("COMPLIANCE_STATUS_CODE");

                entity.Property(e => e.ComplianceStatusDesc)
                    .HasMaxLength(50)
                    .HasColumnName("COMPLIANCE_STATUS_DESC");

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("COUNTRY_CODE");

                entity.Property(e => e.CountryGrp)
                    .HasMaxLength(50)
                    .HasColumnName("COUNTRY_GRP");

                entity.Property(e => e.CreatedAt)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_AT");

                entity.Property(e => e.CreatedOn)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_ON");

                entity.Property(e => e.Deleted)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED");

                entity.Property(e => e.District)
                    .HasMaxLength(50)
                    .HasColumnName("DISTRICT");

                entity.Property(e => e.DistrictCode)
                    .HasMaxLength(50)
                    .HasColumnName("DISTRICT_CODE");

                entity.Property(e => e.EdpCreated)
                    .HasMaxLength(50)
                    .HasColumnName("EDP_CREATED");

                entity.Property(e => e.EdpCreatedTxnId)
                    .HasMaxLength(50)
                    .HasColumnName("EDP_CREATED_TXN_ID");

                entity.Property(e => e.EdpLastUpdated)
                    .HasMaxLength(50)
                    .HasColumnName("EDP_LAST_UPDATED");

                entity.Property(e => e.EdpTxnId)
                    .HasMaxLength(50)
                    .HasColumnName("EDP_TXN_ID");

                entity.Property(e => e.HouseNo)
                    .HasMaxLength(50)
                    .HasColumnName("HOUSE_NO");

                entity.Property(e => e.IndustrySector)
                    .HasMaxLength(50)
                    .HasColumnName("INDUSTRY_SECTOR");

                entity.Property(e => e.IsPartnerConverted)
                    .HasMaxLength(50)
                    .HasColumnName("IS_PARTNER_CONVERTED");

                entity.Property(e => e.LastChangedAt)
                    .HasMaxLength(50)
                    .HasColumnName("LAST_CHANGED_AT");

                entity.Property(e => e.LastChangedOn)
                    .HasMaxLength(50)
                    .HasColumnName("LAST_CHANGED_ON");

                entity.Property(e => e.Name1)
                    .HasMaxLength(250)
                    .HasColumnName("NAME1");

                entity.Property(e => e.Name2)
                    .HasMaxLength(250)
                    .HasColumnName("NAME2");

                entity.Property(e => e.Name3)
                    .HasMaxLength(250)
                    .HasColumnName("NAME3");

                entity.Property(e => e.Name4)
                    .HasMaxLength(250)
                    .HasColumnName("NAME4");

                entity.Property(e => e.NameConc)
                    .HasMaxLength(1500)
                    .HasColumnName("NAME_CONC");

                entity.Property(e => e.Postalcode)
                    .HasMaxLength(50)
                    .HasColumnName("POSTALCODE");

                entity.Property(e => e.Region)
                    .HasMaxLength(50)
                    .HasColumnName("REGION");

                entity.Property(e => e.Street1)
                    .HasMaxLength(250)
                    .HasColumnName("STREET1");

                entity.Property(e => e.Street2)
                    .HasMaxLength(250)
                    .HasColumnName("STREET2");

                entity.Property(e => e.Street3)
                    .HasMaxLength(250)
                    .HasColumnName("STREET3");

                entity.Property(e => e.Street4)
                    .HasMaxLength(250)
                    .HasColumnName("STREET4");

                entity.Property(e => e.Street5)
                    .HasMaxLength(250)
                    .HasColumnName("STREET5");

                entity.Property(e => e.StreetConc)
                    .HasMaxLength(1500)
                    .HasColumnName("STREET_CONC");
            });

            modelBuilder.Entity<CustomerNonus06282018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("customer_nonus_06282018", "dsf");

                entity.Property(e => e.Accountcategory)
                    .HasMaxLength(50)
                    .HasColumnName("ACCOUNTCATEGORY");

                entity.Property(e => e.Accountclass)
                    .HasMaxLength(50)
                    .HasColumnName("ACCOUNTCLASS");

                entity.Property(e => e.Accountgroup)
                    .HasMaxLength(50)
                    .HasColumnName("ACCOUNTGROUP");

                entity.Property(e => e.Accounttype)
                    .HasMaxLength(50)
                    .HasColumnName("ACCOUNTTYPE");

                entity.Property(e => e.Addrnumber)
                    .HasMaxLength(50)
                    .HasColumnName("ADDRNUMBER");

                entity.Property(e => e.ArchivingFlag)
                    .HasMaxLength(50)
                    .HasColumnName("ARCHIVING_FLAG");

                entity.Property(e => e.Attr4)
                    .HasMaxLength(50)
                    .HasColumnName("ATTR4");

                entity.Property(e => e.BilBlockReason)
                    .HasMaxLength(50)
                    .HasColumnName("BIL_BLOCK_REASON");

                entity.Property(e => e.Billtorole)
                    .HasMaxLength(50)
                    .HasColumnName("BILLTOROLE");

                entity.Property(e => e.BpLastUpd)
                    .HasMaxLength(50)
                    .HasColumnName("BP_LAST_UPD");

                entity.Property(e => e.Bpid)
                    .HasMaxLength(50)
                    .HasColumnName("BPID");

                entity.Property(e => e.Buildingcode)
                    .HasMaxLength(50)
                    .HasColumnName("BUILDINGCODE");

                entity.Property(e => e.CentralBlock)
                    .HasMaxLength(50)
                    .HasColumnName("CENTRAL_BLOCK");

                entity.Property(e => e.Chusr)
                    .HasMaxLength(50)
                    .HasColumnName("CHUSR");

                entity.Property(e => e.City)
                    .HasMaxLength(50)
                    .HasColumnName("CITY");

                entity.Property(e => e.Commonid)
                    .HasMaxLength(50)
                    .HasColumnName("COMMONID");

                entity.Property(e => e.Country)
                    .HasMaxLength(50)
                    .HasColumnName("COUNTRY");

                entity.Property(e => e.County)
                    .HasMaxLength(50)
                    .HasColumnName("COUNTY");

                entity.Property(e => e.Customersince)
                    .HasMaxLength(50)
                    .HasColumnName("CUSTOMERSINCE");

                entity.Property(e => e.DelBlockReason)
                    .HasMaxLength(50)
                    .HasColumnName("DEL_BLOCK_REASON");

                entity.Property(e => e.Distributorrole)
                    .HasMaxLength(50)
                    .HasColumnName("DISTRIBUTORROLE");

                entity.Property(e => e.Domduns)
                    .HasMaxLength(50)
                    .HasColumnName("DOMDUNS");

                entity.Property(e => e.Donotcontact)
                    .HasMaxLength(50)
                    .HasColumnName("DONOTCONTACT");

                entity.Property(e => e.Duns)
                    .HasMaxLength(50)
                    .HasColumnName("DUNS");

                entity.Property(e => e.Edbid)
                    .HasMaxLength(50)
                    .HasColumnName("EDBID");

                entity.Property(e => e.EdiId)
                    .HasMaxLength(50)
                    .HasColumnName("EDI_ID");

                entity.Property(e => e.EmpLogin)
                    .HasMaxLength(50)
                    .HasColumnName("EMP_LOGIN");

                entity.Property(e => e.EmpName)
                    .HasMaxLength(50)
                    .HasColumnName("EMP_NAME");

                entity.Property(e => e.EmpOrgCode)
                    .HasMaxLength(50)
                    .HasColumnName("EMP_ORG_CODE");

                entity.Property(e => e.EmpOrgUnit)
                    .HasMaxLength(50)
                    .HasColumnName("EMP_ORG_UNIT");

                entity.Property(e => e.EmpOrgUntiName)
                    .HasMaxLength(250)
                    .HasColumnName("EMP_ORG_UNTI_NAME");

                entity.Property(e => e.Endcustomerrole)
                    .HasMaxLength(50)
                    .HasColumnName("ENDCUSTOMERROLE");

                entity.Property(e => e.FaxNumber)
                    .HasMaxLength(50)
                    .HasColumnName("FAX_NUMBER");

                entity.Property(e => e.Floor)
                    .HasMaxLength(50)
                    .HasColumnName("FLOOR");

                entity.Property(e => e.Globalultduns)
                    .HasMaxLength(50)
                    .HasColumnName("GLOBALULTDUNS");

                entity.Property(e => e.Grouping)
                    .HasMaxLength(50)
                    .HasColumnName("GROUPING");

                entity.Property(e => e.Housenumber)
                    .HasMaxLength(50)
                    .HasColumnName("HOUSENUMBER");

                entity.Property(e => e.Housenumbersupplement)
                    .HasMaxLength(50)
                    .HasColumnName("HOUSENUMBERSUPPLEMENT");

                entity.Property(e => e.Iscustomer)
                    .HasMaxLength(50)
                    .HasColumnName("ISCUSTOMER");

                entity.Property(e => e.JuniperIndustryCode)
                    .HasMaxLength(50)
                    .HasColumnName("JUNIPER_INDUSTRY_CODE");

                entity.Property(e => e.Langu)
                    .HasMaxLength(50)
                    .HasColumnName("LANGU");

                entity.Property(e => e.Mastermergeind)
                    .HasMaxLength(50)
                    .HasColumnName("MASTERMERGEIND");

                entity.Property(e => e.Name1)
                    .HasMaxLength(250)
                    .HasColumnName("NAME1");

                entity.Property(e => e.Name2)
                    .HasMaxLength(250)
                    .HasColumnName("NAME2");

                entity.Property(e => e.Name3)
                    .HasMaxLength(250)
                    .HasColumnName("NAME3");

                entity.Property(e => e.Name4)
                    .HasMaxLength(250)
                    .HasColumnName("NAME4");

                entity.Property(e => e.NameCo)
                    .HasMaxLength(250)
                    .HasColumnName("NAME_CO");

                entity.Property(e => e.Oracleid)
                    .HasMaxLength(50)
                    .HasColumnName("ORACLEID");

                entity.Property(e => e.OrdBlockReason)
                    .HasMaxLength(50)
                    .HasColumnName("ORD_BLOCK_REASON");

                entity.Property(e => e.PartnerAuthCode)
                    .HasMaxLength(50)
                    .HasColumnName("PARTNER_AUTH_CODE");

                entity.Property(e => e.Payerrole)
                    .HasMaxLength(50)
                    .HasColumnName("PAYERROLE");

                entity.Property(e => e.Postalcode)
                    .HasMaxLength(50)
                    .HasColumnName("POSTALCODE");

                entity.Property(e => e.PrimaryVarId)
                    .HasMaxLength(50)
                    .HasColumnName("PRIMARY_VAR_ID");

                entity.Property(e => e.Region)
                    .HasMaxLength(50)
                    .HasColumnName("REGION");

                entity.Property(e => e.Resellerrole)
                    .HasMaxLength(50)
                    .HasColumnName("RESELLERROLE");

                entity.Property(e => e.Roomnumber)
                    .HasMaxLength(50)
                    .HasColumnName("ROOMNUMBER");

                entity.Property(e => e.Salessystemflag)
                    .HasMaxLength(50)
                    .HasColumnName("SALESSYSTEMFLAG");

                entity.Property(e => e.Searchterm1)
                    .HasMaxLength(50)
                    .HasColumnName("SEARCHTERM1");

                entity.Property(e => e.Searchterm2)
                    .HasMaxLength(50)
                    .HasColumnName("SEARCHTERM2");

                entity.Property(e => e.SfdcId)
                    .HasMaxLength(50)
                    .HasColumnName("SFDC_ID");

                entity.Property(e => e.SfdcVictimId)
                    .HasMaxLength(50)
                    .HasColumnName("SFDC_VICTIM_ID");

                entity.Property(e => e.Shiptorole)
                    .HasMaxLength(50)
                    .HasColumnName("SHIPTOROLE");

                entity.Property(e => e.Siebelid)
                    .HasMaxLength(50)
                    .HasColumnName("SIEBELID");

                entity.Property(e => e.Soldtorole)
                    .HasMaxLength(50)
                    .HasColumnName("SOLDTOROLE");

                entity.Property(e => e.Source)
                    .HasMaxLength(50)
                    .HasColumnName("SOURCE");

                entity.Property(e => e.Street1)
                    .HasMaxLength(250)
                    .HasColumnName("STREET1");

                entity.Property(e => e.Street2)
                    .HasMaxLength(250)
                    .HasColumnName("STREET2");

                entity.Property(e => e.Street3)
                    .HasMaxLength(250)
                    .HasColumnName("STREET3");

                entity.Property(e => e.Street4)
                    .HasMaxLength(250)
                    .HasColumnName("STREET4");

                entity.Property(e => e.Street5)
                    .HasMaxLength(250)
                    .HasColumnName("STREET5");

                entity.Property(e => e.TelNumber)
                    .HasMaxLength(50)
                    .HasColumnName("TEL_NUMBER");

                entity.Property(e => e.TransZone)
                    .HasMaxLength(50)
                    .HasColumnName("TRANS_ZONE");

                entity.Property(e => e.UcmId)
                    .HasMaxLength(50)
                    .HasColumnName("UCM_ID");

                entity.Property(e => e.UriAddr)
                    .HasMaxLength(50)
                    .HasColumnName("URI_ADDR");

                entity.Property(e => e.VarId)
                    .HasMaxLength(50)
                    .HasColumnName("VAR_ID");

                entity.Property(e => e.Verifydate)
                    .HasMaxLength(50)
                    .HasColumnName("VERIFYDATE");
            });

            modelBuilder.Entity<CustomerNonusArch06282018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("customer_nonus_arch_06282018", "dsf");

                entity.Property(e => e.Accountcategory)
                    .HasMaxLength(50)
                    .HasColumnName("ACCOUNTCATEGORY");

                entity.Property(e => e.Accountclass)
                    .HasMaxLength(50)
                    .HasColumnName("ACCOUNTCLASS");

                entity.Property(e => e.Accountgroup)
                    .HasMaxLength(50)
                    .HasColumnName("ACCOUNTGROUP");

                entity.Property(e => e.Accounttype)
                    .HasMaxLength(50)
                    .HasColumnName("ACCOUNTTYPE");

                entity.Property(e => e.Addrnumber)
                    .HasMaxLength(50)
                    .HasColumnName("ADDRNUMBER");

                entity.Property(e => e.ArchivingFlag)
                    .HasMaxLength(50)
                    .HasColumnName("ARCHIVING_FLAG");

                entity.Property(e => e.Attr4)
                    .HasMaxLength(50)
                    .HasColumnName("ATTR4");

                entity.Property(e => e.BilBlockReason)
                    .HasMaxLength(50)
                    .HasColumnName("BIL_BLOCK_REASON");

                entity.Property(e => e.Billtorole)
                    .HasMaxLength(50)
                    .HasColumnName("BILLTOROLE");

                entity.Property(e => e.BpLastUpd)
                    .HasMaxLength(50)
                    .HasColumnName("BP_LAST_UPD");

                entity.Property(e => e.Bpid)
                    .HasMaxLength(50)
                    .HasColumnName("BPID");

                entity.Property(e => e.Buildingcode)
                    .HasMaxLength(50)
                    .HasColumnName("BUILDINGCODE");

                entity.Property(e => e.CentralBlock)
                    .HasMaxLength(50)
                    .HasColumnName("CENTRAL_BLOCK");

                entity.Property(e => e.Chusr)
                    .HasMaxLength(50)
                    .HasColumnName("CHUSR");

                entity.Property(e => e.City)
                    .HasMaxLength(50)
                    .HasColumnName("CITY");

                entity.Property(e => e.Commonid)
                    .HasMaxLength(50)
                    .HasColumnName("COMMONID");

                entity.Property(e => e.Country)
                    .HasMaxLength(50)
                    .HasColumnName("COUNTRY");

                entity.Property(e => e.County)
                    .HasMaxLength(50)
                    .HasColumnName("COUNTY");

                entity.Property(e => e.Customersince)
                    .HasMaxLength(50)
                    .HasColumnName("CUSTOMERSINCE");

                entity.Property(e => e.DelBlockReason)
                    .HasMaxLength(50)
                    .HasColumnName("DEL_BLOCK_REASON");

                entity.Property(e => e.Distributorrole)
                    .HasMaxLength(50)
                    .HasColumnName("DISTRIBUTORROLE");

                entity.Property(e => e.Domduns)
                    .HasMaxLength(50)
                    .HasColumnName("DOMDUNS");

                entity.Property(e => e.Donotcontact)
                    .HasMaxLength(50)
                    .HasColumnName("DONOTCONTACT");

                entity.Property(e => e.Duns)
                    .HasMaxLength(50)
                    .HasColumnName("DUNS");

                entity.Property(e => e.Edbid)
                    .HasMaxLength(50)
                    .HasColumnName("EDBID");

                entity.Property(e => e.EdiId)
                    .HasMaxLength(50)
                    .HasColumnName("EDI_ID");

                entity.Property(e => e.EmpLogin)
                    .HasMaxLength(50)
                    .HasColumnName("EMP_LOGIN");

                entity.Property(e => e.EmpName)
                    .HasMaxLength(250)
                    .HasColumnName("EMP_NAME");

                entity.Property(e => e.EmpOrgCode)
                    .HasMaxLength(50)
                    .HasColumnName("EMP_ORG_CODE");

                entity.Property(e => e.EmpOrgUnit)
                    .HasMaxLength(50)
                    .HasColumnName("EMP_ORG_UNIT");

                entity.Property(e => e.EmpOrgUntiName)
                    .HasMaxLength(250)
                    .HasColumnName("EMP_ORG_UNTI_NAME");

                entity.Property(e => e.Endcustomerrole)
                    .HasMaxLength(50)
                    .HasColumnName("ENDCUSTOMERROLE");

                entity.Property(e => e.FaxNumber)
                    .HasMaxLength(50)
                    .HasColumnName("FAX_NUMBER");

                entity.Property(e => e.Floor)
                    .HasMaxLength(50)
                    .HasColumnName("FLOOR");

                entity.Property(e => e.Globalultduns)
                    .HasMaxLength(50)
                    .HasColumnName("GLOBALULTDUNS");

                entity.Property(e => e.Grouping)
                    .HasMaxLength(50)
                    .HasColumnName("GROUPING");

                entity.Property(e => e.Housenumber)
                    .HasMaxLength(50)
                    .HasColumnName("HOUSENUMBER");

                entity.Property(e => e.Housenumbersupplement)
                    .HasMaxLength(50)
                    .HasColumnName("HOUSENUMBERSUPPLEMENT");

                entity.Property(e => e.Iscustomer)
                    .HasMaxLength(50)
                    .HasColumnName("ISCUSTOMER");

                entity.Property(e => e.JuniperIndustryCode)
                    .HasMaxLength(50)
                    .HasColumnName("JUNIPER_INDUSTRY_CODE");

                entity.Property(e => e.Langu)
                    .HasMaxLength(50)
                    .HasColumnName("LANGU");

                entity.Property(e => e.Mastermergeind)
                    .HasMaxLength(50)
                    .HasColumnName("MASTERMERGEIND");

                entity.Property(e => e.Name1)
                    .HasMaxLength(250)
                    .HasColumnName("NAME1");

                entity.Property(e => e.Name2)
                    .HasMaxLength(250)
                    .HasColumnName("NAME2");

                entity.Property(e => e.Name3)
                    .HasMaxLength(250)
                    .HasColumnName("NAME3");

                entity.Property(e => e.Name4)
                    .HasMaxLength(250)
                    .HasColumnName("NAME4");

                entity.Property(e => e.NameCo)
                    .HasMaxLength(50)
                    .HasColumnName("NAME_CO");

                entity.Property(e => e.Oracleid)
                    .HasMaxLength(50)
                    .HasColumnName("ORACLEID");

                entity.Property(e => e.OrdBlockReason)
                    .HasMaxLength(50)
                    .HasColumnName("ORD_BLOCK_REASON");

                entity.Property(e => e.PartnerAuthCode)
                    .HasMaxLength(50)
                    .HasColumnName("PARTNER_AUTH_CODE");

                entity.Property(e => e.Payerrole)
                    .HasMaxLength(50)
                    .HasColumnName("PAYERROLE");

                entity.Property(e => e.Postalcode)
                    .HasMaxLength(50)
                    .HasColumnName("POSTALCODE");

                entity.Property(e => e.PrimaryVarId)
                    .HasMaxLength(50)
                    .HasColumnName("PRIMARY_VAR_ID");

                entity.Property(e => e.Region)
                    .HasMaxLength(50)
                    .HasColumnName("REGION");

                entity.Property(e => e.Resellerrole)
                    .HasMaxLength(50)
                    .HasColumnName("RESELLERROLE");

                entity.Property(e => e.Roomnumber)
                    .HasMaxLength(50)
                    .HasColumnName("ROOMNUMBER");

                entity.Property(e => e.Salessystemflag)
                    .HasMaxLength(50)
                    .HasColumnName("SALESSYSTEMFLAG");

                entity.Property(e => e.Searchterm1)
                    .HasMaxLength(50)
                    .HasColumnName("SEARCHTERM1");

                entity.Property(e => e.Searchterm2)
                    .HasMaxLength(50)
                    .HasColumnName("SEARCHTERM2");

                entity.Property(e => e.SfdcId)
                    .HasMaxLength(50)
                    .HasColumnName("SFDC_ID");

                entity.Property(e => e.SfdcVictimId)
                    .HasMaxLength(50)
                    .HasColumnName("SFDC_VICTIM_ID");

                entity.Property(e => e.Shiptorole)
                    .HasMaxLength(50)
                    .HasColumnName("SHIPTOROLE");

                entity.Property(e => e.Siebelid)
                    .HasMaxLength(50)
                    .HasColumnName("SIEBELID");

                entity.Property(e => e.Soldtorole)
                    .HasMaxLength(50)
                    .HasColumnName("SOLDTOROLE");

                entity.Property(e => e.Source)
                    .HasMaxLength(50)
                    .HasColumnName("SOURCE");

                entity.Property(e => e.Street1)
                    .HasMaxLength(250)
                    .HasColumnName("STREET1");

                entity.Property(e => e.Street2)
                    .HasMaxLength(250)
                    .HasColumnName("STREET2");

                entity.Property(e => e.Street3)
                    .HasMaxLength(250)
                    .HasColumnName("STREET3");

                entity.Property(e => e.Street4)
                    .HasMaxLength(250)
                    .HasColumnName("STREET4");

                entity.Property(e => e.Street5)
                    .HasMaxLength(250)
                    .HasColumnName("STREET5");

                entity.Property(e => e.TelNumber)
                    .HasMaxLength(50)
                    .HasColumnName("TEL_NUMBER");

                entity.Property(e => e.TransZone)
                    .HasMaxLength(50)
                    .HasColumnName("TRANS_ZONE");

                entity.Property(e => e.UcmId)
                    .HasMaxLength(50)
                    .HasColumnName("UCM_ID");

                entity.Property(e => e.UriAddr)
                    .HasMaxLength(50)
                    .HasColumnName("URI_ADDR");

                entity.Property(e => e.VarId)
                    .HasMaxLength(50)
                    .HasColumnName("VAR_ID");

                entity.Property(e => e.Verifydate)
                    .HasMaxLength(50)
                    .HasColumnName("VERIFYDATE");
            });

            modelBuilder.Entity<CustomerSnow>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("customer_snow", "dsf");

                entity.Property(e => e.AddressNo)
                    .HasMaxLength(50)
                    .HasColumnName("ADDRESS_NO");

                entity.Property(e => e.BpBillingHold)
                    .HasMaxLength(50)
                    .HasColumnName("BP_BILLING_HOLD");

                entity.Property(e => e.BpCategory)
                    .HasMaxLength(50)
                    .HasColumnName("BP_CATEGORY");

                entity.Property(e => e.BpDeliveryHold)
                    .HasMaxLength(50)
                    .HasColumnName("BP_DELIVERY_HOLD");

                entity.Property(e => e.BpExternalNo)
                    .HasMaxLength(50)
                    .HasColumnName("BP_EXTERNAL_NO");

                entity.Property(e => e.BpGrouping)
                    .HasMaxLength(50)
                    .HasColumnName("BP_GROUPING");

                entity.Property(e => e.BpGuid)
                    .HasMaxLength(50)
                    .HasColumnName("BP_GUID");

                entity.Property(e => e.BpRole)
                    .HasMaxLength(50)
                    .HasColumnName("BP_ROLE");

                entity.Property(e => e.BpStatusCode)
                    .HasMaxLength(50)
                    .HasColumnName("BP_STATUS_CODE");

                entity.Property(e => e.BpStatusDesc)
                    .HasMaxLength(50)
                    .HasColumnName("BP_STATUS_DESC");

                entity.Property(e => e.BpTransactionHold)
                    .HasMaxLength(50)
                    .HasColumnName("BP_TRANSACTION_HOLD");

                entity.Property(e => e.BpType)
                    .HasMaxLength(50)
                    .HasColumnName("BP_TYPE");

                entity.Property(e => e.Bpid)
                    .HasMaxLength(50)
                    .HasColumnName("BPID");

                entity.Property(e => e.BuildingFloor)
                    .HasMaxLength(50)
                    .HasColumnName("BUILDING_FLOOR");

                entity.Property(e => e.BuildingNo)
                    .HasMaxLength(50)
                    .HasColumnName("BUILDING_NO");

                entity.Property(e => e.CentralArchiveFlag)
                    .HasMaxLength(50)
                    .HasColumnName("CENTRAL_ARCHIVE_FLAG");

                entity.Property(e => e.City)
                    .HasMaxLength(250)
                    .HasColumnName("CITY");

                entity.Property(e => e.ComplianceStatusCode)
                    .HasMaxLength(50)
                    .HasColumnName("COMPLIANCE_STATUS_CODE");

                entity.Property(e => e.ComplianceStatusDesc)
                    .HasMaxLength(50)
                    .HasColumnName("COMPLIANCE_STATUS_DESC");

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("COUNTRY_CODE");

                entity.Property(e => e.CountryGrp)
                    .HasMaxLength(50)
                    .HasColumnName("COUNTRY_GRP");

                entity.Property(e => e.CreatedAt)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_AT");

                entity.Property(e => e.CreatedOn)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_ON");

                entity.Property(e => e.Deleted)
                    .HasMaxLength(50)
                    .HasColumnName("DELETED");

                entity.Property(e => e.District)
                    .HasMaxLength(250)
                    .HasColumnName("DISTRICT");

                entity.Property(e => e.DistrictCode)
                    .HasMaxLength(250)
                    .HasColumnName("DISTRICT_CODE");

                entity.Property(e => e.EdpCreated)
                    .HasMaxLength(50)
                    .HasColumnName("EDP_CREATED");

                entity.Property(e => e.EdpCreatedTxnId)
                    .HasMaxLength(50)
                    .HasColumnName("EDP_CREATED_TXN_ID");

                entity.Property(e => e.EdpLastUpdated)
                    .HasMaxLength(50)
                    .HasColumnName("EDP_LAST_UPDATED");

                entity.Property(e => e.EdpTxnId)
                    .HasMaxLength(50)
                    .HasColumnName("EDP_TXN_ID");

                entity.Property(e => e.HouseNo)
                    .HasMaxLength(50)
                    .HasColumnName("HOUSE_NO");

                entity.Property(e => e.IndustrySector)
                    .HasMaxLength(50)
                    .HasColumnName("INDUSTRY_SECTOR");

                entity.Property(e => e.IsPartnerConverted)
                    .HasMaxLength(50)
                    .HasColumnName("IS_PARTNER_CONVERTED");

                entity.Property(e => e.LastChangedAt)
                    .HasMaxLength(50)
                    .HasColumnName("LAST_CHANGED_AT");

                entity.Property(e => e.LastChangedOn)
                    .HasColumnType("datetime")
                    .HasColumnName("LAST_CHANGED_ON");

                entity.Property(e => e.Name1)
                    .HasMaxLength(250)
                    .HasColumnName("NAME1");

                entity.Property(e => e.Name2)
                    .HasMaxLength(250)
                    .HasColumnName("NAME2");

                entity.Property(e => e.Name3)
                    .HasMaxLength(250)
                    .HasColumnName("NAME3");

                entity.Property(e => e.Name4)
                    .HasMaxLength(250)
                    .HasColumnName("NAME4");

                entity.Property(e => e.NameConc)
                    .HasMaxLength(1500)
                    .HasColumnName("NAME_CONC");

                entity.Property(e => e.Postalcode)
                    .HasMaxLength(250)
                    .HasColumnName("POSTALCODE");

                entity.Property(e => e.Region)
                    .HasMaxLength(250)
                    .HasColumnName("REGION");

                entity.Property(e => e.Street1)
                    .HasMaxLength(250)
                    .HasColumnName("STREET1");

                entity.Property(e => e.Street2)
                    .HasMaxLength(250)
                    .HasColumnName("STREET2");

                entity.Property(e => e.Street3)
                    .HasMaxLength(250)
                    .HasColumnName("STREET3");

                entity.Property(e => e.Street4)
                    .HasMaxLength(250)
                    .HasColumnName("STREET4");

                entity.Property(e => e.Street5)
                    .HasMaxLength(250)
                    .HasColumnName("STREET5");

                entity.Property(e => e.StreetConc)
                    .HasMaxLength(1500)
                    .HasColumnName("STREET_CONC");
            });

            modelBuilder.Entity<CustomerSnow20181818>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("customer_snow_20181818", "dsf");

                entity.Property(e => e.AddressNo)
                    .HasMaxLength(50)
                    .HasColumnName("address_no");

                entity.Property(e => e.BpBillingHold)
                    .HasMaxLength(50)
                    .HasColumnName("bp_billing_hold");

                entity.Property(e => e.BpCategory)
                    .HasMaxLength(50)
                    .HasColumnName("bp_category");

                entity.Property(e => e.BpDeliveryHold)
                    .HasMaxLength(50)
                    .HasColumnName("bp_delivery_hold");

                entity.Property(e => e.BpExternalNo)
                    .HasMaxLength(50)
                    .HasColumnName("bp_external_no");

                entity.Property(e => e.BpGrouping)
                    .HasMaxLength(50)
                    .HasColumnName("bp_grouping");

                entity.Property(e => e.BpGuid)
                    .HasMaxLength(50)
                    .HasColumnName("bp_guid");

                entity.Property(e => e.BpRole)
                    .HasMaxLength(50)
                    .HasColumnName("bp_role");

                entity.Property(e => e.BpStatusCode)
                    .HasMaxLength(50)
                    .HasColumnName("bp_status_code");

                entity.Property(e => e.BpStatusDesc)
                    .HasMaxLength(50)
                    .HasColumnName("bp_status_desc");

                entity.Property(e => e.BpTransactionHold)
                    .HasMaxLength(50)
                    .HasColumnName("bp_transaction_hold");

                entity.Property(e => e.BpType)
                    .HasMaxLength(50)
                    .HasColumnName("bp_type");

                entity.Property(e => e.Bpid)
                    .HasMaxLength(50)
                    .HasColumnName("bpid");

                entity.Property(e => e.BuildingFloor)
                    .HasMaxLength(50)
                    .HasColumnName("building_floor");

                entity.Property(e => e.BuildingNo)
                    .HasMaxLength(50)
                    .HasColumnName("building_no");

                entity.Property(e => e.CentralArchiveFlag)
                    .HasMaxLength(50)
                    .HasColumnName("central_archive_flag");

                entity.Property(e => e.City)
                    .HasMaxLength(250)
                    .HasColumnName("city");

                entity.Property(e => e.ComplianceStatusCode)
                    .HasMaxLength(50)
                    .HasColumnName("compliance_status_code");

                entity.Property(e => e.ComplianceStatusDesc)
                    .HasMaxLength(50)
                    .HasColumnName("compliance_status_desc");

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("country_code");

                entity.Property(e => e.CountryGrp)
                    .HasMaxLength(50)
                    .HasColumnName("country_grp");

                entity.Property(e => e.CreatedAt)
                    .HasMaxLength(50)
                    .HasColumnName("created_at");

                entity.Property(e => e.CreatedOn).HasColumnName("created_on");

                entity.Property(e => e.Deleted)
                    .HasMaxLength(50)
                    .HasColumnName("deleted");

                entity.Property(e => e.District)
                    .HasMaxLength(250)
                    .HasColumnName("district");

                entity.Property(e => e.DistrictCode)
                    .HasMaxLength(250)
                    .HasColumnName("district_code");

                entity.Property(e => e.EdpCreated)
                    .HasMaxLength(50)
                    .HasColumnName("edp_created");

                entity.Property(e => e.EdpCreatedTxnId)
                    .HasMaxLength(50)
                    .HasColumnName("edp_created_txn_id");

                entity.Property(e => e.EdpLastUpdated)
                    .HasMaxLength(50)
                    .HasColumnName("edp_last_updated");

                entity.Property(e => e.EdpTxnId)
                    .HasMaxLength(50)
                    .HasColumnName("edp_txn_id");

                entity.Property(e => e.HouseNo)
                    .HasMaxLength(50)
                    .HasColumnName("house_no");

                entity.Property(e => e.IndustrySector)
                    .HasMaxLength(50)
                    .HasColumnName("industry_sector");

                entity.Property(e => e.IsPartnerConverted)
                    .HasMaxLength(50)
                    .HasColumnName("is_partner_converted");

                entity.Property(e => e.LastChangedAt)
                    .HasMaxLength(50)
                    .HasColumnName("last_changed_at");

                entity.Property(e => e.LastChangedOn).HasColumnName("last_changed_on");

                entity.Property(e => e.Name1)
                    .HasMaxLength(250)
                    .HasColumnName("name1");

                entity.Property(e => e.Name2)
                    .HasMaxLength(250)
                    .HasColumnName("name2");

                entity.Property(e => e.Name3)
                    .HasMaxLength(250)
                    .HasColumnName("name3");

                entity.Property(e => e.Name4)
                    .HasMaxLength(250)
                    .HasColumnName("name4");

                entity.Property(e => e.NameConc)
                    .HasMaxLength(1500)
                    .HasColumnName("name_conc");

                entity.Property(e => e.Postalcode)
                    .HasMaxLength(250)
                    .HasColumnName("postalcode");

                entity.Property(e => e.Region)
                    .HasMaxLength(250)
                    .HasColumnName("region");

                entity.Property(e => e.Street1)
                    .HasMaxLength(250)
                    .HasColumnName("street1");

                entity.Property(e => e.Street2)
                    .HasMaxLength(250)
                    .HasColumnName("street2");

                entity.Property(e => e.Street3)
                    .HasMaxLength(250)
                    .HasColumnName("street3");

                entity.Property(e => e.Street4)
                    .HasMaxLength(250)
                    .HasColumnName("street4");

                entity.Property(e => e.Street5)
                    .HasMaxLength(250)
                    .HasColumnName("street5");

                entity.Property(e => e.StreetConc)
                    .HasMaxLength(1500)
                    .HasColumnName("street_conc");
            });

            modelBuilder.Entity<CustomerTempTable>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("customer_temp_table", "dev");

                entity.Property(e => e.Accountclass)
                    .HasMaxLength(50)
                    .HasColumnName("accountclass");

                entity.Property(e => e.Accountgroup)
                    .HasMaxLength(50)
                    .HasColumnName("accountgroup");

                entity.Property(e => e.Accounttype)
                    .HasMaxLength(50)
                    .HasColumnName("accounttype");

                entity.Property(e => e.Addrnumber)
                    .HasMaxLength(50)
                    .HasColumnName("addrnumber");

                entity.Property(e => e.ArchivingFlag)
                    .HasMaxLength(50)
                    .HasColumnName("archiving_flag");

                entity.Property(e => e.Attr4)
                    .HasMaxLength(255)
                    .HasColumnName("attr4");

                entity.Property(e => e.Billtorole)
                    .HasMaxLength(50)
                    .HasColumnName("billtorole");

                entity.Property(e => e.BpLastUpd)
                    .HasColumnType("datetime")
                    .HasColumnName("BP_LAST_UPD");

                entity.Property(e => e.Bpid)
                    .HasMaxLength(50)
                    .HasColumnName("bpid");

                entity.Property(e => e.BpidOrig)
                    .HasMaxLength(50)
                    .HasColumnName("bpid_orig");

                entity.Property(e => e.Buildingcode)
                    .HasMaxLength(50)
                    .HasColumnName("buildingcode");

                entity.Property(e => e.CentralBlock)
                    .HasMaxLength(255)
                    .HasColumnName("central_block");

                entity.Property(e => e.Chusr)
                    .HasMaxLength(255)
                    .HasColumnName("chusr");

                entity.Property(e => e.City)
                    .HasMaxLength(255)
                    .HasColumnName("city");

                entity.Property(e => e.Commonid)
                    .HasMaxLength(50)
                    .HasColumnName("commonid");

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(20)
                    .HasColumnName("country_code");

                entity.Property(e => e.CountryName)
                    .HasMaxLength(250)
                    .HasColumnName("country_name");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("created_date");

                entity.Property(e => e.Customersince)
                    .HasColumnType("datetime")
                    .HasColumnName("customersince");

                entity.Property(e => e.Distributorrole)
                    .HasMaxLength(50)
                    .HasColumnName("distributorrole");

                entity.Property(e => e.Domduns)
                    .HasMaxLength(255)
                    .HasColumnName("domduns");

                entity.Property(e => e.Duns)
                    .HasMaxLength(50)
                    .HasColumnName("duns");

                entity.Property(e => e.EdiId)
                    .HasMaxLength(255)
                    .HasColumnName("edi_id");

                entity.Property(e => e.EmpLogin)
                    .HasMaxLength(100)
                    .HasColumnName("emp_login");

                entity.Property(e => e.EmpName)
                    .HasMaxLength(100)
                    .HasColumnName("emp_name");

                entity.Property(e => e.EmpOrgCode)
                    .HasMaxLength(50)
                    .HasColumnName("emp_org_code");

                entity.Property(e => e.EmpOrgUnit)
                    .HasMaxLength(50)
                    .HasColumnName("emp_org_unit");

                entity.Property(e => e.EmpOrgUntiName)
                    .HasMaxLength(255)
                    .HasColumnName("emp_org_unti_name");

                entity.Property(e => e.Endcustomerrole)
                    .HasMaxLength(50)
                    .HasColumnName("endcustomerrole");

                entity.Property(e => e.FaxNumber)
                    .HasMaxLength(50)
                    .HasColumnName("fax_number");

                entity.Property(e => e.Floor)
                    .HasMaxLength(50)
                    .HasColumnName("floor");

                entity.Property(e => e.Globalultduns)
                    .HasMaxLength(255)
                    .HasColumnName("globalultduns");

                entity.Property(e => e.Grouping)
                    .HasMaxLength(50)
                    .HasColumnName("grouping");

                entity.Property(e => e.Housenumber)
                    .HasMaxLength(255)
                    .HasColumnName("housenumber");

                entity.Property(e => e.Housenumbersupplement)
                    .HasMaxLength(255)
                    .HasColumnName("housenumbersupplement");

                entity.Property(e => e.Iscustomer)
                    .HasMaxLength(50)
                    .HasColumnName("iscustomer");

                entity.Property(e => e.JuniperIndustryCode)
                    .HasMaxLength(50)
                    .HasColumnName("juniper_industry_code");

                entity.Property(e => e.Langu)
                    .HasMaxLength(50)
                    .HasColumnName("langu");

                entity.Property(e => e.Name1)
                    .HasMaxLength(255)
                    .HasColumnName("name1");

                entity.Property(e => e.Name2)
                    .HasMaxLength(255)
                    .HasColumnName("name2");

                entity.Property(e => e.Name3)
                    .HasMaxLength(255)
                    .HasColumnName("name3");

                entity.Property(e => e.Name4)
                    .HasMaxLength(255)
                    .HasColumnName("name4");

                entity.Property(e => e.NameConc)
                    .HasMaxLength(500)
                    .HasColumnName("name_conc");

                entity.Property(e => e.Oracleid)
                    .HasMaxLength(255)
                    .HasColumnName("oracleid");

                entity.Property(e => e.PartnerAuthCode)
                    .HasMaxLength(255)
                    .HasColumnName("partner_auth_code");

                entity.Property(e => e.Payerrole)
                    .HasMaxLength(50)
                    .HasColumnName("payerrole");

                entity.Property(e => e.Postalcode)
                    .HasMaxLength(50)
                    .HasColumnName("postalcode");

                entity.Property(e => e.PrimaryVarId)
                    .HasMaxLength(255)
                    .HasColumnName("primary_var_id");

                entity.Property(e => e.Region)
                    .HasMaxLength(50)
                    .HasColumnName("region");

                entity.Property(e => e.Resellerrole)
                    .HasMaxLength(50)
                    .HasColumnName("resellerrole");

                entity.Property(e => e.Roomnumber)
                    .HasMaxLength(50)
                    .HasColumnName("roomnumber");

                entity.Property(e => e.Salessystemflag)
                    .HasMaxLength(50)
                    .HasColumnName("salessystemflag");

                entity.Property(e => e.Searchterm1)
                    .HasMaxLength(50)
                    .HasColumnName("searchterm1");

                entity.Property(e => e.Searchterm2)
                    .HasMaxLength(50)
                    .HasColumnName("searchterm2");

                entity.Property(e => e.SfdcId)
                    .HasMaxLength(255)
                    .HasColumnName("sfdc_id");

                entity.Property(e => e.SfdcVictimId)
                    .HasMaxLength(255)
                    .HasColumnName("sfdc_victim_id");

                entity.Property(e => e.Shiptorole)
                    .HasMaxLength(50)
                    .HasColumnName("shiptorole");

                entity.Property(e => e.Siebelid)
                    .HasMaxLength(255)
                    .HasColumnName("siebelid");

                entity.Property(e => e.Soldtorole)
                    .HasMaxLength(50)
                    .HasColumnName("soldtorole");

                entity.Property(e => e.Source)
                    .HasMaxLength(50)
                    .HasColumnName("source");

                entity.Property(e => e.Street1)
                    .HasMaxLength(255)
                    .HasColumnName("street1");

                entity.Property(e => e.Street2)
                    .HasMaxLength(255)
                    .HasColumnName("street2");

                entity.Property(e => e.Street3)
                    .HasMaxLength(255)
                    .HasColumnName("street3");

                entity.Property(e => e.Street4)
                    .HasMaxLength(255)
                    .HasColumnName("street4");

                entity.Property(e => e.Street5)
                    .HasMaxLength(255)
                    .HasColumnName("street5");

                entity.Property(e => e.StreetConc)
                    .HasMaxLength(1000)
                    .HasColumnName("street_conc");

                entity.Property(e => e.TelNumber)
                    .HasMaxLength(50)
                    .HasColumnName("tel_number");

                entity.Property(e => e.TransZone)
                    .HasMaxLength(50)
                    .HasColumnName("trans_zone");

                entity.Property(e => e.UcmId)
                    .HasMaxLength(255)
                    .HasColumnName("ucm_id");

                entity.Property(e => e.UriAddr)
                    .HasMaxLength(255)
                    .HasColumnName("uri_addr");

                entity.Property(e => e.VarId)
                    .HasMaxLength(255)
                    .HasColumnName("var_id");

                entity.Property(e => e.Verifydate)
                    .HasColumnType("datetime")
                    .HasColumnName("verifydate");
            });

            modelBuilder.Entity<CustomerUs06282018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("customer_us_06282018", "dsf");

                entity.Property(e => e.Accountclass)
                    .HasMaxLength(50)
                    .HasColumnName("ACCOUNTCLASS");

                entity.Property(e => e.Accountgroup)
                    .HasMaxLength(50)
                    .HasColumnName("ACCOUNTGROUP");

                entity.Property(e => e.Accounttype)
                    .HasMaxLength(50)
                    .HasColumnName("ACCOUNTTYPE");

                entity.Property(e => e.Addrnumber)
                    .HasMaxLength(50)
                    .HasColumnName("ADDRNUMBER");

                entity.Property(e => e.ArchivingFlag)
                    .HasMaxLength(50)
                    .HasColumnName("ARCHIVING_FLAG");

                entity.Property(e => e.Attr4)
                    .HasMaxLength(50)
                    .HasColumnName("ATTR4");

                entity.Property(e => e.Billtorole)
                    .HasMaxLength(50)
                    .HasColumnName("BILLTOROLE");

                entity.Property(e => e.BpLastUpd)
                    .HasMaxLength(50)
                    .HasColumnName("BP_LAST_UPD");

                entity.Property(e => e.Bpid)
                    .HasMaxLength(50)
                    .HasColumnName("BPID");

                entity.Property(e => e.Buildingcode)
                    .HasMaxLength(50)
                    .HasColumnName("BUILDINGCODE");

                entity.Property(e => e.CentralBlock)
                    .HasMaxLength(50)
                    .HasColumnName("CENTRAL_BLOCK");

                entity.Property(e => e.Chusr)
                    .HasMaxLength(50)
                    .HasColumnName("CHUSR");

                entity.Property(e => e.City)
                    .HasMaxLength(50)
                    .HasColumnName("CITY");

                entity.Property(e => e.Commonid)
                    .HasMaxLength(50)
                    .HasColumnName("COMMONID");

                entity.Property(e => e.Country)
                    .HasMaxLength(50)
                    .HasColumnName("COUNTRY");

                entity.Property(e => e.Customersince)
                    .HasMaxLength(50)
                    .HasColumnName("CUSTOMERSINCE");

                entity.Property(e => e.Distributorrole)
                    .HasMaxLength(50)
                    .HasColumnName("DISTRIBUTORROLE");

                entity.Property(e => e.Domduns)
                    .HasMaxLength(50)
                    .HasColumnName("DOMDUNS");

                entity.Property(e => e.Duns)
                    .HasMaxLength(50)
                    .HasColumnName("DUNS");

                entity.Property(e => e.EdiId)
                    .HasMaxLength(50)
                    .HasColumnName("EDI_ID");

                entity.Property(e => e.EmpLogin)
                    .HasMaxLength(50)
                    .HasColumnName("EMP_LOGIN");

                entity.Property(e => e.EmpName)
                    .HasMaxLength(50)
                    .HasColumnName("EMP_NAME");

                entity.Property(e => e.EmpOrgCode)
                    .HasMaxLength(50)
                    .HasColumnName("EMP_ORG_CODE");

                entity.Property(e => e.EmpOrgUnit)
                    .HasMaxLength(50)
                    .HasColumnName("EMP_ORG_UNIT");

                entity.Property(e => e.EmpOrgUntiName)
                    .HasMaxLength(50)
                    .HasColumnName("EMP_ORG_UNTI_NAME");

                entity.Property(e => e.Endcustomerrole)
                    .HasMaxLength(50)
                    .HasColumnName("ENDCUSTOMERROLE");

                entity.Property(e => e.FaxNumber)
                    .HasMaxLength(50)
                    .HasColumnName("FAX_NUMBER");

                entity.Property(e => e.Floor)
                    .HasMaxLength(50)
                    .HasColumnName("FLOOR");

                entity.Property(e => e.Globalultduns)
                    .HasMaxLength(50)
                    .HasColumnName("GLOBALULTDUNS");

                entity.Property(e => e.Grouping)
                    .HasMaxLength(50)
                    .HasColumnName("GROUPING");

                entity.Property(e => e.Housenumber)
                    .HasMaxLength(50)
                    .HasColumnName("HOUSENUMBER");

                entity.Property(e => e.Housenumbersupplement)
                    .HasMaxLength(50)
                    .HasColumnName("HOUSENUMBERSUPPLEMENT");

                entity.Property(e => e.Iscustomer)
                    .HasMaxLength(50)
                    .HasColumnName("ISCUSTOMER");

                entity.Property(e => e.JuniperIndustryCode)
                    .HasMaxLength(50)
                    .HasColumnName("JUNIPER_INDUSTRY_CODE");

                entity.Property(e => e.Langu)
                    .HasMaxLength(50)
                    .HasColumnName("LANGU");

                entity.Property(e => e.Name1)
                    .HasMaxLength(250)
                    .HasColumnName("NAME1");

                entity.Property(e => e.Name2)
                    .HasMaxLength(250)
                    .HasColumnName("NAME2");

                entity.Property(e => e.Name3)
                    .HasMaxLength(250)
                    .HasColumnName("NAME3");

                entity.Property(e => e.Name4)
                    .HasMaxLength(50)
                    .HasColumnName("NAME4");

                entity.Property(e => e.Oracleid)
                    .HasMaxLength(50)
                    .HasColumnName("ORACLEID");

                entity.Property(e => e.PartnerAuthCode)
                    .HasMaxLength(50)
                    .HasColumnName("PARTNER_AUTH_CODE");

                entity.Property(e => e.Payerrole)
                    .HasMaxLength(50)
                    .HasColumnName("PAYERROLE");

                entity.Property(e => e.Postalcode)
                    .HasMaxLength(50)
                    .HasColumnName("POSTALCODE");

                entity.Property(e => e.PrimaryVarId)
                    .HasMaxLength(50)
                    .HasColumnName("PRIMARY_VAR_ID");

                entity.Property(e => e.Region)
                    .HasMaxLength(50)
                    .HasColumnName("REGION");

                entity.Property(e => e.Resellerrole)
                    .HasMaxLength(50)
                    .HasColumnName("RESELLERROLE");

                entity.Property(e => e.Roomnumber)
                    .HasMaxLength(50)
                    .HasColumnName("ROOMNUMBER");

                entity.Property(e => e.Salessystemflag)
                    .HasMaxLength(50)
                    .HasColumnName("SALESSYSTEMFLAG");

                entity.Property(e => e.Searchterm1)
                    .HasMaxLength(50)
                    .HasColumnName("SEARCHTERM1");

                entity.Property(e => e.Searchterm2)
                    .HasMaxLength(50)
                    .HasColumnName("SEARCHTERM2");

                entity.Property(e => e.SfdcId)
                    .HasMaxLength(50)
                    .HasColumnName("SFDC_ID");

                entity.Property(e => e.SfdcVictimId)
                    .HasMaxLength(50)
                    .HasColumnName("SFDC_VICTIM_ID");

                entity.Property(e => e.Shiptorole)
                    .HasMaxLength(50)
                    .HasColumnName("SHIPTOROLE");

                entity.Property(e => e.Siebelid)
                    .HasMaxLength(50)
                    .HasColumnName("SIEBELID");

                entity.Property(e => e.Soldtorole)
                    .HasMaxLength(50)
                    .HasColumnName("SOLDTOROLE");

                entity.Property(e => e.Source)
                    .HasMaxLength(50)
                    .HasColumnName("SOURCE");

                entity.Property(e => e.Street1)
                    .HasMaxLength(250)
                    .HasColumnName("STREET1");

                entity.Property(e => e.Street2)
                    .HasMaxLength(250)
                    .HasColumnName("STREET2");

                entity.Property(e => e.Street3)
                    .HasMaxLength(250)
                    .HasColumnName("STREET3");

                entity.Property(e => e.Street4)
                    .HasMaxLength(250)
                    .HasColumnName("STREET4");

                entity.Property(e => e.Street5)
                    .HasMaxLength(250)
                    .HasColumnName("STREET5");

                entity.Property(e => e.TelNumber)
                    .HasMaxLength(50)
                    .HasColumnName("TEL_NUMBER");

                entity.Property(e => e.TransZone)
                    .HasMaxLength(50)
                    .HasColumnName("TRANS_ZONE");

                entity.Property(e => e.UcmId)
                    .HasMaxLength(50)
                    .HasColumnName("UCM_ID");

                entity.Property(e => e.UriAddr)
                    .HasMaxLength(50)
                    .HasColumnName("URI_ADDR");

                entity.Property(e => e.VarId)
                    .HasMaxLength(50)
                    .HasColumnName("VAR_ID");

                entity.Property(e => e.Verifydate)
                    .HasMaxLength(50)
                    .HasColumnName("VERIFYDATE");
            });

            modelBuilder.Entity<CustomerUsArch06282018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("customer_us_arch_06282018", "dsf");

                entity.Property(e => e.Accountclass)
                    .HasMaxLength(50)
                    .HasColumnName("ACCOUNTCLASS");

                entity.Property(e => e.Accountgroup)
                    .HasMaxLength(50)
                    .HasColumnName("ACCOUNTGROUP");

                entity.Property(e => e.Accounttype)
                    .HasMaxLength(50)
                    .HasColumnName("ACCOUNTTYPE");

                entity.Property(e => e.Addrnumber)
                    .HasMaxLength(50)
                    .HasColumnName("ADDRNUMBER");

                entity.Property(e => e.ArchivingFlag)
                    .HasMaxLength(50)
                    .HasColumnName("ARCHIVING_FLAG");

                entity.Property(e => e.Attr4)
                    .HasMaxLength(50)
                    .HasColumnName("ATTR4");

                entity.Property(e => e.Billtorole)
                    .HasMaxLength(50)
                    .HasColumnName("BILLTOROLE");

                entity.Property(e => e.BpLastUpd)
                    .HasMaxLength(50)
                    .HasColumnName("BP_LAST_UPD");

                entity.Property(e => e.Bpid)
                    .HasMaxLength(50)
                    .HasColumnName("BPID");

                entity.Property(e => e.Buildingcode)
                    .HasMaxLength(50)
                    .HasColumnName("BUILDINGCODE");

                entity.Property(e => e.CentralBlock)
                    .HasMaxLength(50)
                    .HasColumnName("CENTRAL_BLOCK");

                entity.Property(e => e.Chusr)
                    .HasMaxLength(50)
                    .HasColumnName("CHUSR");

                entity.Property(e => e.City)
                    .HasMaxLength(50)
                    .HasColumnName("CITY");

                entity.Property(e => e.Commonid)
                    .HasMaxLength(50)
                    .HasColumnName("COMMONID");

                entity.Property(e => e.Country)
                    .HasMaxLength(50)
                    .HasColumnName("COUNTRY");

                entity.Property(e => e.Customersince)
                    .HasMaxLength(50)
                    .HasColumnName("CUSTOMERSINCE");

                entity.Property(e => e.Distributorrole)
                    .HasMaxLength(50)
                    .HasColumnName("DISTRIBUTORROLE");

                entity.Property(e => e.Domduns)
                    .HasMaxLength(50)
                    .HasColumnName("DOMDUNS");

                entity.Property(e => e.Duns)
                    .HasMaxLength(50)
                    .HasColumnName("DUNS");

                entity.Property(e => e.EdiId)
                    .HasMaxLength(50)
                    .HasColumnName("EDI_ID");

                entity.Property(e => e.EmpLogin)
                    .HasMaxLength(50)
                    .HasColumnName("EMP_LOGIN");

                entity.Property(e => e.EmpName)
                    .HasMaxLength(50)
                    .HasColumnName("EMP_NAME");

                entity.Property(e => e.EmpOrgCode)
                    .HasMaxLength(50)
                    .HasColumnName("EMP_ORG_CODE");

                entity.Property(e => e.EmpOrgUnit)
                    .HasMaxLength(50)
                    .HasColumnName("EMP_ORG_UNIT");

                entity.Property(e => e.EmpOrgUntiName)
                    .HasMaxLength(250)
                    .HasColumnName("EMP_ORG_UNTI_NAME");

                entity.Property(e => e.Endcustomerrole)
                    .HasMaxLength(50)
                    .HasColumnName("ENDCUSTOMERROLE");

                entity.Property(e => e.FaxNumber)
                    .HasMaxLength(50)
                    .HasColumnName("FAX_NUMBER");

                entity.Property(e => e.Floor)
                    .HasMaxLength(50)
                    .HasColumnName("FLOOR");

                entity.Property(e => e.Globalultduns)
                    .HasMaxLength(50)
                    .HasColumnName("GLOBALULTDUNS");

                entity.Property(e => e.Grouping)
                    .HasMaxLength(50)
                    .HasColumnName("GROUPING");

                entity.Property(e => e.Housenumber)
                    .HasMaxLength(50)
                    .HasColumnName("HOUSENUMBER");

                entity.Property(e => e.Housenumbersupplement)
                    .HasMaxLength(50)
                    .HasColumnName("HOUSENUMBERSUPPLEMENT");

                entity.Property(e => e.Iscustomer)
                    .HasMaxLength(50)
                    .HasColumnName("ISCUSTOMER");

                entity.Property(e => e.JuniperIndustryCode)
                    .HasMaxLength(50)
                    .HasColumnName("JUNIPER_INDUSTRY_CODE");

                entity.Property(e => e.Langu)
                    .HasMaxLength(50)
                    .HasColumnName("LANGU");

                entity.Property(e => e.Name1)
                    .HasMaxLength(250)
                    .HasColumnName("NAME1");

                entity.Property(e => e.Name2)
                    .HasMaxLength(250)
                    .HasColumnName("NAME2");

                entity.Property(e => e.Name3)
                    .HasMaxLength(250)
                    .HasColumnName("NAME3");

                entity.Property(e => e.Name4)
                    .HasMaxLength(50)
                    .HasColumnName("NAME4");

                entity.Property(e => e.Oracleid)
                    .HasMaxLength(50)
                    .HasColumnName("ORACLEID");

                entity.Property(e => e.PartnerAuthCode)
                    .HasMaxLength(50)
                    .HasColumnName("PARTNER_AUTH_CODE");

                entity.Property(e => e.Payerrole)
                    .HasMaxLength(50)
                    .HasColumnName("PAYERROLE");

                entity.Property(e => e.Postalcode)
                    .HasMaxLength(50)
                    .HasColumnName("POSTALCODE");

                entity.Property(e => e.PrimaryVarId)
                    .HasMaxLength(50)
                    .HasColumnName("PRIMARY_VAR_ID");

                entity.Property(e => e.Region)
                    .HasMaxLength(50)
                    .HasColumnName("REGION");

                entity.Property(e => e.Resellerrole)
                    .HasMaxLength(50)
                    .HasColumnName("RESELLERROLE");

                entity.Property(e => e.Roomnumber)
                    .HasMaxLength(50)
                    .HasColumnName("ROOMNUMBER");

                entity.Property(e => e.Salessystemflag)
                    .HasMaxLength(50)
                    .HasColumnName("SALESSYSTEMFLAG");

                entity.Property(e => e.Searchterm1)
                    .HasMaxLength(50)
                    .HasColumnName("SEARCHTERM1");

                entity.Property(e => e.Searchterm2)
                    .HasMaxLength(50)
                    .HasColumnName("SEARCHTERM2");

                entity.Property(e => e.SfdcId)
                    .HasMaxLength(50)
                    .HasColumnName("SFDC_ID");

                entity.Property(e => e.SfdcVictimId)
                    .HasMaxLength(50)
                    .HasColumnName("SFDC_VICTIM_ID");

                entity.Property(e => e.Shiptorole)
                    .HasMaxLength(50)
                    .HasColumnName("SHIPTOROLE");

                entity.Property(e => e.Siebelid)
                    .HasMaxLength(50)
                    .HasColumnName("SIEBELID");

                entity.Property(e => e.Soldtorole)
                    .HasMaxLength(50)
                    .HasColumnName("SOLDTOROLE");

                entity.Property(e => e.Source)
                    .HasMaxLength(50)
                    .HasColumnName("SOURCE");

                entity.Property(e => e.Street1)
                    .HasMaxLength(250)
                    .HasColumnName("STREET1");

                entity.Property(e => e.Street2)
                    .HasMaxLength(250)
                    .HasColumnName("STREET2");

                entity.Property(e => e.Street3)
                    .HasMaxLength(250)
                    .HasColumnName("STREET3");

                entity.Property(e => e.Street4)
                    .HasMaxLength(250)
                    .HasColumnName("STREET4");

                entity.Property(e => e.Street5)
                    .HasMaxLength(250)
                    .HasColumnName("STREET5");

                entity.Property(e => e.TelNumber)
                    .HasMaxLength(50)
                    .HasColumnName("TEL_NUMBER");

                entity.Property(e => e.TransZone)
                    .HasMaxLength(50)
                    .HasColumnName("TRANS_ZONE");

                entity.Property(e => e.UcmId)
                    .HasMaxLength(50)
                    .HasColumnName("UCM_ID");

                entity.Property(e => e.UriAddr)
                    .HasMaxLength(250)
                    .HasColumnName("URI_ADDR");

                entity.Property(e => e.VarId)
                    .HasMaxLength(50)
                    .HasColumnName("VAR_ID");

                entity.Property(e => e.Verifydate)
                    .HasMaxLength(50)
                    .HasColumnName("VERIFYDATE");
            });

            modelBuilder.Entity<CustomersSnow091918>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("customers_snow_091918", "dsf");

                entity.Property(e => e.AddressNo)
                    .HasMaxLength(50)
                    .HasColumnName("address_no");

                entity.Property(e => e.BpBillingHold)
                    .HasMaxLength(50)
                    .HasColumnName("bp_billing_hold");

                entity.Property(e => e.BpCategory)
                    .HasMaxLength(50)
                    .HasColumnName("bp_category");

                entity.Property(e => e.BpDeliveryHold)
                    .HasMaxLength(50)
                    .HasColumnName("bp_delivery_hold");

                entity.Property(e => e.BpExternalNo)
                    .HasMaxLength(50)
                    .HasColumnName("bp_external_no");

                entity.Property(e => e.BpGrouping)
                    .HasMaxLength(50)
                    .HasColumnName("bp_grouping");

                entity.Property(e => e.BpGuid)
                    .HasMaxLength(50)
                    .HasColumnName("bp_guid");

                entity.Property(e => e.BpRole)
                    .HasMaxLength(50)
                    .HasColumnName("bp_role");

                entity.Property(e => e.BpStatusCode)
                    .HasMaxLength(50)
                    .HasColumnName("bp_status_code");

                entity.Property(e => e.BpStatusDesc)
                    .HasMaxLength(50)
                    .HasColumnName("bp_status_desc");

                entity.Property(e => e.BpTransactionHold)
                    .HasMaxLength(50)
                    .HasColumnName("bp_transaction_hold");

                entity.Property(e => e.BpType)
                    .HasMaxLength(50)
                    .HasColumnName("bp_type");

                entity.Property(e => e.Bpid)
                    .HasMaxLength(50)
                    .HasColumnName("bpid");

                entity.Property(e => e.BuildingFloor)
                    .HasMaxLength(50)
                    .HasColumnName("building_floor");

                entity.Property(e => e.BuildingNo)
                    .HasMaxLength(50)
                    .HasColumnName("building_no");

                entity.Property(e => e.CentralArchiveFlag)
                    .HasMaxLength(50)
                    .HasColumnName("central_archive_flag");

                entity.Property(e => e.City)
                    .HasMaxLength(250)
                    .HasColumnName("city");

                entity.Property(e => e.ComplianceStatusCode)
                    .HasMaxLength(50)
                    .HasColumnName("compliance_status_code");

                entity.Property(e => e.ComplianceStatusDesc)
                    .HasMaxLength(50)
                    .HasColumnName("compliance_status_desc");

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("country_code");

                entity.Property(e => e.CountryGrp)
                    .HasMaxLength(50)
                    .HasColumnName("country_grp");

                entity.Property(e => e.CreatedAt)
                    .HasMaxLength(50)
                    .HasColumnName("created_at");

                entity.Property(e => e.CreatedOn).HasColumnName("created_on");

                entity.Property(e => e.Deleted)
                    .HasMaxLength(50)
                    .HasColumnName("deleted");

                entity.Property(e => e.District)
                    .HasMaxLength(250)
                    .HasColumnName("district");

                entity.Property(e => e.DistrictCode)
                    .HasMaxLength(250)
                    .HasColumnName("district_code");

                entity.Property(e => e.EdpCreated)
                    .HasMaxLength(50)
                    .HasColumnName("edp_created");

                entity.Property(e => e.EdpCreatedTxnId)
                    .HasMaxLength(50)
                    .HasColumnName("edp_created_txn_id");

                entity.Property(e => e.EdpLastUpdated)
                    .HasMaxLength(50)
                    .HasColumnName("edp_last_updated");

                entity.Property(e => e.EdpTxnId)
                    .HasMaxLength(50)
                    .HasColumnName("edp_txn_id");

                entity.Property(e => e.HouseNo)
                    .HasMaxLength(50)
                    .HasColumnName("house_no");

                entity.Property(e => e.IndustrySector)
                    .HasMaxLength(50)
                    .HasColumnName("industry_sector");

                entity.Property(e => e.IsPartnerConverted)
                    .HasMaxLength(50)
                    .HasColumnName("is_partner_converted");

                entity.Property(e => e.LastChangedAt)
                    .HasMaxLength(50)
                    .HasColumnName("last_changed_at");

                entity.Property(e => e.LastChangedOn).HasColumnName("last_changed_on");

                entity.Property(e => e.Name1)
                    .HasMaxLength(250)
                    .HasColumnName("name1");

                entity.Property(e => e.Name2)
                    .HasMaxLength(250)
                    .HasColumnName("name2");

                entity.Property(e => e.Name3)
                    .HasMaxLength(250)
                    .HasColumnName("name3");

                entity.Property(e => e.Name4)
                    .HasMaxLength(250)
                    .HasColumnName("name4");

                entity.Property(e => e.NameConc)
                    .HasMaxLength(1000)
                    .HasColumnName("name_conc");

                entity.Property(e => e.Postalcode)
                    .HasMaxLength(250)
                    .HasColumnName("postalcode");

                entity.Property(e => e.Region)
                    .HasMaxLength(250)
                    .HasColumnName("region");

                entity.Property(e => e.Street1)
                    .HasMaxLength(250)
                    .HasColumnName("street1");

                entity.Property(e => e.Street2)
                    .HasMaxLength(250)
                    .HasColumnName("street2");

                entity.Property(e => e.Street3)
                    .HasMaxLength(250)
                    .HasColumnName("street3");

                entity.Property(e => e.Street4)
                    .HasMaxLength(250)
                    .HasColumnName("street4");

                entity.Property(e => e.Street5)
                    .HasMaxLength(250)
                    .HasColumnName("street5");

                entity.Property(e => e.StreetConc)
                    .HasMaxLength(1000)
                    .HasColumnName("street_conc");
            });

            modelBuilder.Entity<CustomersSnow20181019>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("customers_snow_20181019", "dsf");

                entity.Property(e => e.AddressNo)
                    .HasMaxLength(50)
                    .HasColumnName("address_no");

                entity.Property(e => e.BpBillingHold)
                    .HasMaxLength(50)
                    .HasColumnName("bp_billing_hold");

                entity.Property(e => e.BpCategory)
                    .HasMaxLength(50)
                    .HasColumnName("bp_category");

                entity.Property(e => e.BpDeliveryHold)
                    .HasMaxLength(50)
                    .HasColumnName("bp_delivery_hold");

                entity.Property(e => e.BpExternalNo)
                    .HasMaxLength(50)
                    .HasColumnName("bp_external_no");

                entity.Property(e => e.BpGrouping)
                    .HasMaxLength(50)
                    .HasColumnName("bp_grouping");

                entity.Property(e => e.BpGuid)
                    .HasMaxLength(50)
                    .HasColumnName("bp_guid");

                entity.Property(e => e.BpRole)
                    .HasMaxLength(50)
                    .HasColumnName("bp_role");

                entity.Property(e => e.BpStatusCode)
                    .HasMaxLength(50)
                    .HasColumnName("bp_status_code");

                entity.Property(e => e.BpStatusDesc)
                    .HasMaxLength(50)
                    .HasColumnName("bp_status_desc");

                entity.Property(e => e.BpTransactionHold)
                    .HasMaxLength(50)
                    .HasColumnName("bp_transaction_hold");

                entity.Property(e => e.BpType)
                    .HasMaxLength(50)
                    .HasColumnName("bp_type");

                entity.Property(e => e.Bpid)
                    .HasMaxLength(50)
                    .HasColumnName("bpid");

                entity.Property(e => e.BuildingFloor)
                    .HasMaxLength(50)
                    .HasColumnName("building_floor");

                entity.Property(e => e.BuildingNo)
                    .HasMaxLength(50)
                    .HasColumnName("building_no");

                entity.Property(e => e.CentralArchiveFlag)
                    .HasMaxLength(50)
                    .HasColumnName("central_archive_flag");

                entity.Property(e => e.City)
                    .HasMaxLength(50)
                    .HasColumnName("city");

                entity.Property(e => e.ComplianceStatusCode)
                    .HasMaxLength(50)
                    .HasColumnName("compliance_status_code");

                entity.Property(e => e.ComplianceStatusDesc)
                    .HasMaxLength(50)
                    .HasColumnName("compliance_status_desc");

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("country_code");

                entity.Property(e => e.CountryGrp)
                    .HasMaxLength(50)
                    .HasColumnName("country_grp");

                entity.Property(e => e.CreatedAt)
                    .HasMaxLength(50)
                    .HasColumnName("created_at");

                entity.Property(e => e.CreatedOn)
                    .HasMaxLength(50)
                    .HasColumnName("created_on");

                entity.Property(e => e.Deleted)
                    .HasMaxLength(50)
                    .HasColumnName("deleted");

                entity.Property(e => e.District)
                    .HasMaxLength(50)
                    .HasColumnName("district");

                entity.Property(e => e.DistrictCode)
                    .HasMaxLength(50)
                    .HasColumnName("district_code");

                entity.Property(e => e.EdpCreated)
                    .HasMaxLength(50)
                    .HasColumnName("edp_created");

                entity.Property(e => e.EdpCreatedTxnId)
                    .HasMaxLength(50)
                    .HasColumnName("edp_created_txn_id");

                entity.Property(e => e.EdpLastUpdated)
                    .HasMaxLength(50)
                    .HasColumnName("edp_last_updated");

                entity.Property(e => e.EdpTxnId)
                    .HasMaxLength(50)
                    .HasColumnName("edp_txn_id");

                entity.Property(e => e.HouseNo)
                    .HasMaxLength(50)
                    .HasColumnName("house_no");

                entity.Property(e => e.IndustrySector)
                    .HasMaxLength(50)
                    .HasColumnName("industry_sector");

                entity.Property(e => e.IsPartnerConverted)
                    .HasMaxLength(50)
                    .HasColumnName("is_partner_converted");

                entity.Property(e => e.LastChangedAt)
                    .HasMaxLength(50)
                    .HasColumnName("last_changed_at");

                entity.Property(e => e.LastChangedOn)
                    .HasMaxLength(50)
                    .HasColumnName("last_changed_on");

                entity.Property(e => e.Name1)
                    .HasMaxLength(250)
                    .HasColumnName("name1");

                entity.Property(e => e.Name2)
                    .HasMaxLength(250)
                    .HasColumnName("name2");

                entity.Property(e => e.Name3)
                    .HasMaxLength(250)
                    .HasColumnName("name3");

                entity.Property(e => e.Name4)
                    .HasMaxLength(250)
                    .HasColumnName("name4");

                entity.Property(e => e.NameConc)
                    .HasMaxLength(1500)
                    .HasColumnName("name_conc");

                entity.Property(e => e.Postalcode)
                    .HasMaxLength(50)
                    .HasColumnName("postalcode");

                entity.Property(e => e.Region)
                    .HasMaxLength(50)
                    .HasColumnName("region");

                entity.Property(e => e.Street1)
                    .HasMaxLength(250)
                    .HasColumnName("street1");

                entity.Property(e => e.Street2)
                    .HasMaxLength(250)
                    .HasColumnName("street2");

                entity.Property(e => e.Street3)
                    .HasMaxLength(250)
                    .HasColumnName("street3");

                entity.Property(e => e.Street4)
                    .HasMaxLength(250)
                    .HasColumnName("street4");

                entity.Property(e => e.Street5)
                    .HasMaxLength(250)
                    .HasColumnName("street5");

                entity.Property(e => e.StreetConc)
                    .HasMaxLength(1500)
                    .HasColumnName("street_conc");
            });

            modelBuilder.Entity<DalianBooking>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("dalian_bookings", "wp");

                entity.Property(e => e.BillToPartyBasPostalCodeKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Bill To Party - BAS  Postal Code (Key)");

                entity.Property(e => e.BillToPartyBasStreet2Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Bill To Party - BAS   Street 2 (Key)");

                entity.Property(e => e.BillToPartyBasStreet3Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Bill To Party - BAS   Street 3 (Key)");

                entity.Property(e => e.BillToPartyBasStreet4Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Bill To Party - BAS   Street 4 (Key)");

                entity.Property(e => e.BillToPartyBusinessPartnerKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Bill To Party - Business Partner (Key)");

                entity.Property(e => e.BillToPartyCountryText)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Bill To Party - Country (Text)");

                entity.Property(e => e.BillToPartyLocationKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Bill To Party - Location (Key)");

                entity.Property(e => e.BillToPartyNameKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Bill To Party - Name (Key)");

                entity.Property(e => e.BillToPartyStreetNameKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Bill To Party - Street Name (Key)");

                entity.Property(e => e.BookDate)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Book Date");

                entity.Property(e => e.BookingQuantity)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Booking Quantity");

                entity.Property(e => e.BookingsNetValue)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Bookings Net Value");

                entity.Property(e => e.Column94)
                    .HasColumnType("text")
                    .HasColumnName("Column 94");

                entity.Property(e => e.CompleteDelivery)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Complete Delivery");

                entity.Property(e => e.Compliance)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CustomerPoNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Customer PO Number");

                entity.Property(e => e.DeliveryStatus)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Delivery Status");

                entity.Property(e => e.EmbargoStatusAtTheLineLevel)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Embargo Status at the line level");

                entity.Property(e => e.EndUser)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.EndUserBasPostalCodeKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("EndUser - BAS  Postal Code (Key)");

                entity.Property(e => e.EndUserBasStreet2Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("EndUser - BAS   Street 2 (Key)");

                entity.Property(e => e.EndUserBasStreet3Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("EndUser - BAS   Street 3 (Key)");

                entity.Property(e => e.EndUserBasStreet4Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("EndUser - BAS   Street 4 (Key)");

                entity.Property(e => e.EndUserCountryKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("EndUser - Country (Key)");

                entity.Property(e => e.EndUserCountryText)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("EndUser - Country (Text)");

                entity.Property(e => e.EndUserKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("EndUser - Key");

                entity.Property(e => e.EndUserLocationKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("EndUser - Location (Key)");

                entity.Property(e => e.EndUserStreetNameKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("EndUser - Street Name (Key)");

                entity.Property(e => e.FrieghtForwarder1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Frieght Forwarder 1");

                entity.Property(e => e.FrieghtForwarder1BasStreet2Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Frieght Forwarder 1 - BAS   Street 2 (Key)");

                entity.Property(e => e.FrieghtForwarder1BasStreet3Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Frieght Forwarder 1 - BAS   Street 3 (Key)");

                entity.Property(e => e.FrieghtForwarder1BasStreet4Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Frieght Forwarder 1 - BAS   Street 4 (Key)");

                entity.Property(e => e.FrieghtForwarder1CountryText)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Frieght Forwarder 1 - Country (Text)");

                entity.Property(e => e.FrieghtForwarder1LocationKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Frieght Forwarder 1 - Location (Key)");

                entity.Property(e => e.FrieghtForwarder1StreetNameKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Frieght Forwarder 1 - Street Name (Key)");

                entity.Property(e => e.FrieghtForwarder2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Frieght Forwarder 2");

                entity.Property(e => e.FrieghtForwarder2BasStreet2Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Frieght Forwarder 2 - BAS   Street 2 (Key)");

                entity.Property(e => e.FrieghtForwarder2BasStreet3Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Frieght Forwarder 2 - BAS   Street 3 (Key)");

                entity.Property(e => e.FrieghtForwarder2BasStreet4Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Frieght Forwarder 2 - BAS   Street 4 (Key)");

                entity.Property(e => e.FrieghtForwarder2CountryText)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Frieght Forwarder 2 - Country (Text)");

                entity.Property(e => e.FrieghtForwarder2LocationKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Frieght Forwarder 2 - Location (Key)");

                entity.Property(e => e.FrieghtForwarder2StreetNameKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Frieght Forwarder 2 - Street Name (Key)");

                entity.Property(e => e.FrieghtForwarder3)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Frieght Forwarder 3");

                entity.Property(e => e.FrieghtForwarder3BasStreet2Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Frieght Forwarder 3 - BAS   Street 2 (Key)");

                entity.Property(e => e.FrieghtForwarder3BasStreet3Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Frieght Forwarder 3 - BAS   Street 3 (Key)");

                entity.Property(e => e.FrieghtForwarder3BasStreet4Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Frieght Forwarder 3 - BAS   Street 4 (Key)");

                entity.Property(e => e.FrieghtForwarder3CountryText)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Frieght Forwarder 3 - Country (Text)");

                entity.Property(e => e.FrieghtForwarder3LocationKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Frieght Forwarder 3 - Location (Key)");

                entity.Property(e => e.FrieghtForwarder3StreetNameKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Frieght Forwarder 3 - Street Name (Key)");

                entity.Property(e => e.GtsOverallStatus)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("GTS Overall  Status");

                entity.Property(e => e.ImportDate)
                    .HasColumnType("datetime")
                    .HasColumnName("import_date");

                entity.Property(e => e.ImportId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("import_id");

                entity.Property(e => e.ImportStatus)
                    .HasMaxLength(255)
                    .HasColumnName("import_status");

                entity.Property(e => e.Incoterms1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Incoterms 1");

                entity.Property(e => e.Incoterms2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Incoterms 2");

                entity.Property(e => e.LicenseForBlocked)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("License for blocked");

                entity.Property(e => e.Material)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.MaterialEccnKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Material - ECCN (Key)");

                entity.Property(e => e.MaterialHtsKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Material - HTS (Key)");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Material - Key");

                entity.Property(e => e.MaterialMediumKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Material - Medium (Key)");

                entity.Property(e => e.MaterialPlantViewCountryOfOriginText)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Material Plant View - Country of Origin (Text)");

                entity.Property(e => e.Mit)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("MIT");

                entity.Property(e => e.OrderType1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Order Type1");

                entity.Property(e => e.OrderType2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Order Type2");

                entity.Property(e => e.PayerKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Payer - Key");

                entity.Property(e => e.PlantCountryKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Plant - Country (Key)");

                entity.Property(e => e.PlantKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Plant - Key");

                entity.Property(e => e.PlantMediumText)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Plant - Medium Text");

                entity.Property(e => e.PurchaseOrderType)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Purchase Order Type");

                entity.Property(e => e.ReasonCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Reason Code");

                entity.Property(e => e.RtphStatus)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("RTPH status");

                entity.Property(e => e.SalesDocumentItemCategory)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Sales Document Item Category");

                entity.Property(e => e.SalesOrderLineItem)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Sales Order Line Item");

                entity.Property(e => e.SalesOrderNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Sales Order Number");

                entity.Property(e => e.SalesOrderScheduleLineNo)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Sales Order Schedule Line No");

                entity.Property(e => e.ScheduleLineDate)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Schedule Line Date");

                entity.Property(e => e.ShipToPartyBasPostalCodeKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Ship To Party - BAS  Postal Code (Key)");

                entity.Property(e => e.ShipToPartyBasStreet2Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Ship To Party - BAS   Street 2 (Key)");

                entity.Property(e => e.ShipToPartyBasStreet3Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Ship To Party - BAS   Street 3 (Key)");

                entity.Property(e => e.ShipToPartyBasStreet4Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Ship To Party - BAS   Street 4 (Key)");

                entity.Property(e => e.ShipToPartyBusinessPartnerKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Ship To Party - Business Partner (Key)");

                entity.Property(e => e.ShipToPartyCountryText)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Ship To Party - Country (Text)");

                entity.Property(e => e.ShipToPartyLocationKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Ship To Party - Location (Key)");

                entity.Property(e => e.ShipToPartyNameKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Ship To Party - Name (Key)");

                entity.Property(e => e.ShipToPartyStreetNameKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Ship To Party - Street Name (Key)");

                entity.Property(e => e.ShippingNoteKey)
                    .HasColumnType("text")
                    .HasColumnName("Shipping Note - Key");

                entity.Property(e => e.ShippingType)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Shipping Type");

                entity.Property(e => e.SoldToPartyBasPostalCodeKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Sold To Party - BAS  Postal Code (Key)");

                entity.Property(e => e.SoldToPartyBasStreet2Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Sold To Party - BAS   Street 2 (Key)");

                entity.Property(e => e.SoldToPartyBasStreet3Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Sold To Party - BAS   Street 3 (Key)");

                entity.Property(e => e.SoldToPartyBasStreet4Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Sold To Party - BAS   Street 4 (Key)");

                entity.Property(e => e.SoldToPartyBusinessPartnerKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Sold To Party - Business Partner (Key)");

                entity.Property(e => e.SoldToPartyCountryText)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Sold To Party - Country (Text)");

                entity.Property(e => e.SoldToPartyLocationKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Sold To Party - Location (Key)");

                entity.Property(e => e.SoldToPartyNameKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Sold To Party - Name (Key)");

                entity.Property(e => e.SoldToPartyStreetNameKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Sold To Party - Street Name (Key)");

                entity.Property(e => e.SplStatusAtTheLineLevel)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("SPL  Status at the Line level");
            });

            modelBuilder.Entity<DevTestDatatype>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("dev.test_datatype");

                entity.Property(e => e.AusDecoLicenseEligibleCty)
                    .IsUnicode(false)
                    .HasColumnName("AUS_DECO_LICENSE_Eligible_CTY");

                entity.Property(e => e.CountryCode)
                    .IsUnicode(false)
                    .HasColumnName("Country_Code");

                entity.Property(e => e.CountryCode1)
                    .IsUnicode(false)
                    .HasColumnName("COUNTRY_CODE1");

                entity.Property(e => e.CountryName)
                    .IsUnicode(false)
                    .HasColumnName("Country_Name");

                entity.Property(e => e.CtyBelongsRegion)
                    .IsUnicode(false)
                    .HasColumnName("_CTY_belongs_REGION");

                entity.Property(e => e.DutchBrokeringNotificationCty)
                    .IsUnicode(false)
                    .HasColumnName("DUTCH_BROKERING_Notification_CTY");

                entity.Property(e => e.DutchExpHighRiskCty)
                    .IsUnicode(false)
                    .HasColumnName("DUTCH_EXP_HIGH_RISK_CTY");

                entity.Property(e => e.DutchExpLiscenseCty)
                    .IsUnicode(false)
                    .HasColumnName("DUTCH_EXP_LISCENSE_CTY");

                entity.Property(e => e.DutchExpLowRiskCty)
                    .IsUnicode(false)
                    .HasColumnName("DUTCH_EXP_LOW_RISK_CTY");

                entity.Property(e => e.DutchExpMedRiskCty)
                    .IsUnicode(false)
                    .HasColumnName("DUTCH_EXP_MED_RISK_CTY");

                entity.Property(e => e.DutchExpRisk)
                    .IsUnicode(false)
                    .HasColumnName("DUTCH_EXP_RISK");

                entity.Property(e => e.DutchIndividualExpLicense)
                    .IsUnicode(false)
                    .HasColumnName("DUTCH_Individual_EXP_LICENSE");

                entity.Property(e => e.DutchTempExpLicense)
                    .IsUnicode(false)
                    .HasColumnName("DUTCH_TEMP_EXP_LICENSE");

                entity.Property(e => e.Eu001CtyEligibleExp)
                    .IsUnicode(false)
                    .HasColumnName("EU001_CTY_Eligible_EXP");

                entity.Property(e => e.F14).IsUnicode(false);

                entity.Property(e => e.HkAip)
                    .IsUnicode(false)
                    .HasColumnName("HK_AIP");

                entity.Property(e => e.JnDualUseGoodsExpLicenseCty)
                    .IsUnicode(false)
                    .HasColumnName("JN_DUAL_USE_GOODS_EXP_LICENSE_CTY");

                entity.Property(e => e.MlLawsProhibitedCty)
                    .IsUnicode(false)
                    .HasColumnName("_ML_LAWS_PROHIBITED_CTY");

                entity.Property(e => e.NewZealand)
                    .IsUnicode(false)
                    .HasColumnName("New_Zealand");

                entity.Property(e => e.NlExportRestriction)
                    .IsUnicode(false)
                    .HasColumnName("nl_export_restriction");

                entity.Property(e => e.SnStsPermitApprovedCty)
                    .IsUnicode(false)
                    .HasColumnName("SN_STS_PERMIT_APPROVED_CTY");

                entity.Property(e => e.SuppGroup)
                    .IsUnicode(false)
                    .HasColumnName("Supp_Group");

                entity.Property(e => e.UkCryptoeilLicenseEligibleCty)
                    .IsUnicode(false)
                    .HasColumnName("UK_CRYPTOEIL_LICENSE_Eligible_CTY");

                entity.Property(e => e.UkOgelEligibleCty)
                    .IsUnicode(false)
                    .HasColumnName("UK_OGEL_Eligible_CTY");

                entity.Property(e => e.UsArmsEmbargoCtyD)
                    .IsUnicode(false)
                    .HasColumnName("US_ARMS_EMBARGO_CTY-D");

                entity.Property(e => e.UsEarCheAndBioGrpD)
                    .IsUnicode(false)
                    .HasColumnName("US_EAR_CHE_and_BIO_GRP-D");

                entity.Property(e => e.UsEarCtyGrpB)
                    .IsUnicode(false)
                    .HasColumnName("US_EAR_CTY_GRP-B");

                entity.Property(e => e.UsEarCtyGrpD)
                    .IsUnicode(false)
                    .HasColumnName("US_EAR_CTY_GRP-D");

                entity.Property(e => e.UsEarCtyGrpE)
                    .IsUnicode(false)
                    .HasColumnName("US_EAR_CTY_GRP-E");

                entity.Property(e => e.UsEarMissTechGrpD)
                    .IsUnicode(false)
                    .HasColumnName("US_EAR_MISS_TECH_GRP-D");

                entity.Property(e => e.UsEarNatSecGrpD)
                    .IsUnicode(false)
                    .HasColumnName("US_EAR_NAT_SEC_GRP-D");

                entity.Property(e => e.UsEarNuclearGrpD)
                    .IsUnicode(false)
                    .HasColumnName("US_EAR_NUCLEAR_GRP-D");

                entity.Property(e => e.UsEarWassenaarCtyA)
                    .IsUnicode(false)
                    .HasColumnName("US_EAR_Wassenaar_CTY-A");

                entity.Property(e => e.UsElaEligibleCty)
                    .IsUnicode(false)
                    .HasColumnName("US_ELA-ELIGIBLE_CTY");

                entity.Property(e => e.Watchlist)
                    .IsUnicode(false)
                    .HasColumnName("watchlist");
            });

            modelBuilder.Entity<DfToSqlTest>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("df_to_sql_test");

                entity.HasIndex(e => e.Index, "ix_df_to_sql_test_index");

                entity.Property(e => e.BilltoPartyCountry)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_country");

                entity.Property(e => e.BilltoPartyDistrict)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_district");

                entity.Property(e => e.BilltoPartyKey)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_key");

                entity.Property(e => e.BilltoPartyName)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_name");

                entity.Property(e => e.BilltoPartyPostalCode)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_postal_code");

                entity.Property(e => e.BilltoPartyRegion)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_region");

                entity.Property(e => e.BilltoPartyStreet1)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_street1");

                entity.Property(e => e.BilltoPartyStreet2)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_street2");

                entity.Property(e => e.BilltoPartyStreet3)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_street3");

                entity.Property(e => e.BilltoPartyStreet4)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_street4");

                entity.Property(e => e.ChannelPartnerKey)
                    .IsUnicode(false)
                    .HasColumnName("channel_partner_key");

                entity.Property(e => e.CiStatus)
                    .IsUnicode(false)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .IsUnicode(false)
                    .HasColumnName("claim_status");

                entity.Property(e => e.DedupId).HasColumnName("dedup_id");

                entity.Property(e => e.DistiCountry)
                    .IsUnicode(false)
                    .HasColumnName("disti_country");

                entity.Property(e => e.DistiDistrict)
                    .IsUnicode(false)
                    .HasColumnName("disti_district");

                entity.Property(e => e.DistiKey)
                    .IsUnicode(false)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .IsUnicode(false)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiPostalCode)
                    .IsUnicode(false)
                    .HasColumnName("disti_postal_code");

                entity.Property(e => e.DistiRegion)
                    .IsUnicode(false)
                    .HasColumnName("disti_region");

                entity.Property(e => e.DistiSales)
                    .IsUnicode(false)
                    .HasColumnName("disti_sales");

                entity.Property(e => e.DistiStreet1)
                    .IsUnicode(false)
                    .HasColumnName("disti_street1");

                entity.Property(e => e.DistiStreet2)
                    .IsUnicode(false)
                    .HasColumnName("disti_street2");

                entity.Property(e => e.DistiStreet3)
                    .IsUnicode(false)
                    .HasColumnName("disti_street3");

                entity.Property(e => e.DistiStreet4)
                    .IsUnicode(false)
                    .HasColumnName("disti_street4");

                entity.Property(e => e.DocOrderNumber)
                    .IsUnicode(false)
                    .HasColumnName("doc_order_number");

                entity.Property(e => e.EndCustCountry)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustDistrict)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_district");

                entity.Property(e => e.EndCustKey)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustPoNumber)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_po_number");

                entity.Property(e => e.EndCustPostalCode)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_postal_code");

                entity.Property(e => e.EndCustRegion)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_region");

                entity.Property(e => e.EndCustStreet1)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_street1");

                entity.Property(e => e.EndCustStreet2)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_street2");

                entity.Property(e => e.EndCustStreet3)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_street3");

                entity.Property(e => e.EndCustStreet4)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_street4");

                entity.Property(e => e.ImportDate)
                    .HasColumnType("datetime")
                    .HasColumnName("import_date");

                entity.Property(e => e.ImportId).HasColumnName("import_id");

                entity.Property(e => e.ImportStatus)
                    .IsUnicode(false)
                    .HasColumnName("import_status");

                entity.Property(e => e.Index).HasColumnName("index");

                entity.Property(e => e.ItemCreatedDate)
                    .IsUnicode(false)
                    .HasColumnName("item_created_date");

                entity.Property(e => e.ItemNumber).HasColumnName("item_number");

                entity.Property(e => e.ListPrice).HasColumnName("list_price");

                entity.Property(e => e.Material)
                    .IsUnicode(false)
                    .HasColumnName("material");

                entity.Property(e => e.MaterialEccn)
                    .IsUnicode(false)
                    .HasColumnName("material_eccn");

                entity.Property(e => e.MaterialHts)
                    .IsUnicode(false)
                    .HasColumnName("material_hts");

                entity.Property(e => e.MaterialKey)
                    .IsUnicode(false)
                    .HasColumnName("material_key");

                entity.Property(e => e.MaterialProductCat)
                    .IsUnicode(false)
                    .HasColumnName("material_product_cat");

                entity.Property(e => e.MaterialType)
                    .IsUnicode(false)
                    .HasColumnName("material_type");

                entity.Property(e => e.MaterialTypeKey)
                    .IsUnicode(false)
                    .HasColumnName("material_type_key");

                entity.Property(e => e.NetPrice).HasColumnName("net_price");

                entity.Property(e => e.NpSerialNumber)
                    .IsUnicode(false)
                    .HasColumnName("np_serial_number");

                entity.Property(e => e.ReportedQty)
                    .IsUnicode(false)
                    .HasColumnName("reported_qty");

                entity.Property(e => e.ResaleShipDate)
                    .IsUnicode(false)
                    .HasColumnName("resale_ship_date");

                entity.Property(e => e.ResellerCountry)
                    .IsUnicode(false)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerDistrict)
                    .IsUnicode(false)
                    .HasColumnName("reseller_district");

                entity.Property(e => e.ResellerKey)
                    .IsUnicode(false)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .IsUnicode(false)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerPoNumber)
                    .IsUnicode(false)
                    .HasColumnName("reseller_po_number");

                entity.Property(e => e.ResellerPostalCode)
                    .IsUnicode(false)
                    .HasColumnName("reseller_postal_code");

                entity.Property(e => e.ResellerStreet1)
                    .IsUnicode(false)
                    .HasColumnName("reseller_street1");

                entity.Property(e => e.ResellerStreet2)
                    .IsUnicode(false)
                    .HasColumnName("reseller_street2");

                entity.Property(e => e.ResellerStreet3)
                    .IsUnicode(false)
                    .HasColumnName("reseller_street3");

                entity.Property(e => e.ResellerStreet4)
                    .IsUnicode(false)
                    .HasColumnName("reseller_street4");

                entity.Property(e => e.SdContractNumber)
                    .IsUnicode(false)
                    .HasColumnName("sd_contract_number");

                entity.Property(e => e.SerialNumber)
                    .IsUnicode(false)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SoNumber)
                    .IsUnicode(false)
                    .HasColumnName("so_number");

                entity.Property(e => e.TransactionDate)
                    .IsUnicode(false)
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionQty)
                    .IsUnicode(false)
                    .HasColumnName("transaction_qty");

                entity.Property(e => e.TransmissionNumber)
                    .IsUnicode(false)
                    .HasColumnName("transmission_number");
            });

            modelBuilder.Entity<DocusignEnvelopeSatusTemp>(entity =>
            {
                entity.ToTable("Docusign_envelopeSatus_temp");

                entity.Property(e => e.EnvelopeId)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.RecepientId)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("recepientId");

                entity.HasOne(d => d.Envelope)
                    .WithMany(p => p.DocusignEnvelopeSatusTemps)
                    .HasForeignKey(d => d.EnvelopeId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Docusign_envelopeSatus_temp_Docusign_Envelopes_temp");
            });

            modelBuilder.Entity<DocusignEnvelopesTemp>(entity =>
            {
                entity.HasKey(e => e.EnvelopeId);

                entity.ToTable("Docusign_Envelopes_temp");

                entity.Property(e => e.EnvelopeId)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EnvelopeHeader)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Envelope_Header");

                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<DrspPosSvcMerged>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("drsp_pos_svc_merged", "dev");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("am_country_name");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("billto_district");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.BilltoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("billto_postal_code");

                entity.Property(e => e.BilltoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("billto_region");

                entity.Property(e => e.BilltoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street1");

                entity.Property(e => e.BilltoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street2");

                entity.Property(e => e.BilltoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street3");

                entity.Property(e => e.BilltoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street4");

                entity.Property(e => e.BilltoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street5");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .HasColumnName("claim_status");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_item");

                entity.Property(e => e.DiscPerc)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("disc_perc");

                entity.Property(e => e.DistiCity)
                    .HasMaxLength(255)
                    .HasColumnName("disti_city");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("disti_postal_code");

                entity.Property(e => e.DistiRegion)
                    .HasMaxLength(255)
                    .HasColumnName("disti_region");

                entity.Property(e => e.DistiStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street1");

                entity.Property(e => e.DistiStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street2");

                entity.Property(e => e.DistiStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street3");

                entity.Property(e => e.DistiStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street4");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(250)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.DrspPosId).HasColumnName("drsp_pos_id");

                entity.Property(e => e.EcSvcJaroScore).HasColumnName("ec_svc_jaro_score");

                entity.Property(e => e.EcSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_key_flag");

                entity.Property(e => e.EcSvcSamegidFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_samegid_flag");

                entity.Property(e => e.EcSvcSenzingScore).HasColumnName("ec_svc_senzing_score");

                entity.Property(e => e.EndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_city");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_postal_code");

                entity.Property(e => e.EndCustRegion)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_region");

                entity.Property(e => e.EndCustStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street1");

                entity.Property(e => e.EndCustStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street2");

                entity.Property(e => e.EndCustStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street3");

                entity.Property(e => e.EndCustStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street4");

                entity.Property(e => e.EndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("end_cust_theater");

                entity.Property(e => e.EndUserStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("end_user_street5");

                entity.Property(e => e.EntityExceptionFlag)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("entity_exception_flag");

                entity.Property(e => e.EntityRelatedFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("entity_related_flag");

                entity.Property(e => e.GlobalAcctScore).HasColumnName("global_acct_score");

                entity.Property(e => e.GmeFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("gme_flag");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.MspAcctScore).HasColumnName("msp_acct_score");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.ProcessedFlag)
                    .HasMaxLength(50)
                    .HasColumnName("processed_flag");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("quote_id");

                entity.Property(e => e.ReportedQty).HasColumnName("reported_qty");

                entity.Property(e => e.ResEcJaroScore).HasColumnName("res_ec_jaro_score");

                entity.Property(e => e.ResEcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_ec_key_flag");

                entity.Property(e => e.ResSvcEntityRelatedFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("res_svc_entity_related_flag");

                entity.Property(e => e.ResSvcJaroScore).HasColumnName("res_svc_jaro_score");

                entity.Property(e => e.ResSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_svc_key_flag");

                entity.Property(e => e.ResellerCity)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_city");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_postal_code");

                entity.Property(e => e.ResellerStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street1");

                entity.Property(e => e.ResellerStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street2");

                entity.Property(e => e.ResellerStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street3");

                entity.Property(e => e.ResellerStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street4");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.RmaNumber)
                    .HasMaxLength(50)
                    .HasColumnName("rma_number");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SerialNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number_orig");

                entity.Property(e => e.ShiptoCity)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_city");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShiptoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_postal_code");

                entity.Property(e => e.ShiptoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_region");

                entity.Property(e => e.ShiptoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street1");

                entity.Property(e => e.ShiptoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street2");

                entity.Property(e => e.ShiptoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street3");

                entity.Property(e => e.ShiptoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street4");

                entity.Property(e => e.ShiptoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street5");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("so_number_orig");

                entity.Property(e => e.SoType)
                    .HasMaxLength(250)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoCity)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_city");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SoldtoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_postal_code");

                entity.Property(e => e.SoldtoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street1");

                entity.Property(e => e.SoldtoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street2");

                entity.Property(e => e.SoldtoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street3");

                entity.Property(e => e.SoldtoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street4");

                entity.Property(e => e.SoldtoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street5");

                entity.Property(e => e.SourceImportId).HasColumnName("source_import_id");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.SvcBilltoCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("svc_billto_country_code");

                entity.Property(e => e.SvcBilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_billto_key");

                entity.Property(e => e.SvcBilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_billto_name");

                entity.Property(e => e.SvcContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_creation_date");

                entity.Property(e => e.SvcContractLineCreation)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_line_creation");

                entity.Property(e => e.SvcContractLineStatus)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_line_status");

                entity.Property(e => e.SvcContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_number");

                entity.Property(e => e.SvcContractStatus)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_status");

                entity.Property(e => e.SvcContractType)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_type");

                entity.Property(e => e.SvcCurrency)
                    .HasMaxLength(50)
                    .HasColumnName("svc_currency");

                entity.Property(e => e.SvcEndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_city");

                entity.Property(e => e.SvcEndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_country_code");

                entity.Property(e => e.SvcEndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_country_name");

                entity.Property(e => e.SvcEndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_key");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_name");

                entity.Property(e => e.SvcEndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_theater");

                entity.Property(e => e.SvcEndDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_end_date");

                entity.Property(e => e.SvcInstalledAtCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_country_code");

                entity.Property(e => e.SvcInstalledAtCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_installed_at_country_name");

                entity.Property(e => e.SvcInstalledAtDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_district");

                entity.Property(e => e.SvcInstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_installed_at_key");

                entity.Property(e => e.SvcInstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_name");

                entity.Property(e => e.SvcListValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_list_value");

                entity.Property(e => e.SvcMaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_desc");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcNetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_net_value");

                entity.Property(e => e.SvcPayerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_country");

                entity.Property(e => e.SvcPayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_payer_key");

                entity.Property(e => e.SvcPayerName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_name");

                entity.Property(e => e.SvcSalesOrder)
                    .HasMaxLength(50)
                    .HasColumnName("svc_sales_order");

                entity.Property(e => e.SvcStartDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_start_date");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(250)
                    .HasColumnName("transaction_type");
            });

            modelBuilder.Entity<Dutchfinal>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("dutchfinal", "dsf");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.BilltoCountry)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("billto_country");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoLoc)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("billto_loc");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("billto_name");

                entity.Property(e => e.BilltoPostalCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("billto_postal_code");

                entity.Property(e => e.BilltoStreet1)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("billto_street1");

                entity.Property(e => e.BilltoStreet2)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("billto_street2");

                entity.Property(e => e.BilltoStreet3)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("billto_street3");

                entity.Property(e => e.BilltoStreet4)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("billto_street4");

                entity.Property(e => e.BookedDate)
                    .HasColumnType("date")
                    .HasColumnName("booked_date");

                entity.Property(e => e.BookingNetValue).HasColumnName("booking_net_value");

                entity.Property(e => e.BookingQty).HasColumnName("booking_qty");

                entity.Property(e => e.CompleteDelivery)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("complete_delivery");

                entity.Property(e => e.Compliance)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("compliance");

                entity.Property(e => e.CustomerPo)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("customer_po");

                entity.Property(e => e.DeliveryStatus)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("delivery_status");

                entity.Property(e => e.EmbargoLineStatus)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("embargo_line_status");

                entity.Property(e => e.EndCustomerGsaFlag)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("end_customer_gsa_flag");

                entity.Property(e => e.EndCustomerPartnerLevel)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("end_customer_partner_level");

                entity.Property(e => e.EndUser)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("end_user");

                entity.Property(e => e.EndUserCountry)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("end_user_country");

                entity.Property(e => e.EndUserCountryCode)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("end_user_country_code");

                entity.Property(e => e.EndUserKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("end_user_key");

                entity.Property(e => e.EndUserLocation)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("end_user_location");

                entity.Property(e => e.EndUserPostalCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("end_user_postal_code");

                entity.Property(e => e.EndUserStreet1)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("end_user_street1");

                entity.Property(e => e.EndUserStreet2)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("end_user_street2");

                entity.Property(e => e.EndUserStreet3)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("end_user_street3");

                entity.Property(e => e.EndUserStreet4)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("end_user_street4");

                entity.Property(e => e.FrieghtForwarder1)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder1");

                entity.Property(e => e.FrieghtForwarder1Country)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder1_country");

                entity.Property(e => e.FrieghtForwarder1Loc)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder1_loc");

                entity.Property(e => e.FrieghtForwarder1Street1)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder1_street1");

                entity.Property(e => e.FrieghtForwarder1Street2)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder1_street2");

                entity.Property(e => e.FrieghtForwarder1Street3)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder1_street3");

                entity.Property(e => e.FrieghtForwarder1Street4)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder1_street4");

                entity.Property(e => e.FrieghtForwarder2)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder2");

                entity.Property(e => e.FrieghtForwarder2Country)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder2_country");

                entity.Property(e => e.FrieghtForwarder2Loc)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder2_loc");

                entity.Property(e => e.FrieghtForwarder2Street1)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder2_street1");

                entity.Property(e => e.FrieghtForwarder2Street2)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder2_street2");

                entity.Property(e => e.FrieghtForwarder2Street3)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder2_street3");

                entity.Property(e => e.FrieghtForwarder2Street4)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder2_street4");

                entity.Property(e => e.FrieghtForwarder3)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder3");

                entity.Property(e => e.FrieghtForwarder3Country)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder3_country");

                entity.Property(e => e.FrieghtForwarder3Loc)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder3_loc");

                entity.Property(e => e.FrieghtForwarder3Street1)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder3_street1");

                entity.Property(e => e.FrieghtForwarder3Street2)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder3_street2");

                entity.Property(e => e.FrieghtForwarder3Street3)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder3_street3");

                entity.Property(e => e.FrieghtForwarder3Street4)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder3_street4");

                entity.Property(e => e.GtsOverallStatus)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("gts_overall_status");

                entity.Property(e => e.ImportDate)
                    .HasColumnType("datetime")
                    .HasColumnName("import_date");

                entity.Property(e => e.ImportId).HasColumnName("import_id");

                entity.Property(e => e.ImportStatus)
                    .HasMaxLength(255)
                    .HasColumnName("import_status");

                entity.Property(e => e.Incoterms1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("incoterms1");

                entity.Property(e => e.Incoterms2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("incoterms2");

                entity.Property(e => e.LicenseBlocked)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("license_blocked");

                entity.Property(e => e.Material)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("material");

                entity.Property(e => e.MaterialEccn)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("material_eccn");

                entity.Property(e => e.MaterialHts)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("material_hts");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("material_key");

                entity.Property(e => e.MaterialMedium)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("material_medium");

                entity.Property(e => e.MaterialPlantCountryOrig)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("material_plant_country_orig");

                entity.Property(e => e.Mit)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("mit");

                entity.Property(e => e.Payer)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("payer");

                entity.Property(e => e.PlantCountryCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("plant_country_code");

                entity.Property(e => e.PlantKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("plant_key");

                entity.Property(e => e.PlantMedium)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("plant_medium");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("po_type");

                entity.Property(e => e.ResasonCode)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("resason_code");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerDistrict)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("reseller_district");

                entity.Property(e => e.ResellerGsaFlag)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("reseller_gsa_flag");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerPartnerLevelKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("reseller_partner_level_key");

                entity.Property(e => e.RtphStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("rtph_status");

                entity.Property(e => e.SalesDocItemCat)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("sales_doc_item_cat");

                entity.Property(e => e.ScheduleLineDate)
                    .HasColumnType("date")
                    .HasColumnName("schedule_line_date");

                entity.Property(e => e.ShippingNote)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("shipping_note");

                entity.Property(e => e.ShippingType)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("shipping_type");

                entity.Property(e => e.ShiptoCountry)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("shipto_country");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShiptoLoc)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("shipto_loc");

                entity.Property(e => e.ShiptoName)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("shipto_name");

                entity.Property(e => e.ShiptoPostalCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("shipto_postal_code");

                entity.Property(e => e.ShiptoStreet1)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street1");

                entity.Property(e => e.ShiptoStreet2)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street2");

                entity.Property(e => e.ShiptoStreet3)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street3");

                entity.Property(e => e.ShiptoStreet4)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street4");

                entity.Property(e => e.SoLineNum).HasColumnName("so_line_num");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoSchedLineNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("so_sched_line_no");

                entity.Property(e => e.SoType)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoTypeKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("so_type_key");

                entity.Property(e => e.SoldtoCountry)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("soldto_country");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoLoc)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("soldto_loc");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SoldtoPartyGsaFlag)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("soldto_party_gsa_flag");

                entity.Property(e => e.SoldtoPostalCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("soldto_postal_code");

                entity.Property(e => e.SoldtoStreet1)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("soldto_street1");

                entity.Property(e => e.SoldtoStreet2)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("soldto_street2");

                entity.Property(e => e.SoldtoStreet3)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("soldto_street3");

                entity.Property(e => e.SoldtoStreet4)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("soldto_street4");

                entity.Property(e => e.SplLineStatus)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("spl_line_status");

                entity.Property(e => e.TranId).HasColumnName("Tran_ID");

                entity.Property(e => e.TransactionCreated)
                    .HasColumnType("date")
                    .HasColumnName("transaction_created");
            });

            modelBuilder.Entity<Dutchreport>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("dutchreport", "dsf");

                entity.Property(e => e.TranId).HasColumnName("Tran_ID");
            });

            modelBuilder.Entity<EtlPo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("etl_pos");

                entity.Property(e => e.BilltoPartyCountry)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_country");

                entity.Property(e => e.BilltoPartyDistrict)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_district");

                entity.Property(e => e.BilltoPartyKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_key");

                entity.Property(e => e.BilltoPartyName)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_name");

                entity.Property(e => e.BilltoPartyPostalCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_postal_code");

                entity.Property(e => e.BilltoPartyRegion)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_region");

                entity.Property(e => e.BilltoPartyStreet1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_street1");

                entity.Property(e => e.BilltoPartyStreet2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_street2");

                entity.Property(e => e.BilltoPartyStreet3)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_street3");

                entity.Property(e => e.BilltoPartyStreet4)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_street4");

                entity.Property(e => e.ChannelPartnerKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("channel_partner_key");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("claim_status");

                entity.Property(e => e.DedupId).HasColumnName("dedup_id");

                entity.Property(e => e.DistiCountry)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_country");

                entity.Property(e => e.DistiDistrict)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_district");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiPostalCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_postal_code");

                entity.Property(e => e.DistiRegion)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_region");

                entity.Property(e => e.DistiSales)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_sales");

                entity.Property(e => e.DistiStreet1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_street1");

                entity.Property(e => e.DistiStreet2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_street2");

                entity.Property(e => e.DistiStreet3)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_street3");

                entity.Property(e => e.DistiStreet4)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_street4");

                entity.Property(e => e.DocOrderNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("doc_order_number");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustDistrict)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_district");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustPoNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_po_number");

                entity.Property(e => e.EndCustPostalCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_postal_code");

                entity.Property(e => e.EndCustRegion)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_region");

                entity.Property(e => e.EndCustStreet1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_street1");

                entity.Property(e => e.EndCustStreet2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_street2");

                entity.Property(e => e.EndCustStreet3)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_street3");

                entity.Property(e => e.EndCustStreet4)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_street4");

                entity.Property(e => e.ImportDate)
                    .HasColumnType("datetime")
                    .HasColumnName("import_date");

                entity.Property(e => e.ImportId).HasColumnName("import_id");

                entity.Property(e => e.ImportStatus)
                    .HasMaxLength(255)
                    .HasColumnName("import_status");

                entity.Property(e => e.ItemCreatedDate)
                    .HasColumnType("date")
                    .HasColumnName("item_created_date");

                entity.Property(e => e.ItemNumber).HasColumnName("item_number");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.Material)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material");

                entity.Property(e => e.MaterialEccn)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material_eccn");

                entity.Property(e => e.MaterialHts)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material_hts");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material_key");

                entity.Property(e => e.MaterialProductCat)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material_product_cat");

                entity.Property(e => e.MaterialType)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material_type");

                entity.Property(e => e.MaterialTypeKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material_type_key");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.NpSerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("np_serial_number");

                entity.Property(e => e.ReportedQty)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reported_qty");

                entity.Property(e => e.ResaleShipDate)
                    .HasColumnType("date")
                    .HasColumnName("resale_ship_date");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerDistrict)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_district");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerPoNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_po_number");

                entity.Property(e => e.ResellerPostalCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_postal_code");

                entity.Property(e => e.ResellerStreet1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_street1");

                entity.Property(e => e.ResellerStreet2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_street2");

                entity.Property(e => e.ResellerStreet3)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_street3");

                entity.Property(e => e.ResellerStreet4)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_street4");

                entity.Property(e => e.SdContractNumber)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("sd_contract_number");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("so_number");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionQty)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("transaction_qty");

                entity.Property(e => e.TransmissionNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("transmission_number");
            });

            modelBuilder.Entity<EwmdFinal>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ewmd_final");

                entity.HasIndex(e => e.CompanyName, "ewmd_companyname");

                entity.HasIndex(e => e.Country, "ewmd_cty");

                entity.HasIndex(e => e.UserId, "ewmd_userid");

                entity.Property(e => e.AddressLine1)
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("ADDRESS_LINE_1");

                entity.Property(e => e.AddressLine2)
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("ADDRESS_LINE_2");

                entity.Property(e => e.AddressLine3)
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("ADDRESS_LINE_3");

                entity.Property(e => e.AuthFailureCode)
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("AUTH_FAILURE_CODE");

                entity.Property(e => e.Authorized)
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("AUTHORIZED");

                entity.Property(e => e.City)
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("CITY");

                entity.Property(e => e.CompanyName)
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("COMPANY_NAME");

                entity.Property(e => e.Country)
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("COUNTRY");

                entity.Property(e => e.CreatedDt)
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("CREATED_DT");

                entity.Property(e => e.Euea)
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("EUEA");

                entity.Property(e => e.EulaAccepted)
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("EULA_ACCEPTED");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("FIRST_NAME");

                entity.Property(e => e.FullDomainName)
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("FULL_DOMAIN_NAME");

                entity.Property(e => e.IpCountry)
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("IP_COUNTRY");

                entity.Property(e => e.IpRegion)
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("IP_REGION");

                entity.Property(e => e.IsOsRestricted)
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("IS_OS_RESTRICTED");

                entity.Property(e => e.LastName)
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("LAST_NAME");

                entity.Property(e => e.OsName)
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("OS_NAME");

                entity.Property(e => e.PhoneNumber)
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("PHONE_NUMBER");

                entity.Property(e => e.ReasonCode)
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("REASON_CODE");

                entity.Property(e => e.ReasonDesc)
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("REASON_DESC");

                entity.Property(e => e.Restricted)
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("RESTRICTED");

                entity.Property(e => e.Sapbpid)
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("SAPBPID");

                entity.Property(e => e.SoftwareUrl)
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("SOFTWARE_URL");

                entity.Property(e => e.State)
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("STATE");

                entity.Property(e => e.UserId)
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("USER_ID");

                entity.Property(e => e.UserIp)
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("USER_IP");

                entity.Property(e => e.Zip)
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("ZIP");
            });

            modelBuilder.Entity<EwmdNov17Jan18>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("EWMD_Nov17_Jan18", "dsf");

                entity.Property(e => e.AddressLine1)
                    .HasMaxLength(500)
                    .HasColumnName("ADDRESS_LINE_1");

                entity.Property(e => e.AddressLine2)
                    .HasMaxLength(500)
                    .HasColumnName("ADDRESS_LINE_2");

                entity.Property(e => e.AddressLine3)
                    .HasMaxLength(500)
                    .HasColumnName("ADDRESS_LINE_3");

                entity.Property(e => e.AuthFailureCode)
                    .HasMaxLength(500)
                    .HasColumnName("AUTH_FAILURE_CODE");

                entity.Property(e => e.Authorized)
                    .HasMaxLength(500)
                    .HasColumnName("AUTHORIZED");

                entity.Property(e => e.City)
                    .HasMaxLength(500)
                    .HasColumnName("CITY");

                entity.Property(e => e.CompanyName)
                    .HasMaxLength(500)
                    .HasColumnName("COMPANY_NAME");

                entity.Property(e => e.Country)
                    .HasMaxLength(500)
                    .HasColumnName("COUNTRY");

                entity.Property(e => e.CreatedDt)
                    .HasMaxLength(500)
                    .HasColumnName("CREATED_DT");

                entity.Property(e => e.Euea)
                    .HasMaxLength(500)
                    .HasColumnName("EUEA");

                entity.Property(e => e.EulaAccepted)
                    .HasMaxLength(500)
                    .HasColumnName("EULA_ACCEPTED");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(500)
                    .HasColumnName("FIRST_NAME");

                entity.Property(e => e.FullDomainName)
                    .HasMaxLength(500)
                    .HasColumnName("FULL_DOMAIN_NAME");

                entity.Property(e => e.IpCountry)
                    .HasMaxLength(500)
                    .HasColumnName("IP_COUNTRY");

                entity.Property(e => e.IpRegion)
                    .HasMaxLength(500)
                    .HasColumnName("IP_REGION");

                entity.Property(e => e.IsOsRestricted)
                    .HasMaxLength(500)
                    .HasColumnName("IS_OS_RESTRICTED");

                entity.Property(e => e.LastName)
                    .HasMaxLength(500)
                    .HasColumnName("LAST_NAME");

                entity.Property(e => e.OsName)
                    .HasMaxLength(500)
                    .HasColumnName("OS_NAME");

                entity.Property(e => e.PhoneNumber)
                    .HasMaxLength(500)
                    .HasColumnName("PHONE_NUMBER");

                entity.Property(e => e.ReasonCode)
                    .HasMaxLength(500)
                    .HasColumnName("REASON_CODE");

                entity.Property(e => e.ReasonDesc)
                    .HasMaxLength(500)
                    .HasColumnName("REASON_DESC");

                entity.Property(e => e.Restricted)
                    .HasMaxLength(500)
                    .HasColumnName("RESTRICTED");

                entity.Property(e => e.Sapbpid)
                    .HasMaxLength(500)
                    .HasColumnName("SAPBPID");

                entity.Property(e => e.SoftwareUrl)
                    .HasMaxLength(500)
                    .HasColumnName("SOFTWARE_URL");

                entity.Property(e => e.State)
                    .HasMaxLength(500)
                    .HasColumnName("STATE");

                entity.Property(e => e.UserId)
                    .HasMaxLength(500)
                    .HasColumnName("USER_ID");

                entity.Property(e => e.UserIp)
                    .HasMaxLength(500)
                    .HasColumnName("USER_IP");

                entity.Property(e => e.Zip)
                    .HasMaxLength(500)
                    .HasColumnName("ZIP");
            });

            modelBuilder.Entity<Export>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("export");

                entity.Property(e => e.AccountStatus)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("ACCOUNT_STATUS");

                entity.Property(e => e.AddressLine1)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("ADDRESS_LINE_1");

                entity.Property(e => e.AddressLine2)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("ADDRESS_LINE_2");

                entity.Property(e => e.AddressLine3)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("ADDRESS_LINE_3");

                entity.Property(e => e.City)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("CITY");

                entity.Property(e => e.CompanyName)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("COMPANY_NAME");

                entity.Property(e => e.ConcernedParty)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("CONCERNED_PARTY");

                entity.Property(e => e.ContactStatus)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("CONTACT_STATUS");

                entity.Property(e => e.Country)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("COUNTRY");

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("COUNTRY_CODE");

                entity.Property(e => e.CreatedDate)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Email)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("EMAIL");

                entity.Property(e => e.Entid)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("ENTID");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("FIRST_NAME");

                entity.Property(e => e.LastName)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("LAST_NAME");

                entity.Property(e => e.PublicDomainFlg)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("PUBLIC_DOMAIN_FLG");

                entity.Property(e => e.RolesEntitled)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("ROLES_ENTITLED");

                entity.Property(e => e.SapAcctName)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("SAP_ACCT_NAME");

                entity.Property(e => e.SapAcctid)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("SAP_ACCTID");

                entity.Property(e => e.SapBpid)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("SAP_BPID");

                entity.Property(e => e.SapOrgName)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("SAP_ORG_NAME");

                entity.Property(e => e.SapOrgid)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("SAP_ORGID");

                entity.Property(e => e.Status)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("STATUS");

                entity.Property(e => e.SubStatus)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("SUB_STATUS");

                entity.Property(e => e.UserId)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("USER_ID");

                entity.Property(e => e.UserType)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("USER_TYPE");
            });

            modelBuilder.Entity<ExtUser>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ext_users", "dev");

                entity.HasIndex(e => e.UserId, "wapp_userid");

                entity.Property(e => e.AccountStatus)
                    .HasMaxLength(500)
                    .HasColumnName("ACCOUNT_STATUS");

                entity.Property(e => e.AddressLine1).HasColumnName("ADDRESS_LINE_1");

                entity.Property(e => e.AddressLine2).HasColumnName("ADDRESS_LINE_2");

                entity.Property(e => e.AddressLine3).HasColumnName("ADDRESS_LINE_3");

                entity.Property(e => e.City)
                    .HasMaxLength(500)
                    .HasColumnName("CITY");

                entity.Property(e => e.CompanyName).HasColumnName("COMPANY_NAME");

                entity.Property(e => e.ConcernedParty)
                    .HasMaxLength(500)
                    .HasColumnName("CONCERNED_PARTY");

                entity.Property(e => e.ContactStatus)
                    .HasMaxLength(500)
                    .HasColumnName("CONTACT_STATUS");

                entity.Property(e => e.Country)
                    .HasMaxLength(500)
                    .HasColumnName("COUNTRY");

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("COUNTRY_CODE");

                entity.Property(e => e.CreatedDate)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Email)
                    .HasMaxLength(500)
                    .HasColumnName("EMAIL");

                entity.Property(e => e.Entid)
                    .HasMaxLength(500)
                    .HasColumnName("ENTID");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(500)
                    .HasColumnName("FIRST_NAME");

                entity.Property(e => e.LastName)
                    .HasMaxLength(500)
                    .HasColumnName("LAST_NAME");

                entity.Property(e => e.PublicDomainFlg)
                    .HasMaxLength(500)
                    .HasColumnName("PUBLIC_DOMAIN_FLG");

                entity.Property(e => e.RolesEntitled)
                    .HasColumnType("text")
                    .HasColumnName("ROLES_ENTITLED");

                entity.Property(e => e.SapAcctName)
                    .HasMaxLength(500)
                    .HasColumnName("SAP_ACCT_NAME");

                entity.Property(e => e.SapAcctid)
                    .HasMaxLength(50)
                    .HasColumnName("SAP_ACCTID");

                entity.Property(e => e.SapBpid)
                    .HasMaxLength(50)
                    .HasColumnName("SAP_BPID");

                entity.Property(e => e.SapOrgName).HasColumnName("SAP_ORG_NAME");

                entity.Property(e => e.SapOrgid)
                    .HasMaxLength(50)
                    .HasColumnName("SAP_ORGID");

                entity.Property(e => e.Status)
                    .HasMaxLength(500)
                    .HasColumnName("STATUS");

                entity.Property(e => e.SubStatus)
                    .HasMaxLength(500)
                    .HasColumnName("SUB_STATUS");

                entity.Property(e => e.UserId)
                    .HasMaxLength(500)
                    .HasColumnName("USER_ID");

                entity.Property(e => e.UserType)
                    .HasMaxLength(50)
                    .HasColumnName("USER_TYPE");
            });

            modelBuilder.Entity<ExtUser1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ext_users", "wp");

                entity.Property(e => e.AccountStatus)
                    .IsUnicode(false)
                    .HasColumnName("ACCOUNT_STATUS");

                entity.Property(e => e.AddressLine1)
                    .IsUnicode(false)
                    .HasColumnName("ADDRESS_LINE_1");

                entity.Property(e => e.AddressLine2)
                    .IsUnicode(false)
                    .HasColumnName("ADDRESS_LINE_2");

                entity.Property(e => e.AddressLine3)
                    .IsUnicode(false)
                    .HasColumnName("ADDRESS_LINE_3");

                entity.Property(e => e.City)
                    .IsUnicode(false)
                    .HasColumnName("CITY");

                entity.Property(e => e.CompanyName)
                    .IsUnicode(false)
                    .HasColumnName("COMPANY_NAME");

                entity.Property(e => e.ConcernedParty)
                    .IsUnicode(false)
                    .HasColumnName("CONCERNED_PARTY");

                entity.Property(e => e.ContactStatus)
                    .IsUnicode(false)
                    .HasColumnName("CONTACT_STATUS");

                entity.Property(e => e.Country)
                    .IsUnicode(false)
                    .HasColumnName("COUNTRY");

                entity.Property(e => e.CountryCode)
                    .IsUnicode(false)
                    .HasColumnName("COUNTRY_CODE");

                entity.Property(e => e.CreatedDate)
                    .IsUnicode(false)
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Email)
                    .IsUnicode(false)
                    .HasColumnName("EMAIL");

                entity.Property(e => e.Entid)
                    .IsUnicode(false)
                    .HasColumnName("ENTID");

                entity.Property(e => e.FirstName)
                    .IsUnicode(false)
                    .HasColumnName("FIRST_NAME");

                entity.Property(e => e.LastName)
                    .IsUnicode(false)
                    .HasColumnName("LAST_NAME");

                entity.Property(e => e.PublicDomainFlg)
                    .IsUnicode(false)
                    .HasColumnName("PUBLIC_DOMAIN_FLG");

                entity.Property(e => e.RolesEntitled)
                    .IsUnicode(false)
                    .HasColumnName("ROLES_ENTITLED");

                entity.Property(e => e.SapAcctName)
                    .IsUnicode(false)
                    .HasColumnName("SAP_ACCT_NAME");

                entity.Property(e => e.SapAcctid)
                    .IsUnicode(false)
                    .HasColumnName("SAP_ACCTID");

                entity.Property(e => e.SapBpid)
                    .IsUnicode(false)
                    .HasColumnName("SAP_BPID");

                entity.Property(e => e.SapOrgName)
                    .IsUnicode(false)
                    .HasColumnName("SAP_ORG_NAME");

                entity.Property(e => e.SapOrgid)
                    .IsUnicode(false)
                    .HasColumnName("SAP_ORGID");

                entity.Property(e => e.Status)
                    .IsUnicode(false)
                    .HasColumnName("STATUS");

                entity.Property(e => e.SubStatus)
                    .IsUnicode(false)
                    .HasColumnName("SUB_STATUS");

                entity.Property(e => e.UserId)
                    .IsUnicode(false)
                    .HasColumnName("USER_ID");

                entity.Property(e => e.UserType)
                    .IsUnicode(false)
                    .HasColumnName("USER_TYPE");
            });

            modelBuilder.Entity<FullCustomer>(entity =>
            {
                entity.HasKey(e => e.Bpid);

                entity.ToTable("full_customers", "dev");

                entity.Property(e => e.Bpid)
                    .ValueGeneratedNever()
                    .HasColumnName("bpid");

                entity.Property(e => e.Archived)
                    .HasMaxLength(50)
                    .HasColumnName("archived");

                entity.Property(e => e.BpGrp)
                    .HasMaxLength(50)
                    .HasColumnName("bp_grp");

                entity.Property(e => e.BpRole)
                    .HasMaxLength(50)
                    .HasColumnName("bp_role");

                entity.Property(e => e.City)
                    .HasMaxLength(50)
                    .HasColumnName("city");

                entity.Property(e => e.CreatedOn).HasColumnName("created_on");

                entity.Property(e => e.Cty)
                    .HasMaxLength(50)
                    .HasColumnName("cty");

                entity.Property(e => e.CtyGrp)
                    .HasMaxLength(50)
                    .HasColumnName("cty_grp");

                entity.Property(e => e.Name).HasColumnName("name");

                entity.Property(e => e.Street).HasColumnName("street");
            });

            modelBuilder.Entity<FullCustomersSnow20181009>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("full_customers_snow_20181009", "dsf");

                entity.Property(e => e.AddressNo)
                    .HasMaxLength(50)
                    .HasColumnName("address_no");

                entity.Property(e => e.BpBillingHold)
                    .HasMaxLength(50)
                    .HasColumnName("bp_billing_hold");

                entity.Property(e => e.BpCategory)
                    .HasMaxLength(50)
                    .HasColumnName("bp_category");

                entity.Property(e => e.BpDeliveryHold)
                    .HasMaxLength(50)
                    .HasColumnName("bp_delivery_hold");

                entity.Property(e => e.BpExternalNo)
                    .HasMaxLength(50)
                    .HasColumnName("bp_external_no");

                entity.Property(e => e.BpGrouping)
                    .HasMaxLength(50)
                    .HasColumnName("bp_grouping");

                entity.Property(e => e.BpGuid)
                    .HasMaxLength(50)
                    .HasColumnName("bp_guid");

                entity.Property(e => e.BpRole)
                    .HasMaxLength(50)
                    .HasColumnName("bp_role");

                entity.Property(e => e.BpStatusCode)
                    .HasMaxLength(50)
                    .HasColumnName("bp_status_code");

                entity.Property(e => e.BpStatusDesc)
                    .HasMaxLength(50)
                    .HasColumnName("bp_status_desc");

                entity.Property(e => e.BpTransactionHold)
                    .HasMaxLength(50)
                    .HasColumnName("bp_transaction_hold");

                entity.Property(e => e.BpType)
                    .HasMaxLength(50)
                    .HasColumnName("bp_type");

                entity.Property(e => e.Bpid)
                    .HasMaxLength(50)
                    .HasColumnName("bpid");

                entity.Property(e => e.BuildingFloor)
                    .HasMaxLength(50)
                    .HasColumnName("building_floor");

                entity.Property(e => e.BuildingNo)
                    .HasMaxLength(50)
                    .HasColumnName("building_no");

                entity.Property(e => e.CentralArchiveFlag)
                    .HasMaxLength(50)
                    .HasColumnName("central_archive_flag");

                entity.Property(e => e.City)
                    .HasMaxLength(50)
                    .HasColumnName("city");

                entity.Property(e => e.ComplianceStatusCode)
                    .HasMaxLength(50)
                    .HasColumnName("compliance_status_code");

                entity.Property(e => e.ComplianceStatusDesc)
                    .HasMaxLength(50)
                    .HasColumnName("compliance_status_desc");

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("country_code");

                entity.Property(e => e.CountryGrp)
                    .HasMaxLength(50)
                    .HasColumnName("country_grp");

                entity.Property(e => e.CreatedAt)
                    .HasMaxLength(50)
                    .HasColumnName("created_at");

                entity.Property(e => e.CreatedOn)
                    .HasMaxLength(50)
                    .HasColumnName("created_on");

                entity.Property(e => e.Deleted)
                    .HasMaxLength(50)
                    .HasColumnName("deleted");

                entity.Property(e => e.District)
                    .HasMaxLength(50)
                    .HasColumnName("district");

                entity.Property(e => e.DistrictCode)
                    .HasMaxLength(50)
                    .HasColumnName("district_code");

                entity.Property(e => e.EdpCreated)
                    .HasMaxLength(50)
                    .HasColumnName("edp_created");

                entity.Property(e => e.EdpCreatedTxnId)
                    .HasMaxLength(50)
                    .HasColumnName("edp_created_txn_id");

                entity.Property(e => e.EdpLastUpdated)
                    .HasMaxLength(50)
                    .HasColumnName("edp_last_updated");

                entity.Property(e => e.EdpTxnId)
                    .HasMaxLength(50)
                    .HasColumnName("edp_txn_id");

                entity.Property(e => e.HouseNo)
                    .HasMaxLength(50)
                    .HasColumnName("house_no");

                entity.Property(e => e.IndustrySector)
                    .HasMaxLength(50)
                    .HasColumnName("industry_sector");

                entity.Property(e => e.IsPartnerConverted)
                    .HasMaxLength(50)
                    .HasColumnName("is_partner_converted");

                entity.Property(e => e.LastChangedAt)
                    .HasMaxLength(50)
                    .HasColumnName("last_changed_at");

                entity.Property(e => e.LastChangedOn)
                    .HasMaxLength(50)
                    .HasColumnName("last_changed_on");

                entity.Property(e => e.Name1)
                    .HasMaxLength(250)
                    .HasColumnName("name1");

                entity.Property(e => e.Name2)
                    .HasMaxLength(250)
                    .HasColumnName("name2");

                entity.Property(e => e.Name3)
                    .HasMaxLength(250)
                    .HasColumnName("name3");

                entity.Property(e => e.Name4)
                    .HasMaxLength(250)
                    .HasColumnName("name4");

                entity.Property(e => e.NameConc)
                    .HasMaxLength(1500)
                    .HasColumnName("name_conc");

                entity.Property(e => e.Postalcode)
                    .HasMaxLength(50)
                    .HasColumnName("postalcode");

                entity.Property(e => e.Region)
                    .HasMaxLength(50)
                    .HasColumnName("region");

                entity.Property(e => e.Street1)
                    .HasMaxLength(250)
                    .HasColumnName("street1");

                entity.Property(e => e.Street2)
                    .HasMaxLength(250)
                    .HasColumnName("street2");

                entity.Property(e => e.Street3)
                    .HasMaxLength(250)
                    .HasColumnName("street3");

                entity.Property(e => e.Street4)
                    .HasMaxLength(250)
                    .HasColumnName("street4");

                entity.Property(e => e.Street5)
                    .HasMaxLength(250)
                    .HasColumnName("street5");

                entity.Property(e => e.StreetConc)
                    .HasMaxLength(1500)
                    .HasColumnName("street_conc");
            });

            modelBuilder.Entity<G2Customer2senzing>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("g2_customer2senzing");

                entity.Property(e => e.Bpid)
                    .HasMaxLength(50)
                    .HasColumnName("bpid");

                entity.Property(e => e.City)
                    .HasMaxLength(255)
                    .HasColumnName("city");

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(20)
                    .HasColumnName("country_code");

                entity.Property(e => e.CountryName)
                    .HasMaxLength(250)
                    .HasColumnName("country_name");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("created_date");

                entity.Property(e => e.CustName)
                    .HasMaxLength(600)
                    .IsUnicode(false)
                    .HasColumnName("cust_name");

                entity.Property(e => e.Postalcode)
                    .HasMaxLength(50)
                    .HasColumnName("postalcode");

                entity.Property(e => e.Region)
                    .HasMaxLength(50)
                    .HasColumnName("region");

                entity.Property(e => e.Street1)
                    .HasMaxLength(255)
                    .HasColumnName("street1");

                entity.Property(e => e.Street2)
                    .HasMaxLength(255)
                    .HasColumnName("street2");

                entity.Property(e => e.Street3)
                    .HasMaxLength(255)
                    .HasColumnName("street3");

                entity.Property(e => e.Street4)
                    .HasMaxLength(255)
                    .HasColumnName("street4");

                entity.Property(e => e.Street5)
                    .HasMaxLength(255)
                    .HasColumnName("street5");

                entity.Property(e => e.TelNumber)
                    .HasMaxLength(50)
                    .HasColumnName("tel_number");
            });

            modelBuilder.Entity<GlobalAcct>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("global_acct", "dsf");

                entity.Property(e => e.AltGroup)
                    .HasMaxLength(250)
                    .HasColumnName("alt_group");

                entity.Property(e => e.AltParent)
                    .HasMaxLength(250)
                    .HasColumnName("alt_parent");

                entity.Property(e => e.CreatedDate).HasColumnName("created_date");

                entity.Property(e => e.EntityKey)
                    .HasMaxLength(50)
                    .HasColumnName("entity_key");

                entity.Property(e => e.FyList)
                    .HasMaxLength(50)
                    .HasColumnName("fy_list");

                entity.Property(e => e.GMnDesignation)
                    .HasMaxLength(50)
                    .HasColumnName("g_mn_designation");

                entity.Property(e => e.GamUserid)
                    .HasMaxLength(50)
                    .HasColumnName("gam_userid");

                entity.Property(e => e.GlobalAcctManager)
                    .HasMaxLength(50)
                    .HasColumnName("global_acct_manager");

                entity.Property(e => e.Group)
                    .HasMaxLength(250)
                    .HasColumnName("group");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Parent)
                    .HasMaxLength(250)
                    .HasColumnName("parent");

                entity.Property(e => e.ParentAcctVertical)
                    .HasMaxLength(50)
                    .HasColumnName("parent_acct_vertical");

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .HasColumnName("status");

                entity.Property(e => e.Theater)
                    .HasMaxLength(50)
                    .HasColumnName("theater");
            });

            modelBuilder.Entity<GlobalAcct1Tmp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GlobalAcct1_tmp", "dev");

                entity.Property(e => e.EntityKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("entity_key");

                entity.Property(e => e.GroupName)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("group_name");

                entity.Property(e => e.GroupWord2)
                    .IsUnicode(false)
                    .HasColumnName("group_word2");

                entity.Property(e => e.Len20)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("len20");

                entity.Property(e => e.NsFlag)
                    .HasMaxLength(10)
                    .HasColumnName("ns_flag");
            });

            modelBuilder.Entity<GlobalProfile>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("global_profile", "dev");

                entity.Property(e => e.Bpid)
                    .HasMaxLength(50)
                    .HasColumnName("bpid");

                entity.Property(e => e.CountryName)
                    .HasMaxLength(250)
                    .HasColumnName("country_name");

                entity.Property(e => e.CustName)
                    .HasMaxLength(500)
                    .HasColumnName("cust_name");

                entity.Property(e => e.JaroScore).HasColumnName("jaro_score");

                entity.Property(e => e.RelatedEntityCountry)
                    .HasMaxLength(250)
                    .HasColumnName("related_entity_country");

                entity.Property(e => e.RelatedEntityId)
                    .HasMaxLength(50)
                    .HasColumnName("related_entity_id");

                entity.Property(e => e.RelatedEntityName)
                    .HasMaxLength(500)
                    .HasColumnName("related_entity_name");
            });

            modelBuilder.Entity<GmSampleDatum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gm_sample_data", "dev");

                entity.Property(e => e.CndFlag)
                    .HasMaxLength(255)
                    .HasColumnName("CND_FLAG");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(255)
                    .HasColumnName("Customer_Group");

                entity.Property(e => e.CustomerMatchConfidence)
                    .HasMaxLength(255)
                    .HasColumnName("CUSTOMER_MATCH_CONFIDENCE");

                entity.Property(e => e.DeliveryDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Delivery_Date");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(255)
                    .HasColumnName("Delivery_Item");

                entity.Property(e => e.DeliveryNumber)
                    .HasMaxLength(255)
                    .HasColumnName("Delivery_Number");

                entity.Property(e => e.DistributorCountry)
                    .HasMaxLength(255)
                    .HasColumnName("Distributor_Country");

                entity.Property(e => e.DistributorCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("Distributor_CountryCode");

                entity.Property(e => e.DistributorName)
                    .HasMaxLength(255)
                    .HasColumnName("Distributor_Name");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(255)
                    .HasColumnName("DIVERSION_TYPE");

                entity.Property(e => e.DplFlag)
                    .HasMaxLength(255)
                    .HasColumnName("DPL_FLAG");

                entity.Property(e => e.EcCompetitorFlag)
                    .HasMaxLength(255)
                    .HasColumnName("EC_COMPETITOR_FLAG");

                entity.Property(e => e.EcWatchlistFlag)
                    .HasMaxLength(255)
                    .HasColumnName("EC_WATCHLIST_FLAG");

                entity.Property(e => e.EeaFlag)
                    .HasMaxLength(255)
                    .HasColumnName("EEA_FLAG");

                entity.Property(e => e.EuShpPosCustomerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("EU_ShpPosCustomer_Country");

                entity.Property(e => e.EuShpPosCustomerKey)
                    .HasMaxLength(255)
                    .HasColumnName("EU_ShpPosCustomer_Key");

                entity.Property(e => e.EuShpPosCustomerName)
                    .HasMaxLength(255)
                    .HasColumnName("EU_ShpPosCustomer_Name");

                entity.Property(e => e.EuSvcContractCustomerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("EU_SvcContractCustomer_Country");

                entity.Property(e => e.EuSvcContractCustomerCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("EU_SvcContractCustomer_CountryCode");

                entity.Property(e => e.EuSvcContractCustomerKey)
                    .HasMaxLength(255)
                    .HasColumnName("EU_SvcContractCustomer_Key");

                entity.Property(e => e.EuSvcContractCustomerName)
                    .HasMaxLength(255)
                    .HasColumnName("EU_SvcContractCustomer_Name");

                entity.Property(e => e.GmFlag)
                    .HasMaxLength(255)
                    .HasColumnName("GM_FLAG");

                entity.Property(e => e.GmReason)
                    .HasMaxLength(255)
                    .HasColumnName("GM_REASON");

                entity.Property(e => e.ListPrice).HasColumnName("List_Price");

                entity.Property(e => e.Material).HasMaxLength(255);

                entity.Property(e => e.MspFlag)
                    .HasMaxLength(255)
                    .HasColumnName("MSP_FLAG");

                entity.Property(e => e.NetValue).HasColumnName("Net_Value");

                entity.Property(e => e.PoType)
                    .HasMaxLength(255)
                    .HasColumnName("PO_Type");

                entity.Property(e => e.Quantity).HasMaxLength(255);

                entity.Property(e => e.ReEcCountryMismatchFlag)
                    .HasMaxLength(255)
                    .HasColumnName("RE_EC_COUNTRY_MISMATCH_FLAG");

                entity.Property(e => e.ReTerritoryFlag)
                    .HasMaxLength(255)
                    .HasColumnName("RE_TERRITORY_FLAG");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("Reseller_Country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("Reseller_CountryCode");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(255)
                    .HasColumnName("Reseller_Key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("Reseller_Name");

                entity.Property(e => e.RmaFlag)
                    .HasMaxLength(255)
                    .HasColumnName("RMA_FLAG");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(255)
                    .HasColumnName("Serial_Number");

                entity.Property(e => e.SoDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SO_Date");

                entity.Property(e => e.SoItem)
                    .HasMaxLength(255)
                    .HasColumnName("SO_Item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(255)
                    .HasColumnName("SO_Number");

                entity.Property(e => e.SoType)
                    .HasMaxLength(255)
                    .HasColumnName("SO_Type");
            });

            modelBuilder.Entity<GmSourceDestination>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gm_source_destination");

                entity.Property(e => e.DestinationCnt).HasColumnName("destination_cnt");

                entity.Property(e => e.DestinationCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("destination_country_code");

                entity.Property(e => e.DestinationCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("destination_country_name");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.OrderOfPoints).HasColumnName("order_of_points");

                entity.Property(e => e.PathId).HasColumnName("path_id");

                entity.Property(e => e.SourceCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("source_country_code");

                entity.Property(e => e.SourceCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("source_country_name");
            });

            modelBuilder.Entity<GmeBookingAggr>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_booking_aggr", "dev");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.SalesAchievement).HasColumnName("sales_achievement");

                entity.Property(e => e.TotBookingQty).HasColumnName("tot_booking_qty");
            });

            modelBuilder.Entity<GmeBookingsShipment>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_bookings_shipment", "dev");

                entity.Property(e => e.ContractLineItemStatus)
                    .HasMaxLength(50)
                    .HasColumnName("contract_line_item_status");

                entity.Property(e => e.ContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("contract_number");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.Material)
                    .IsUnicode(false)
                    .HasColumnName("material");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("material_key");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SoLineNum).HasColumnName("so_line_num");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("so_number");
            });

            modelBuilder.Entity<GmeBookingsSummary>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_bookings_summary", "dev");

                entity.Property(e => e.BookingQty).HasColumnName("booking_qty");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.SalesAchievement).HasColumnName("sales_achievement");
            });

            modelBuilder.Entity<GmeCustomerG2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_customer_g2", "dev");

                entity.Property(e => e.DataSource)
                    .HasMaxLength(150)
                    .HasColumnName("DATA_SOURCE");

                entity.Property(e => e.EntityKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("entity_key");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.JsonData).HasColumnName("JSON_DATA");

                entity.Property(e => e.MatchKey)
                    .HasMaxLength(50)
                    .HasColumnName("MATCH_KEY");

                entity.Property(e => e.MatchLevel).HasColumnName("MATCH_LEVEL");

                entity.Property(e => e.RecordId)
                    .HasMaxLength(150)
                    .HasColumnName("RECORD_ID");

                entity.Property(e => e.RelatedEntityId).HasColumnName("RELATED_ENTITY_ID");

                entity.Property(e => e.ResolvedEntityId).HasColumnName("RESOLVED_ENTITY_ID");

                entity.Property(e => e.ResolvedEntityName)
                    .HasMaxLength(250)
                    .HasColumnName("RESOLVED_ENTITY_NAME");
            });

            modelBuilder.Entity<GmeCustomerSenzing011818>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_customer_senzing_011818", "dsf");

                entity.Property(e => e.DataSource)
                    .HasMaxLength(100)
                    .HasColumnName("DATA_SOURCE");

                entity.Property(e => e.JsonData).HasColumnName("JSON_DATA");

                entity.Property(e => e.MatchKey)
                    .HasMaxLength(500)
                    .HasColumnName("MATCH_KEY");

                entity.Property(e => e.MatchLevel).HasColumnName("MATCH_LEVEL");

                entity.Property(e => e.RecordId)
                    .HasMaxLength(500)
                    .HasColumnName("RECORD_ID");

                entity.Property(e => e.RelatedEntityId).HasColumnName("RELATED_ENTITY_ID");

                entity.Property(e => e.ResolvedEntityId).HasColumnName("RESOLVED_ENTITY_ID");

                entity.Property(e => e.ResolvedEntityName)
                    .HasMaxLength(1000)
                    .HasColumnName("RESOLVED_ENTITY_NAME");
            });

            modelBuilder.Entity<GmeCustomersMaster>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_customers_master");

                entity.Property(e => e.Attribute1)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("attribute1");

                entity.Property(e => e.Attribute2)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("attribute2");

                entity.Property(e => e.City)
                    .HasMaxLength(500)
                    .HasColumnName("city");

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(200)
                    .HasColumnName("country_code");

                entity.Property(e => e.CountryName)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("country_name");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("created_date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.CustName)
                    .HasMaxLength(2000)
                    .HasColumnName("cust_name");

                entity.Property(e => e.EntityKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("entity_key");

                entity.Property(e => e.EntitySource)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("entity_source");

                entity.Property(e => e.EntityType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("entity_type");

                entity.Property(e => e.GId).HasColumnName("g_id");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .HasColumnName("status")
                    .HasDefaultValueSql("('ACTIVE')");

                entity.Property(e => e.Street1)
                    .HasMaxLength(1000)
                    .HasColumnName("street1");

                entity.Property(e => e.Street2)
                    .HasMaxLength(1000)
                    .HasColumnName("street2");

                entity.Property(e => e.Street3)
                    .HasMaxLength(1000)
                    .HasColumnName("street3");

                entity.Property(e => e.Street4)
                    .HasMaxLength(1000)
                    .HasColumnName("street4");

                entity.Property(e => e.Street5)
                    .HasMaxLength(1000)
                    .HasColumnName("street5");
            });

            modelBuilder.Entity<GmeCustomersMaster1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_customers_master", "dev");

                entity.Property(e => e.City)
                    .HasMaxLength(500)
                    .HasColumnName("city");

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(200)
                    .HasColumnName("country_code");

                entity.Property(e => e.CountryName)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("country_name");

                entity.Property(e => e.CustName)
                    .HasMaxLength(1003)
                    .HasColumnName("cust_name");

                entity.Property(e => e.EntityKey)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("entity_key");

                entity.Property(e => e.Street1).HasColumnName("street1");

                entity.Property(e => e.Street2).HasColumnName("street2");

                entity.Property(e => e.Street3).HasColumnName("street3");

                entity.Property(e => e.Street4).HasColumnName("street4");

                entity.Property(e => e.Street5).HasColumnName("street5");
            });

            modelBuilder.Entity<GmeCustomersSenzing>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_customers_senzing");

                entity.HasIndex(e => e.Id, "gme_customers_senzing_ndx1");

                entity.HasIndex(e => e.ResolvedEntityId, "gme_customers_senzing_ndx2");

                entity.Property(e => e.DataSource)
                    .HasMaxLength(150)
                    .HasColumnName("data_source");

                entity.Property(e => e.EntityKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("entity_key");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.JsonData).HasColumnName("json_data");

                entity.Property(e => e.MatchKey)
                    .HasMaxLength(50)
                    .HasColumnName("match_key");

                entity.Property(e => e.MatchLevel).HasColumnName("match_level");

                entity.Property(e => e.RecordId)
                    .HasMaxLength(150)
                    .HasColumnName("record_id");

                entity.Property(e => e.RelatedEntityId).HasColumnName("related_entity_id");

                entity.Property(e => e.ResolvedEntityId).HasColumnName("resolved_entity_id");

                entity.Property(e => e.ResolvedEntityName)
                    .HasMaxLength(250)
                    .HasColumnName("resolved_entity_name");
            });

            modelBuilder.Entity<GmeCustomersSenzing1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_customers_senzing", "dev");

                entity.Property(e => e.City)
                    .IsUnicode(false)
                    .HasColumnName("city");

                entity.Property(e => e.CountryCode)
                    .IsUnicode(false)
                    .HasColumnName("country_code");

                entity.Property(e => e.CountryName)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("country_name");

                entity.Property(e => e.EntityKey)
                    .IsUnicode(false)
                    .HasColumnName("entity_key");

                entity.Property(e => e.EntityName1)
                    .IsUnicode(false)
                    .HasColumnName("entity_name1");

                entity.Property(e => e.EntitySource)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("entity_source");

                entity.Property(e => e.EntityType)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("entity_type");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.PId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("p_id");

                entity.Property(e => e.RelatedEntityIds)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("related_entity_ids");

                entity.Property(e => e.ResolvedEntityId).HasColumnName("resolved_entity_id");

                entity.Property(e => e.Street1)
                    .IsUnicode(false)
                    .HasColumnName("street1");

                entity.Property(e => e.Street2)
                    .IsUnicode(false)
                    .HasColumnName("street2");

                entity.Property(e => e.Street3)
                    .IsUnicode(false)
                    .HasColumnName("street3");

                entity.Property(e => e.Street4)
                    .IsUnicode(false)
                    .HasColumnName("street4");

                entity.Property(e => e.Street5)
                    .IsUnicode(false)
                    .HasColumnName("street5");
            });

            modelBuilder.Entity<GmeCustomersShp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_customers_shp", "dsf");

                entity.Property(e => e.City)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("city");

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("country_code");

                entity.Property(e => e.CountryName)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("country_name");

                entity.Property(e => e.EntityKey)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("entity_key");

                entity.Property(e => e.EntityName1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("entity_name1");

                entity.Property(e => e.Street1)
                    .IsUnicode(false)
                    .HasColumnName("street1");

                entity.Property(e => e.Street2)
                    .IsUnicode(false)
                    .HasColumnName("street2");

                entity.Property(e => e.Street3)
                    .IsUnicode(false)
                    .HasColumnName("street3");

                entity.Property(e => e.Street4)
                    .IsUnicode(false)
                    .HasColumnName("street4");

                entity.Property(e => e.Street5)
                    .IsUnicode(false)
                    .HasColumnName("street5");
            });

            modelBuilder.Entity<GmeCustomersSvc>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_customers_svc", "dev");

                entity.Property(e => e.EndCustCountryCode).HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustDistrict).HasColumnName("end_cust_district");

                entity.Property(e => e.EndCustKey).HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName).HasColumnName("end_cust_name");
            });

            modelBuilder.Entity<GmeCustomersSvc1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_customers_svc", "dsf");

                entity.Property(e => e.BusinessPartner).HasColumnName("Business_Partner");

                entity.Property(e => e.City).HasMaxLength(250);

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("Country_code");

                entity.Property(e => e.CountryName)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("country_name");

                entity.Property(e => e.EntityKey).HasColumnName("entity_key");

                entity.Property(e => e.Name1)
                    .HasMaxLength(250)
                    .HasColumnName("Name_1");

                entity.Property(e => e.Name2)
                    .HasMaxLength(250)
                    .HasColumnName("Name_2");

                entity.Property(e => e.Name3)
                    .HasMaxLength(250)
                    .HasColumnName("Name_3");

                entity.Property(e => e.Name4)
                    .HasMaxLength(250)
                    .HasColumnName("Name_4");

                entity.Property(e => e.Street1)
                    .HasMaxLength(250)
                    .HasColumnName("Street_1");

                entity.Property(e => e.Street2)
                    .HasMaxLength(250)
                    .HasColumnName("Street_2");

                entity.Property(e => e.Street3)
                    .HasMaxLength(250)
                    .HasColumnName("Street_3");

                entity.Property(e => e.Street4)
                    .HasMaxLength(250)
                    .HasColumnName("Street_4");

                entity.Property(e => e.Street5)
                    .HasMaxLength(250)
                    .HasColumnName("Street_5");
            });

            modelBuilder.Entity<GmeDataset>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_dataset");

                entity.HasIndex(e => e.GmeFlag, "gme_dataset_gme");

                entity.HasIndex(e => e.ResellerKey, "gme_dataset_reskey");

                entity.HasIndex(e => e.ResellerName, "gme_dataset_resnam");

                entity.HasIndex(e => new { e.SerialNumber, e.MaterialKey }, "gme_dataset_sn");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("am_country_name");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("billto_district");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.BilltoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("billto_postal_code");

                entity.Property(e => e.BilltoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("billto_region");

                entity.Property(e => e.BilltoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street1");

                entity.Property(e => e.BilltoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street2");

                entity.Property(e => e.BilltoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street3");

                entity.Property(e => e.BilltoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street4");

                entity.Property(e => e.BilltoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street5");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .HasColumnName("claim_status");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_item");

                entity.Property(e => e.DiscPerc)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("disc_perc");

                entity.Property(e => e.DistiCity)
                    .HasMaxLength(255)
                    .HasColumnName("disti_city");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("disti_postal_code");

                entity.Property(e => e.DistiRegion)
                    .HasMaxLength(255)
                    .HasColumnName("disti_region");

                entity.Property(e => e.DistiStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street1");

                entity.Property(e => e.DistiStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street2");

                entity.Property(e => e.DistiStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street3");

                entity.Property(e => e.DistiStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street4");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(250)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.DrspPosId).HasColumnName("drsp_pos_id");

                entity.Property(e => e.EcSvcJaroScore).HasColumnName("ec_svc_jaro_score");

                entity.Property(e => e.EcSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_key_flag");

                entity.Property(e => e.EcSvcSamegidFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_samegid_flag");

                entity.Property(e => e.EcSvcSenzingScore).HasColumnName("ec_svc_senzing_score");

                entity.Property(e => e.EndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_city");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_postal_code");

                entity.Property(e => e.EndCustRegion)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_region");

                entity.Property(e => e.EndCustStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street1");

                entity.Property(e => e.EndCustStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street2");

                entity.Property(e => e.EndCustStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street3");

                entity.Property(e => e.EndCustStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street4");

                entity.Property(e => e.EndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("end_cust_theater");

                entity.Property(e => e.EndUserStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("end_user_street5");

                entity.Property(e => e.EntityExceptionFlag)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("entity_exception_flag");

                entity.Property(e => e.EntityRelatedFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("entity_related_flag");

                entity.Property(e => e.GlobalAcctScore).HasColumnName("global_acct_score");

                entity.Property(e => e.GmeFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("gme_flag");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.MspAcctScore).HasColumnName("msp_acct_score");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.ProcessedFlag)
                    .HasMaxLength(50)
                    .HasColumnName("processed_flag");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("quote_id");

                entity.Property(e => e.ReportedQty).HasColumnName("reported_qty");

                entity.Property(e => e.ResEcJaroScore).HasColumnName("res_ec_jaro_score");

                entity.Property(e => e.ResEcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_ec_key_flag");

                entity.Property(e => e.ResSvcEntityRelatedFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("res_svc_entity_related_flag");

                entity.Property(e => e.ResSvcJaroScore).HasColumnName("res_svc_jaro_score");

                entity.Property(e => e.ResSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_svc_key_flag");

                entity.Property(e => e.ResellerCity)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_city");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_postal_code");

                entity.Property(e => e.ResellerStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street1");

                entity.Property(e => e.ResellerStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street2");

                entity.Property(e => e.ResellerStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street3");

                entity.Property(e => e.ResellerStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street4");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.RmaNumber)
                    .HasMaxLength(50)
                    .HasColumnName("rma_number");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SerialNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number_orig");

                entity.Property(e => e.ShiptoCity)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_city");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShiptoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_postal_code");

                entity.Property(e => e.ShiptoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_region");

                entity.Property(e => e.ShiptoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street1");

                entity.Property(e => e.ShiptoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street2");

                entity.Property(e => e.ShiptoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street3");

                entity.Property(e => e.ShiptoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street4");

                entity.Property(e => e.ShiptoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street5");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("so_number_orig");

                entity.Property(e => e.SoType)
                    .HasMaxLength(250)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoCity)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_city");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SoldtoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_postal_code");

                entity.Property(e => e.SoldtoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street1");

                entity.Property(e => e.SoldtoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street2");

                entity.Property(e => e.SoldtoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street3");

                entity.Property(e => e.SoldtoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street4");

                entity.Property(e => e.SoldtoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street5");

                entity.Property(e => e.SourceImportId).HasColumnName("source_import_id");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.SvcBilltoCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("svc_billto_country_code");

                entity.Property(e => e.SvcBilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_billto_key");

                entity.Property(e => e.SvcBilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_billto_name");

                entity.Property(e => e.SvcContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_creation_date");

                entity.Property(e => e.SvcContractLineCreation)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_line_creation");

                entity.Property(e => e.SvcContractLineStatus)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_line_status");

                entity.Property(e => e.SvcContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_number");

                entity.Property(e => e.SvcContractStatus)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_status");

                entity.Property(e => e.SvcContractType)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_type");

                entity.Property(e => e.SvcCurrency)
                    .HasMaxLength(50)
                    .HasColumnName("svc_currency");

                entity.Property(e => e.SvcEligibleFlag)
                    .HasMaxLength(50)
                    .HasColumnName("svc_eligible_flag");

                entity.Property(e => e.SvcEndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_city");

                entity.Property(e => e.SvcEndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_country_code");

                entity.Property(e => e.SvcEndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_country_name");

                entity.Property(e => e.SvcEndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_key");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_name");

                entity.Property(e => e.SvcEndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_theater");

                entity.Property(e => e.SvcEndDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_end_date");

                entity.Property(e => e.SvcInstalledAtCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_country_code");

                entity.Property(e => e.SvcInstalledAtCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_installed_at_country_name");

                entity.Property(e => e.SvcInstalledAtDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_district");

                entity.Property(e => e.SvcInstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_installed_at_key");

                entity.Property(e => e.SvcInstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_name");

                entity.Property(e => e.SvcListValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_list_value");

                entity.Property(e => e.SvcMaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_desc");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcNetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_net_value");

                entity.Property(e => e.SvcPayerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_country");

                entity.Property(e => e.SvcPayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_payer_key");

                entity.Property(e => e.SvcPayerName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_name");

                entity.Property(e => e.SvcSalesOrder)
                    .HasMaxLength(50)
                    .HasColumnName("svc_sales_order");

                entity.Property(e => e.SvcStartDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_start_date");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(250)
                    .HasColumnName("transaction_type");
            });

            modelBuilder.Entity<GmeDataset08142018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_dataset_08142018", "dev");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("am_country_name");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("billto_district");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.BilltoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("billto_postal_code");

                entity.Property(e => e.BilltoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("billto_region");

                entity.Property(e => e.BilltoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street1");

                entity.Property(e => e.BilltoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street2");

                entity.Property(e => e.BilltoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street3");

                entity.Property(e => e.BilltoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street4");

                entity.Property(e => e.BilltoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street5");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .HasColumnName("claim_status");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_item");

                entity.Property(e => e.DiscPerc)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("disc_perc");

                entity.Property(e => e.DistiCity)
                    .HasMaxLength(255)
                    .HasColumnName("disti_city");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("disti_postal_code");

                entity.Property(e => e.DistiRegion)
                    .HasMaxLength(255)
                    .HasColumnName("disti_region");

                entity.Property(e => e.DistiStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street1");

                entity.Property(e => e.DistiStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street2");

                entity.Property(e => e.DistiStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street3");

                entity.Property(e => e.DistiStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street4");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(250)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.DrspPosId).HasColumnName("drsp_pos_id");

                entity.Property(e => e.EcSvcJaroScore).HasColumnName("ec_svc_jaro_score");

                entity.Property(e => e.EcSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_key_flag");

                entity.Property(e => e.EcSvcSamegidFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_samegid_flag");

                entity.Property(e => e.EcSvcSenzingScore).HasColumnName("ec_svc_senzing_score");

                entity.Property(e => e.EndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_city");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_postal_code");

                entity.Property(e => e.EndCustRegion)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_region");

                entity.Property(e => e.EndCustStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street1");

                entity.Property(e => e.EndCustStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street2");

                entity.Property(e => e.EndCustStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street3");

                entity.Property(e => e.EndCustStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street4");

                entity.Property(e => e.EndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("end_cust_theater");

                entity.Property(e => e.EndUserStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("end_user_street5");

                entity.Property(e => e.EntityExceptionFlag)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("entity_exception_flag");

                entity.Property(e => e.EntityRelatedFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("entity_related_flag");

                entity.Property(e => e.GlobalAcctScore).HasColumnName("global_acct_score");

                entity.Property(e => e.GmeFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("gme_flag");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.MspAcctScore).HasColumnName("msp_acct_score");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.ProcessedFlag)
                    .HasMaxLength(50)
                    .HasColumnName("processed_flag");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("quote_id");

                entity.Property(e => e.ReportedQty).HasColumnName("reported_qty");

                entity.Property(e => e.ResEcJaroScore).HasColumnName("res_ec_jaro_score");

                entity.Property(e => e.ResEcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_ec_key_flag");

                entity.Property(e => e.ResSvcEntityRelatedFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("res_svc_entity_related_flag");

                entity.Property(e => e.ResSvcJaroScore).HasColumnName("res_svc_jaro_score");

                entity.Property(e => e.ResSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_svc_key_flag");

                entity.Property(e => e.ResellerCity)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_city");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_postal_code");

                entity.Property(e => e.ResellerStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street1");

                entity.Property(e => e.ResellerStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street2");

                entity.Property(e => e.ResellerStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street3");

                entity.Property(e => e.ResellerStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street4");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.RmaNumber)
                    .HasMaxLength(50)
                    .HasColumnName("rma_number");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SerialNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number_orig");

                entity.Property(e => e.ShiptoCity)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_city");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShiptoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_postal_code");

                entity.Property(e => e.ShiptoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_region");

                entity.Property(e => e.ShiptoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street1");

                entity.Property(e => e.ShiptoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street2");

                entity.Property(e => e.ShiptoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street3");

                entity.Property(e => e.ShiptoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street4");

                entity.Property(e => e.ShiptoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street5");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("so_number_orig");

                entity.Property(e => e.SoType)
                    .HasMaxLength(250)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoCity)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_city");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SoldtoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_postal_code");

                entity.Property(e => e.SoldtoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street1");

                entity.Property(e => e.SoldtoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street2");

                entity.Property(e => e.SoldtoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street3");

                entity.Property(e => e.SoldtoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street4");

                entity.Property(e => e.SoldtoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street5");

                entity.Property(e => e.SourceImportId).HasColumnName("source_import_id");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.SvcBilltoCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("svc_billto_country_code");

                entity.Property(e => e.SvcBilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_billto_key");

                entity.Property(e => e.SvcBilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_billto_name");

                entity.Property(e => e.SvcContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_creation_date");

                entity.Property(e => e.SvcContractLineCreation)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_line_creation");

                entity.Property(e => e.SvcContractLineStatus)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_line_status");

                entity.Property(e => e.SvcContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_number");

                entity.Property(e => e.SvcContractStatus)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_status");

                entity.Property(e => e.SvcContractType)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_type");

                entity.Property(e => e.SvcCurrency)
                    .HasMaxLength(50)
                    .HasColumnName("svc_currency");

                entity.Property(e => e.SvcEndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_city");

                entity.Property(e => e.SvcEndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_country_code");

                entity.Property(e => e.SvcEndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_country_name");

                entity.Property(e => e.SvcEndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_key");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_name");

                entity.Property(e => e.SvcEndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_theater");

                entity.Property(e => e.SvcEndDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_end_date");

                entity.Property(e => e.SvcInstalledAtCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_country_code");

                entity.Property(e => e.SvcInstalledAtCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_installed_at_country_name");

                entity.Property(e => e.SvcInstalledAtDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_district");

                entity.Property(e => e.SvcInstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_installed_at_key");

                entity.Property(e => e.SvcInstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_name");

                entity.Property(e => e.SvcListValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_list_value");

                entity.Property(e => e.SvcMaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_desc");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcNetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_net_value");

                entity.Property(e => e.SvcPayerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_country");

                entity.Property(e => e.SvcPayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_payer_key");

                entity.Property(e => e.SvcPayerName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_name");

                entity.Property(e => e.SvcSalesOrder)
                    .HasMaxLength(50)
                    .HasColumnName("svc_sales_order");

                entity.Property(e => e.SvcStartDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_start_date");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(250)
                    .HasColumnName("transaction_type");
            });

            modelBuilder.Entity<GmeDataset082818>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_dataset_082818");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("am_country_name");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("billto_district");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.BilltoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("billto_postal_code");

                entity.Property(e => e.BilltoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("billto_region");

                entity.Property(e => e.BilltoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street1");

                entity.Property(e => e.BilltoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street2");

                entity.Property(e => e.BilltoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street3");

                entity.Property(e => e.BilltoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street4");

                entity.Property(e => e.BilltoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street5");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .HasColumnName("claim_status");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_item");

                entity.Property(e => e.DiscPerc)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("disc_perc");

                entity.Property(e => e.DistiCity)
                    .HasMaxLength(255)
                    .HasColumnName("disti_city");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("disti_postal_code");

                entity.Property(e => e.DistiRegion)
                    .HasMaxLength(255)
                    .HasColumnName("disti_region");

                entity.Property(e => e.DistiStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street1");

                entity.Property(e => e.DistiStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street2");

                entity.Property(e => e.DistiStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street3");

                entity.Property(e => e.DistiStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street4");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(250)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.DrspPosId).HasColumnName("drsp_pos_id");

                entity.Property(e => e.EcSvcJaroScore).HasColumnName("ec_svc_jaro_score");

                entity.Property(e => e.EcSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_key_flag");

                entity.Property(e => e.EcSvcSamegidFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_samegid_flag");

                entity.Property(e => e.EcSvcSenzingScore).HasColumnName("ec_svc_senzing_score");

                entity.Property(e => e.EndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_city");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_postal_code");

                entity.Property(e => e.EndCustRegion)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_region");

                entity.Property(e => e.EndCustStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street1");

                entity.Property(e => e.EndCustStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street2");

                entity.Property(e => e.EndCustStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street3");

                entity.Property(e => e.EndCustStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street4");

                entity.Property(e => e.EndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("end_cust_theater");

                entity.Property(e => e.EndUserStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("end_user_street5");

                entity.Property(e => e.EntityExceptionFlag)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("entity_exception_flag");

                entity.Property(e => e.EntityRelatedFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("entity_related_flag");

                entity.Property(e => e.GlobalAcctScore).HasColumnName("global_acct_score");

                entity.Property(e => e.GmeFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("gme_flag");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.MspAcctScore).HasColumnName("msp_acct_score");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.ProcessedFlag)
                    .HasMaxLength(50)
                    .HasColumnName("processed_flag");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("quote_id");

                entity.Property(e => e.ReportedQty).HasColumnName("reported_qty");

                entity.Property(e => e.ResEcJaroScore).HasColumnName("res_ec_jaro_score");

                entity.Property(e => e.ResEcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_ec_key_flag");

                entity.Property(e => e.ResSvcEntityRelatedFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("res_svc_entity_related_flag");

                entity.Property(e => e.ResSvcJaroScore).HasColumnName("res_svc_jaro_score");

                entity.Property(e => e.ResSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_svc_key_flag");

                entity.Property(e => e.ResellerCity)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_city");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_postal_code");

                entity.Property(e => e.ResellerStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street1");

                entity.Property(e => e.ResellerStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street2");

                entity.Property(e => e.ResellerStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street3");

                entity.Property(e => e.ResellerStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street4");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.RmaNumber)
                    .HasMaxLength(50)
                    .HasColumnName("rma_number");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SerialNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number_orig");

                entity.Property(e => e.ShiptoCity)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_city");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShiptoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_postal_code");

                entity.Property(e => e.ShiptoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_region");

                entity.Property(e => e.ShiptoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street1");

                entity.Property(e => e.ShiptoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street2");

                entity.Property(e => e.ShiptoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street3");

                entity.Property(e => e.ShiptoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street4");

                entity.Property(e => e.ShiptoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street5");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("so_number_orig");

                entity.Property(e => e.SoType)
                    .HasMaxLength(250)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoCity)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_city");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SoldtoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_postal_code");

                entity.Property(e => e.SoldtoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street1");

                entity.Property(e => e.SoldtoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street2");

                entity.Property(e => e.SoldtoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street3");

                entity.Property(e => e.SoldtoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street4");

                entity.Property(e => e.SoldtoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street5");

                entity.Property(e => e.SourceImportId).HasColumnName("source_import_id");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.SvcBilltoCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("svc_billto_country_code");

                entity.Property(e => e.SvcBilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_billto_key");

                entity.Property(e => e.SvcBilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_billto_name");

                entity.Property(e => e.SvcContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_creation_date");

                entity.Property(e => e.SvcContractLineCreation)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_line_creation");

                entity.Property(e => e.SvcContractLineStatus)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_line_status");

                entity.Property(e => e.SvcContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_number");

                entity.Property(e => e.SvcContractStatus)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_status");

                entity.Property(e => e.SvcContractType)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_type");

                entity.Property(e => e.SvcCurrency)
                    .HasMaxLength(50)
                    .HasColumnName("svc_currency");

                entity.Property(e => e.SvcEligibleFlag)
                    .HasMaxLength(50)
                    .HasColumnName("svc_eligible_flag");

                entity.Property(e => e.SvcEndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_city");

                entity.Property(e => e.SvcEndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_country_code");

                entity.Property(e => e.SvcEndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_country_name");

                entity.Property(e => e.SvcEndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_key");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_name");

                entity.Property(e => e.SvcEndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_theater");

                entity.Property(e => e.SvcEndDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_end_date");

                entity.Property(e => e.SvcInstalledAtCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_country_code");

                entity.Property(e => e.SvcInstalledAtCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_installed_at_country_name");

                entity.Property(e => e.SvcInstalledAtDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_district");

                entity.Property(e => e.SvcInstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_installed_at_key");

                entity.Property(e => e.SvcInstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_name");

                entity.Property(e => e.SvcListValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_list_value");

                entity.Property(e => e.SvcMaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_desc");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcNetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_net_value");

                entity.Property(e => e.SvcPayerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_country");

                entity.Property(e => e.SvcPayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_payer_key");

                entity.Property(e => e.SvcPayerName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_name");

                entity.Property(e => e.SvcSalesOrder)
                    .HasMaxLength(50)
                    .HasColumnName("svc_sales_order");

                entity.Property(e => e.SvcStartDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_start_date");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(250)
                    .HasColumnName("transaction_type");
            });

            modelBuilder.Entity<GmeDataset082918>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_dataset_082918");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("am_country_name");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("billto_district");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.BilltoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("billto_postal_code");

                entity.Property(e => e.BilltoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("billto_region");

                entity.Property(e => e.BilltoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street1");

                entity.Property(e => e.BilltoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street2");

                entity.Property(e => e.BilltoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street3");

                entity.Property(e => e.BilltoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street4");

                entity.Property(e => e.BilltoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street5");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .HasColumnName("claim_status");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_item");

                entity.Property(e => e.DiscPerc)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("disc_perc");

                entity.Property(e => e.DistiCity)
                    .HasMaxLength(255)
                    .HasColumnName("disti_city");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("disti_postal_code");

                entity.Property(e => e.DistiRegion)
                    .HasMaxLength(255)
                    .HasColumnName("disti_region");

                entity.Property(e => e.DistiStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street1");

                entity.Property(e => e.DistiStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street2");

                entity.Property(e => e.DistiStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street3");

                entity.Property(e => e.DistiStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street4");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(250)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.DrspPosId).HasColumnName("drsp_pos_id");

                entity.Property(e => e.EcSvcJaroScore).HasColumnName("ec_svc_jaro_score");

                entity.Property(e => e.EcSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_key_flag");

                entity.Property(e => e.EcSvcSamegidFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_samegid_flag");

                entity.Property(e => e.EcSvcSenzingScore).HasColumnName("ec_svc_senzing_score");

                entity.Property(e => e.EndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_city");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_postal_code");

                entity.Property(e => e.EndCustRegion)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_region");

                entity.Property(e => e.EndCustStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street1");

                entity.Property(e => e.EndCustStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street2");

                entity.Property(e => e.EndCustStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street3");

                entity.Property(e => e.EndCustStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street4");

                entity.Property(e => e.EndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("end_cust_theater");

                entity.Property(e => e.EndUserStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("end_user_street5");

                entity.Property(e => e.EntityExceptionFlag)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("entity_exception_flag");

                entity.Property(e => e.EntityRelatedFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("entity_related_flag");

                entity.Property(e => e.GlobalAcctScore).HasColumnName("global_acct_score");

                entity.Property(e => e.GmeFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("gme_flag");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.MspAcctScore).HasColumnName("msp_acct_score");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.ProcessedFlag)
                    .HasMaxLength(50)
                    .HasColumnName("processed_flag");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("quote_id");

                entity.Property(e => e.ReportedQty).HasColumnName("reported_qty");

                entity.Property(e => e.ResEcJaroScore).HasColumnName("res_ec_jaro_score");

                entity.Property(e => e.ResEcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_ec_key_flag");

                entity.Property(e => e.ResSvcEntityRelatedFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("res_svc_entity_related_flag");

                entity.Property(e => e.ResSvcJaroScore).HasColumnName("res_svc_jaro_score");

                entity.Property(e => e.ResSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_svc_key_flag");

                entity.Property(e => e.ResellerCity)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_city");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_postal_code");

                entity.Property(e => e.ResellerStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street1");

                entity.Property(e => e.ResellerStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street2");

                entity.Property(e => e.ResellerStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street3");

                entity.Property(e => e.ResellerStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street4");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.RmaNumber)
                    .HasMaxLength(50)
                    .HasColumnName("rma_number");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SerialNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number_orig");

                entity.Property(e => e.ShiptoCity)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_city");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShiptoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_postal_code");

                entity.Property(e => e.ShiptoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_region");

                entity.Property(e => e.ShiptoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street1");

                entity.Property(e => e.ShiptoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street2");

                entity.Property(e => e.ShiptoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street3");

                entity.Property(e => e.ShiptoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street4");

                entity.Property(e => e.ShiptoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street5");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("so_number_orig");

                entity.Property(e => e.SoType)
                    .HasMaxLength(250)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoCity)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_city");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SoldtoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_postal_code");

                entity.Property(e => e.SoldtoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street1");

                entity.Property(e => e.SoldtoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street2");

                entity.Property(e => e.SoldtoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street3");

                entity.Property(e => e.SoldtoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street4");

                entity.Property(e => e.SoldtoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street5");

                entity.Property(e => e.SourceImportId).HasColumnName("source_import_id");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.SvcBilltoCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("svc_billto_country_code");

                entity.Property(e => e.SvcBilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_billto_key");

                entity.Property(e => e.SvcBilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_billto_name");

                entity.Property(e => e.SvcContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_creation_date");

                entity.Property(e => e.SvcContractLineCreation)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_line_creation");

                entity.Property(e => e.SvcContractLineStatus)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_line_status");

                entity.Property(e => e.SvcContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_number");

                entity.Property(e => e.SvcContractStatus)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_status");

                entity.Property(e => e.SvcContractType)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_type");

                entity.Property(e => e.SvcCurrency)
                    .HasMaxLength(50)
                    .HasColumnName("svc_currency");

                entity.Property(e => e.SvcEligibleFlag)
                    .HasMaxLength(50)
                    .HasColumnName("svc_eligible_flag");

                entity.Property(e => e.SvcEndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_city");

                entity.Property(e => e.SvcEndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_country_code");

                entity.Property(e => e.SvcEndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_country_name");

                entity.Property(e => e.SvcEndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_key");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_name");

                entity.Property(e => e.SvcEndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_theater");

                entity.Property(e => e.SvcEndDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_end_date");

                entity.Property(e => e.SvcInstalledAtCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_country_code");

                entity.Property(e => e.SvcInstalledAtCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_installed_at_country_name");

                entity.Property(e => e.SvcInstalledAtDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_district");

                entity.Property(e => e.SvcInstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_installed_at_key");

                entity.Property(e => e.SvcInstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_name");

                entity.Property(e => e.SvcListValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_list_value");

                entity.Property(e => e.SvcMaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_desc");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcNetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_net_value");

                entity.Property(e => e.SvcPayerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_country");

                entity.Property(e => e.SvcPayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_payer_key");

                entity.Property(e => e.SvcPayerName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_name");

                entity.Property(e => e.SvcSalesOrder)
                    .HasMaxLength(50)
                    .HasColumnName("svc_sales_order");

                entity.Property(e => e.SvcStartDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_start_date");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(250)
                    .HasColumnName("transaction_type");
            });

            modelBuilder.Entity<GmeDataset1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_dataset", "dev");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("am_country_name");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("billto_district");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.BilltoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("billto_postal_code");

                entity.Property(e => e.BilltoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("billto_region");

                entity.Property(e => e.BilltoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street1");

                entity.Property(e => e.BilltoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street2");

                entity.Property(e => e.BilltoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street3");

                entity.Property(e => e.BilltoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street4");

                entity.Property(e => e.BilltoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street5");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .HasColumnName("claim_status");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("created_date");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_item");

                entity.Property(e => e.DiscPerc)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("disc_perc");

                entity.Property(e => e.DistiCity)
                    .HasMaxLength(255)
                    .HasColumnName("disti_city");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("disti_postal_code");

                entity.Property(e => e.DistiRegion)
                    .HasMaxLength(255)
                    .HasColumnName("disti_region");

                entity.Property(e => e.DistiStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street1");

                entity.Property(e => e.DistiStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street2");

                entity.Property(e => e.DistiStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street3");

                entity.Property(e => e.DistiStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street4");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(255)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.DrspPosId).HasColumnName("drsp_pos_id");

                entity.Property(e => e.EcSvcJaroScore).HasColumnName("ec_svc_jaro_score");

                entity.Property(e => e.EcSvcKeyFlag)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_key_flag");

                entity.Property(e => e.EcSvcSenzingScore).HasColumnName("ec_svc_senzing_score");

                entity.Property(e => e.EndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_city");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_postal_code");

                entity.Property(e => e.EndCustRegion)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_region");

                entity.Property(e => e.EndCustStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street1");

                entity.Property(e => e.EndCustStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street2");

                entity.Property(e => e.EndCustStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street3");

                entity.Property(e => e.EndCustStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street4");

                entity.Property(e => e.EndCustTheater)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_theater");

                entity.Property(e => e.EndUserStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("end_user_street5");

                entity.Property(e => e.EntityExceptionFlag)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("entity_exception_flag");

                entity.Property(e => e.GlobalAcctScore).HasColumnName("global_acct_score");

                entity.Property(e => e.GmeFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("gme_flag");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.MspAcctScore).HasColumnName("msp_acct_score");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.ProcessedFlag)
                    .HasMaxLength(50)
                    .HasColumnName("processed_flag");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("quote_id");

                entity.Property(e => e.ReportedQty).HasColumnName("reported_qty");

                entity.Property(e => e.ResEcJaroScore).HasColumnName("res_ec_jaro_score");

                entity.Property(e => e.ResEcKeyFlag)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("res_ec_key_flag");

                entity.Property(e => e.ResellerCity)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_city");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_postal_code");

                entity.Property(e => e.ResellerStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street1");

                entity.Property(e => e.ResellerStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street2");

                entity.Property(e => e.ResellerStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street3");

                entity.Property(e => e.ResellerStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street4");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.RmaNumber)
                    .HasMaxLength(50)
                    .HasColumnName("rma_number");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SerialNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number_orig");

                entity.Property(e => e.ShiptoCity)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_city");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShiptoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_postal_code");

                entity.Property(e => e.ShiptoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_region");

                entity.Property(e => e.ShiptoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street1");

                entity.Property(e => e.ShiptoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street2");

                entity.Property(e => e.ShiptoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street3");

                entity.Property(e => e.ShiptoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street4");

                entity.Property(e => e.ShiptoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street5");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("so_number_orig");

                entity.Property(e => e.SoType)
                    .HasMaxLength(250)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoCity)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_city");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SoldtoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_postal_code");

                entity.Property(e => e.SoldtoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street1");

                entity.Property(e => e.SoldtoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street2");

                entity.Property(e => e.SoldtoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street3");

                entity.Property(e => e.SoldtoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street4");

                entity.Property(e => e.SoldtoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street5");

                entity.Property(e => e.SourceImportId).HasColumnName("source_import_id");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.SvcBilltoCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("svc_billto_country_code");

                entity.Property(e => e.SvcBilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_billto_key");

                entity.Property(e => e.SvcBilltoName)
                    .HasMaxLength(50)
                    .HasColumnName("svc_billto_name");

                entity.Property(e => e.SvcContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_creation_date");

                entity.Property(e => e.SvcContractLineCreation)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_line_creation");

                entity.Property(e => e.SvcContractLineStatus)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_line_status");

                entity.Property(e => e.SvcContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_number");

                entity.Property(e => e.SvcContractStatus)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_status");

                entity.Property(e => e.SvcContractType)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_type");

                entity.Property(e => e.SvcCurrency)
                    .HasMaxLength(50)
                    .HasColumnName("svc_currency");

                entity.Property(e => e.SvcEndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_city");

                entity.Property(e => e.SvcEndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_country_code");

                entity.Property(e => e.SvcEndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_country_name");

                entity.Property(e => e.SvcEndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_key");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_name");

                entity.Property(e => e.SvcEndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_theater");

                entity.Property(e => e.SvcEndDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_end_date");

                entity.Property(e => e.SvcInstalledAtCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_country_code");

                entity.Property(e => e.SvcInstalledAtCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_installed_at_country_name");

                entity.Property(e => e.SvcInstalledAtDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_district");

                entity.Property(e => e.SvcInstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_installed_at_key");

                entity.Property(e => e.SvcInstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_name");

                entity.Property(e => e.SvcListValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_list_value");

                entity.Property(e => e.SvcMaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_desc");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcNetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_net_value");

                entity.Property(e => e.SvcPayerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_country");

                entity.Property(e => e.SvcPayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_payer_key");

                entity.Property(e => e.SvcPayerName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_name");

                entity.Property(e => e.SvcSalesOrder)
                    .HasMaxLength(50)
                    .HasColumnName("svc_sales_order");

                entity.Property(e => e.SvcStartDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_start_date");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(250)
                    .HasColumnName("transaction_type");
            });

            modelBuilder.Entity<GmeDataset20181112>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_dataset_20181112");

                entity.HasIndex(e => e.ResellerKey, "gme_dataset_reskey");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("am_country_name");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("billto_district");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.BilltoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("billto_postal_code");

                entity.Property(e => e.BilltoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("billto_region");

                entity.Property(e => e.BilltoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street1");

                entity.Property(e => e.BilltoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street2");

                entity.Property(e => e.BilltoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street3");

                entity.Property(e => e.BilltoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street4");

                entity.Property(e => e.BilltoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street5");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .HasColumnName("claim_status");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_item");

                entity.Property(e => e.DiscPerc)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("disc_perc");

                entity.Property(e => e.DistiCity)
                    .HasMaxLength(255)
                    .HasColumnName("disti_city");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("disti_postal_code");

                entity.Property(e => e.DistiRegion)
                    .HasMaxLength(255)
                    .HasColumnName("disti_region");

                entity.Property(e => e.DistiStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street1");

                entity.Property(e => e.DistiStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street2");

                entity.Property(e => e.DistiStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street3");

                entity.Property(e => e.DistiStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street4");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(250)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.DrspPosId).HasColumnName("drsp_pos_id");

                entity.Property(e => e.EcSvcJaroScore).HasColumnName("ec_svc_jaro_score");

                entity.Property(e => e.EcSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_key_flag");

                entity.Property(e => e.EcSvcSamegidFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_samegid_flag");

                entity.Property(e => e.EcSvcSenzingScore).HasColumnName("ec_svc_senzing_score");

                entity.Property(e => e.EndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_city");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_postal_code");

                entity.Property(e => e.EndCustRegion)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_region");

                entity.Property(e => e.EndCustStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street1");

                entity.Property(e => e.EndCustStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street2");

                entity.Property(e => e.EndCustStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street3");

                entity.Property(e => e.EndCustStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street4");

                entity.Property(e => e.EndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("end_cust_theater");

                entity.Property(e => e.EndUserStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("end_user_street5");

                entity.Property(e => e.EntityExceptionFlag)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("entity_exception_flag");

                entity.Property(e => e.EntityRelatedFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("entity_related_flag");

                entity.Property(e => e.GlobalAcctScore).HasColumnName("global_acct_score");

                entity.Property(e => e.GmeFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("gme_flag");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.MspAcctScore).HasColumnName("msp_acct_score");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.ProcessedFlag)
                    .HasMaxLength(50)
                    .HasColumnName("processed_flag");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("quote_id");

                entity.Property(e => e.ReportedQty).HasColumnName("reported_qty");

                entity.Property(e => e.ResEcJaroScore).HasColumnName("res_ec_jaro_score");

                entity.Property(e => e.ResEcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_ec_key_flag");

                entity.Property(e => e.ResSvcEntityRelatedFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("res_svc_entity_related_flag");

                entity.Property(e => e.ResSvcJaroScore).HasColumnName("res_svc_jaro_score");

                entity.Property(e => e.ResSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_svc_key_flag");

                entity.Property(e => e.ResellerCity)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_city");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_postal_code");

                entity.Property(e => e.ResellerStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street1");

                entity.Property(e => e.ResellerStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street2");

                entity.Property(e => e.ResellerStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street3");

                entity.Property(e => e.ResellerStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street4");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.RmaNumber)
                    .HasMaxLength(50)
                    .HasColumnName("rma_number");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SerialNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number_orig");

                entity.Property(e => e.ShiptoCity)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_city");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShiptoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_postal_code");

                entity.Property(e => e.ShiptoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_region");

                entity.Property(e => e.ShiptoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street1");

                entity.Property(e => e.ShiptoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street2");

                entity.Property(e => e.ShiptoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street3");

                entity.Property(e => e.ShiptoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street4");

                entity.Property(e => e.ShiptoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street5");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("so_number_orig");

                entity.Property(e => e.SoType)
                    .HasMaxLength(250)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoCity)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_city");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SoldtoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_postal_code");

                entity.Property(e => e.SoldtoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street1");

                entity.Property(e => e.SoldtoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street2");

                entity.Property(e => e.SoldtoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street3");

                entity.Property(e => e.SoldtoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street4");

                entity.Property(e => e.SoldtoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street5");

                entity.Property(e => e.SourceImportId).HasColumnName("source_import_id");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.SvcBilltoCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("svc_billto_country_code");

                entity.Property(e => e.SvcBilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_billto_key");

                entity.Property(e => e.SvcBilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_billto_name");

                entity.Property(e => e.SvcContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_creation_date");

                entity.Property(e => e.SvcContractLineCreation)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_line_creation");

                entity.Property(e => e.SvcContractLineStatus)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_line_status");

                entity.Property(e => e.SvcContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_number");

                entity.Property(e => e.SvcContractStatus)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_status");

                entity.Property(e => e.SvcContractType)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_type");

                entity.Property(e => e.SvcCurrency)
                    .HasMaxLength(50)
                    .HasColumnName("svc_currency");

                entity.Property(e => e.SvcEligibleFlag)
                    .HasMaxLength(50)
                    .HasColumnName("svc_eligible_flag");

                entity.Property(e => e.SvcEndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_city");

                entity.Property(e => e.SvcEndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_country_code");

                entity.Property(e => e.SvcEndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_country_name");

                entity.Property(e => e.SvcEndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_key");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_name");

                entity.Property(e => e.SvcEndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_theater");

                entity.Property(e => e.SvcEndDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_end_date");

                entity.Property(e => e.SvcInstalledAtCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_country_code");

                entity.Property(e => e.SvcInstalledAtCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_installed_at_country_name");

                entity.Property(e => e.SvcInstalledAtDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_district");

                entity.Property(e => e.SvcInstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_installed_at_key");

                entity.Property(e => e.SvcInstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_name");

                entity.Property(e => e.SvcListValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_list_value");

                entity.Property(e => e.SvcMaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_desc");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcNetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_net_value");

                entity.Property(e => e.SvcPayerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_country");

                entity.Property(e => e.SvcPayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_payer_key");

                entity.Property(e => e.SvcPayerName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_name");

                entity.Property(e => e.SvcSalesOrder)
                    .HasMaxLength(50)
                    .HasColumnName("svc_sales_order");

                entity.Property(e => e.SvcStartDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_start_date");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(250)
                    .HasColumnName("transaction_type");
            });

            modelBuilder.Entity<GmeDataset20190131>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_dataset_20190131");

                entity.HasIndex(e => e.ResellerKey, "gme_dataset_reskey");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("am_country_name");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("billto_district");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.BilltoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("billto_postal_code");

                entity.Property(e => e.BilltoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("billto_region");

                entity.Property(e => e.BilltoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street1");

                entity.Property(e => e.BilltoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street2");

                entity.Property(e => e.BilltoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street3");

                entity.Property(e => e.BilltoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street4");

                entity.Property(e => e.BilltoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street5");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .HasColumnName("claim_status");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_item");

                entity.Property(e => e.DiscPerc)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("disc_perc");

                entity.Property(e => e.DistiCity)
                    .HasMaxLength(255)
                    .HasColumnName("disti_city");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("disti_postal_code");

                entity.Property(e => e.DistiRegion)
                    .HasMaxLength(255)
                    .HasColumnName("disti_region");

                entity.Property(e => e.DistiStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street1");

                entity.Property(e => e.DistiStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street2");

                entity.Property(e => e.DistiStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street3");

                entity.Property(e => e.DistiStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street4");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(250)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.DrspPosId).HasColumnName("drsp_pos_id");

                entity.Property(e => e.EcSvcJaroScore).HasColumnName("ec_svc_jaro_score");

                entity.Property(e => e.EcSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_key_flag");

                entity.Property(e => e.EcSvcSamegidFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_samegid_flag");

                entity.Property(e => e.EcSvcSenzingScore).HasColumnName("ec_svc_senzing_score");

                entity.Property(e => e.EndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_city");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_postal_code");

                entity.Property(e => e.EndCustRegion)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_region");

                entity.Property(e => e.EndCustStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street1");

                entity.Property(e => e.EndCustStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street2");

                entity.Property(e => e.EndCustStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street3");

                entity.Property(e => e.EndCustStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street4");

                entity.Property(e => e.EndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("end_cust_theater");

                entity.Property(e => e.EndUserStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("end_user_street5");

                entity.Property(e => e.EntityExceptionFlag)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("entity_exception_flag");

                entity.Property(e => e.EntityRelatedFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("entity_related_flag");

                entity.Property(e => e.GlobalAcctScore).HasColumnName("global_acct_score");

                entity.Property(e => e.GmeFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("gme_flag");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MarginLoss)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("margin_loss");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.MspAcctScore).HasColumnName("msp_acct_score");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.ProcessedFlag)
                    .HasMaxLength(50)
                    .HasColumnName("processed_flag");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("quote_id");

                entity.Property(e => e.ReportedQty).HasColumnName("reported_qty");

                entity.Property(e => e.ResEcJaroScore).HasColumnName("res_ec_jaro_score");

                entity.Property(e => e.ResEcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_ec_key_flag");

                entity.Property(e => e.ResSvcEntityRelatedFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("res_svc_entity_related_flag");

                entity.Property(e => e.ResSvcJaroScore).HasColumnName("res_svc_jaro_score");

                entity.Property(e => e.ResSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_svc_key_flag");

                entity.Property(e => e.ResellerCity)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_city");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_postal_code");

                entity.Property(e => e.ResellerStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street1");

                entity.Property(e => e.ResellerStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street2");

                entity.Property(e => e.ResellerStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street3");

                entity.Property(e => e.ResellerStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street4");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.RmaNumber)
                    .HasMaxLength(50)
                    .HasColumnName("rma_number");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SerialNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number_orig");

                entity.Property(e => e.ShiptoCity)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_city");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShiptoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_postal_code");

                entity.Property(e => e.ShiptoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_region");

                entity.Property(e => e.ShiptoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street1");

                entity.Property(e => e.ShiptoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street2");

                entity.Property(e => e.ShiptoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street3");

                entity.Property(e => e.ShiptoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street4");

                entity.Property(e => e.ShiptoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street5");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("so_number_orig");

                entity.Property(e => e.SoType)
                    .HasMaxLength(250)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoCity)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_city");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SoldtoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_postal_code");

                entity.Property(e => e.SoldtoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street1");

                entity.Property(e => e.SoldtoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street2");

                entity.Property(e => e.SoldtoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street3");

                entity.Property(e => e.SoldtoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street4");

                entity.Property(e => e.SoldtoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street5");

                entity.Property(e => e.SourceImportId).HasColumnName("source_import_id");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.SvcBilltoCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("svc_billto_country_code");

                entity.Property(e => e.SvcBilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_billto_key");

                entity.Property(e => e.SvcBilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_billto_name");

                entity.Property(e => e.SvcContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_creation_date");

                entity.Property(e => e.SvcContractLineCreation)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_line_creation");

                entity.Property(e => e.SvcContractLineStatus)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_line_status");

                entity.Property(e => e.SvcContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_number");

                entity.Property(e => e.SvcContractStatus)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_status");

                entity.Property(e => e.SvcContractType)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_type");

                entity.Property(e => e.SvcCurrency)
                    .HasMaxLength(50)
                    .HasColumnName("svc_currency");

                entity.Property(e => e.SvcEligibleFlag)
                    .HasMaxLength(50)
                    .HasColumnName("svc_eligible_flag");

                entity.Property(e => e.SvcEndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_city");

                entity.Property(e => e.SvcEndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_country_code");

                entity.Property(e => e.SvcEndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_country_name");

                entity.Property(e => e.SvcEndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_key");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_name");

                entity.Property(e => e.SvcEndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_theater");

                entity.Property(e => e.SvcEndDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_end_date");

                entity.Property(e => e.SvcInstalledAtCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_country_code");

                entity.Property(e => e.SvcInstalledAtCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_installed_at_country_name");

                entity.Property(e => e.SvcInstalledAtDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_district");

                entity.Property(e => e.SvcInstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_installed_at_key");

                entity.Property(e => e.SvcInstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_name");

                entity.Property(e => e.SvcListValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_list_value");

                entity.Property(e => e.SvcMaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_desc");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcNetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_net_value");

                entity.Property(e => e.SvcPayerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_country");

                entity.Property(e => e.SvcPayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_payer_key");

                entity.Property(e => e.SvcPayerName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_name");

                entity.Property(e => e.SvcSalesOrder)
                    .HasMaxLength(50)
                    .HasColumnName("svc_sales_order");

                entity.Property(e => e.SvcStartDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_start_date");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(250)
                    .HasColumnName("transaction_type");
            });

            modelBuilder.Entity<GmeDatasetBak>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_dataset_bak", "bak");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("am_country_name");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("billto_district");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.BilltoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("billto_postal_code");

                entity.Property(e => e.BilltoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("billto_region");

                entity.Property(e => e.BilltoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street1");

                entity.Property(e => e.BilltoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street2");

                entity.Property(e => e.BilltoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street3");

                entity.Property(e => e.BilltoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street4");

                entity.Property(e => e.BilltoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street5");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .HasColumnName("claim_status");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_item");

                entity.Property(e => e.DiscPerc)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("disc_perc");

                entity.Property(e => e.DistiCity)
                    .HasMaxLength(255)
                    .HasColumnName("disti_city");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("disti_postal_code");

                entity.Property(e => e.DistiRegion)
                    .HasMaxLength(255)
                    .HasColumnName("disti_region");

                entity.Property(e => e.DistiStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street1");

                entity.Property(e => e.DistiStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street2");

                entity.Property(e => e.DistiStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street3");

                entity.Property(e => e.DistiStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street4");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(250)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.DrspPosId).HasColumnName("drsp_pos_id");

                entity.Property(e => e.EcSvcJaroScore).HasColumnName("ec_svc_jaro_score");

                entity.Property(e => e.EcSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_key_flag");

                entity.Property(e => e.EcSvcSamegidFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_samegid_flag");

                entity.Property(e => e.EcSvcSenzingScore).HasColumnName("ec_svc_senzing_score");

                entity.Property(e => e.EndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_city");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_postal_code");

                entity.Property(e => e.EndCustRegion)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_region");

                entity.Property(e => e.EndCustStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street1");

                entity.Property(e => e.EndCustStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street2");

                entity.Property(e => e.EndCustStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street3");

                entity.Property(e => e.EndCustStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street4");

                entity.Property(e => e.EndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("end_cust_theater");

                entity.Property(e => e.EndUserStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("end_user_street5");

                entity.Property(e => e.EntityExceptionFlag)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("entity_exception_flag");

                entity.Property(e => e.EntityRelatedFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("entity_related_flag");

                entity.Property(e => e.GlobalAcctScore).HasColumnName("global_acct_score");

                entity.Property(e => e.GmeFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("gme_flag");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.MspAcctScore).HasColumnName("msp_acct_score");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.ProcessedFlag)
                    .HasMaxLength(50)
                    .HasColumnName("processed_flag");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("quote_id");

                entity.Property(e => e.ReportedQty).HasColumnName("reported_qty");

                entity.Property(e => e.ResEcJaroScore).HasColumnName("res_ec_jaro_score");

                entity.Property(e => e.ResEcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_ec_key_flag");

                entity.Property(e => e.ResSvcEntityRelatedFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("res_svc_entity_related_flag");

                entity.Property(e => e.ResSvcJaroScore).HasColumnName("res_svc_jaro_score");

                entity.Property(e => e.ResSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_svc_key_flag");

                entity.Property(e => e.ResellerCity)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_city");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_postal_code");

                entity.Property(e => e.ResellerStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street1");

                entity.Property(e => e.ResellerStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street2");

                entity.Property(e => e.ResellerStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street3");

                entity.Property(e => e.ResellerStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street4");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.RmaNumber)
                    .HasMaxLength(50)
                    .HasColumnName("rma_number");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SerialNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number_orig");

                entity.Property(e => e.ShiptoCity)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_city");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShiptoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_postal_code");

                entity.Property(e => e.ShiptoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_region");

                entity.Property(e => e.ShiptoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street1");

                entity.Property(e => e.ShiptoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street2");

                entity.Property(e => e.ShiptoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street3");

                entity.Property(e => e.ShiptoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street4");

                entity.Property(e => e.ShiptoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street5");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("so_number_orig");

                entity.Property(e => e.SoType)
                    .HasMaxLength(250)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoCity)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_city");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SoldtoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_postal_code");

                entity.Property(e => e.SoldtoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street1");

                entity.Property(e => e.SoldtoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street2");

                entity.Property(e => e.SoldtoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street3");

                entity.Property(e => e.SoldtoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street4");

                entity.Property(e => e.SoldtoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street5");

                entity.Property(e => e.SourceImportId).HasColumnName("source_import_id");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.SvcBilltoCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("svc_billto_country_code");

                entity.Property(e => e.SvcBilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_billto_key");

                entity.Property(e => e.SvcBilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_billto_name");

                entity.Property(e => e.SvcContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_creation_date");

                entity.Property(e => e.SvcContractLineCreation)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_line_creation");

                entity.Property(e => e.SvcContractLineStatus)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_line_status");

                entity.Property(e => e.SvcContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_number");

                entity.Property(e => e.SvcContractStatus)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_status");

                entity.Property(e => e.SvcContractType)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_type");

                entity.Property(e => e.SvcCurrency)
                    .HasMaxLength(50)
                    .HasColumnName("svc_currency");

                entity.Property(e => e.SvcEndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_city");

                entity.Property(e => e.SvcEndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_country_code");

                entity.Property(e => e.SvcEndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_country_name");

                entity.Property(e => e.SvcEndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_key");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_name");

                entity.Property(e => e.SvcEndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_theater");

                entity.Property(e => e.SvcEndDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_end_date");

                entity.Property(e => e.SvcInstalledAtCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_country_code");

                entity.Property(e => e.SvcInstalledAtCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_installed_at_country_name");

                entity.Property(e => e.SvcInstalledAtDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_district");

                entity.Property(e => e.SvcInstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_installed_at_key");

                entity.Property(e => e.SvcInstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_name");

                entity.Property(e => e.SvcListValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_list_value");

                entity.Property(e => e.SvcMaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_desc");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcNetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_net_value");

                entity.Property(e => e.SvcPayerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_country");

                entity.Property(e => e.SvcPayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_payer_key");

                entity.Property(e => e.SvcPayerName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_name");

                entity.Property(e => e.SvcSalesOrder)
                    .HasMaxLength(50)
                    .HasColumnName("svc_sales_order");

                entity.Property(e => e.SvcStartDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_start_date");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(250)
                    .HasColumnName("transaction_type");
            });

            modelBuilder.Entity<GmeDatasetStg>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_dataset_stg");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("billto_district");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.BilltoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("billto_postal_code");

                entity.Property(e => e.BilltoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("billto_region");

                entity.Property(e => e.BilltoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street1");

                entity.Property(e => e.BilltoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street2");

                entity.Property(e => e.BilltoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street3");

                entity.Property(e => e.BilltoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street4");

                entity.Property(e => e.BilltoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street5");

                entity.Property(e => e.BksAccountManager)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("bks_account_manager");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .HasColumnName("claim_status");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("created_date");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_item");

                entity.Property(e => e.DistiCity)
                    .HasMaxLength(255)
                    .HasColumnName("disti_city");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("disti_postal_code");

                entity.Property(e => e.DistiRegion)
                    .HasMaxLength(255)
                    .HasColumnName("disti_region");

                entity.Property(e => e.DistiStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street1");

                entity.Property(e => e.DistiStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street2");

                entity.Property(e => e.DistiStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street3");

                entity.Property(e => e.DistiStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street4");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(250)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.EcSvcJaroScore).HasColumnName("ec_svc_jaro_score");

                entity.Property(e => e.EcSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_key_flag");

                entity.Property(e => e.EcSvcSenzingScore).HasColumnName("ec_svc_senzing_score");

                entity.Property(e => e.EndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_city");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_postal_code");

                entity.Property(e => e.EndCustRegion)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_region");

                entity.Property(e => e.EndCustStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street1");

                entity.Property(e => e.EndCustStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street2");

                entity.Property(e => e.EndCustStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street3");

                entity.Property(e => e.EndCustStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street4");

                entity.Property(e => e.EndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("end_cust_theater");

                entity.Property(e => e.EndUserStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("end_user_street5");

                entity.Property(e => e.EntityExceptionFlag)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("entity_exception_flag");

                entity.Property(e => e.GlobalAcctScore).HasColumnName("global_acct_score");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.MspAcctScore).HasColumnName("msp_acct_score");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.ProcessedFlag)
                    .HasMaxLength(50)
                    .HasColumnName("processed_flag");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("quote_id");

                entity.Property(e => e.ReportedQty).HasColumnName("reported_qty");

                entity.Property(e => e.ResEcJaroScore).HasColumnName("res_ec_jaro_score");

                entity.Property(e => e.ResEcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_ec_key_flag");

                entity.Property(e => e.ResellerCity)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_city");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_postal_code");

                entity.Property(e => e.ResellerStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street1");

                entity.Property(e => e.ResellerStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street2");

                entity.Property(e => e.ResellerStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street3");

                entity.Property(e => e.ResellerStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street4");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.RmaNumber)
                    .HasMaxLength(50)
                    .HasColumnName("rma_number");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SerialNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number_orig");

                entity.Property(e => e.ShiptoCity)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_city");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShiptoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_postal_code");

                entity.Property(e => e.ShiptoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_region");

                entity.Property(e => e.ShiptoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street1");

                entity.Property(e => e.ShiptoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street2");

                entity.Property(e => e.ShiptoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street3");

                entity.Property(e => e.ShiptoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street4");

                entity.Property(e => e.ShiptoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street5");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("so_number_orig");

                entity.Property(e => e.SoType)
                    .HasMaxLength(250)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoCity)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_city");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SoldtoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_postal_code");

                entity.Property(e => e.SoldtoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street1");

                entity.Property(e => e.SoldtoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street2");

                entity.Property(e => e.SoldtoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street3");

                entity.Property(e => e.SoldtoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street4");

                entity.Property(e => e.SoldtoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street5");

                entity.Property(e => e.SourceImportId).HasColumnName("source_import_id");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.SvcBilltoCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("svc_billto_country_code");

                entity.Property(e => e.SvcBilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_billto_key");

                entity.Property(e => e.SvcBilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_billto_name");

                entity.Property(e => e.SvcContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_creation_date");

                entity.Property(e => e.SvcContractLineStatus)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_line_status");

                entity.Property(e => e.SvcContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_number");

                entity.Property(e => e.SvcContractStatus)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_status");

                entity.Property(e => e.SvcContractType)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_type");

                entity.Property(e => e.SvcCurrency)
                    .HasMaxLength(50)
                    .HasColumnName("svc_currency");

                entity.Property(e => e.SvcEndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_city");

                entity.Property(e => e.SvcEndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_country_code");

                entity.Property(e => e.SvcEndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_country_name");

                entity.Property(e => e.SvcEndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_key");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_name");

                entity.Property(e => e.SvcEndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_theater");

                entity.Property(e => e.SvcEndDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_end_date");

                entity.Property(e => e.SvcInstalledAtCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_country_code");

                entity.Property(e => e.SvcInstalledAtCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_installed_at_country_name");

                entity.Property(e => e.SvcInstalledAtDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_district");

                entity.Property(e => e.SvcInstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_installed_at_key");

                entity.Property(e => e.SvcInstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_name");

                entity.Property(e => e.SvcListValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_list_value");

                entity.Property(e => e.SvcMaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_desc");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcNetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_net_value");

                entity.Property(e => e.SvcPayerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_country");

                entity.Property(e => e.SvcPayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_payer_key");

                entity.Property(e => e.SvcPayerName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_name");

                entity.Property(e => e.SvcSalesOrder)
                    .HasMaxLength(50)
                    .HasColumnName("svc_sales_order");

                entity.Property(e => e.SvcStartDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_start_date");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(250)
                    .HasColumnName("transaction_type");
            });

            modelBuilder.Entity<GmeDatasetTmp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_dataset_tmp");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("am_country_name");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("billto_district");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.BilltoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("billto_postal_code");

                entity.Property(e => e.BilltoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("billto_region");

                entity.Property(e => e.BilltoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street1");

                entity.Property(e => e.BilltoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street2");

                entity.Property(e => e.BilltoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street3");

                entity.Property(e => e.BilltoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street4");

                entity.Property(e => e.BilltoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street5");

                entity.Property(e => e.BksAccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("bks_account_manager");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .HasColumnName("claim_status");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("created_date");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_item");

                entity.Property(e => e.DistiCity)
                    .HasMaxLength(255)
                    .HasColumnName("disti_city");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("disti_postal_code");

                entity.Property(e => e.DistiRegion)
                    .HasMaxLength(255)
                    .HasColumnName("disti_region");

                entity.Property(e => e.DistiStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street1");

                entity.Property(e => e.DistiStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street2");

                entity.Property(e => e.DistiStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street3");

                entity.Property(e => e.DistiStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street4");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(250)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.EcSvcJaroScore).HasColumnName("ec_svc_jaro_score");

                entity.Property(e => e.EcSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_key_flag");

                entity.Property(e => e.EcSvcSenzingScore).HasColumnName("ec_svc_senzing_score");

                entity.Property(e => e.EndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_city");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_postal_code");

                entity.Property(e => e.EndCustRegion)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_region");

                entity.Property(e => e.EndCustStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street1");

                entity.Property(e => e.EndCustStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street2");

                entity.Property(e => e.EndCustStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street3");

                entity.Property(e => e.EndCustStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street4");

                entity.Property(e => e.EndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("end_cust_theater");

                entity.Property(e => e.EndUserStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("end_user_street5");

                entity.Property(e => e.EntityExceptionFlag)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("entity_exception_flag");

                entity.Property(e => e.GlobalAcctScore).HasColumnName("global_acct_score");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.MspAcctScore).HasColumnName("msp_acct_score");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.ProcessedFlag)
                    .HasMaxLength(50)
                    .HasColumnName("processed_flag");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("quote_id");

                entity.Property(e => e.ReportedQty).HasColumnName("reported_qty");

                entity.Property(e => e.ResEcJaroScore).HasColumnName("res_ec_jaro_score");

                entity.Property(e => e.ResEcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_ec_key_flag");

                entity.Property(e => e.ResellerCity)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_city");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_postal_code");

                entity.Property(e => e.ResellerStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street1");

                entity.Property(e => e.ResellerStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street2");

                entity.Property(e => e.ResellerStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street3");

                entity.Property(e => e.ResellerStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street4");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.RmaNumber)
                    .HasMaxLength(50)
                    .HasColumnName("rma_number");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SerialNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number_orig");

                entity.Property(e => e.ShiptoCity)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_city");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShiptoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_postal_code");

                entity.Property(e => e.ShiptoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_region");

                entity.Property(e => e.ShiptoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street1");

                entity.Property(e => e.ShiptoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street2");

                entity.Property(e => e.ShiptoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street3");

                entity.Property(e => e.ShiptoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street4");

                entity.Property(e => e.ShiptoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street5");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("so_number_orig");

                entity.Property(e => e.SoType)
                    .HasMaxLength(250)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoCity)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_city");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SoldtoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_postal_code");

                entity.Property(e => e.SoldtoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street1");

                entity.Property(e => e.SoldtoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street2");

                entity.Property(e => e.SoldtoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street3");

                entity.Property(e => e.SoldtoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street4");

                entity.Property(e => e.SoldtoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street5");

                entity.Property(e => e.SourceImportId).HasColumnName("source_import_id");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.SvcBilltoCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("svc_billto_country_code");

                entity.Property(e => e.SvcBilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_billto_key");

                entity.Property(e => e.SvcBilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_billto_name");

                entity.Property(e => e.SvcContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_creation_date");

                entity.Property(e => e.SvcContractLineStatus)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_line_status");

                entity.Property(e => e.SvcContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_number");

                entity.Property(e => e.SvcContractStatus)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_status");

                entity.Property(e => e.SvcContractType)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_type");

                entity.Property(e => e.SvcCurrency)
                    .HasMaxLength(50)
                    .HasColumnName("svc_currency");

                entity.Property(e => e.SvcEndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_city");

                entity.Property(e => e.SvcEndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_country_code");

                entity.Property(e => e.SvcEndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_country_name");

                entity.Property(e => e.SvcEndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_key");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_name");

                entity.Property(e => e.SvcEndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_theater");

                entity.Property(e => e.SvcEndDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_end_date");

                entity.Property(e => e.SvcInstalledAtCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_country_code");

                entity.Property(e => e.SvcInstalledAtCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_installed_at_country_name");

                entity.Property(e => e.SvcInstalledAtDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_district");

                entity.Property(e => e.SvcInstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_installed_at_key");

                entity.Property(e => e.SvcInstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_name");

                entity.Property(e => e.SvcListValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_list_value");

                entity.Property(e => e.SvcMaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_desc");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcNetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_net_value");

                entity.Property(e => e.SvcPayerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_country");

                entity.Property(e => e.SvcPayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_payer_key");

                entity.Property(e => e.SvcPayerName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_name");

                entity.Property(e => e.SvcSalesOrder)
                    .HasMaxLength(50)
                    .HasColumnName("svc_sales_order");

                entity.Property(e => e.SvcStartDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_start_date");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(250)
                    .HasColumnName("transaction_type");
            });

            modelBuilder.Entity<GmeDatasetTwbVw>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("gme_dataset_twb_vw");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("am_country_name");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.BilltoAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("billto_address");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .HasColumnName("claim_status");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_item");

                entity.Property(e => e.DiscPerc)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("disc_perc");

                entity.Property(e => e.DistiAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("disti_address");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(250)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.DrspPosId).HasColumnName("drsp_pos_id");

                entity.Property(e => e.EcSvcJaroScore).HasColumnName("ec_svc_jaro_score");

                entity.Property(e => e.EcSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_key_flag");

                entity.Property(e => e.EcSvcSamegidFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_samegid_flag");

                entity.Property(e => e.EcSvcSenzingScore).HasColumnName("ec_svc_senzing_score");

                entity.Property(e => e.EndCustAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("end_cust_address");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("end_cust_theater");

                entity.Property(e => e.EntityExceptionFlag)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("entity_exception_flag");

                entity.Property(e => e.EntityRelatedFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("entity_related_flag");

                entity.Property(e => e.GlobalAcctScore).HasColumnName("global_acct_score");

                entity.Property(e => e.GmeFlag)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("gme_flag");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.MspAcctScore).HasColumnName("msp_acct_score");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("quote_id");

                entity.Property(e => e.ResEcJaroScore).HasColumnName("res_ec_jaro_score");

                entity.Property(e => e.ResEcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_ec_key_flag");

                entity.Property(e => e.ResSvcEntityRelatedFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("res_svc_entity_related_flag");

                entity.Property(e => e.ResSvcJaroScore).HasColumnName("res_svc_jaro_score");

                entity.Property(e => e.ResSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_svc_key_flag");

                entity.Property(e => e.ResellerAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("reseller_address");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.RmaNumber)
                    .HasMaxLength(50)
                    .HasColumnName("rma_number");

                entity.Property(e => e.SalesAchievement)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("sales_achievement");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SerialNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number_orig");

                entity.Property(e => e.ShiptoAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("shipto_address");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShpListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_list_amt");

                entity.Property(e => e.ShpNetAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_net_amt");

                entity.Property(e => e.ShpSnCnt).HasColumnName("shp_sn_cnt");

                entity.Property(e => e.ShpSnWithSvc).HasColumnName("shp_sn_with_svc");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("so_number_orig");

                entity.Property(e => e.SoType)
                    .HasMaxLength(250)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("soldto_address");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SourceImportId).HasColumnName("source_import_id");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.SvcBilltoCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("svc_billto_country_code");

                entity.Property(e => e.SvcBilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_billto_key");

                entity.Property(e => e.SvcBilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_billto_name");

                entity.Property(e => e.SvcContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_creation_date");

                entity.Property(e => e.SvcContractLineCreation)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_line_creation");

                entity.Property(e => e.SvcContractLineStatus)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_line_status");

                entity.Property(e => e.SvcContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_number");

                entity.Property(e => e.SvcContractStatus)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_status");

                entity.Property(e => e.SvcContractType)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_type");

                entity.Property(e => e.SvcCurrency)
                    .HasMaxLength(50)
                    .HasColumnName("svc_currency");

                entity.Property(e => e.SvcEndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_city");

                entity.Property(e => e.SvcEndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_country_code");

                entity.Property(e => e.SvcEndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_country_name");

                entity.Property(e => e.SvcEndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_key");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_name");

                entity.Property(e => e.SvcEndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_theater");

                entity.Property(e => e.SvcEndDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_end_date");

                entity.Property(e => e.SvcInstalledAtCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_country_code");

                entity.Property(e => e.SvcInstalledAtCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_installed_at_country_name");

                entity.Property(e => e.SvcInstalledAtDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_district");

                entity.Property(e => e.SvcInstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_installed_at_key");

                entity.Property(e => e.SvcInstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_name");

                entity.Property(e => e.SvcListValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_list_value");

                entity.Property(e => e.SvcMaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_desc");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcNetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_net_value");

                entity.Property(e => e.SvcPayerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_country");

                entity.Property(e => e.SvcPayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_payer_key");

                entity.Property(e => e.SvcPayerName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_name");

                entity.Property(e => e.SvcSalesOrder)
                    .HasMaxLength(50)
                    .HasColumnName("svc_sales_order");

                entity.Property(e => e.SvcStartDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_start_date");

                entity.Property(e => e.TargetFlag)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("target_flag");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(250)
                    .HasColumnName("transaction_type");
            });

            modelBuilder.Entity<GmeDeltum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_delta", "dev");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountry)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("am_country");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.ContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("contract_creation_date");

                entity.Property(e => e.ContractEndStartDate)
                    .HasColumnType("date")
                    .HasColumnName("contract_end_start_date");

                entity.Property(e => e.ContractItemNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_item_no");

                entity.Property(e => e.ContractLineItemStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_line_item_status");

                entity.Property(e => e.ContractLineStartDate)
                    .HasColumnType("date")
                    .HasColumnName("contract_line_start_date");

                entity.Property(e => e.ContractNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_number");

                entity.Property(e => e.ContractStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_status");

                entity.Property(e => e.ContractType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_type");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DedupId).HasColumnName("dedup_id");

                entity.Property(e => e.DeliveryDate)
                    .HasColumnType("date")
                    .HasColumnName("delivery_date");

                entity.Property(e => e.DeliveryNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("delivery_number");

                entity.Property(e => e.DistiCountry)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("disti_country");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.EcCountry)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ec_country");

                entity.Property(e => e.EcCountryCode)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("ec_country_code");

                entity.Property(e => e.EcCustomer)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("ec_customer");

                entity.Property(e => e.EcGblGroupCompare)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("ec_gbl_group_compare");

                entity.Property(e => e.EcGblJaroScore).HasColumnName("ec_gbl_jaro_score");

                entity.Property(e => e.EcLatitude).HasColumnName("ec_latitude");

                entity.Property(e => e.EcLongitude).HasColumnName("ec_longitude");

                entity.Property(e => e.EcSvcJaroScore).HasColumnName("ec_svc_jaro_score");

                entity.Property(e => e.EcSvcSenzingScore).HasColumnName("ec_svc_senzing_score");

                entity.Property(e => e.EcTheater)
                    .HasMaxLength(250)
                    .HasColumnName("ec_theater");

                entity.Property(e => e.EntityExceptionFlag)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("entity_exception_flag");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ItemNumber).HasColumnName("item_number");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaxGblScore).HasColumnName("max_gbl_score");

                entity.Property(e => e.MspScore).HasColumnName("msp_score");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PartnerLevelKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("partner_level_key");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("po_type");

                entity.Property(e => e.PosEc)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec");

                entity.Property(e => e.PosEcCity)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec_city");

                entity.Property(e => e.PosEcCountry)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec_country");

                entity.Property(e => e.PosEcCountryCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec_country_code");

                entity.Property(e => e.PosEcPostalcode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec_postalcode");

                entity.Property(e => e.PosEcRegion)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec_region");

                entity.Property(e => e.PosEcStreet1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec_street1");

                entity.Property(e => e.PosEcStreet2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec_street2");

                entity.Property(e => e.PosEcStreet3)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec_street3");

                entity.Property(e => e.PosEcStreet4)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec_street4");

                entity.Property(e => e.ProductId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("product_id");

                entity.Property(e => e.ResEcJaroScore).HasColumnName("res_ec_jaro_score");

                entity.Property(e => e.ResEcSenzingScore).HasColumnName("res_ec_senzing_score");

                entity.Property(e => e.ResGblGroupCompare)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("res_gbl_group_compare");

                entity.Property(e => e.ResGblJaroScore).HasColumnName("res_gbl_jaro_score");

                entity.Property(e => e.ResSvcJaroScore).HasColumnName("res_svc_jaro_score");

                entity.Property(e => e.ResSvcSenzingScore).HasColumnName("res_svc_senzing_score");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.SameEndCustFlag)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("same_end_cust_flag");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("serial_number");

                entity.Property(e => e.ShiptoCountry)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_country");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoDistrict)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_district");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShiptoPostalCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_postal_code");

                entity.Property(e => e.ShiptoRegion)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_region");

                entity.Property(e => e.ShiptoStreet1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street1");

                entity.Property(e => e.ShiptoStreet2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street2");

                entity.Property(e => e.ShiptoStreet3)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street3");

                entity.Property(e => e.ShiptoStreet4)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street4");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("so_type");

                entity.Property(e => e.SvcCountry)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("svc_country");

                entity.Property(e => e.SvcCountryCode)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("svc_country_code");

                entity.Property(e => e.SvcCustomer)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("svc_customer");

                entity.Property(e => e.SvcGblGroupCompare)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("svc_gbl_group_compare");

                entity.Property(e => e.SvcGblJaroScore).HasColumnName("svc_gbl_jaro_score");

                entity.Property(e => e.SvcLatitude).HasColumnName("svc_latitude");

                entity.Property(e => e.SvcLongitude).HasColumnName("svc_longitude");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_theater");

                entity.Property(e => e.TransactionItem)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("transaction_item");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Transaction_type");
            });

            modelBuilder.Entity<GmeDetail>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_details");

                entity.HasIndex(e => new { e.ResellerName, e.ResellerCountryCode, e.PoType }, "gme_details_ndx1");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountry)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("am_country");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.ContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("contract_creation_date");

                entity.Property(e => e.ContractEndStartDate)
                    .HasColumnType("date")
                    .HasColumnName("contract_end_start_date");

                entity.Property(e => e.ContractItemNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_item_no");

                entity.Property(e => e.ContractLineItemStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_line_item_status");

                entity.Property(e => e.ContractLineStartDate)
                    .HasColumnType("date")
                    .HasColumnName("contract_line_start_date");

                entity.Property(e => e.ContractNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_number");

                entity.Property(e => e.ContractStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_status");

                entity.Property(e => e.ContractType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_type");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DedupId).HasColumnName("dedup_id");

                entity.Property(e => e.DeliveryDate)
                    .HasColumnType("date")
                    .HasColumnName("delivery_date");

                entity.Property(e => e.DeliveryNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("delivery_number");

                entity.Property(e => e.DistiCountry)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("disti_country");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.EcCountry)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ec_country");

                entity.Property(e => e.EcCountryCode)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("ec_country_code");

                entity.Property(e => e.EcCustomer)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("ec_customer");

                entity.Property(e => e.EcGblGroupCompare)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("ec_gbl_group_compare");

                entity.Property(e => e.EcGblJaroScore).HasColumnName("ec_gbl_jaro_score");

                entity.Property(e => e.EcLatitude).HasColumnName("ec_latitude");

                entity.Property(e => e.EcLongitude).HasColumnName("ec_longitude");

                entity.Property(e => e.EcSvcJaroScore).HasColumnName("ec_svc_jaro_score");

                entity.Property(e => e.EcSvcSenzingScore).HasColumnName("ec_svc_senzing_score");

                entity.Property(e => e.EcTheater)
                    .HasMaxLength(250)
                    .HasColumnName("ec_theater");

                entity.Property(e => e.EntityExceptionFlag)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("entity_exception_flag");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ItemNumber).HasColumnName("item_number");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaxGblScore).HasColumnName("max_gbl_score");

                entity.Property(e => e.MspScore).HasColumnName("msp_score");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PartnerLevelKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("partner_level_key");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("po_type");

                entity.Property(e => e.PosEc)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec");

                entity.Property(e => e.PosEcCity)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec_city");

                entity.Property(e => e.PosEcCountry)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec_country");

                entity.Property(e => e.PosEcCountryCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec_country_code");

                entity.Property(e => e.PosEcPostalcode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec_postalcode");

                entity.Property(e => e.PosEcRegion)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec_region");

                entity.Property(e => e.PosEcStreet1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec_street1");

                entity.Property(e => e.PosEcStreet2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec_street2");

                entity.Property(e => e.PosEcStreet3)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec_street3");

                entity.Property(e => e.PosEcStreet4)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec_street4");

                entity.Property(e => e.ProductId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("product_id");

                entity.Property(e => e.ResEcJaroScore).HasColumnName("res_ec_jaro_score");

                entity.Property(e => e.ResEcSenzingScore).HasColumnName("res_ec_senzing_score");

                entity.Property(e => e.ResGblGroupCompare)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("res_gbl_group_compare");

                entity.Property(e => e.ResGblJaroScore).HasColumnName("res_gbl_jaro_score");

                entity.Property(e => e.ResSvcJaroScore).HasColumnName("res_svc_jaro_score");

                entity.Property(e => e.ResSvcSenzingScore).HasColumnName("res_svc_senzing_score");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.SameEndCustFlag)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("same_end_cust_flag");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("serial_number");

                entity.Property(e => e.ShiptoCountry)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_country");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoDistrict)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_district");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShiptoPostalCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_postal_code");

                entity.Property(e => e.ShiptoRegion)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_region");

                entity.Property(e => e.ShiptoStreet1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street1");

                entity.Property(e => e.ShiptoStreet2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street2");

                entity.Property(e => e.ShiptoStreet3)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street3");

                entity.Property(e => e.ShiptoStreet4)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street4");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("so_type");

                entity.Property(e => e.SvcCountry)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("svc_country");

                entity.Property(e => e.SvcCountryCode)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("svc_country_code");

                entity.Property(e => e.SvcCustomer)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("svc_customer");

                entity.Property(e => e.SvcGblGroupCompare)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("svc_gbl_group_compare");

                entity.Property(e => e.SvcGblJaroScore).HasColumnName("svc_gbl_jaro_score");

                entity.Property(e => e.SvcLatitude).HasColumnName("svc_latitude");

                entity.Property(e => e.SvcLongitude).HasColumnName("svc_longitude");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_theater");

                entity.Property(e => e.TransactionItem)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("transaction_item");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Transaction_type");
            });

            modelBuilder.Entity<GmeDetail1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_details", "dev");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AccountManagerCountry)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("account_manager_country");

                entity.Property(e => e.AccountManagerCountryCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("account_manager_country_code");

                entity.Property(e => e.Attribute1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("attribute_1");

                entity.Property(e => e.ContractCreationDate)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_creation_date");

                entity.Property(e => e.ContractItemNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_item_no");

                entity.Property(e => e.ContractLineEndDate)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_line_end_date");

                entity.Property(e => e.ContractLineItemStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_line_item_status");

                entity.Property(e => e.ContractLineStartDate)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_line_start_date");

                entity.Property(e => e.ContractNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_number");

                entity.Property(e => e.ContractStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_status");

                entity.Property(e => e.ContractType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_type");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DistiCountry)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("disti_country");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.EcGblGroupCompare)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("ec_gbl_group_compare");

                entity.Property(e => e.EcGblJaroScore).HasColumnName("ec_gbl_jaro_score");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustEntityKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_entity_key");

                entity.Property(e => e.EndCustMasterId).HasColumnName("end_cust_master_id");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.ListPrice)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("list_price");

                entity.Property(e => e.Material)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("material");

                entity.Property(e => e.NetPrice)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Net_price");

                entity.Property(e => e.PartnerLevelKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("partner_level_key");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("po_type");

                entity.Property(e => e.ResGblGroupCompare)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("res_gbl_group_compare");

                entity.Property(e => e.ResGblJaroScore).HasColumnName("res_gbl_jaro_score");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerEntityKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("reseller_entity_key");

                entity.Property(e => e.ResellerMasterId).HasColumnName("reseller_master_id");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.SameEndCust)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("same_end_cust");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SoDate)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("so_date");

                entity.Property(e => e.SoDateNew)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("so_date_new");

                entity.Property(e => e.SoItem)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("so_type");

                entity.Property(e => e.SvcEcEntityKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("svc_ec_entity_key");

                entity.Property(e => e.SvcEcMasterId).HasColumnName("svc_ec_master_id");

                entity.Property(e => e.SvcEndCustCountry)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("svc_end_cust_country");

                entity.Property(e => e.SvcEndCustCountryCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("svc_end_cust_country_code");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("svc_end_cust_name");

                entity.Property(e => e.SvcGblGroupCompare)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("svc_gbl_group_compare");

                entity.Property(e => e.SvcGblJaroScore).HasColumnName("svc_gbl_jaro_score");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.TransactionDate)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionItem)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("transaction_item");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Transaction_type");
            });

            modelBuilder.Entity<GmeDetailsBak>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_details_bak", "bak");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountry)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("am_country");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.ContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("contract_creation_date");

                entity.Property(e => e.ContractEndStartDate)
                    .HasColumnType("date")
                    .HasColumnName("contract_end_start_date");

                entity.Property(e => e.ContractItemNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_item_no");

                entity.Property(e => e.ContractLineItemStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_line_item_status");

                entity.Property(e => e.ContractLineStartDate)
                    .HasColumnType("date")
                    .HasColumnName("contract_line_start_date");

                entity.Property(e => e.ContractNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_number");

                entity.Property(e => e.ContractStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_status");

                entity.Property(e => e.ContractType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_type");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DedupId).HasColumnName("dedup_id");

                entity.Property(e => e.DeliveryDate)
                    .HasColumnType("date")
                    .HasColumnName("delivery_date");

                entity.Property(e => e.DeliveryNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("delivery_number");

                entity.Property(e => e.DistiCountry)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("disti_country");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.EcCountry)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ec_country");

                entity.Property(e => e.EcCountryCode)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("ec_country_code");

                entity.Property(e => e.EcCustomer)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("ec_customer");

                entity.Property(e => e.EcGblGroupCompare)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("ec_gbl_group_compare");

                entity.Property(e => e.EcGblJaroScore).HasColumnName("ec_gbl_jaro_score");

                entity.Property(e => e.EcLatitude).HasColumnName("ec_latitude");

                entity.Property(e => e.EcLongitude).HasColumnName("ec_longitude");

                entity.Property(e => e.EcSvcJaroScore).HasColumnName("ec_svc_jaro_score");

                entity.Property(e => e.EcSvcSenzingScore).HasColumnName("ec_svc_senzing_score");

                entity.Property(e => e.EcTheater)
                    .HasMaxLength(250)
                    .HasColumnName("ec_theater");

                entity.Property(e => e.EntityExceptionFlag)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("entity_exception_flag");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaxGblScore).HasColumnName("max_gbl_score");

                entity.Property(e => e.MspScore).HasColumnName("msp_score");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PartnerLevelKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("partner_level_key");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("po_type");

                entity.Property(e => e.ProductId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("product_id");

                entity.Property(e => e.ResEcJaroScore).HasColumnName("res_ec_jaro_score");

                entity.Property(e => e.ResEcSenzingScore).HasColumnName("res_ec_senzing_score");

                entity.Property(e => e.ResGblGroupCompare)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("res_gbl_group_compare");

                entity.Property(e => e.ResGblJaroScore).HasColumnName("res_gbl_jaro_score");

                entity.Property(e => e.ResSvcJaroScore).HasColumnName("res_svc_jaro_score");

                entity.Property(e => e.ResSvcSenzingScore).HasColumnName("res_svc_senzing_score");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.SameEndCustFlag)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("same_end_cust_flag");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("so_type");

                entity.Property(e => e.SvcCountry)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("svc_country");

                entity.Property(e => e.SvcCountryCode)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("svc_country_code");

                entity.Property(e => e.SvcCustomer)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("svc_customer");

                entity.Property(e => e.SvcGblGroupCompare)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("svc_gbl_group_compare");

                entity.Property(e => e.SvcGblJaroScore).HasColumnName("svc_gbl_jaro_score");

                entity.Property(e => e.SvcLatitude).HasColumnName("svc_latitude");

                entity.Property(e => e.SvcLongitude).HasColumnName("svc_longitude");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_theater");

                entity.Property(e => e.TransactionItem)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("transaction_item");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Transaction_type");
            });

            modelBuilder.Entity<GmeDetailsBak1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_details_bak", "dev");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AccountManagerCountry)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("account_manager_country");

                entity.Property(e => e.AccountManagerCountryCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("account_manager_country_code");

                entity.Property(e => e.Attribute1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("attribute_1");

                entity.Property(e => e.ContractCreationDate)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_creation_date");

                entity.Property(e => e.ContractItemNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_item_no");

                entity.Property(e => e.ContractLineEndDate)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_line_end_date");

                entity.Property(e => e.ContractLineItemStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_line_item_status");

                entity.Property(e => e.ContractLineStartDate)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_line_start_date");

                entity.Property(e => e.ContractNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_number");

                entity.Property(e => e.ContractStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_status");

                entity.Property(e => e.ContractType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_type");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DistiCountry)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("disti_country");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.EcGblGroupCompare)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("ec_gbl_group_compare");

                entity.Property(e => e.EcGblJaroScore).HasColumnName("ec_gbl_jaro_score");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.ListPrice)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("list_price");

                entity.Property(e => e.Material)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("material");

                entity.Property(e => e.NetPrice)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Net_price");

                entity.Property(e => e.PartnerLevelKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("partner_level_key");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("po_type");

                entity.Property(e => e.ResGblGroupCompare)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("res_gbl_group_compare");

                entity.Property(e => e.ResGblJaroScore).HasColumnName("res_gbl_jaro_score");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.SameEndCust)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("same_end_cust");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SoDate)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("so_date");

                entity.Property(e => e.SoDateNew)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("so_date_new");

                entity.Property(e => e.SoItem)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("so_type");

                entity.Property(e => e.SvcEndCustCountry)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("svc_end_cust_country");

                entity.Property(e => e.SvcEndCustCountryCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("svc_end_cust_country_code");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("svc_end_cust_name");

                entity.Property(e => e.SvcGblGroupCompare)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("svc_gbl_group_compare");

                entity.Property(e => e.SvcGblJaroScore).HasColumnName("svc_gbl_jaro_score");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.TransactionDate)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionItem)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("transaction_item");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Transaction_type");
            });

            modelBuilder.Entity<GmeDetailsDedup>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_details_dedups", "dev");

                entity.Property(e => e.Cnt).HasColumnName("cnt");

                entity.Property(e => e.Material)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("material");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("serial_number");
            });

            modelBuilder.Entity<GmeDetailsDom>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_details_dom", "dev");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AccountManagerCountry)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("account_manager_country");

                entity.Property(e => e.AccountManagerCountryCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("account_manager_country_code");

                entity.Property(e => e.ContractCreationDate)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_creation_date");

                entity.Property(e => e.ContractItemNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_item_no");

                entity.Property(e => e.ContractLineEndDate)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_line_end_date");

                entity.Property(e => e.ContractLineItemStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_line_item_status");

                entity.Property(e => e.ContractLineStartDate)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_line_start_date");

                entity.Property(e => e.ContractNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_number");

                entity.Property(e => e.ContractStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_status");

                entity.Property(e => e.ContractType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_type");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DistiCountry)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("disti_country");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.EcGlbGroupCompare)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("ec_glb_group_compare");

                entity.Property(e => e.EcGlbJaroScore).HasColumnName("ec_glb_jaro_score");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.ListPrice)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("list_price");

                entity.Property(e => e.Material)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("material");

                entity.Property(e => e.NetPrice)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Net_price");

                entity.Property(e => e.PartnerLevelKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("partner_level_key");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("po_type");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.SameEndCust)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("same_end_cust");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SoDate)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("so_date");

                entity.Property(e => e.SoDateNew)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("so_date_new");

                entity.Property(e => e.SoItem)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("so_type");

                entity.Property(e => e.SvcEndCustCountry)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("svc_end_cust_country");

                entity.Property(e => e.SvcEndCustCountryCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("svc_end_cust_country_code");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("svc_end_cust_name");

                entity.Property(e => e.SvcGlbGroupCompare)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("svc_glb_group_compare");

                entity.Property(e => e.SvcGlbJaroScore).HasColumnName("svc_glb_jaro_score");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.TransactionDate)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionItem)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("transaction_item");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Transaction_type");
            });

            modelBuilder.Entity<GmeDetailsMw>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_details_mw");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountry)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("am_country");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.ContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("contract_creation_date");

                entity.Property(e => e.ContractEndStartDate)
                    .HasColumnType("date")
                    .HasColumnName("contract_end_start_date");

                entity.Property(e => e.ContractItemNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_item_no");

                entity.Property(e => e.ContractLineItemStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_line_item_status");

                entity.Property(e => e.ContractLineStartDate)
                    .HasColumnType("date")
                    .HasColumnName("contract_line_start_date");

                entity.Property(e => e.ContractNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_number");

                entity.Property(e => e.ContractStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_status");

                entity.Property(e => e.ContractType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_type");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DeliveryDate)
                    .HasColumnType("date")
                    .HasColumnName("delivery_date");

                entity.Property(e => e.DeliveryNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("delivery_number");

                entity.Property(e => e.DistiCountry)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("disti_country");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.EcCountry)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ec_country");

                entity.Property(e => e.EcCountryCode)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("ec_country_code");

                entity.Property(e => e.EcCustomer)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("ec_customer");

                entity.Property(e => e.EcGblGroupCompare)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("ec_gbl_group_compare");

                entity.Property(e => e.EcGblJaroScore).HasColumnName("ec_gbl_jaro_score");

                entity.Property(e => e.EcLatitude).HasColumnName("ec_latitude");

                entity.Property(e => e.EcLongitude).HasColumnName("ec_longitude");

                entity.Property(e => e.EcSvcJaroScore).HasColumnName("ec_svc_jaro_score");

                entity.Property(e => e.EcSvcSenzingScore).HasColumnName("ec_svc_senzing_score");

                entity.Property(e => e.EcTheater)
                    .HasMaxLength(250)
                    .HasColumnName("ec_theater");

                entity.Property(e => e.EntityExceptionFlag)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("entity_exception_flag");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaxGblScore).HasColumnName("max_gbl_score");

                entity.Property(e => e.MspScore).HasColumnName("msp_score");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PartnerLevelKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("partner_level_key");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("po_type");

                entity.Property(e => e.ProductId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("product_id");

                entity.Property(e => e.ResEcJaroScore).HasColumnName("res_ec_jaro_score");

                entity.Property(e => e.ResEcSenzingScore).HasColumnName("res_ec_senzing_score");

                entity.Property(e => e.ResGblGroupCompare)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("res_gbl_group_compare");

                entity.Property(e => e.ResGblJaroScore).HasColumnName("res_gbl_jaro_score");

                entity.Property(e => e.ResSvcJaroScore).HasColumnName("res_svc_jaro_score");

                entity.Property(e => e.ResSvcSenzingScore).HasColumnName("res_svc_senzing_score");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.SameEndCustFlag)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("same_end_cust_flag");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("so_type");

                entity.Property(e => e.SvcCountry)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("svc_country");

                entity.Property(e => e.SvcCountryCode)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("svc_country_code");

                entity.Property(e => e.SvcCustomer)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("svc_customer");

                entity.Property(e => e.SvcGblGroupCompare)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("svc_gbl_group_compare");

                entity.Property(e => e.SvcGblJaroScore).HasColumnName("svc_gbl_jaro_score");

                entity.Property(e => e.SvcLatitude).HasColumnName("svc_latitude");

                entity.Property(e => e.SvcLongitude).HasColumnName("svc_longitude");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_theater");

                entity.Property(e => e.TransactionItem)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("transaction_item");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Transaction_type");
            });

            modelBuilder.Entity<GmeDetailsStg>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_details_stg", "stg");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountry)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("am_country");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.ContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("contract_creation_date");

                entity.Property(e => e.ContractEndStartDate)
                    .HasColumnType("date")
                    .HasColumnName("contract_end_start_date");

                entity.Property(e => e.ContractItemNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_item_no");

                entity.Property(e => e.ContractLineItemStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_line_item_status");

                entity.Property(e => e.ContractLineStartDate)
                    .HasColumnType("date")
                    .HasColumnName("contract_line_start_date");

                entity.Property(e => e.ContractNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_number");

                entity.Property(e => e.ContractStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_status");

                entity.Property(e => e.ContractType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_type");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DedupId).HasColumnName("dedup_id");

                entity.Property(e => e.DeliveryDate)
                    .HasColumnType("date")
                    .HasColumnName("delivery_date");

                entity.Property(e => e.DeliveryNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("delivery_number");

                entity.Property(e => e.DistiCountry)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("disti_country");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.EcCountry)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ec_country");

                entity.Property(e => e.EcCountryCode)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("ec_country_code");

                entity.Property(e => e.EcCustomer)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("ec_customer");

                entity.Property(e => e.EcGblGroupCompare)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("ec_gbl_group_compare");

                entity.Property(e => e.EcGblJaroScore).HasColumnName("ec_gbl_jaro_score");

                entity.Property(e => e.EcLatitude).HasColumnName("ec_latitude");

                entity.Property(e => e.EcLongitude).HasColumnName("ec_longitude");

                entity.Property(e => e.EcSvcJaroScore).HasColumnName("ec_svc_jaro_score");

                entity.Property(e => e.EcSvcSenzingScore).HasColumnName("ec_svc_senzing_score");

                entity.Property(e => e.EcTheater)
                    .HasMaxLength(250)
                    .HasColumnName("ec_theater");

                entity.Property(e => e.EntityExceptionFlag)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("entity_exception_flag");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ItemNumber).HasColumnName("item_number");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaxGblScore).HasColumnName("max_gbl_score");

                entity.Property(e => e.MspScore).HasColumnName("msp_score");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PartnerLevelKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("partner_level_key");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("po_type");

                entity.Property(e => e.PosEc)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec");

                entity.Property(e => e.PosEcCity)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec_city");

                entity.Property(e => e.PosEcCountry)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec_country");

                entity.Property(e => e.PosEcCountryCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec_country_code");

                entity.Property(e => e.PosEcPostalcode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec_postalcode");

                entity.Property(e => e.PosEcRegion)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec_region");

                entity.Property(e => e.PosEcStreet1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec_street1");

                entity.Property(e => e.PosEcStreet2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec_street2");

                entity.Property(e => e.PosEcStreet3)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec_street3");

                entity.Property(e => e.PosEcStreet4)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec_street4");

                entity.Property(e => e.ProductId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("product_id");

                entity.Property(e => e.ResEcJaroScore).HasColumnName("res_ec_jaro_score");

                entity.Property(e => e.ResEcSenzingScore).HasColumnName("res_ec_senzing_score");

                entity.Property(e => e.ResGblGroupCompare)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("res_gbl_group_compare");

                entity.Property(e => e.ResGblJaroScore).HasColumnName("res_gbl_jaro_score");

                entity.Property(e => e.ResSvcJaroScore).HasColumnName("res_svc_jaro_score");

                entity.Property(e => e.ResSvcSenzingScore).HasColumnName("res_svc_senzing_score");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.SameEndCustFlag)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("same_end_cust_flag");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("serial_number");

                entity.Property(e => e.ShiptoCountry)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_country");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoDistrict)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_district");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShiptoPostalCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_postal_code");

                entity.Property(e => e.ShiptoRegion)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_region");

                entity.Property(e => e.ShiptoStreet1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street1");

                entity.Property(e => e.ShiptoStreet2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street2");

                entity.Property(e => e.ShiptoStreet3)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street3");

                entity.Property(e => e.ShiptoStreet4)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street4");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("so_type");

                entity.Property(e => e.SvcCountry)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("svc_country");

                entity.Property(e => e.SvcCountryCode)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("svc_country_code");

                entity.Property(e => e.SvcCustomer)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("svc_customer");

                entity.Property(e => e.SvcGblGroupCompare)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("svc_gbl_group_compare");

                entity.Property(e => e.SvcGblJaroScore).HasColumnName("svc_gbl_jaro_score");

                entity.Property(e => e.SvcLatitude).HasColumnName("svc_latitude");

                entity.Property(e => e.SvcLongitude).HasColumnName("svc_longitude");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_theater");

                entity.Property(e => e.TransactionItem)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("transaction_item");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Transaction_type");
            });

            modelBuilder.Entity<GmeDetailsVw>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("gme_details_vw", "dev");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountry)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("am_country");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.ContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("contract_creation_date");

                entity.Property(e => e.ContractEndStartDate)
                    .HasColumnType("date")
                    .HasColumnName("contract_end_start_date");

                entity.Property(e => e.ContractItemNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_item_no");

                entity.Property(e => e.ContractLineItemStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_line_item_status");

                entity.Property(e => e.ContractLineStartDate)
                    .HasColumnType("date")
                    .HasColumnName("contract_line_start_date");

                entity.Property(e => e.ContractNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_number");

                entity.Property(e => e.ContractStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_status");

                entity.Property(e => e.ContractType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_type");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DeliveryDate)
                    .HasColumnType("date")
                    .HasColumnName("delivery_date");

                entity.Property(e => e.DeliveryNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("delivery_number");

                entity.Property(e => e.DistiCountry)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("disti_country");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.EcCountry)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ec_country");

                entity.Property(e => e.EcCountryCode)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("ec_country_code");

                entity.Property(e => e.EcCustomer)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("ec_customer");

                entity.Property(e => e.EcGblGroupCompare)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("ec_gbl_group_compare");

                entity.Property(e => e.EcGblJaroScore).HasColumnName("ec_gbl_jaro_score");

                entity.Property(e => e.EcLatitude).HasColumnName("ec_latitude");

                entity.Property(e => e.EcLongitude).HasColumnName("ec_longitude");

                entity.Property(e => e.EcSvcJaroScore).HasColumnName("ec_svc_jaro_score");

                entity.Property(e => e.EcSvcSenzingScore).HasColumnName("ec_svc_senzing_score");

                entity.Property(e => e.EcTheater)
                    .HasMaxLength(250)
                    .HasColumnName("ec_theater");

                entity.Property(e => e.EntityExceptionFlag)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("entity_exception_flag");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaxGblScore).HasColumnName("max_gbl_score");

                entity.Property(e => e.MspScore).HasColumnName("msp_score");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PartnerLevelKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("partner_level_key");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("po_type");

                entity.Property(e => e.ProductId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("product_id");

                entity.Property(e => e.ResEcJaroScore).HasColumnName("res_ec_jaro_score");

                entity.Property(e => e.ResEcSenzingScore).HasColumnName("res_ec_senzing_score");

                entity.Property(e => e.ResGblGroupCompare)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("res_gbl_group_compare");

                entity.Property(e => e.ResGblJaroScore).HasColumnName("res_gbl_jaro_score");

                entity.Property(e => e.ResSvcJaroScore).HasColumnName("res_svc_jaro_score");

                entity.Property(e => e.ResSvcSenzingScore).HasColumnName("res_svc_senzing_score");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.SameEndCustFlag)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("same_end_cust_flag");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("so_type");

                entity.Property(e => e.SvcCountry)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("svc_country");

                entity.Property(e => e.SvcCountryCode)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("svc_country_code");

                entity.Property(e => e.SvcCustomer)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("svc_customer");

                entity.Property(e => e.SvcGblGroupCompare)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("svc_gbl_group_compare");

                entity.Property(e => e.SvcGblJaroScore).HasColumnName("svc_gbl_jaro_score");

                entity.Property(e => e.SvcLatitude).HasColumnName("svc_latitude");

                entity.Property(e => e.SvcLongitude).HasColumnName("svc_longitude");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_theater");

                entity.Property(e => e.TransactionItem)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("transaction_item");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Transaction_type");
            });

            modelBuilder.Entity<GmeDropship>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_dropship", "dev");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(50)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AccountManagerCountry)
                    .HasMaxLength(50)
                    .HasColumnName("account_manager_country");

                entity.Property(e => e.AmSoNumber)
                    .HasMaxLength(250)
                    .HasColumnName("am_so_number");

                entity.Property(e => e.ContractCreationDate)
                    .HasMaxLength(50)
                    .HasColumnName("contract_creation_date");

                entity.Property(e => e.ContractItemNo).HasColumnName("contract_item_no");

                entity.Property(e => e.ContractLineItemStatus)
                    .HasMaxLength(50)
                    .HasColumnName("contract_line_item_status");

                entity.Property(e => e.ContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("contract_number");

                entity.Property(e => e.ContractStatus)
                    .HasMaxLength(50)
                    .HasColumnName("contract_status");

                entity.Property(e => e.ContractType)
                    .HasMaxLength(50)
                    .HasColumnName("contract_type");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(250)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DeliveryDate)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_date");

                entity.Property(e => e.DeliveryItem).HasColumnName("delivery_item");

                entity.Property(e => e.DeliveryNumber)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_number");

                entity.Property(e => e.DeliveryType)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_type");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(250)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(250)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustomerGsaFlag)
                    .HasMaxLength(250)
                    .HasColumnName("end_customer_gsa_flag");

                entity.Property(e => e.EndCustomerPartnerLevel)
                    .HasMaxLength(250)
                    .HasColumnName("end_customer_partner_level");

                entity.Property(e => e.EndUserCountry)
                    .HasMaxLength(250)
                    .HasColumnName("end_user_country");

                entity.Property(e => e.EndUserName)
                    .HasMaxLength(250)
                    .HasColumnName("end_user_name");

                entity.Property(e => e.ListPrice)
                    .HasMaxLength(50)
                    .HasColumnName("list_price");

                entity.Property(e => e.Material)
                    .HasMaxLength(250)
                    .HasColumnName("material");

                entity.Property(e => e.MaterialOfferingType)
                    .HasMaxLength(50)
                    .HasColumnName("material_offering_type");

                entity.Property(e => e.MaterialType)
                    .HasMaxLength(50)
                    .HasColumnName("material_type");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.Qty)
                    .HasMaxLength(50)
                    .HasColumnName("qty");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerDistrict)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_district");

                entity.Property(e => e.ResellerGsaFlag)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_gsa_flag");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerPartnerLevelKey)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_partner_level_key");

                entity.Property(e => e.SameEndCustInDifferentCountry)
                    .HasMaxLength(50)
                    .HasColumnName("Same_EndCust_in_Different_Country__");

                entity.Property(e => e.ServiceEndDate)
                    .HasMaxLength(50)
                    .HasColumnName("service_end_date");

                entity.Property(e => e.ServiceMaterial)
                    .HasMaxLength(250)
                    .HasColumnName("service_material");

                entity.Property(e => e.ServiceMaterialKey)
                    .HasMaxLength(250)
                    .HasColumnName("service_material_key");

                entity.Property(e => e.ServiceStartDate)
                    .HasMaxLength(50)
                    .HasColumnName("service_start_date");

                entity.Property(e => e.ShipMaterial)
                    .HasMaxLength(50)
                    .HasColumnName("ship_material");

                entity.Property(e => e.ShiptoCountry)
                    .HasMaxLength(250)
                    .HasColumnName("shipto_country");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(250)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShpSn)
                    .HasMaxLength(50)
                    .HasColumnName("shp_sn");

                entity.Property(e => e.ShpSoType)
                    .HasMaxLength(50)
                    .HasColumnName("shp_so_type");

                entity.Property(e => e.SoDate)
                    .HasMaxLength(50)
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoldtoCountry)
                    .HasMaxLength(250)
                    .HasColumnName("soldto_country");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(250)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SoldtoPartyGsaFlag)
                    .HasMaxLength(250)
                    .HasColumnName("soldto_party_gsa_flag");

                entity.Property(e => e.SvcMaterial)
                    .HasMaxLength(250)
                    .HasColumnName("svc_material");

                entity.Property(e => e.SvcSn)
                    .HasMaxLength(50)
                    .HasColumnName("svc_sn");

                entity.Property(e => e.TotNetPrice)
                    .HasMaxLength(50)
                    .HasColumnName("tot_net_price");

                entity.Property(e => e.TransactionCreated)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_created");

                entity.Property(e => e.UnitNetPrice)
                    .HasMaxLength(50)
                    .HasColumnName("unit_net_price");
            });

            modelBuilder.Entity<GmeDrspPosSvc>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_drsp_pos_svc");

                entity.HasIndex(e => e.PoType, "gme_drsp_pos_svc_pot");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("am_country_name");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("billto_district");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.BilltoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("billto_postal_code");

                entity.Property(e => e.BilltoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("billto_region");

                entity.Property(e => e.BilltoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street1");

                entity.Property(e => e.BilltoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street2");

                entity.Property(e => e.BilltoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street3");

                entity.Property(e => e.BilltoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street4");

                entity.Property(e => e.BilltoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street5");

                entity.Property(e => e.BksAccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("bks_account_manager");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .HasColumnName("claim_status");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("created_date");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_item");

                entity.Property(e => e.DistiCity)
                    .HasMaxLength(255)
                    .HasColumnName("disti_city");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("disti_postal_code");

                entity.Property(e => e.DistiRegion)
                    .HasMaxLength(255)
                    .HasColumnName("disti_region");

                entity.Property(e => e.DistiStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street1");

                entity.Property(e => e.DistiStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street2");

                entity.Property(e => e.DistiStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street3");

                entity.Property(e => e.DistiStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street4");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(250)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.EndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_city");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_postal_code");

                entity.Property(e => e.EndCustRegion)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_region");

                entity.Property(e => e.EndCustStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street1");

                entity.Property(e => e.EndCustStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street2");

                entity.Property(e => e.EndCustStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street3");

                entity.Property(e => e.EndCustStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street4");

                entity.Property(e => e.EndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("end_cust_theater");

                entity.Property(e => e.EndUserStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("end_user_street5");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.ProcessedFlag)
                    .HasMaxLength(50)
                    .HasColumnName("processed_flag");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("quote_id");

                entity.Property(e => e.ReportedQty).HasColumnName("reported_qty");

                entity.Property(e => e.ResellerCity)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_city");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_postal_code");

                entity.Property(e => e.ResellerStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street1");

                entity.Property(e => e.ResellerStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street2");

                entity.Property(e => e.ResellerStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street3");

                entity.Property(e => e.ResellerStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street4");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.RmaNumber)
                    .HasMaxLength(50)
                    .HasColumnName("rma_number");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SerialNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number_orig");

                entity.Property(e => e.ShiptoCity)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_city");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShiptoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_postal_code");

                entity.Property(e => e.ShiptoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_region");

                entity.Property(e => e.ShiptoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street1");

                entity.Property(e => e.ShiptoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street2");

                entity.Property(e => e.ShiptoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street3");

                entity.Property(e => e.ShiptoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street4");

                entity.Property(e => e.ShiptoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street5");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("so_number_orig");

                entity.Property(e => e.SoType)
                    .HasMaxLength(250)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoCity)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_city");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SoldtoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_postal_code");

                entity.Property(e => e.SoldtoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street1");

                entity.Property(e => e.SoldtoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street2");

                entity.Property(e => e.SoldtoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street3");

                entity.Property(e => e.SoldtoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street4");

                entity.Property(e => e.SoldtoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street5");

                entity.Property(e => e.SourceImportId).HasColumnName("source_import_id");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.SvcBilltoCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("svc_billto_country_code");

                entity.Property(e => e.SvcBilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_billto_key");

                entity.Property(e => e.SvcBilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_billto_name");

                entity.Property(e => e.SvcContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_creation_date");

                entity.Property(e => e.SvcContractLineStatus)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_line_status");

                entity.Property(e => e.SvcContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_number");

                entity.Property(e => e.SvcContractStatus)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_status");

                entity.Property(e => e.SvcContractType)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_type");

                entity.Property(e => e.SvcCurrency)
                    .HasMaxLength(50)
                    .HasColumnName("svc_currency");

                entity.Property(e => e.SvcEligibleFlag)
                    .HasMaxLength(50)
                    .HasColumnName("svc_eligible_flag");

                entity.Property(e => e.SvcEndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_city");

                entity.Property(e => e.SvcEndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_country_code");

                entity.Property(e => e.SvcEndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_country_name");

                entity.Property(e => e.SvcEndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_key");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_name");

                entity.Property(e => e.SvcEndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_theater");

                entity.Property(e => e.SvcEndDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_end_date");

                entity.Property(e => e.SvcInstalledAtCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_country_code");

                entity.Property(e => e.SvcInstalledAtCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_installed_at_country_name");

                entity.Property(e => e.SvcInstalledAtDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_district");

                entity.Property(e => e.SvcInstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_installed_at_key");

                entity.Property(e => e.SvcInstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_name");

                entity.Property(e => e.SvcListValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_list_value");

                entity.Property(e => e.SvcMaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_desc");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcNetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_net_value");

                entity.Property(e => e.SvcPayerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_country");

                entity.Property(e => e.SvcPayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_payer_key");

                entity.Property(e => e.SvcPayerName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_name");

                entity.Property(e => e.SvcSalesOrder)
                    .HasMaxLength(50)
                    .HasColumnName("svc_sales_order");

                entity.Property(e => e.SvcStartDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_start_date");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(250)
                    .HasColumnName("transaction_type");
            });

            modelBuilder.Entity<GmeDrspPosSvc20190130>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_drsp_pos_svc_20190130", "bak");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("am_country_name");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("billto_district");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.BilltoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("billto_postal_code");

                entity.Property(e => e.BilltoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("billto_region");

                entity.Property(e => e.BilltoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street1");

                entity.Property(e => e.BilltoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street2");

                entity.Property(e => e.BilltoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street3");

                entity.Property(e => e.BilltoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street4");

                entity.Property(e => e.BilltoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street5");

                entity.Property(e => e.BksAccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("bks_account_manager");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .HasColumnName("claim_status");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("created_date");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_item");

                entity.Property(e => e.DistiCity)
                    .HasMaxLength(255)
                    .HasColumnName("disti_city");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("disti_postal_code");

                entity.Property(e => e.DistiRegion)
                    .HasMaxLength(255)
                    .HasColumnName("disti_region");

                entity.Property(e => e.DistiStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street1");

                entity.Property(e => e.DistiStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street2");

                entity.Property(e => e.DistiStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street3");

                entity.Property(e => e.DistiStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street4");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(250)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.EndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_city");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_postal_code");

                entity.Property(e => e.EndCustRegion)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_region");

                entity.Property(e => e.EndCustStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street1");

                entity.Property(e => e.EndCustStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street2");

                entity.Property(e => e.EndCustStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street3");

                entity.Property(e => e.EndCustStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street4");

                entity.Property(e => e.EndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("end_cust_theater");

                entity.Property(e => e.EndUserStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("end_user_street5");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.ProcessedFlag)
                    .HasMaxLength(50)
                    .HasColumnName("processed_flag");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("quote_id");

                entity.Property(e => e.ReportedQty).HasColumnName("reported_qty");

                entity.Property(e => e.ResellerCity)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_city");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_postal_code");

                entity.Property(e => e.ResellerStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street1");

                entity.Property(e => e.ResellerStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street2");

                entity.Property(e => e.ResellerStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street3");

                entity.Property(e => e.ResellerStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street4");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.RmaNumber)
                    .HasMaxLength(50)
                    .HasColumnName("rma_number");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SerialNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number_orig");

                entity.Property(e => e.ShiptoCity)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_city");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShiptoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_postal_code");

                entity.Property(e => e.ShiptoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_region");

                entity.Property(e => e.ShiptoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street1");

                entity.Property(e => e.ShiptoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street2");

                entity.Property(e => e.ShiptoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street3");

                entity.Property(e => e.ShiptoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street4");

                entity.Property(e => e.ShiptoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street5");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("so_number_orig");

                entity.Property(e => e.SoType)
                    .HasMaxLength(250)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoCity)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_city");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SoldtoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_postal_code");

                entity.Property(e => e.SoldtoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street1");

                entity.Property(e => e.SoldtoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street2");

                entity.Property(e => e.SoldtoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street3");

                entity.Property(e => e.SoldtoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street4");

                entity.Property(e => e.SoldtoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street5");

                entity.Property(e => e.SourceImportId).HasColumnName("source_import_id");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.SvcBilltoCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("svc_billto_country_code");

                entity.Property(e => e.SvcBilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_billto_key");

                entity.Property(e => e.SvcBilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_billto_name");

                entity.Property(e => e.SvcContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_creation_date");

                entity.Property(e => e.SvcContractLineStatus)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_line_status");

                entity.Property(e => e.SvcContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_number");

                entity.Property(e => e.SvcContractStatus)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_status");

                entity.Property(e => e.SvcContractType)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_type");

                entity.Property(e => e.SvcCurrency)
                    .HasMaxLength(50)
                    .HasColumnName("svc_currency");

                entity.Property(e => e.SvcEligibleFlag)
                    .HasMaxLength(50)
                    .HasColumnName("svc_eligible_flag");

                entity.Property(e => e.SvcEndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_city");

                entity.Property(e => e.SvcEndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_country_code");

                entity.Property(e => e.SvcEndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_country_name");

                entity.Property(e => e.SvcEndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_key");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_name");

                entity.Property(e => e.SvcEndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_theater");

                entity.Property(e => e.SvcEndDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_end_date");

                entity.Property(e => e.SvcInstalledAtCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_country_code");

                entity.Property(e => e.SvcInstalledAtCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_installed_at_country_name");

                entity.Property(e => e.SvcInstalledAtDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_district");

                entity.Property(e => e.SvcInstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_installed_at_key");

                entity.Property(e => e.SvcInstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_name");

                entity.Property(e => e.SvcListValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_list_value");

                entity.Property(e => e.SvcMaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_desc");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcNetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_net_value");

                entity.Property(e => e.SvcPayerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_country");

                entity.Property(e => e.SvcPayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_payer_key");

                entity.Property(e => e.SvcPayerName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_name");

                entity.Property(e => e.SvcSalesOrder)
                    .HasMaxLength(50)
                    .HasColumnName("svc_sales_order");

                entity.Property(e => e.SvcStartDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_start_date");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(250)
                    .HasColumnName("transaction_type");
            });

            modelBuilder.Entity<GmeDrspPosSvcBak>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_drsp_pos_svc_bak", "bak");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("am_country_name");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("billto_district");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.BilltoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("billto_postal_code");

                entity.Property(e => e.BilltoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("billto_region");

                entity.Property(e => e.BilltoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street1");

                entity.Property(e => e.BilltoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street2");

                entity.Property(e => e.BilltoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street3");

                entity.Property(e => e.BilltoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street4");

                entity.Property(e => e.BilltoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street5");

                entity.Property(e => e.BksAccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("bks_account_manager");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .HasColumnName("claim_status");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("created_date");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_item");

                entity.Property(e => e.DistiCity)
                    .HasMaxLength(255)
                    .HasColumnName("disti_city");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("disti_postal_code");

                entity.Property(e => e.DistiRegion)
                    .HasMaxLength(255)
                    .HasColumnName("disti_region");

                entity.Property(e => e.DistiStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street1");

                entity.Property(e => e.DistiStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street2");

                entity.Property(e => e.DistiStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street3");

                entity.Property(e => e.DistiStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street4");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(250)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.EndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_city");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_postal_code");

                entity.Property(e => e.EndCustRegion)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_region");

                entity.Property(e => e.EndCustStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street1");

                entity.Property(e => e.EndCustStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street2");

                entity.Property(e => e.EndCustStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street3");

                entity.Property(e => e.EndCustStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street4");

                entity.Property(e => e.EndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("end_cust_theater");

                entity.Property(e => e.EndUserStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("end_user_street5");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.ProcessedFlag)
                    .HasMaxLength(50)
                    .HasColumnName("processed_flag");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("quote_id");

                entity.Property(e => e.ReportedQty).HasColumnName("reported_qty");

                entity.Property(e => e.ResellerCity)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_city");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_postal_code");

                entity.Property(e => e.ResellerStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street1");

                entity.Property(e => e.ResellerStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street2");

                entity.Property(e => e.ResellerStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street3");

                entity.Property(e => e.ResellerStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street4");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.RmaNumber)
                    .HasMaxLength(50)
                    .HasColumnName("rma_number");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SerialNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number_orig");

                entity.Property(e => e.ShiptoCity)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_city");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShiptoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_postal_code");

                entity.Property(e => e.ShiptoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_region");

                entity.Property(e => e.ShiptoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street1");

                entity.Property(e => e.ShiptoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street2");

                entity.Property(e => e.ShiptoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street3");

                entity.Property(e => e.ShiptoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street4");

                entity.Property(e => e.ShiptoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street5");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("so_number_orig");

                entity.Property(e => e.SoType)
                    .HasMaxLength(250)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoCity)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_city");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SoldtoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_postal_code");

                entity.Property(e => e.SoldtoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street1");

                entity.Property(e => e.SoldtoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street2");

                entity.Property(e => e.SoldtoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street3");

                entity.Property(e => e.SoldtoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street4");

                entity.Property(e => e.SoldtoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street5");

                entity.Property(e => e.SourceImportId).HasColumnName("source_import_id");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.SvcBilltoCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("svc_billto_country_code");

                entity.Property(e => e.SvcBilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_billto_key");

                entity.Property(e => e.SvcBilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_billto_name");

                entity.Property(e => e.SvcContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_creation_date");

                entity.Property(e => e.SvcContractLineStatus)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_line_status");

                entity.Property(e => e.SvcContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_number");

                entity.Property(e => e.SvcContractStatus)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_status");

                entity.Property(e => e.SvcContractType)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_type");

                entity.Property(e => e.SvcCurrency)
                    .HasMaxLength(50)
                    .HasColumnName("svc_currency");

                entity.Property(e => e.SvcEndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_city");

                entity.Property(e => e.SvcEndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_country_code");

                entity.Property(e => e.SvcEndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_country_name");

                entity.Property(e => e.SvcEndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_key");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_name");

                entity.Property(e => e.SvcEndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_theater");

                entity.Property(e => e.SvcEndDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_end_date");

                entity.Property(e => e.SvcInstalledAtCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_country_code");

                entity.Property(e => e.SvcInstalledAtCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_installed_at_country_name");

                entity.Property(e => e.SvcInstalledAtDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_district");

                entity.Property(e => e.SvcInstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_installed_at_key");

                entity.Property(e => e.SvcInstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_name");

                entity.Property(e => e.SvcListValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_list_value");

                entity.Property(e => e.SvcMaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_desc");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcNetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_net_value");

                entity.Property(e => e.SvcPayerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_country");

                entity.Property(e => e.SvcPayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_payer_key");

                entity.Property(e => e.SvcPayerName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_name");

                entity.Property(e => e.SvcSalesOrder)
                    .HasMaxLength(50)
                    .HasColumnName("svc_sales_order");

                entity.Property(e => e.SvcStartDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_start_date");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(250)
                    .HasColumnName("transaction_type");
            });

            modelBuilder.Entity<GmeDrspPosSvcMerged>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_drsp_pos_svc_merged", "dev");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("am_country_name");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("billto_district");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.BilltoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("billto_postal_code");

                entity.Property(e => e.BilltoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("billto_region");

                entity.Property(e => e.BilltoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street1");

                entity.Property(e => e.BilltoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street2");

                entity.Property(e => e.BilltoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street3");

                entity.Property(e => e.BilltoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street4");

                entity.Property(e => e.BilltoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street5");

                entity.Property(e => e.BksAccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("bks_account_manager");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .HasColumnName("claim_status");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("created_date");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_item");

                entity.Property(e => e.DistiCity)
                    .HasMaxLength(255)
                    .HasColumnName("disti_city");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("disti_postal_code");

                entity.Property(e => e.DistiRegion)
                    .HasMaxLength(255)
                    .HasColumnName("disti_region");

                entity.Property(e => e.DistiStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street1");

                entity.Property(e => e.DistiStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street2");

                entity.Property(e => e.DistiStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street3");

                entity.Property(e => e.DistiStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street4");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(250)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.EcSvcJaroScore).HasColumnName("ec_svc_jaro_score");

                entity.Property(e => e.EcSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_key_flag");

                entity.Property(e => e.EcSvcSamegidFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_samegid_flag");

                entity.Property(e => e.EcSvcSenzingScore).HasColumnName("ec_svc_senzing_score");

                entity.Property(e => e.EndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_city");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_postal_code");

                entity.Property(e => e.EndCustRegion)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_region");

                entity.Property(e => e.EndCustStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street1");

                entity.Property(e => e.EndCustStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street2");

                entity.Property(e => e.EndCustStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street3");

                entity.Property(e => e.EndCustStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street4");

                entity.Property(e => e.EndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("end_cust_theater");

                entity.Property(e => e.EndUserStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("end_user_street5");

                entity.Property(e => e.EntityExceptionFlag)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("entity_exception_flag");

                entity.Property(e => e.EntityRelatedFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("entity_related_flag");

                entity.Property(e => e.GlobalAcctScore).HasColumnName("global_acct_score");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.MspAcctScore).HasColumnName("msp_acct_score");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.ProcessedFlag)
                    .HasMaxLength(50)
                    .HasColumnName("processed_flag");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("quote_id");

                entity.Property(e => e.ReportedQty).HasColumnName("reported_qty");

                entity.Property(e => e.ResEcJaroScore).HasColumnName("res_ec_jaro_score");

                entity.Property(e => e.ResEcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_ec_key_flag");

                entity.Property(e => e.ResSvcEntityRelatedFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("res_svc_entity_related_flag");

                entity.Property(e => e.ResSvcJaroScore).HasColumnName("res_svc_jaro_score");

                entity.Property(e => e.ResSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_svc_key_flag");

                entity.Property(e => e.ResellerCity)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_city");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_postal_code");

                entity.Property(e => e.ResellerStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street1");

                entity.Property(e => e.ResellerStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street2");

                entity.Property(e => e.ResellerStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street3");

                entity.Property(e => e.ResellerStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street4");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.RmaNumber)
                    .HasMaxLength(50)
                    .HasColumnName("rma_number");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SerialNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number_orig");

                entity.Property(e => e.ShiptoCity)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_city");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShiptoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_postal_code");

                entity.Property(e => e.ShiptoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_region");

                entity.Property(e => e.ShiptoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street1");

                entity.Property(e => e.ShiptoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street2");

                entity.Property(e => e.ShiptoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street3");

                entity.Property(e => e.ShiptoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street4");

                entity.Property(e => e.ShiptoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street5");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("so_number_orig");

                entity.Property(e => e.SoType)
                    .HasMaxLength(250)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoCity)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_city");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SoldtoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_postal_code");

                entity.Property(e => e.SoldtoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street1");

                entity.Property(e => e.SoldtoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street2");

                entity.Property(e => e.SoldtoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street3");

                entity.Property(e => e.SoldtoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street4");

                entity.Property(e => e.SoldtoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street5");

                entity.Property(e => e.SourceImportId).HasColumnName("source_import_id");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.SvcBilltoCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("svc_billto_country_code");

                entity.Property(e => e.SvcBilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_billto_key");

                entity.Property(e => e.SvcBilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_billto_name");

                entity.Property(e => e.SvcContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_creation_date");

                entity.Property(e => e.SvcContractLineStatus)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_line_status");

                entity.Property(e => e.SvcContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_number");

                entity.Property(e => e.SvcContractStatus)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_status");

                entity.Property(e => e.SvcContractType)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_type");

                entity.Property(e => e.SvcCurrency)
                    .HasMaxLength(50)
                    .HasColumnName("svc_currency");

                entity.Property(e => e.SvcEndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_city");

                entity.Property(e => e.SvcEndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_country_code");

                entity.Property(e => e.SvcEndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_country_name");

                entity.Property(e => e.SvcEndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_key");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_name");

                entity.Property(e => e.SvcEndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_theater");

                entity.Property(e => e.SvcEndDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_end_date");

                entity.Property(e => e.SvcInstalledAtCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_country_code");

                entity.Property(e => e.SvcInstalledAtCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_installed_at_country_name");

                entity.Property(e => e.SvcInstalledAtDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_district");

                entity.Property(e => e.SvcInstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_installed_at_key");

                entity.Property(e => e.SvcInstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_name");

                entity.Property(e => e.SvcListValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_list_value");

                entity.Property(e => e.SvcMaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_desc");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcNetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_net_value");

                entity.Property(e => e.SvcPayerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_country");

                entity.Property(e => e.SvcPayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_payer_key");

                entity.Property(e => e.SvcPayerName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_name");

                entity.Property(e => e.SvcSalesOrder)
                    .HasMaxLength(50)
                    .HasColumnName("svc_sales_order");

                entity.Property(e => e.SvcStartDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_start_date");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(250)
                    .HasColumnName("transaction_type");
            });

            modelBuilder.Entity<GmeEntityException>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_entity_exception");

                entity.Property(e => e.Attribute1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("attribute_1");

                entity.Property(e => e.Attribute2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("attribute_2");

                entity.Property(e => e.Attribute3)
                    .HasMaxLength(500)
                    .HasColumnName("attribute_3");

                entity.Property(e => e.Attribute4)
                    .HasMaxLength(500)
                    .HasColumnName("attribute_4");

                entity.Property(e => e.Attribute5).HasColumnName("attribute_5");

                entity.Property(e => e.Attribute6).HasColumnName("attribute_6");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("date")
                    .HasColumnName("created_date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Key1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("key_1");

                entity.Property(e => e.Key2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("key_2");

                entity.Property(e => e.Key3)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("key_3");

                entity.Property(e => e.Notes)
                    .HasMaxLength(1000)
                    .HasColumnName("notes");

                entity.Property(e => e.Status)
                    .HasMaxLength(10)
                    .HasColumnName("status")
                    .HasDefaultValueSql("('ACTIVE')");
            });

            modelBuilder.Entity<GmeFalsePositive>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_false_positive", "dev");

                entity.Property(e => e.Datasource)
                    .HasMaxLength(50)
                    .HasColumnName("datasource");

                entity.Property(e => e.EntityKey)
                    .HasMaxLength(50)
                    .HasColumnName("entity_key");

                entity.Property(e => e.EntityName)
                    .HasMaxLength(250)
                    .HasColumnName("entity_name");

                entity.Property(e => e.EntityParentKey)
                    .HasMaxLength(50)
                    .HasColumnName("entity_parent_key");

                entity.Property(e => e.EntityParentName)
                    .HasMaxLength(250)
                    .HasColumnName("entity_parent_name");

                entity.Property(e => e.ExceptionKey)
                    .HasMaxLength(50)
                    .HasColumnName("exception_key");

                entity.Property(e => e.ExceptionName)
                    .HasMaxLength(50)
                    .HasColumnName("exception_name");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.NsFlag)
                    .HasMaxLength(10)
                    .HasColumnName("ns_flag");
            });

            modelBuilder.Entity<GmeFilterAnalysis>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_filter_analysis", "dev");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.EcCountry)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ec_country");

                entity.Property(e => e.EcCustomer)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("ec_customer");

                entity.Property(e => e.EcSvcJaroScore).HasColumnName("ec_svc_jaro_score");

                entity.Property(e => e.MaxGblScore).HasColumnName("max_gbl_score");

                entity.Property(e => e.MspScore).HasColumnName("msp_score");

                entity.Property(e => e.ResEcJaroScore).HasColumnName("res_ec_jaro_score");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.SnCnt).HasColumnName("sn_cnt");

                entity.Property(e => e.SvcCountry)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("svc_country");

                entity.Property(e => e.SvcCustomer)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("svc_customer");
            });

            modelBuilder.Entity<GmeFilterAnalysis1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_filter_analysis1", "dev");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.EcCountry)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ec_country");

                entity.Property(e => e.EcCustomer)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("ec_customer");

                entity.Property(e => e.EcGblGroupCompare)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("ec_gbl_group_compare");

                entity.Property(e => e.EcGblJaroScore).HasColumnName("ec_gbl_jaro_score");

                entity.Property(e => e.EcSvcJaroScore).HasColumnName("ec_svc_jaro_score");

                entity.Property(e => e.MaxGblScore).HasColumnName("max_gbl_score");

                entity.Property(e => e.MspScore).HasColumnName("msp_score");

                entity.Property(e => e.ResEcJaroScore).HasColumnName("res_ec_jaro_score");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.SnCnt).HasColumnName("sn_cnt");

                entity.Property(e => e.SvcCountry)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("svc_country");

                entity.Property(e => e.SvcCustomer)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("svc_customer");
            });

            modelBuilder.Entity<GmeFilterAnalysisBak>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_filter_analysis_bak", "dev");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.EcCountry)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ec_country");

                entity.Property(e => e.EcCustomer)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("ec_customer");

                entity.Property(e => e.EcSvcJaroScore).HasColumnName("ec_svc_jaro_score");

                entity.Property(e => e.MaxGblScore).HasColumnName("max_gbl_score");

                entity.Property(e => e.MspScore).HasColumnName("msp_score");

                entity.Property(e => e.ResEcJaroScore).HasColumnName("res_ec_jaro_score");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.SvcCountry)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("svc_country");

                entity.Property(e => e.SvcCustomer)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("svc_customer");
            });

            modelBuilder.Entity<GmeFlagged>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_flagged");

                entity.HasIndex(e => new { e.SerialNumber, e.MaterialKey }, "gme_flagged_ndx1");

                entity.HasIndex(e => e.GmeFlag, "gme_flagged_ndx2");

                entity.HasIndex(e => e.ResellerName, "gme_flagged_ndx3");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("am_country_name");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("billto_district");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.BilltoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("billto_postal_code");

                entity.Property(e => e.BilltoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("billto_region");

                entity.Property(e => e.BilltoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street1");

                entity.Property(e => e.BilltoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street2");

                entity.Property(e => e.BilltoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street3");

                entity.Property(e => e.BilltoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street4");

                entity.Property(e => e.BilltoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street5");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .HasColumnName("claim_status");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("created_date");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_item");

                entity.Property(e => e.DiscPerc)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("disc_perc");

                entity.Property(e => e.DistiCity)
                    .HasMaxLength(255)
                    .HasColumnName("disti_city");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("disti_postal_code");

                entity.Property(e => e.DistiRegion)
                    .HasMaxLength(255)
                    .HasColumnName("disti_region");

                entity.Property(e => e.DistiStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street1");

                entity.Property(e => e.DistiStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street2");

                entity.Property(e => e.DistiStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street3");

                entity.Property(e => e.DistiStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street4");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(255)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.DrspPosId).HasColumnName("drsp_pos_id");

                entity.Property(e => e.EcSvcJaroScore).HasColumnName("ec_svc_jaro_score");

                entity.Property(e => e.EcSvcKeyFlag)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_key_flag");

                entity.Property(e => e.EcSvcSenzingScore).HasColumnName("ec_svc_senzing_score");

                entity.Property(e => e.EndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_city");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_postal_code");

                entity.Property(e => e.EndCustRegion)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_region");

                entity.Property(e => e.EndCustStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street1");

                entity.Property(e => e.EndCustStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street2");

                entity.Property(e => e.EndCustStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street3");

                entity.Property(e => e.EndCustStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street4");

                entity.Property(e => e.EndCustTheater)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_theater");

                entity.Property(e => e.EndUserStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("end_user_street5");

                entity.Property(e => e.EntityExceptionFlag)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("entity_exception_flag");

                entity.Property(e => e.GlobalAcctScore).HasColumnName("global_acct_score");

                entity.Property(e => e.GmeFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("gme_flag");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.MspAcctScore).HasColumnName("msp_acct_score");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.ProcessedFlag)
                    .HasMaxLength(50)
                    .HasColumnName("processed_flag");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("quote_id");

                entity.Property(e => e.ReportedQty).HasColumnName("reported_qty");

                entity.Property(e => e.ResEcJaroScore).HasColumnName("res_ec_jaro_score");

                entity.Property(e => e.ResEcKeyFlag)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("res_ec_key_flag");

                entity.Property(e => e.ResellerCity)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_city");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_postal_code");

                entity.Property(e => e.ResellerStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street1");

                entity.Property(e => e.ResellerStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street2");

                entity.Property(e => e.ResellerStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street3");

                entity.Property(e => e.ResellerStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street4");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.RmaNumber)
                    .HasMaxLength(50)
                    .HasColumnName("rma_number");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SerialNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number_orig");

                entity.Property(e => e.ShiptoCity)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_city");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShiptoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_postal_code");

                entity.Property(e => e.ShiptoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_region");

                entity.Property(e => e.ShiptoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street1");

                entity.Property(e => e.ShiptoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street2");

                entity.Property(e => e.ShiptoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street3");

                entity.Property(e => e.ShiptoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street4");

                entity.Property(e => e.ShiptoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street5");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("so_number_orig");

                entity.Property(e => e.SoType)
                    .HasMaxLength(250)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoCity)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_city");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SoldtoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_postal_code");

                entity.Property(e => e.SoldtoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street1");

                entity.Property(e => e.SoldtoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street2");

                entity.Property(e => e.SoldtoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street3");

                entity.Property(e => e.SoldtoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street4");

                entity.Property(e => e.SoldtoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street5");

                entity.Property(e => e.SourceImportId).HasColumnName("source_import_id");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.SvcBilltoCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("svc_billto_country_code");

                entity.Property(e => e.SvcBilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_billto_key");

                entity.Property(e => e.SvcBilltoName)
                    .HasMaxLength(50)
                    .HasColumnName("svc_billto_name");

                entity.Property(e => e.SvcContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_creation_date");

                entity.Property(e => e.SvcContractLineCreation)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_line_creation");

                entity.Property(e => e.SvcContractLineStatus)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_line_status");

                entity.Property(e => e.SvcContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_number");

                entity.Property(e => e.SvcContractStatus)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_status");

                entity.Property(e => e.SvcContractType)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_type");

                entity.Property(e => e.SvcCurrency)
                    .HasMaxLength(50)
                    .HasColumnName("svc_currency");

                entity.Property(e => e.SvcEndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_city");

                entity.Property(e => e.SvcEndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_country_code");

                entity.Property(e => e.SvcEndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_country_name");

                entity.Property(e => e.SvcEndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_key");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_name");

                entity.Property(e => e.SvcEndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_theater");

                entity.Property(e => e.SvcEndDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_end_date");

                entity.Property(e => e.SvcInstalledAtCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_country_code");

                entity.Property(e => e.SvcInstalledAtCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_installed_at_country_name");

                entity.Property(e => e.SvcInstalledAtDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_district");

                entity.Property(e => e.SvcInstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_installed_at_key");

                entity.Property(e => e.SvcInstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_name");

                entity.Property(e => e.SvcListValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_list_value");

                entity.Property(e => e.SvcMaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_desc");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcNetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_net_value");

                entity.Property(e => e.SvcPayerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_country");

                entity.Property(e => e.SvcPayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_payer_key");

                entity.Property(e => e.SvcPayerName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_name");

                entity.Property(e => e.SvcSalesOrder)
                    .HasMaxLength(50)
                    .HasColumnName("svc_sales_order");

                entity.Property(e => e.SvcStartDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_start_date");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(250)
                    .HasColumnName("transaction_type");
            });

            modelBuilder.Entity<GmeFlagged20180423>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_flagged_20180423");

                entity.HasIndex(e => new { e.SerialNumber, e.MaterialKey }, "gme_flagged_ndx1");

                entity.HasIndex(e => e.ResellerName, "gme_flagged_ndx2");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("am_country_name");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("billto_district");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.BilltoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("billto_postal_code");

                entity.Property(e => e.BilltoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("billto_region");

                entity.Property(e => e.BilltoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street1");

                entity.Property(e => e.BilltoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street2");

                entity.Property(e => e.BilltoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street3");

                entity.Property(e => e.BilltoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street4");

                entity.Property(e => e.BilltoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street5");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .HasColumnName("claim_status");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_item");

                entity.Property(e => e.DiscPerc)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("disc_perc");

                entity.Property(e => e.DistiCity)
                    .HasMaxLength(255)
                    .HasColumnName("disti_city");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("disti_postal_code");

                entity.Property(e => e.DistiRegion)
                    .HasMaxLength(255)
                    .HasColumnName("disti_region");

                entity.Property(e => e.DistiStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street1");

                entity.Property(e => e.DistiStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street2");

                entity.Property(e => e.DistiStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street3");

                entity.Property(e => e.DistiStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street4");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(250)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.DrspPosId).HasColumnName("drsp_pos_id");

                entity.Property(e => e.EcSvcJaroScore).HasColumnName("ec_svc_jaro_score");

                entity.Property(e => e.EcSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_key_flag");

                entity.Property(e => e.EcSvcSamegidFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_samegid_flag");

                entity.Property(e => e.EcSvcSenzingScore).HasColumnName("ec_svc_senzing_score");

                entity.Property(e => e.EndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_city");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_postal_code");

                entity.Property(e => e.EndCustRegion)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_region");

                entity.Property(e => e.EndCustStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street1");

                entity.Property(e => e.EndCustStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street2");

                entity.Property(e => e.EndCustStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street3");

                entity.Property(e => e.EndCustStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street4");

                entity.Property(e => e.EndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("end_cust_theater");

                entity.Property(e => e.EndUserStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("end_user_street5");

                entity.Property(e => e.EntityExceptionFlag)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("entity_exception_flag");

                entity.Property(e => e.GlobalAcctScore).HasColumnName("global_acct_score");

                entity.Property(e => e.GmeFlag)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("gme_flag");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.MspAcctScore).HasColumnName("msp_acct_score");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.ProcessedFlag)
                    .HasMaxLength(50)
                    .HasColumnName("processed_flag");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("quote_id");

                entity.Property(e => e.ReportedQty).HasColumnName("reported_qty");

                entity.Property(e => e.ResEcJaroScore).HasColumnName("res_ec_jaro_score");

                entity.Property(e => e.ResEcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_ec_key_flag");

                entity.Property(e => e.ResellerCity)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_city");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_postal_code");

                entity.Property(e => e.ResellerStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street1");

                entity.Property(e => e.ResellerStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street2");

                entity.Property(e => e.ResellerStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street3");

                entity.Property(e => e.ResellerStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street4");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.RmaNumber)
                    .HasMaxLength(50)
                    .HasColumnName("rma_number");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SerialNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number_orig");

                entity.Property(e => e.ShiptoCity)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_city");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShiptoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_postal_code");

                entity.Property(e => e.ShiptoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_region");

                entity.Property(e => e.ShiptoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street1");

                entity.Property(e => e.ShiptoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street2");

                entity.Property(e => e.ShiptoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street3");

                entity.Property(e => e.ShiptoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street4");

                entity.Property(e => e.ShiptoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street5");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("so_number_orig");

                entity.Property(e => e.SoType)
                    .HasMaxLength(250)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoCity)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_city");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SoldtoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_postal_code");

                entity.Property(e => e.SoldtoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street1");

                entity.Property(e => e.SoldtoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street2");

                entity.Property(e => e.SoldtoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street3");

                entity.Property(e => e.SoldtoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street4");

                entity.Property(e => e.SoldtoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street5");

                entity.Property(e => e.SourceImportId).HasColumnName("source_import_id");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.SvcBilltoCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("svc_billto_country_code");

                entity.Property(e => e.SvcBilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_billto_key");

                entity.Property(e => e.SvcBilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_billto_name");

                entity.Property(e => e.SvcContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_creation_date");

                entity.Property(e => e.SvcContractLineCreation)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_line_creation");

                entity.Property(e => e.SvcContractLineStatus)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_line_status");

                entity.Property(e => e.SvcContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_number");

                entity.Property(e => e.SvcContractStatus)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_status");

                entity.Property(e => e.SvcContractType)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_type");

                entity.Property(e => e.SvcCurrency)
                    .HasMaxLength(50)
                    .HasColumnName("svc_currency");

                entity.Property(e => e.SvcEndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_city");

                entity.Property(e => e.SvcEndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_country_code");

                entity.Property(e => e.SvcEndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_country_name");

                entity.Property(e => e.SvcEndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_key");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_name");

                entity.Property(e => e.SvcEndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_theater");

                entity.Property(e => e.SvcEndDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_end_date");

                entity.Property(e => e.SvcInstalledAtCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_country_code");

                entity.Property(e => e.SvcInstalledAtCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_installed_at_country_name");

                entity.Property(e => e.SvcInstalledAtDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_district");

                entity.Property(e => e.SvcInstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_installed_at_key");

                entity.Property(e => e.SvcInstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_name");

                entity.Property(e => e.SvcListValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_list_value");

                entity.Property(e => e.SvcMaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_desc");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcNetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_net_value");

                entity.Property(e => e.SvcPayerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_country");

                entity.Property(e => e.SvcPayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_payer_key");

                entity.Property(e => e.SvcPayerName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_name");

                entity.Property(e => e.SvcSalesOrder)
                    .HasMaxLength(50)
                    .HasColumnName("svc_sales_order");

                entity.Property(e => e.SvcStartDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_start_date");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(250)
                    .HasColumnName("transaction_type");
            });

            modelBuilder.Entity<GmeFlagged20180515>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_flagged_20180515");

                entity.HasIndex(e => new { e.SerialNumber, e.MaterialKey }, "gme_flagged_ndx1");

                entity.HasIndex(e => e.ResellerName, "gme_flagged_ndx2");

                entity.HasIndex(e => e.GmeFlag, "gme_flagged_ndx3");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("am_country_name");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("billto_district");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.BilltoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("billto_postal_code");

                entity.Property(e => e.BilltoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("billto_region");

                entity.Property(e => e.BilltoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street1");

                entity.Property(e => e.BilltoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street2");

                entity.Property(e => e.BilltoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street3");

                entity.Property(e => e.BilltoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street4");

                entity.Property(e => e.BilltoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street5");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .HasColumnName("claim_status");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_item");

                entity.Property(e => e.DiscPerc)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("disc_perc");

                entity.Property(e => e.DistiCity)
                    .HasMaxLength(255)
                    .HasColumnName("disti_city");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("disti_postal_code");

                entity.Property(e => e.DistiRegion)
                    .HasMaxLength(255)
                    .HasColumnName("disti_region");

                entity.Property(e => e.DistiStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street1");

                entity.Property(e => e.DistiStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street2");

                entity.Property(e => e.DistiStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street3");

                entity.Property(e => e.DistiStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street4");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(250)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.DrspPosId).HasColumnName("drsp_pos_id");

                entity.Property(e => e.EcSvcJaroScore).HasColumnName("ec_svc_jaro_score");

                entity.Property(e => e.EcSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_key_flag");

                entity.Property(e => e.EcSvcSamegidFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_samegid_flag");

                entity.Property(e => e.EcSvcSenzingScore).HasColumnName("ec_svc_senzing_score");

                entity.Property(e => e.EndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_city");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_postal_code");

                entity.Property(e => e.EndCustRegion)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_region");

                entity.Property(e => e.EndCustStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street1");

                entity.Property(e => e.EndCustStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street2");

                entity.Property(e => e.EndCustStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street3");

                entity.Property(e => e.EndCustStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street4");

                entity.Property(e => e.EndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("end_cust_theater");

                entity.Property(e => e.EndUserStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("end_user_street5");

                entity.Property(e => e.EntityExceptionFlag)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("entity_exception_flag");

                entity.Property(e => e.GlobalAcctScore).HasColumnName("global_acct_score");

                entity.Property(e => e.GmeFlag)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("gme_flag");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.MspAcctScore).HasColumnName("msp_acct_score");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.ProcessedFlag)
                    .HasMaxLength(50)
                    .HasColumnName("processed_flag");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("quote_id");

                entity.Property(e => e.ReportedQty).HasColumnName("reported_qty");

                entity.Property(e => e.ResEcJaroScore).HasColumnName("res_ec_jaro_score");

                entity.Property(e => e.ResEcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_ec_key_flag");

                entity.Property(e => e.ResellerCity)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_city");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_postal_code");

                entity.Property(e => e.ResellerStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street1");

                entity.Property(e => e.ResellerStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street2");

                entity.Property(e => e.ResellerStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street3");

                entity.Property(e => e.ResellerStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street4");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.RmaNumber)
                    .HasMaxLength(50)
                    .HasColumnName("rma_number");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SerialNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number_orig");

                entity.Property(e => e.ShiptoCity)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_city");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShiptoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_postal_code");

                entity.Property(e => e.ShiptoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_region");

                entity.Property(e => e.ShiptoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street1");

                entity.Property(e => e.ShiptoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street2");

                entity.Property(e => e.ShiptoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street3");

                entity.Property(e => e.ShiptoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street4");

                entity.Property(e => e.ShiptoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street5");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("so_number_orig");

                entity.Property(e => e.SoType)
                    .HasMaxLength(250)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoCity)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_city");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SoldtoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_postal_code");

                entity.Property(e => e.SoldtoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street1");

                entity.Property(e => e.SoldtoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street2");

                entity.Property(e => e.SoldtoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street3");

                entity.Property(e => e.SoldtoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street4");

                entity.Property(e => e.SoldtoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street5");

                entity.Property(e => e.SourceImportId).HasColumnName("source_import_id");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.SvcBilltoCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("svc_billto_country_code");

                entity.Property(e => e.SvcBilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_billto_key");

                entity.Property(e => e.SvcBilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_billto_name");

                entity.Property(e => e.SvcContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_creation_date");

                entity.Property(e => e.SvcContractLineCreation)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_line_creation");

                entity.Property(e => e.SvcContractLineStatus)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_line_status");

                entity.Property(e => e.SvcContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_number");

                entity.Property(e => e.SvcContractStatus)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_status");

                entity.Property(e => e.SvcContractType)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_type");

                entity.Property(e => e.SvcCurrency)
                    .HasMaxLength(50)
                    .HasColumnName("svc_currency");

                entity.Property(e => e.SvcEndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_city");

                entity.Property(e => e.SvcEndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_country_code");

                entity.Property(e => e.SvcEndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_country_name");

                entity.Property(e => e.SvcEndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_key");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_name");

                entity.Property(e => e.SvcEndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_theater");

                entity.Property(e => e.SvcEndDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_end_date");

                entity.Property(e => e.SvcInstalledAtCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_country_code");

                entity.Property(e => e.SvcInstalledAtCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_installed_at_country_name");

                entity.Property(e => e.SvcInstalledAtDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_district");

                entity.Property(e => e.SvcInstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_installed_at_key");

                entity.Property(e => e.SvcInstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_name");

                entity.Property(e => e.SvcListValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_list_value");

                entity.Property(e => e.SvcMaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_desc");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcNetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_net_value");

                entity.Property(e => e.SvcPayerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_country");

                entity.Property(e => e.SvcPayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_payer_key");

                entity.Property(e => e.SvcPayerName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_name");

                entity.Property(e => e.SvcSalesOrder)
                    .HasMaxLength(50)
                    .HasColumnName("svc_sales_order");

                entity.Property(e => e.SvcStartDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_start_date");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(250)
                    .HasColumnName("transaction_type");
            });

            modelBuilder.Entity<GmeFlagged20180516>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_flagged_20180516");

                entity.HasIndex(e => new { e.SerialNumber, e.MaterialKey }, "gme_flagged_ndx1");

                entity.HasIndex(e => e.ResellerName, "gme_flagged_ndx2");

                entity.HasIndex(e => e.GmeFlag, "gme_flagged_ndx3");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("am_country_name");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("billto_district");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.BilltoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("billto_postal_code");

                entity.Property(e => e.BilltoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("billto_region");

                entity.Property(e => e.BilltoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street1");

                entity.Property(e => e.BilltoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street2");

                entity.Property(e => e.BilltoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street3");

                entity.Property(e => e.BilltoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street4");

                entity.Property(e => e.BilltoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street5");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .HasColumnName("claim_status");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_item");

                entity.Property(e => e.DiscPerc)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("disc_perc");

                entity.Property(e => e.DistiCity)
                    .HasMaxLength(255)
                    .HasColumnName("disti_city");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("disti_postal_code");

                entity.Property(e => e.DistiRegion)
                    .HasMaxLength(255)
                    .HasColumnName("disti_region");

                entity.Property(e => e.DistiStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street1");

                entity.Property(e => e.DistiStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street2");

                entity.Property(e => e.DistiStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street3");

                entity.Property(e => e.DistiStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street4");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(250)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.DrspPosId).HasColumnName("drsp_pos_id");

                entity.Property(e => e.EcSvcJaroScore).HasColumnName("ec_svc_jaro_score");

                entity.Property(e => e.EcSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_key_flag");

                entity.Property(e => e.EcSvcSamegidFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_samegid_flag");

                entity.Property(e => e.EcSvcSenzingScore).HasColumnName("ec_svc_senzing_score");

                entity.Property(e => e.EndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_city");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_postal_code");

                entity.Property(e => e.EndCustRegion)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_region");

                entity.Property(e => e.EndCustStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street1");

                entity.Property(e => e.EndCustStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street2");

                entity.Property(e => e.EndCustStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street3");

                entity.Property(e => e.EndCustStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street4");

                entity.Property(e => e.EndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("end_cust_theater");

                entity.Property(e => e.EndUserStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("end_user_street5");

                entity.Property(e => e.EntityExceptionFlag)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("entity_exception_flag");

                entity.Property(e => e.GlobalAcctScore).HasColumnName("global_acct_score");

                entity.Property(e => e.GmeFlag)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("gme_flag");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.MspAcctScore).HasColumnName("msp_acct_score");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.ProcessedFlag)
                    .HasMaxLength(50)
                    .HasColumnName("processed_flag");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("quote_id");

                entity.Property(e => e.ReportedQty).HasColumnName("reported_qty");

                entity.Property(e => e.ResEcJaroScore).HasColumnName("res_ec_jaro_score");

                entity.Property(e => e.ResEcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_ec_key_flag");

                entity.Property(e => e.ResellerCity)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_city");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_postal_code");

                entity.Property(e => e.ResellerStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street1");

                entity.Property(e => e.ResellerStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street2");

                entity.Property(e => e.ResellerStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street3");

                entity.Property(e => e.ResellerStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street4");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.RmaNumber)
                    .HasMaxLength(50)
                    .HasColumnName("rma_number");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SerialNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number_orig");

                entity.Property(e => e.ShiptoCity)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_city");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShiptoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_postal_code");

                entity.Property(e => e.ShiptoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_region");

                entity.Property(e => e.ShiptoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street1");

                entity.Property(e => e.ShiptoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street2");

                entity.Property(e => e.ShiptoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street3");

                entity.Property(e => e.ShiptoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street4");

                entity.Property(e => e.ShiptoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street5");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("so_number_orig");

                entity.Property(e => e.SoType)
                    .HasMaxLength(250)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoCity)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_city");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SoldtoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_postal_code");

                entity.Property(e => e.SoldtoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street1");

                entity.Property(e => e.SoldtoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street2");

                entity.Property(e => e.SoldtoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street3");

                entity.Property(e => e.SoldtoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street4");

                entity.Property(e => e.SoldtoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street5");

                entity.Property(e => e.SourceImportId).HasColumnName("source_import_id");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.SvcBilltoCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("svc_billto_country_code");

                entity.Property(e => e.SvcBilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_billto_key");

                entity.Property(e => e.SvcBilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_billto_name");

                entity.Property(e => e.SvcContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_creation_date");

                entity.Property(e => e.SvcContractLineCreation)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_line_creation");

                entity.Property(e => e.SvcContractLineStatus)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_line_status");

                entity.Property(e => e.SvcContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_number");

                entity.Property(e => e.SvcContractStatus)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_status");

                entity.Property(e => e.SvcContractType)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_type");

                entity.Property(e => e.SvcCurrency)
                    .HasMaxLength(50)
                    .HasColumnName("svc_currency");

                entity.Property(e => e.SvcEndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_city");

                entity.Property(e => e.SvcEndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_country_code");

                entity.Property(e => e.SvcEndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_country_name");

                entity.Property(e => e.SvcEndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_key");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_name");

                entity.Property(e => e.SvcEndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_theater");

                entity.Property(e => e.SvcEndDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_end_date");

                entity.Property(e => e.SvcInstalledAtCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_country_code");

                entity.Property(e => e.SvcInstalledAtCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_installed_at_country_name");

                entity.Property(e => e.SvcInstalledAtDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_district");

                entity.Property(e => e.SvcInstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_installed_at_key");

                entity.Property(e => e.SvcInstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_name");

                entity.Property(e => e.SvcListValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_list_value");

                entity.Property(e => e.SvcMaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_desc");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcNetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_net_value");

                entity.Property(e => e.SvcPayerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_country");

                entity.Property(e => e.SvcPayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_payer_key");

                entity.Property(e => e.SvcPayerName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_name");

                entity.Property(e => e.SvcSalesOrder)
                    .HasMaxLength(50)
                    .HasColumnName("svc_sales_order");

                entity.Property(e => e.SvcStartDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_start_date");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(250)
                    .HasColumnName("transaction_type");
            });

            modelBuilder.Entity<GmeFlagged20180520>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_flagged_20180520");

                entity.HasIndex(e => new { e.SerialNumber, e.MaterialKey }, "gme_flagged_ndx1");

                entity.HasIndex(e => e.ResellerName, "gme_flagged_ndx2");

                entity.HasIndex(e => e.GmeFlag, "gme_flagged_ndx3");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("am_country_name");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("billto_district");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.BilltoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("billto_postal_code");

                entity.Property(e => e.BilltoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("billto_region");

                entity.Property(e => e.BilltoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street1");

                entity.Property(e => e.BilltoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street2");

                entity.Property(e => e.BilltoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street3");

                entity.Property(e => e.BilltoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street4");

                entity.Property(e => e.BilltoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street5");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .HasColumnName("claim_status");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_item");

                entity.Property(e => e.DiscPerc)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("disc_perc");

                entity.Property(e => e.DistiCity)
                    .HasMaxLength(255)
                    .HasColumnName("disti_city");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("disti_postal_code");

                entity.Property(e => e.DistiRegion)
                    .HasMaxLength(255)
                    .HasColumnName("disti_region");

                entity.Property(e => e.DistiStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street1");

                entity.Property(e => e.DistiStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street2");

                entity.Property(e => e.DistiStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street3");

                entity.Property(e => e.DistiStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street4");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(250)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.DrspPosId).HasColumnName("drsp_pos_id");

                entity.Property(e => e.EcSvcJaroScore).HasColumnName("ec_svc_jaro_score");

                entity.Property(e => e.EcSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_key_flag");

                entity.Property(e => e.EcSvcSamegidFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_samegid_flag");

                entity.Property(e => e.EcSvcSenzingScore).HasColumnName("ec_svc_senzing_score");

                entity.Property(e => e.EndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_city");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_postal_code");

                entity.Property(e => e.EndCustRegion)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_region");

                entity.Property(e => e.EndCustStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street1");

                entity.Property(e => e.EndCustStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street2");

                entity.Property(e => e.EndCustStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street3");

                entity.Property(e => e.EndCustStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street4");

                entity.Property(e => e.EndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("end_cust_theater");

                entity.Property(e => e.EndUserStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("end_user_street5");

                entity.Property(e => e.EntityExceptionFlag)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("entity_exception_flag");

                entity.Property(e => e.EntityRelatedFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("entity_related_flag");

                entity.Property(e => e.GlobalAcctScore).HasColumnName("global_acct_score");

                entity.Property(e => e.GmeFlag)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("gme_flag");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.MspAcctScore).HasColumnName("msp_acct_score");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.ProcessedFlag)
                    .HasMaxLength(50)
                    .HasColumnName("processed_flag");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("quote_id");

                entity.Property(e => e.ReportedQty).HasColumnName("reported_qty");

                entity.Property(e => e.ResEcJaroScore).HasColumnName("res_ec_jaro_score");

                entity.Property(e => e.ResEcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_ec_key_flag");

                entity.Property(e => e.ResellerCity)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_city");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_postal_code");

                entity.Property(e => e.ResellerStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street1");

                entity.Property(e => e.ResellerStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street2");

                entity.Property(e => e.ResellerStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street3");

                entity.Property(e => e.ResellerStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street4");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.RmaNumber)
                    .HasMaxLength(50)
                    .HasColumnName("rma_number");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SerialNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number_orig");

                entity.Property(e => e.ShiptoCity)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_city");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShiptoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_postal_code");

                entity.Property(e => e.ShiptoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_region");

                entity.Property(e => e.ShiptoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street1");

                entity.Property(e => e.ShiptoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street2");

                entity.Property(e => e.ShiptoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street3");

                entity.Property(e => e.ShiptoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street4");

                entity.Property(e => e.ShiptoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street5");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("so_number_orig");

                entity.Property(e => e.SoType)
                    .HasMaxLength(250)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoCity)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_city");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SoldtoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_postal_code");

                entity.Property(e => e.SoldtoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street1");

                entity.Property(e => e.SoldtoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street2");

                entity.Property(e => e.SoldtoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street3");

                entity.Property(e => e.SoldtoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street4");

                entity.Property(e => e.SoldtoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street5");

                entity.Property(e => e.SourceImportId).HasColumnName("source_import_id");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.SvcBilltoCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("svc_billto_country_code");

                entity.Property(e => e.SvcBilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_billto_key");

                entity.Property(e => e.SvcBilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_billto_name");

                entity.Property(e => e.SvcContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_creation_date");

                entity.Property(e => e.SvcContractLineCreation)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_line_creation");

                entity.Property(e => e.SvcContractLineStatus)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_line_status");

                entity.Property(e => e.SvcContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_number");

                entity.Property(e => e.SvcContractStatus)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_status");

                entity.Property(e => e.SvcContractType)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_type");

                entity.Property(e => e.SvcCurrency)
                    .HasMaxLength(50)
                    .HasColumnName("svc_currency");

                entity.Property(e => e.SvcEndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_city");

                entity.Property(e => e.SvcEndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_country_code");

                entity.Property(e => e.SvcEndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_country_name");

                entity.Property(e => e.SvcEndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_key");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_name");

                entity.Property(e => e.SvcEndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_theater");

                entity.Property(e => e.SvcEndDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_end_date");

                entity.Property(e => e.SvcInstalledAtCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_country_code");

                entity.Property(e => e.SvcInstalledAtCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_installed_at_country_name");

                entity.Property(e => e.SvcInstalledAtDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_district");

                entity.Property(e => e.SvcInstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_installed_at_key");

                entity.Property(e => e.SvcInstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_name");

                entity.Property(e => e.SvcListValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_list_value");

                entity.Property(e => e.SvcMaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_desc");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcNetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_net_value");

                entity.Property(e => e.SvcPayerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_country");

                entity.Property(e => e.SvcPayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_payer_key");

                entity.Property(e => e.SvcPayerName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_name");

                entity.Property(e => e.SvcSalesOrder)
                    .HasMaxLength(50)
                    .HasColumnName("svc_sales_order");

                entity.Property(e => e.SvcStartDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_start_date");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(250)
                    .HasColumnName("transaction_type");
            });

            modelBuilder.Entity<GmeFlagged20180522>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_flagged_20180522");

                entity.HasIndex(e => new { e.SerialNumber, e.MaterialKey }, "gme_flagged_ndx1");

                entity.HasIndex(e => e.ResellerName, "gme_flagged_ndx2");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("am_country_name");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("billto_district");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.BilltoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("billto_postal_code");

                entity.Property(e => e.BilltoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("billto_region");

                entity.Property(e => e.BilltoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street1");

                entity.Property(e => e.BilltoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street2");

                entity.Property(e => e.BilltoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street3");

                entity.Property(e => e.BilltoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street4");

                entity.Property(e => e.BilltoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street5");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .HasColumnName("claim_status");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_item");

                entity.Property(e => e.DiscPerc)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("disc_perc");

                entity.Property(e => e.DistiCity)
                    .HasMaxLength(255)
                    .HasColumnName("disti_city");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("disti_postal_code");

                entity.Property(e => e.DistiRegion)
                    .HasMaxLength(255)
                    .HasColumnName("disti_region");

                entity.Property(e => e.DistiStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street1");

                entity.Property(e => e.DistiStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street2");

                entity.Property(e => e.DistiStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street3");

                entity.Property(e => e.DistiStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street4");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(250)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.DrspPosId).HasColumnName("drsp_pos_id");

                entity.Property(e => e.EcSvcJaroScore).HasColumnName("ec_svc_jaro_score");

                entity.Property(e => e.EcSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_key_flag");

                entity.Property(e => e.EcSvcSamegidFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_samegid_flag");

                entity.Property(e => e.EcSvcSenzingScore).HasColumnName("ec_svc_senzing_score");

                entity.Property(e => e.EndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_city");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_postal_code");

                entity.Property(e => e.EndCustRegion)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_region");

                entity.Property(e => e.EndCustStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street1");

                entity.Property(e => e.EndCustStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street2");

                entity.Property(e => e.EndCustStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street3");

                entity.Property(e => e.EndCustStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street4");

                entity.Property(e => e.EndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("end_cust_theater");

                entity.Property(e => e.EndUserStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("end_user_street5");

                entity.Property(e => e.EntityExceptionFlag)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("entity_exception_flag");

                entity.Property(e => e.EntityRelatedFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("entity_related_flag");

                entity.Property(e => e.GlobalAcctScore).HasColumnName("global_acct_score");

                entity.Property(e => e.GmeFlag)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("gme_flag");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.MspAcctScore).HasColumnName("msp_acct_score");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.ProcessedFlag)
                    .HasMaxLength(50)
                    .HasColumnName("processed_flag");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("quote_id");

                entity.Property(e => e.ReportedQty).HasColumnName("reported_qty");

                entity.Property(e => e.ResEcJaroScore).HasColumnName("res_ec_jaro_score");

                entity.Property(e => e.ResEcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_ec_key_flag");

                entity.Property(e => e.ResellerCity)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_city");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_postal_code");

                entity.Property(e => e.ResellerStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street1");

                entity.Property(e => e.ResellerStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street2");

                entity.Property(e => e.ResellerStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street3");

                entity.Property(e => e.ResellerStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street4");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.RmaNumber)
                    .HasMaxLength(50)
                    .HasColumnName("rma_number");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SerialNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number_orig");

                entity.Property(e => e.ShiptoCity)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_city");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShiptoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_postal_code");

                entity.Property(e => e.ShiptoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_region");

                entity.Property(e => e.ShiptoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street1");

                entity.Property(e => e.ShiptoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street2");

                entity.Property(e => e.ShiptoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street3");

                entity.Property(e => e.ShiptoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street4");

                entity.Property(e => e.ShiptoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street5");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("so_number_orig");

                entity.Property(e => e.SoType)
                    .HasMaxLength(250)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoCity)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_city");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SoldtoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_postal_code");

                entity.Property(e => e.SoldtoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street1");

                entity.Property(e => e.SoldtoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street2");

                entity.Property(e => e.SoldtoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street3");

                entity.Property(e => e.SoldtoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street4");

                entity.Property(e => e.SoldtoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street5");

                entity.Property(e => e.SourceImportId).HasColumnName("source_import_id");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.SvcBilltoCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("svc_billto_country_code");

                entity.Property(e => e.SvcBilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_billto_key");

                entity.Property(e => e.SvcBilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_billto_name");

                entity.Property(e => e.SvcContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_creation_date");

                entity.Property(e => e.SvcContractLineCreation)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_line_creation");

                entity.Property(e => e.SvcContractLineStatus)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_line_status");

                entity.Property(e => e.SvcContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_number");

                entity.Property(e => e.SvcContractStatus)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_status");

                entity.Property(e => e.SvcContractType)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_type");

                entity.Property(e => e.SvcCurrency)
                    .HasMaxLength(50)
                    .HasColumnName("svc_currency");

                entity.Property(e => e.SvcEndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_city");

                entity.Property(e => e.SvcEndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_country_code");

                entity.Property(e => e.SvcEndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_country_name");

                entity.Property(e => e.SvcEndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_key");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_name");

                entity.Property(e => e.SvcEndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_theater");

                entity.Property(e => e.SvcEndDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_end_date");

                entity.Property(e => e.SvcInstalledAtCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_country_code");

                entity.Property(e => e.SvcInstalledAtCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_installed_at_country_name");

                entity.Property(e => e.SvcInstalledAtDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_district");

                entity.Property(e => e.SvcInstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_installed_at_key");

                entity.Property(e => e.SvcInstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_name");

                entity.Property(e => e.SvcListValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_list_value");

                entity.Property(e => e.SvcMaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_desc");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcNetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_net_value");

                entity.Property(e => e.SvcPayerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_country");

                entity.Property(e => e.SvcPayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_payer_key");

                entity.Property(e => e.SvcPayerName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_name");

                entity.Property(e => e.SvcSalesOrder)
                    .HasMaxLength(50)
                    .HasColumnName("svc_sales_order");

                entity.Property(e => e.SvcStartDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_start_date");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(250)
                    .HasColumnName("transaction_type");
            });

            modelBuilder.Entity<GmeFlagged20180529>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_flagged_20180529");

                entity.HasIndex(e => new { e.SerialNumber, e.MaterialKey }, "gme_flagged_ndx1");

                entity.HasIndex(e => e.ResellerName, "gme_flagged_ndx2");

                entity.HasIndex(e => e.GmeFlag, "gme_flagged_ndx3");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("am_country_name");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("billto_district");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.BilltoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("billto_postal_code");

                entity.Property(e => e.BilltoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("billto_region");

                entity.Property(e => e.BilltoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street1");

                entity.Property(e => e.BilltoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street2");

                entity.Property(e => e.BilltoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street3");

                entity.Property(e => e.BilltoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street4");

                entity.Property(e => e.BilltoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street5");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .HasColumnName("claim_status");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_item");

                entity.Property(e => e.DiscPerc)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("disc_perc");

                entity.Property(e => e.DistiCity)
                    .HasMaxLength(255)
                    .HasColumnName("disti_city");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("disti_postal_code");

                entity.Property(e => e.DistiRegion)
                    .HasMaxLength(255)
                    .HasColumnName("disti_region");

                entity.Property(e => e.DistiStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street1");

                entity.Property(e => e.DistiStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street2");

                entity.Property(e => e.DistiStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street3");

                entity.Property(e => e.DistiStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street4");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(250)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.DrspPosId).HasColumnName("drsp_pos_id");

                entity.Property(e => e.EcSvcJaroScore).HasColumnName("ec_svc_jaro_score");

                entity.Property(e => e.EcSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_key_flag");

                entity.Property(e => e.EcSvcSamegidFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_samegid_flag");

                entity.Property(e => e.EcSvcSenzingScore).HasColumnName("ec_svc_senzing_score");

                entity.Property(e => e.EndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_city");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_postal_code");

                entity.Property(e => e.EndCustRegion)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_region");

                entity.Property(e => e.EndCustStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street1");

                entity.Property(e => e.EndCustStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street2");

                entity.Property(e => e.EndCustStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street3");

                entity.Property(e => e.EndCustStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street4");

                entity.Property(e => e.EndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("end_cust_theater");

                entity.Property(e => e.EndUserStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("end_user_street5");

                entity.Property(e => e.EntityExceptionFlag)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("entity_exception_flag");

                entity.Property(e => e.EntityRelatedFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("entity_related_flag");

                entity.Property(e => e.GlobalAcctScore).HasColumnName("global_acct_score");

                entity.Property(e => e.GmeFlag)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("gme_flag");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.MspAcctScore).HasColumnName("msp_acct_score");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.ProcessedFlag)
                    .HasMaxLength(50)
                    .HasColumnName("processed_flag");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("quote_id");

                entity.Property(e => e.ReportedQty).HasColumnName("reported_qty");

                entity.Property(e => e.ResEcJaroScore).HasColumnName("res_ec_jaro_score");

                entity.Property(e => e.ResEcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_ec_key_flag");

                entity.Property(e => e.ResSvcEntityRelatedFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("res_svc_entity_related_flag");

                entity.Property(e => e.ResSvcJaroScore).HasColumnName("res_svc_jaro_score");

                entity.Property(e => e.ResSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_svc_key_flag");

                entity.Property(e => e.ResellerCity)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_city");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_postal_code");

                entity.Property(e => e.ResellerStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street1");

                entity.Property(e => e.ResellerStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street2");

                entity.Property(e => e.ResellerStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street3");

                entity.Property(e => e.ResellerStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street4");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.RmaNumber)
                    .HasMaxLength(50)
                    .HasColumnName("rma_number");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SerialNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number_orig");

                entity.Property(e => e.ShiptoCity)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_city");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShiptoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_postal_code");

                entity.Property(e => e.ShiptoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_region");

                entity.Property(e => e.ShiptoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street1");

                entity.Property(e => e.ShiptoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street2");

                entity.Property(e => e.ShiptoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street3");

                entity.Property(e => e.ShiptoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street4");

                entity.Property(e => e.ShiptoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street5");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("so_number_orig");

                entity.Property(e => e.SoType)
                    .HasMaxLength(250)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoCity)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_city");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SoldtoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_postal_code");

                entity.Property(e => e.SoldtoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street1");

                entity.Property(e => e.SoldtoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street2");

                entity.Property(e => e.SoldtoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street3");

                entity.Property(e => e.SoldtoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street4");

                entity.Property(e => e.SoldtoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street5");

                entity.Property(e => e.SourceImportId).HasColumnName("source_import_id");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.SvcBilltoCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("svc_billto_country_code");

                entity.Property(e => e.SvcBilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_billto_key");

                entity.Property(e => e.SvcBilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_billto_name");

                entity.Property(e => e.SvcContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_creation_date");

                entity.Property(e => e.SvcContractLineCreation)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_line_creation");

                entity.Property(e => e.SvcContractLineStatus)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_line_status");

                entity.Property(e => e.SvcContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_number");

                entity.Property(e => e.SvcContractStatus)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_status");

                entity.Property(e => e.SvcContractType)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_type");

                entity.Property(e => e.SvcCurrency)
                    .HasMaxLength(50)
                    .HasColumnName("svc_currency");

                entity.Property(e => e.SvcEndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_city");

                entity.Property(e => e.SvcEndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_country_code");

                entity.Property(e => e.SvcEndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_country_name");

                entity.Property(e => e.SvcEndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_key");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_name");

                entity.Property(e => e.SvcEndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_theater");

                entity.Property(e => e.SvcEndDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_end_date");

                entity.Property(e => e.SvcInstalledAtCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_country_code");

                entity.Property(e => e.SvcInstalledAtCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_installed_at_country_name");

                entity.Property(e => e.SvcInstalledAtDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_district");

                entity.Property(e => e.SvcInstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_installed_at_key");

                entity.Property(e => e.SvcInstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_name");

                entity.Property(e => e.SvcListValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_list_value");

                entity.Property(e => e.SvcMaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_desc");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcNetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_net_value");

                entity.Property(e => e.SvcPayerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_country");

                entity.Property(e => e.SvcPayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_payer_key");

                entity.Property(e => e.SvcPayerName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_name");

                entity.Property(e => e.SvcSalesOrder)
                    .HasMaxLength(50)
                    .HasColumnName("svc_sales_order");

                entity.Property(e => e.SvcStartDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_start_date");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(250)
                    .HasColumnName("transaction_type");
            });

            modelBuilder.Entity<GmeFlagged20180626>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_flagged_20180626");

                entity.HasIndex(e => new { e.SerialNumber, e.MaterialKey }, "gme_flagged_ndx1");

                entity.HasIndex(e => e.ResellerName, "gme_flagged_ndx2");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("am_country_name");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("billto_district");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.BilltoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("billto_postal_code");

                entity.Property(e => e.BilltoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("billto_region");

                entity.Property(e => e.BilltoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street1");

                entity.Property(e => e.BilltoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street2");

                entity.Property(e => e.BilltoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street3");

                entity.Property(e => e.BilltoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street4");

                entity.Property(e => e.BilltoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street5");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .HasColumnName("claim_status");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_item");

                entity.Property(e => e.DiscPerc)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("disc_perc");

                entity.Property(e => e.DistiCity)
                    .HasMaxLength(255)
                    .HasColumnName("disti_city");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("disti_postal_code");

                entity.Property(e => e.DistiRegion)
                    .HasMaxLength(255)
                    .HasColumnName("disti_region");

                entity.Property(e => e.DistiStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street1");

                entity.Property(e => e.DistiStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street2");

                entity.Property(e => e.DistiStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street3");

                entity.Property(e => e.DistiStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street4");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(250)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.DrspPosId).HasColumnName("drsp_pos_id");

                entity.Property(e => e.EcSvcJaroScore).HasColumnName("ec_svc_jaro_score");

                entity.Property(e => e.EcSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_key_flag");

                entity.Property(e => e.EcSvcSamegidFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_samegid_flag");

                entity.Property(e => e.EcSvcSenzingScore).HasColumnName("ec_svc_senzing_score");

                entity.Property(e => e.EndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_city");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_postal_code");

                entity.Property(e => e.EndCustRegion)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_region");

                entity.Property(e => e.EndCustStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street1");

                entity.Property(e => e.EndCustStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street2");

                entity.Property(e => e.EndCustStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street3");

                entity.Property(e => e.EndCustStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street4");

                entity.Property(e => e.EndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("end_cust_theater");

                entity.Property(e => e.EndUserStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("end_user_street5");

                entity.Property(e => e.EntityExceptionFlag)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("entity_exception_flag");

                entity.Property(e => e.EntityRelatedFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("entity_related_flag");

                entity.Property(e => e.GlobalAcctScore).HasColumnName("global_acct_score");

                entity.Property(e => e.GmeFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("gme_flag");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.MspAcctScore).HasColumnName("msp_acct_score");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.ProcessedFlag)
                    .HasMaxLength(50)
                    .HasColumnName("processed_flag");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("quote_id");

                entity.Property(e => e.ReportedQty).HasColumnName("reported_qty");

                entity.Property(e => e.ResEcJaroScore).HasColumnName("res_ec_jaro_score");

                entity.Property(e => e.ResEcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_ec_key_flag");

                entity.Property(e => e.ResSvcEntityRelatedFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("res_svc_entity_related_flag");

                entity.Property(e => e.ResSvcJaroScore).HasColumnName("res_svc_jaro_score");

                entity.Property(e => e.ResSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_svc_key_flag");

                entity.Property(e => e.ResellerCity)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_city");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_postal_code");

                entity.Property(e => e.ResellerStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street1");

                entity.Property(e => e.ResellerStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street2");

                entity.Property(e => e.ResellerStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street3");

                entity.Property(e => e.ResellerStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street4");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.RmaNumber)
                    .HasMaxLength(50)
                    .HasColumnName("rma_number");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SerialNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number_orig");

                entity.Property(e => e.ShiptoCity)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_city");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShiptoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_postal_code");

                entity.Property(e => e.ShiptoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_region");

                entity.Property(e => e.ShiptoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street1");

                entity.Property(e => e.ShiptoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street2");

                entity.Property(e => e.ShiptoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street3");

                entity.Property(e => e.ShiptoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street4");

                entity.Property(e => e.ShiptoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street5");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("so_number_orig");

                entity.Property(e => e.SoType)
                    .HasMaxLength(250)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoCity)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_city");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SoldtoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_postal_code");

                entity.Property(e => e.SoldtoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street1");

                entity.Property(e => e.SoldtoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street2");

                entity.Property(e => e.SoldtoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street3");

                entity.Property(e => e.SoldtoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street4");

                entity.Property(e => e.SoldtoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street5");

                entity.Property(e => e.SourceImportId).HasColumnName("source_import_id");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.SvcBilltoCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("svc_billto_country_code");

                entity.Property(e => e.SvcBilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_billto_key");

                entity.Property(e => e.SvcBilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_billto_name");

                entity.Property(e => e.SvcContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_creation_date");

                entity.Property(e => e.SvcContractLineCreation)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_line_creation");

                entity.Property(e => e.SvcContractLineStatus)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_line_status");

                entity.Property(e => e.SvcContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_number");

                entity.Property(e => e.SvcContractStatus)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_status");

                entity.Property(e => e.SvcContractType)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_type");

                entity.Property(e => e.SvcCurrency)
                    .HasMaxLength(50)
                    .HasColumnName("svc_currency");

                entity.Property(e => e.SvcEndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_city");

                entity.Property(e => e.SvcEndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_country_code");

                entity.Property(e => e.SvcEndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_country_name");

                entity.Property(e => e.SvcEndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_key");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_name");

                entity.Property(e => e.SvcEndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_theater");

                entity.Property(e => e.SvcEndDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_end_date");

                entity.Property(e => e.SvcInstalledAtCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_country_code");

                entity.Property(e => e.SvcInstalledAtCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_installed_at_country_name");

                entity.Property(e => e.SvcInstalledAtDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_district");

                entity.Property(e => e.SvcInstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_installed_at_key");

                entity.Property(e => e.SvcInstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_name");

                entity.Property(e => e.SvcListValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_list_value");

                entity.Property(e => e.SvcMaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_desc");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcNetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_net_value");

                entity.Property(e => e.SvcPayerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_country");

                entity.Property(e => e.SvcPayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_payer_key");

                entity.Property(e => e.SvcPayerName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_name");

                entity.Property(e => e.SvcSalesOrder)
                    .HasMaxLength(50)
                    .HasColumnName("svc_sales_order");

                entity.Property(e => e.SvcStartDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_start_date");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(250)
                    .HasColumnName("transaction_type");
            });

            modelBuilder.Entity<GmeFlagged20180705>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_flagged_20180705");

                entity.HasIndex(e => new { e.SerialNumber, e.MaterialKey }, "gme_flagged_ndx1");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("am_country_name");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("billto_district");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.BilltoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("billto_postal_code");

                entity.Property(e => e.BilltoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("billto_region");

                entity.Property(e => e.BilltoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street1");

                entity.Property(e => e.BilltoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street2");

                entity.Property(e => e.BilltoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street3");

                entity.Property(e => e.BilltoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street4");

                entity.Property(e => e.BilltoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street5");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .HasColumnName("claim_status");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_item");

                entity.Property(e => e.DiscPerc)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("disc_perc");

                entity.Property(e => e.DistiCity)
                    .HasMaxLength(255)
                    .HasColumnName("disti_city");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("disti_postal_code");

                entity.Property(e => e.DistiRegion)
                    .HasMaxLength(255)
                    .HasColumnName("disti_region");

                entity.Property(e => e.DistiStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street1");

                entity.Property(e => e.DistiStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street2");

                entity.Property(e => e.DistiStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street3");

                entity.Property(e => e.DistiStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street4");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(250)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.DrspPosId).HasColumnName("drsp_pos_id");

                entity.Property(e => e.EcSvcJaroScore).HasColumnName("ec_svc_jaro_score");

                entity.Property(e => e.EcSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_key_flag");

                entity.Property(e => e.EcSvcSamegidFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_samegid_flag");

                entity.Property(e => e.EcSvcSenzingScore).HasColumnName("ec_svc_senzing_score");

                entity.Property(e => e.EndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_city");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_postal_code");

                entity.Property(e => e.EndCustRegion)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_region");

                entity.Property(e => e.EndCustStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street1");

                entity.Property(e => e.EndCustStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street2");

                entity.Property(e => e.EndCustStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street3");

                entity.Property(e => e.EndCustStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street4");

                entity.Property(e => e.EndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("end_cust_theater");

                entity.Property(e => e.EndUserStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("end_user_street5");

                entity.Property(e => e.EntityExceptionFlag)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("entity_exception_flag");

                entity.Property(e => e.EntityRelatedFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("entity_related_flag");

                entity.Property(e => e.GlobalAcctScore).HasColumnName("global_acct_score");

                entity.Property(e => e.GmeFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("gme_flag");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.MspAcctScore).HasColumnName("msp_acct_score");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.ProcessedFlag)
                    .HasMaxLength(50)
                    .HasColumnName("processed_flag");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("quote_id");

                entity.Property(e => e.ReportedQty).HasColumnName("reported_qty");

                entity.Property(e => e.ResEcJaroScore).HasColumnName("res_ec_jaro_score");

                entity.Property(e => e.ResEcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_ec_key_flag");

                entity.Property(e => e.ResSvcEntityRelatedFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("res_svc_entity_related_flag");

                entity.Property(e => e.ResSvcJaroScore).HasColumnName("res_svc_jaro_score");

                entity.Property(e => e.ResSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_svc_key_flag");

                entity.Property(e => e.ResellerCity)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_city");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_postal_code");

                entity.Property(e => e.ResellerStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street1");

                entity.Property(e => e.ResellerStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street2");

                entity.Property(e => e.ResellerStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street3");

                entity.Property(e => e.ResellerStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street4");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.RmaNumber)
                    .HasMaxLength(50)
                    .HasColumnName("rma_number");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SerialNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number_orig");

                entity.Property(e => e.ShiptoCity)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_city");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShiptoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_postal_code");

                entity.Property(e => e.ShiptoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_region");

                entity.Property(e => e.ShiptoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street1");

                entity.Property(e => e.ShiptoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street2");

                entity.Property(e => e.ShiptoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street3");

                entity.Property(e => e.ShiptoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street4");

                entity.Property(e => e.ShiptoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street5");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("so_number_orig");

                entity.Property(e => e.SoType)
                    .HasMaxLength(250)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoCity)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_city");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SoldtoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_postal_code");

                entity.Property(e => e.SoldtoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street1");

                entity.Property(e => e.SoldtoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street2");

                entity.Property(e => e.SoldtoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street3");

                entity.Property(e => e.SoldtoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street4");

                entity.Property(e => e.SoldtoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street5");

                entity.Property(e => e.SourceImportId).HasColumnName("source_import_id");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.SvcBilltoCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("svc_billto_country_code");

                entity.Property(e => e.SvcBilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_billto_key");

                entity.Property(e => e.SvcBilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_billto_name");

                entity.Property(e => e.SvcContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_creation_date");

                entity.Property(e => e.SvcContractLineCreation)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_line_creation");

                entity.Property(e => e.SvcContractLineStatus)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_line_status");

                entity.Property(e => e.SvcContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_number");

                entity.Property(e => e.SvcContractStatus)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_status");

                entity.Property(e => e.SvcContractType)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_type");

                entity.Property(e => e.SvcCurrency)
                    .HasMaxLength(50)
                    .HasColumnName("svc_currency");

                entity.Property(e => e.SvcEndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_city");

                entity.Property(e => e.SvcEndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_country_code");

                entity.Property(e => e.SvcEndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_country_name");

                entity.Property(e => e.SvcEndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_key");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_name");

                entity.Property(e => e.SvcEndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_theater");

                entity.Property(e => e.SvcEndDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_end_date");

                entity.Property(e => e.SvcInstalledAtCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_country_code");

                entity.Property(e => e.SvcInstalledAtCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_installed_at_country_name");

                entity.Property(e => e.SvcInstalledAtDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_district");

                entity.Property(e => e.SvcInstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_installed_at_key");

                entity.Property(e => e.SvcInstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_name");

                entity.Property(e => e.SvcListValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_list_value");

                entity.Property(e => e.SvcMaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_desc");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcNetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_net_value");

                entity.Property(e => e.SvcPayerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_country");

                entity.Property(e => e.SvcPayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_payer_key");

                entity.Property(e => e.SvcPayerName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_name");

                entity.Property(e => e.SvcSalesOrder)
                    .HasMaxLength(50)
                    .HasColumnName("svc_sales_order");

                entity.Property(e => e.SvcStartDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_start_date");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(250)
                    .HasColumnName("transaction_type");
            });

            modelBuilder.Entity<GmeFlagged20180829>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_flagged_20180829");

                entity.HasIndex(e => new { e.SerialNumber, e.MaterialKey }, "gme_flagged_20180829_sn");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("am_country_name");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("billto_district");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.BilltoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("billto_postal_code");

                entity.Property(e => e.BilltoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("billto_region");

                entity.Property(e => e.BilltoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street1");

                entity.Property(e => e.BilltoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street2");

                entity.Property(e => e.BilltoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street3");

                entity.Property(e => e.BilltoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street4");

                entity.Property(e => e.BilltoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street5");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .HasColumnName("claim_status");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_item");

                entity.Property(e => e.DiscPerc)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("disc_perc");

                entity.Property(e => e.DistiCity)
                    .HasMaxLength(255)
                    .HasColumnName("disti_city");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("disti_postal_code");

                entity.Property(e => e.DistiRegion)
                    .HasMaxLength(255)
                    .HasColumnName("disti_region");

                entity.Property(e => e.DistiStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street1");

                entity.Property(e => e.DistiStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street2");

                entity.Property(e => e.DistiStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street3");

                entity.Property(e => e.DistiStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street4");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(250)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.DrspPosId).HasColumnName("drsp_pos_id");

                entity.Property(e => e.EcSvcJaroScore).HasColumnName("ec_svc_jaro_score");

                entity.Property(e => e.EcSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_key_flag");

                entity.Property(e => e.EcSvcSamegidFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_samegid_flag");

                entity.Property(e => e.EcSvcSenzingScore).HasColumnName("ec_svc_senzing_score");

                entity.Property(e => e.EndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_city");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_postal_code");

                entity.Property(e => e.EndCustRegion)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_region");

                entity.Property(e => e.EndCustStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street1");

                entity.Property(e => e.EndCustStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street2");

                entity.Property(e => e.EndCustStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street3");

                entity.Property(e => e.EndCustStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street4");

                entity.Property(e => e.EndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("end_cust_theater");

                entity.Property(e => e.EndUserStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("end_user_street5");

                entity.Property(e => e.EntityExceptionFlag)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("entity_exception_flag");

                entity.Property(e => e.EntityRelatedFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("entity_related_flag");

                entity.Property(e => e.GlobalAcctScore).HasColumnName("global_acct_score");

                entity.Property(e => e.GmeFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("gme_flag");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.MspAcctScore).HasColumnName("msp_acct_score");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.ProcessedFlag)
                    .HasMaxLength(50)
                    .HasColumnName("processed_flag");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("quote_id");

                entity.Property(e => e.ReportedQty).HasColumnName("reported_qty");

                entity.Property(e => e.ResEcJaroScore).HasColumnName("res_ec_jaro_score");

                entity.Property(e => e.ResEcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_ec_key_flag");

                entity.Property(e => e.ResSvcEntityRelatedFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("res_svc_entity_related_flag");

                entity.Property(e => e.ResSvcJaroScore).HasColumnName("res_svc_jaro_score");

                entity.Property(e => e.ResSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_svc_key_flag");

                entity.Property(e => e.ResellerCity)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_city");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_postal_code");

                entity.Property(e => e.ResellerStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street1");

                entity.Property(e => e.ResellerStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street2");

                entity.Property(e => e.ResellerStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street3");

                entity.Property(e => e.ResellerStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street4");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.RmaNumber)
                    .HasMaxLength(50)
                    .HasColumnName("rma_number");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SerialNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number_orig");

                entity.Property(e => e.ShiptoCity)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_city");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShiptoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_postal_code");

                entity.Property(e => e.ShiptoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_region");

                entity.Property(e => e.ShiptoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street1");

                entity.Property(e => e.ShiptoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street2");

                entity.Property(e => e.ShiptoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street3");

                entity.Property(e => e.ShiptoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street4");

                entity.Property(e => e.ShiptoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street5");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("so_number_orig");

                entity.Property(e => e.SoType)
                    .HasMaxLength(250)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoCity)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_city");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SoldtoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_postal_code");

                entity.Property(e => e.SoldtoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street1");

                entity.Property(e => e.SoldtoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street2");

                entity.Property(e => e.SoldtoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street3");

                entity.Property(e => e.SoldtoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street4");

                entity.Property(e => e.SoldtoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street5");

                entity.Property(e => e.SourceImportId).HasColumnName("source_import_id");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.SvcBilltoCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("svc_billto_country_code");

                entity.Property(e => e.SvcBilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_billto_key");

                entity.Property(e => e.SvcBilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_billto_name");

                entity.Property(e => e.SvcContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_creation_date");

                entity.Property(e => e.SvcContractLineCreation)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_line_creation");

                entity.Property(e => e.SvcContractLineStatus)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_line_status");

                entity.Property(e => e.SvcContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_number");

                entity.Property(e => e.SvcContractStatus)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_status");

                entity.Property(e => e.SvcContractType)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_type");

                entity.Property(e => e.SvcCurrency)
                    .HasMaxLength(50)
                    .HasColumnName("svc_currency");

                entity.Property(e => e.SvcEligibleFlag)
                    .HasMaxLength(50)
                    .HasColumnName("svc_eligible_flag");

                entity.Property(e => e.SvcEndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_city");

                entity.Property(e => e.SvcEndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_country_code");

                entity.Property(e => e.SvcEndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_country_name");

                entity.Property(e => e.SvcEndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_key");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_name");

                entity.Property(e => e.SvcEndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_theater");

                entity.Property(e => e.SvcEndDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_end_date");

                entity.Property(e => e.SvcInstalledAtCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_country_code");

                entity.Property(e => e.SvcInstalledAtCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_installed_at_country_name");

                entity.Property(e => e.SvcInstalledAtDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_district");

                entity.Property(e => e.SvcInstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_installed_at_key");

                entity.Property(e => e.SvcInstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_name");

                entity.Property(e => e.SvcListValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_list_value");

                entity.Property(e => e.SvcMaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_desc");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcNetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_net_value");

                entity.Property(e => e.SvcPayerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_country");

                entity.Property(e => e.SvcPayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_payer_key");

                entity.Property(e => e.SvcPayerName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_name");

                entity.Property(e => e.SvcSalesOrder)
                    .HasMaxLength(50)
                    .HasColumnName("svc_sales_order");

                entity.Property(e => e.SvcStartDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_start_date");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(250)
                    .HasColumnName("transaction_type");
            });

            modelBuilder.Entity<GmeFlagged20190131>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_flagged_20190131");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("am_country_name");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("billto_district");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.BilltoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("billto_postal_code");

                entity.Property(e => e.BilltoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("billto_region");

                entity.Property(e => e.BilltoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street1");

                entity.Property(e => e.BilltoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street2");

                entity.Property(e => e.BilltoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street3");

                entity.Property(e => e.BilltoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street4");

                entity.Property(e => e.BilltoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street5");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .HasColumnName("claim_status");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_item");

                entity.Property(e => e.DiscPerc)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("disc_perc");

                entity.Property(e => e.DistiCity)
                    .HasMaxLength(255)
                    .HasColumnName("disti_city");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("disti_postal_code");

                entity.Property(e => e.DistiRegion)
                    .HasMaxLength(255)
                    .HasColumnName("disti_region");

                entity.Property(e => e.DistiStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street1");

                entity.Property(e => e.DistiStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street2");

                entity.Property(e => e.DistiStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street3");

                entity.Property(e => e.DistiStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street4");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(250)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.DrspPosId).HasColumnName("drsp_pos_id");

                entity.Property(e => e.EcSvcJaroScore).HasColumnName("ec_svc_jaro_score");

                entity.Property(e => e.EcSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_key_flag");

                entity.Property(e => e.EcSvcSamegidFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_samegid_flag");

                entity.Property(e => e.EcSvcSenzingScore).HasColumnName("ec_svc_senzing_score");

                entity.Property(e => e.EndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_city");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_postal_code");

                entity.Property(e => e.EndCustRegion)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_region");

                entity.Property(e => e.EndCustStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street1");

                entity.Property(e => e.EndCustStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street2");

                entity.Property(e => e.EndCustStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street3");

                entity.Property(e => e.EndCustStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street4");

                entity.Property(e => e.EndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("end_cust_theater");

                entity.Property(e => e.EndUserStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("end_user_street5");

                entity.Property(e => e.EntityExceptionFlag)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("entity_exception_flag");

                entity.Property(e => e.EntityRelatedFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("entity_related_flag");

                entity.Property(e => e.GlobalAcctScore).HasColumnName("global_acct_score");

                entity.Property(e => e.GmeFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("gme_flag");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.MspAcctScore).HasColumnName("msp_acct_score");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.ProcessedFlag)
                    .HasMaxLength(50)
                    .HasColumnName("processed_flag");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("quote_id");

                entity.Property(e => e.ReportedQty).HasColumnName("reported_qty");

                entity.Property(e => e.ResEcJaroScore).HasColumnName("res_ec_jaro_score");

                entity.Property(e => e.ResEcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_ec_key_flag");

                entity.Property(e => e.ResSvcEntityRelatedFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("res_svc_entity_related_flag");

                entity.Property(e => e.ResSvcJaroScore).HasColumnName("res_svc_jaro_score");

                entity.Property(e => e.ResSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_svc_key_flag");

                entity.Property(e => e.ResellerCity)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_city");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_postal_code");

                entity.Property(e => e.ResellerStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street1");

                entity.Property(e => e.ResellerStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street2");

                entity.Property(e => e.ResellerStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street3");

                entity.Property(e => e.ResellerStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street4");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.RmaNumber)
                    .HasMaxLength(50)
                    .HasColumnName("rma_number");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SerialNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number_orig");

                entity.Property(e => e.ShiptoCity)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_city");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShiptoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_postal_code");

                entity.Property(e => e.ShiptoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_region");

                entity.Property(e => e.ShiptoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street1");

                entity.Property(e => e.ShiptoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street2");

                entity.Property(e => e.ShiptoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street3");

                entity.Property(e => e.ShiptoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street4");

                entity.Property(e => e.ShiptoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street5");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("so_number_orig");

                entity.Property(e => e.SoType)
                    .HasMaxLength(250)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoCity)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_city");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SoldtoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_postal_code");

                entity.Property(e => e.SoldtoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street1");

                entity.Property(e => e.SoldtoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street2");

                entity.Property(e => e.SoldtoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street3");

                entity.Property(e => e.SoldtoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street4");

                entity.Property(e => e.SoldtoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street5");

                entity.Property(e => e.SourceImportId).HasColumnName("source_import_id");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.SvcBilltoCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("svc_billto_country_code");

                entity.Property(e => e.SvcBilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_billto_key");

                entity.Property(e => e.SvcBilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_billto_name");

                entity.Property(e => e.SvcContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_creation_date");

                entity.Property(e => e.SvcContractLineCreation)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_line_creation");

                entity.Property(e => e.SvcContractLineStatus)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_line_status");

                entity.Property(e => e.SvcContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_number");

                entity.Property(e => e.SvcContractStatus)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_status");

                entity.Property(e => e.SvcContractType)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_type");

                entity.Property(e => e.SvcCurrency)
                    .HasMaxLength(50)
                    .HasColumnName("svc_currency");

                entity.Property(e => e.SvcEligibleFlag)
                    .HasMaxLength(50)
                    .HasColumnName("svc_eligible_flag");

                entity.Property(e => e.SvcEndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_city");

                entity.Property(e => e.SvcEndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_country_code");

                entity.Property(e => e.SvcEndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_country_name");

                entity.Property(e => e.SvcEndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_key");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_name");

                entity.Property(e => e.SvcEndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_theater");

                entity.Property(e => e.SvcEndDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_end_date");

                entity.Property(e => e.SvcInstalledAtCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_country_code");

                entity.Property(e => e.SvcInstalledAtCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_installed_at_country_name");

                entity.Property(e => e.SvcInstalledAtDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_district");

                entity.Property(e => e.SvcInstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_installed_at_key");

                entity.Property(e => e.SvcInstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_name");

                entity.Property(e => e.SvcListValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_list_value");

                entity.Property(e => e.SvcMaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_desc");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcNetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_net_value");

                entity.Property(e => e.SvcPayerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_country");

                entity.Property(e => e.SvcPayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_payer_key");

                entity.Property(e => e.SvcPayerName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_name");

                entity.Property(e => e.SvcSalesOrder)
                    .HasMaxLength(50)
                    .HasColumnName("svc_sales_order");

                entity.Property(e => e.SvcStartDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_start_date");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(250)
                    .HasColumnName("transaction_type");
            });

            modelBuilder.Entity<GmeFlaggedBak>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_flagged_bak", "bak");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("am_country_name");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("billto_district");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.BilltoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("billto_postal_code");

                entity.Property(e => e.BilltoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("billto_region");

                entity.Property(e => e.BilltoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street1");

                entity.Property(e => e.BilltoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street2");

                entity.Property(e => e.BilltoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street3");

                entity.Property(e => e.BilltoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street4");

                entity.Property(e => e.BilltoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street5");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .HasColumnName("claim_status");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("created_date");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_item");

                entity.Property(e => e.DiscPerc)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("disc_perc");

                entity.Property(e => e.DistiCity)
                    .HasMaxLength(255)
                    .HasColumnName("disti_city");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("disti_postal_code");

                entity.Property(e => e.DistiRegion)
                    .HasMaxLength(255)
                    .HasColumnName("disti_region");

                entity.Property(e => e.DistiStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street1");

                entity.Property(e => e.DistiStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street2");

                entity.Property(e => e.DistiStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street3");

                entity.Property(e => e.DistiStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street4");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(255)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.DrspPosId).HasColumnName("drsp_pos_id");

                entity.Property(e => e.EcSvcJaroScore).HasColumnName("ec_svc_jaro_score");

                entity.Property(e => e.EcSvcKeyFlag)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_key_flag");

                entity.Property(e => e.EcSvcSenzingScore).HasColumnName("ec_svc_senzing_score");

                entity.Property(e => e.EndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_city");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_postal_code");

                entity.Property(e => e.EndCustRegion)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_region");

                entity.Property(e => e.EndCustStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street1");

                entity.Property(e => e.EndCustStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street2");

                entity.Property(e => e.EndCustStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street3");

                entity.Property(e => e.EndCustStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street4");

                entity.Property(e => e.EndCustTheater)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_theater");

                entity.Property(e => e.EndUserStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("end_user_street5");

                entity.Property(e => e.EntityExceptionFlag)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("entity_exception_flag");

                entity.Property(e => e.GlobalAcctScore).HasColumnName("global_acct_score");

                entity.Property(e => e.GmeFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("gme_flag");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.MspAcctScore).HasColumnName("msp_acct_score");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.ProcessedFlag)
                    .HasMaxLength(50)
                    .HasColumnName("processed_flag");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("quote_id");

                entity.Property(e => e.ReportedQty).HasColumnName("reported_qty");

                entity.Property(e => e.ResEcJaroScore).HasColumnName("res_ec_jaro_score");

                entity.Property(e => e.ResEcKeyFlag)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("res_ec_key_flag");

                entity.Property(e => e.ResellerCity)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_city");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_postal_code");

                entity.Property(e => e.ResellerStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street1");

                entity.Property(e => e.ResellerStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street2");

                entity.Property(e => e.ResellerStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street3");

                entity.Property(e => e.ResellerStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street4");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.RmaNumber)
                    .HasMaxLength(50)
                    .HasColumnName("rma_number");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SerialNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number_orig");

                entity.Property(e => e.ShiptoCity)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_city");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShiptoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_postal_code");

                entity.Property(e => e.ShiptoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_region");

                entity.Property(e => e.ShiptoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street1");

                entity.Property(e => e.ShiptoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street2");

                entity.Property(e => e.ShiptoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street3");

                entity.Property(e => e.ShiptoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street4");

                entity.Property(e => e.ShiptoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street5");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("so_number_orig");

                entity.Property(e => e.SoType)
                    .HasMaxLength(250)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoCity)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_city");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SoldtoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_postal_code");

                entity.Property(e => e.SoldtoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street1");

                entity.Property(e => e.SoldtoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street2");

                entity.Property(e => e.SoldtoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street3");

                entity.Property(e => e.SoldtoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street4");

                entity.Property(e => e.SoldtoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street5");

                entity.Property(e => e.SourceImportId).HasColumnName("source_import_id");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.SvcBilltoCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("svc_billto_country_code");

                entity.Property(e => e.SvcBilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_billto_key");

                entity.Property(e => e.SvcBilltoName)
                    .HasMaxLength(50)
                    .HasColumnName("svc_billto_name");

                entity.Property(e => e.SvcContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_creation_date");

                entity.Property(e => e.SvcContractLineCreation)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_line_creation");

                entity.Property(e => e.SvcContractLineStatus)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_line_status");

                entity.Property(e => e.SvcContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_number");

                entity.Property(e => e.SvcContractStatus)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_status");

                entity.Property(e => e.SvcContractType)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_type");

                entity.Property(e => e.SvcCurrency)
                    .HasMaxLength(50)
                    .HasColumnName("svc_currency");

                entity.Property(e => e.SvcEndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_city");

                entity.Property(e => e.SvcEndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_country_code");

                entity.Property(e => e.SvcEndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_country_name");

                entity.Property(e => e.SvcEndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_key");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_name");

                entity.Property(e => e.SvcEndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_theater");

                entity.Property(e => e.SvcEndDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_end_date");

                entity.Property(e => e.SvcInstalledAtCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_country_code");

                entity.Property(e => e.SvcInstalledAtCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_installed_at_country_name");

                entity.Property(e => e.SvcInstalledAtDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_district");

                entity.Property(e => e.SvcInstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_installed_at_key");

                entity.Property(e => e.SvcInstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_name");

                entity.Property(e => e.SvcListValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_list_value");

                entity.Property(e => e.SvcMaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_desc");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcNetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_net_value");

                entity.Property(e => e.SvcPayerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_country");

                entity.Property(e => e.SvcPayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_payer_key");

                entity.Property(e => e.SvcPayerName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_name");

                entity.Property(e => e.SvcSalesOrder)
                    .HasMaxLength(50)
                    .HasColumnName("svc_sales_order");

                entity.Property(e => e.SvcStartDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_start_date");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(250)
                    .HasColumnName("transaction_type");
            });

            modelBuilder.Entity<GmeFlaggedHi>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_flagged_his");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("am_country_name");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("billto_district");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.BilltoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("billto_postal_code");

                entity.Property(e => e.BilltoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("billto_region");

                entity.Property(e => e.BilltoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street1");

                entity.Property(e => e.BilltoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street2");

                entity.Property(e => e.BilltoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street3");

                entity.Property(e => e.BilltoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street4");

                entity.Property(e => e.BilltoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street5");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .HasColumnName("claim_status");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("created_date");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_item");

                entity.Property(e => e.DiscPerc)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("disc_perc");

                entity.Property(e => e.DistiCity)
                    .HasMaxLength(255)
                    .HasColumnName("disti_city");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("disti_postal_code");

                entity.Property(e => e.DistiRegion)
                    .HasMaxLength(255)
                    .HasColumnName("disti_region");

                entity.Property(e => e.DistiStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street1");

                entity.Property(e => e.DistiStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street2");

                entity.Property(e => e.DistiStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street3");

                entity.Property(e => e.DistiStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street4");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(255)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.DrspPosId).HasColumnName("drsp_pos_id");

                entity.Property(e => e.EcSvcJaroScore).HasColumnName("ec_svc_jaro_score");

                entity.Property(e => e.EcSvcKeyFlag)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_key_flag");

                entity.Property(e => e.EcSvcSenzingScore).HasColumnName("ec_svc_senzing_score");

                entity.Property(e => e.EndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_city");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_postal_code");

                entity.Property(e => e.EndCustRegion)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_region");

                entity.Property(e => e.EndCustStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street1");

                entity.Property(e => e.EndCustStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street2");

                entity.Property(e => e.EndCustStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street3");

                entity.Property(e => e.EndCustStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street4");

                entity.Property(e => e.EndCustTheater)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_theater");

                entity.Property(e => e.EndUserStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("end_user_street5");

                entity.Property(e => e.EntityExceptionFlag)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("entity_exception_flag");

                entity.Property(e => e.GlobalAcctScore).HasColumnName("global_acct_score");

                entity.Property(e => e.GmeFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("gme_flag");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.MspAcctScore).HasColumnName("msp_acct_score");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.ProcessedFlag)
                    .HasMaxLength(50)
                    .HasColumnName("processed_flag");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("quote_id");

                entity.Property(e => e.ReportedQty).HasColumnName("reported_qty");

                entity.Property(e => e.ResEcJaroScore).HasColumnName("res_ec_jaro_score");

                entity.Property(e => e.ResEcKeyFlag)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("res_ec_key_flag");

                entity.Property(e => e.ResellerCity)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_city");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_postal_code");

                entity.Property(e => e.ResellerStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street1");

                entity.Property(e => e.ResellerStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street2");

                entity.Property(e => e.ResellerStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street3");

                entity.Property(e => e.ResellerStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street4");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.RmaNumber)
                    .HasMaxLength(50)
                    .HasColumnName("rma_number");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SerialNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number_orig");

                entity.Property(e => e.ShiptoCity)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_city");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShiptoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_postal_code");

                entity.Property(e => e.ShiptoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_region");

                entity.Property(e => e.ShiptoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street1");

                entity.Property(e => e.ShiptoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street2");

                entity.Property(e => e.ShiptoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street3");

                entity.Property(e => e.ShiptoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street4");

                entity.Property(e => e.ShiptoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street5");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("so_number_orig");

                entity.Property(e => e.SoType)
                    .HasMaxLength(250)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoCity)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_city");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SoldtoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_postal_code");

                entity.Property(e => e.SoldtoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street1");

                entity.Property(e => e.SoldtoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street2");

                entity.Property(e => e.SoldtoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street3");

                entity.Property(e => e.SoldtoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street4");

                entity.Property(e => e.SoldtoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street5");

                entity.Property(e => e.SourceImportId).HasColumnName("source_import_id");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.SvcBilltoCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("svc_billto_country_code");

                entity.Property(e => e.SvcBilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_billto_key");

                entity.Property(e => e.SvcBilltoName)
                    .HasMaxLength(50)
                    .HasColumnName("svc_billto_name");

                entity.Property(e => e.SvcContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_creation_date");

                entity.Property(e => e.SvcContractLineCreation)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_line_creation");

                entity.Property(e => e.SvcContractLineStatus)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_line_status");

                entity.Property(e => e.SvcContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_number");

                entity.Property(e => e.SvcContractStatus)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_status");

                entity.Property(e => e.SvcContractType)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_type");

                entity.Property(e => e.SvcCurrency)
                    .HasMaxLength(50)
                    .HasColumnName("svc_currency");

                entity.Property(e => e.SvcEndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_city");

                entity.Property(e => e.SvcEndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_country_code");

                entity.Property(e => e.SvcEndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_country_name");

                entity.Property(e => e.SvcEndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_key");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_name");

                entity.Property(e => e.SvcEndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_theater");

                entity.Property(e => e.SvcEndDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_end_date");

                entity.Property(e => e.SvcInstalledAtCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_country_code");

                entity.Property(e => e.SvcInstalledAtCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_installed_at_country_name");

                entity.Property(e => e.SvcInstalledAtDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_district");

                entity.Property(e => e.SvcInstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_installed_at_key");

                entity.Property(e => e.SvcInstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_name");

                entity.Property(e => e.SvcListValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_list_value");

                entity.Property(e => e.SvcMaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_desc");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcNetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_net_value");

                entity.Property(e => e.SvcPayerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_country");

                entity.Property(e => e.SvcPayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_payer_key");

                entity.Property(e => e.SvcPayerName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_name");

                entity.Property(e => e.SvcSalesOrder)
                    .HasMaxLength(50)
                    .HasColumnName("svc_sales_order");

                entity.Property(e => e.SvcStartDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_start_date");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(250)
                    .HasColumnName("transaction_type");
            });

            modelBuilder.Entity<GmeFlaggedStg>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_flagged_stg");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("billto_district");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.BilltoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("billto_postal_code");

                entity.Property(e => e.BilltoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("billto_region");

                entity.Property(e => e.BilltoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street1");

                entity.Property(e => e.BilltoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street2");

                entity.Property(e => e.BilltoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street3");

                entity.Property(e => e.BilltoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street4");

                entity.Property(e => e.BilltoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street5");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .HasColumnName("claim_status");

                entity.Property(e => e.ContractLineItemStatus)
                    .HasMaxLength(50)
                    .HasColumnName("contract_line_item_status");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("created_date");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_item");

                entity.Property(e => e.DiscPerc)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("disc_perc");

                entity.Property(e => e.DistiCity)
                    .HasMaxLength(255)
                    .HasColumnName("disti_city");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("disti_postal_code");

                entity.Property(e => e.DistiRegion)
                    .HasMaxLength(255)
                    .HasColumnName("disti_region");

                entity.Property(e => e.DistiStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street1");

                entity.Property(e => e.DistiStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street2");

                entity.Property(e => e.DistiStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street3");

                entity.Property(e => e.DistiStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street4");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.DrspPosId).HasColumnName("drsp_pos_id");

                entity.Property(e => e.EcSvcJaroScore).HasColumnName("ec_svc_jaro_score");

                entity.Property(e => e.EcSvcKeyFlag)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_key_flag");

                entity.Property(e => e.EcSvcSenzingScore).HasColumnName("ec_svc_senzing_score");

                entity.Property(e => e.EndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_city");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_postal_code");

                entity.Property(e => e.EndCustRegion)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_region");

                entity.Property(e => e.EndCustStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street1");

                entity.Property(e => e.EndCustStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street2");

                entity.Property(e => e.EndCustStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street3");

                entity.Property(e => e.EndCustStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street4");

                entity.Property(e => e.EndUserStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("end_user_street5");

                entity.Property(e => e.EntityExceptionFlag)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("entity_exception_flag");

                entity.Property(e => e.GlobalAcctScore).HasColumnName("global_acct_score");

                entity.Property(e => e.GmeFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("gme_flag");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.MspAcctScore).HasColumnName("msp_acct_score");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.ProcessedFlag)
                    .HasMaxLength(50)
                    .HasColumnName("processed_flag");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("quote_id");

                entity.Property(e => e.ReportedQty).HasColumnName("reported_qty");

                entity.Property(e => e.ResEcJaroScore).HasColumnName("res_ec_jaro_score");

                entity.Property(e => e.ResEcKeyFlag)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("res_ec_key_flag");

                entity.Property(e => e.ResellerCity)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_city");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_postal_code");

                entity.Property(e => e.ResellerStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street1");

                entity.Property(e => e.ResellerStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street2");

                entity.Property(e => e.ResellerStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street3");

                entity.Property(e => e.ResellerStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street4");

                entity.Property(e => e.RmaNumber)
                    .HasMaxLength(50)
                    .HasColumnName("rma_number");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SerialNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number_orig");

                entity.Property(e => e.ServiceEndDate)
                    .HasColumnType("date")
                    .HasColumnName("service_end_date");

                entity.Property(e => e.ServiceMaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("service_material_desc");

                entity.Property(e => e.ServiceMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("service_material_key");

                entity.Property(e => e.ServiceStartDate)
                    .HasColumnType("date")
                    .HasColumnName("service_start_date");

                entity.Property(e => e.ShiptoCity)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_city");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShiptoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_postal_code");

                entity.Property(e => e.ShiptoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_region");

                entity.Property(e => e.ShiptoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street1");

                entity.Property(e => e.ShiptoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street2");

                entity.Property(e => e.ShiptoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street3");

                entity.Property(e => e.ShiptoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street4");

                entity.Property(e => e.ShiptoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street5");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("so_number_orig");

                entity.Property(e => e.SoType)
                    .HasMaxLength(250)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoCity)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_city");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SoldtoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_postal_code");

                entity.Property(e => e.SoldtoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street1");

                entity.Property(e => e.SoldtoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street2");

                entity.Property(e => e.SoldtoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street3");

                entity.Property(e => e.SoldtoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street4");

                entity.Property(e => e.SoldtoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street5");

                entity.Property(e => e.SourceImportId).HasColumnName("source_import_id");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.SvcBilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_billto_key");

                entity.Property(e => e.SvcCurrency)
                    .HasMaxLength(50)
                    .HasColumnName("svc_currency");

                entity.Property(e => e.SvcEndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_city");

                entity.Property(e => e.SvcEndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_country_code");

                entity.Property(e => e.SvcEndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_country_name");

                entity.Property(e => e.SvcEndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_key");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_name");

                entity.Property(e => e.SvcInstalledAtCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_country_code");

                entity.Property(e => e.SvcInstalledAtCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_installed_at_country_name");

                entity.Property(e => e.SvcInstalledAtDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_district");

                entity.Property(e => e.SvcInstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_installed_at_key");

                entity.Property(e => e.SvcInstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_name");

                entity.Property(e => e.SvcListValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_list_value");

                entity.Property(e => e.SvcNetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_net_value");

                entity.Property(e => e.SvcPayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_payer_key");

                entity.Property(e => e.SvcSalesOrder)
                    .HasMaxLength(50)
                    .HasColumnName("svc_sales_order");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(250)
                    .HasColumnName("transaction_type");
            });

            modelBuilder.Entity<GmeFlaggedTableau>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_flagged_tableau", "dev");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("billto_district");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.BilltoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("billto_postal_code");

                entity.Property(e => e.BilltoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("billto_region");

                entity.Property(e => e.BilltoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street1");

                entity.Property(e => e.BilltoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street2");

                entity.Property(e => e.BilltoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street3");

                entity.Property(e => e.BilltoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street4");

                entity.Property(e => e.BilltoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street5");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .HasColumnName("claim_status");

                entity.Property(e => e.ContractLineItemStatus)
                    .HasMaxLength(50)
                    .HasColumnName("contract_line_item_status");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("created_date");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_item");

                entity.Property(e => e.DiscPerc)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("disc_perc");

                entity.Property(e => e.DistiCity)
                    .HasMaxLength(255)
                    .HasColumnName("disti_city");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("disti_postal_code");

                entity.Property(e => e.DistiRegion)
                    .HasMaxLength(255)
                    .HasColumnName("disti_region");

                entity.Property(e => e.DistiStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street1");

                entity.Property(e => e.DistiStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street2");

                entity.Property(e => e.DistiStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street3");

                entity.Property(e => e.DistiStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street4");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.DrspPosId).HasColumnName("drsp_pos_id");

                entity.Property(e => e.EcSvcJaroScore).HasColumnName("ec_svc_jaro_score");

                entity.Property(e => e.EcSvcKeyFlag)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_key_flag");

                entity.Property(e => e.EcSvcSenzingScore).HasColumnName("ec_svc_senzing_score");

                entity.Property(e => e.EndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_city");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_postal_code");

                entity.Property(e => e.EndCustRegion)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_region");

                entity.Property(e => e.EndCustStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street1");

                entity.Property(e => e.EndCustStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street2");

                entity.Property(e => e.EndCustStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street3");

                entity.Property(e => e.EndCustStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street4");

                entity.Property(e => e.EndUserStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("end_user_street5");

                entity.Property(e => e.EntityExceptionFlag)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("entity_exception_flag");

                entity.Property(e => e.EntityName)
                    .HasMaxLength(500)
                    .HasColumnName("entity_name");

                entity.Property(e => e.GlobalAcctScore).HasColumnName("global_acct_score");

                entity.Property(e => e.GmeFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("gme_flag");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.MspAcctScore).HasColumnName("msp_acct_score");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.ProcessedFlag)
                    .HasMaxLength(50)
                    .HasColumnName("processed_flag");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("quote_id");

                entity.Property(e => e.ReportedQty).HasColumnName("reported_qty");

                entity.Property(e => e.ResEcJaroScore).HasColumnName("res_ec_jaro_score");

                entity.Property(e => e.ResEcKeyFlag)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("res_ec_key_flag");

                entity.Property(e => e.ResellerCity)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_city");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_postal_code");

                entity.Property(e => e.ResellerStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street1");

                entity.Property(e => e.ResellerStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street2");

                entity.Property(e => e.ResellerStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street3");

                entity.Property(e => e.ResellerStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street4");

                entity.Property(e => e.RmaNumber)
                    .HasMaxLength(50)
                    .HasColumnName("rma_number");

                entity.Property(e => e.SalesAchievement)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("sales_achievement");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SerialNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number_orig");

                entity.Property(e => e.ServiceEndDate)
                    .HasColumnType("date")
                    .HasColumnName("service_end_date");

                entity.Property(e => e.ServiceMaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("service_material_desc");

                entity.Property(e => e.ServiceMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("service_material_key");

                entity.Property(e => e.ServiceStartDate)
                    .HasColumnType("date")
                    .HasColumnName("service_start_date");

                entity.Property(e => e.ShiptoCity)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_city");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShiptoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_postal_code");

                entity.Property(e => e.ShiptoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_region");

                entity.Property(e => e.ShiptoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street1");

                entity.Property(e => e.ShiptoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street2");

                entity.Property(e => e.ShiptoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street3");

                entity.Property(e => e.ShiptoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street4");

                entity.Property(e => e.ShiptoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street5");

                entity.Property(e => e.ShpSnCnt).HasColumnName("shp_sn_cnt");

                entity.Property(e => e.ShpSnWithSvc).HasColumnName("shp_sn_with_svc");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("so_number_orig");

                entity.Property(e => e.SoType)
                    .HasMaxLength(250)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoCity)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_city");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SoldtoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_postal_code");

                entity.Property(e => e.SoldtoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street1");

                entity.Property(e => e.SoldtoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street2");

                entity.Property(e => e.SoldtoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street3");

                entity.Property(e => e.SoldtoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street4");

                entity.Property(e => e.SoldtoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street5");

                entity.Property(e => e.SourceImportId).HasColumnName("source_import_id");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.SvcBilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_billto_key");

                entity.Property(e => e.SvcCurrency)
                    .HasMaxLength(50)
                    .HasColumnName("svc_currency");

                entity.Property(e => e.SvcEndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_city");

                entity.Property(e => e.SvcEndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_country_code");

                entity.Property(e => e.SvcEndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_country_name");

                entity.Property(e => e.SvcEndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_key");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_name");

                entity.Property(e => e.SvcInstalledAtCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_country_code");

                entity.Property(e => e.SvcInstalledAtCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_installed_at_country_name");

                entity.Property(e => e.SvcInstalledAtDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_district");

                entity.Property(e => e.SvcInstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_installed_at_key");

                entity.Property(e => e.SvcInstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_name");

                entity.Property(e => e.SvcListValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_list_value");

                entity.Property(e => e.SvcNetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_net_value");

                entity.Property(e => e.SvcPayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_payer_key");

                entity.Property(e => e.SvcSalesOrder)
                    .HasMaxLength(50)
                    .HasColumnName("svc_sales_order");

                entity.Property(e => e.TargetFlag)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("target_flag");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(250)
                    .HasColumnName("transaction_type");
            });

            modelBuilder.Entity<GmeFlaggedTwb>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_flagged_twb");

                entity.HasIndex(e => e.ResellerKey, "gme_flagged_twb_reskey");

                entity.HasIndex(e => e.ResellerName, "gme_flagged_twb_resname");

                entity.HasIndex(e => new { e.SerialNumber, e.MaterialKey }, "gme_flagged_twb_sn");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("am_country_name");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.BilltoAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("billto_address");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .HasColumnName("claim_status");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_item");

                entity.Property(e => e.DiscPerc)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("disc_perc");

                entity.Property(e => e.DistiAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("disti_address");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(250)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.DrspPosId).HasColumnName("drsp_pos_id");

                entity.Property(e => e.EcSvcJaroScore).HasColumnName("ec_svc_jaro_score");

                entity.Property(e => e.EcSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_key_flag");

                entity.Property(e => e.EcSvcSenzingScore).HasColumnName("ec_svc_senzing_score");

                entity.Property(e => e.EndCustAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("end_cust_address");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("end_cust_theater");

                entity.Property(e => e.EntityExceptionFlag)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("entity_exception_flag");

                entity.Property(e => e.GlobalAcctScore).HasColumnName("global_acct_score");

                entity.Property(e => e.GmeFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("gme_flag");

                entity.Property(e => e.ListAmtPso)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("list_amt_pso");

                entity.Property(e => e.ListAmtWithSvcPso)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("list_amt_with_svc_pso");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.MspAcctScore).HasColumnName("msp_acct_score");

                entity.Property(e => e.NetAmtPso)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("net_amt_pso");

                entity.Property(e => e.NetAmtWithSvcPso)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("net_amt_with_svc_pso");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PSvcAttachedRate)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("p_svc_attached_rate");

                entity.Property(e => e.PartnerDelta)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("partner_delta");

                entity.Property(e => e.PartnerDeltaSum).HasColumnName("partner_delta_sum");

                entity.Property(e => e.PartnerOldNew).HasColumnName("partner_old_new");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("quote_id");

                entity.Property(e => e.ResEcJaroScore).HasColumnName("res_ec_jaro_score");

                entity.Property(e => e.ResEcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_ec_key_flag");

                entity.Property(e => e.ResellerAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("reseller_address");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(1500)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.RmaNumber)
                    .HasMaxLength(50)
                    .HasColumnName("rma_number");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SerialNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number_orig");

                entity.Property(e => e.ShiptoAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("shipto_address");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShpListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_list_amt");

                entity.Property(e => e.ShpNetAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_net_amt");

                entity.Property(e => e.ShpSnCnt).HasColumnName("shp_sn_cnt");

                entity.Property(e => e.ShpSnWithSvc).HasColumnName("shp_sn_with_svc");

                entity.Property(e => e.ShpSvcEligibleCnt).HasColumnName("shp_svc_eligible_cnt");

                entity.Property(e => e.SnDelta)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("sn_delta");

                entity.Property(e => e.SnOldNew).HasColumnName("sn_old_new");

                entity.Property(e => e.SnShippedCntPso).HasColumnName("sn_shipped_cnt_pso");

                entity.Property(e => e.SnWithSvcPso).HasColumnName("sn_with_svc_pso");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoDelta)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("so_delta");

                entity.Property(e => e.SoDeltaSum).HasColumnName("so_delta_sum");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("so_number_orig");

                entity.Property(e => e.SoOldNew).HasColumnName("so_old_new");

                entity.Property(e => e.SoType)
                    .HasMaxLength(250)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("soldto_address");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SourceImportId).HasColumnName("source_import_id");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.SvcBilltoCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("svc_billto_country_code");

                entity.Property(e => e.SvcBilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_billto_key");

                entity.Property(e => e.SvcBilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_billto_name");

                entity.Property(e => e.SvcContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_creation_date");

                entity.Property(e => e.SvcContractLineCreation)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_line_creation");

                entity.Property(e => e.SvcContractLineStatus)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_line_status");

                entity.Property(e => e.SvcContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_number");

                entity.Property(e => e.SvcContractStatus)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_status");

                entity.Property(e => e.SvcContractType)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_type");

                entity.Property(e => e.SvcCurrency)
                    .HasMaxLength(50)
                    .HasColumnName("svc_currency");

                entity.Property(e => e.SvcEndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_city");

                entity.Property(e => e.SvcEndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_country_code");

                entity.Property(e => e.SvcEndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_country_name");

                entity.Property(e => e.SvcEndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_key");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_name");

                entity.Property(e => e.SvcEndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_theater");

                entity.Property(e => e.SvcEndDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_end_date");

                entity.Property(e => e.SvcInstalledAtCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_country_code");

                entity.Property(e => e.SvcInstalledAtCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_installed_at_country_name");

                entity.Property(e => e.SvcInstalledAtDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_district");

                entity.Property(e => e.SvcInstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_installed_at_key");

                entity.Property(e => e.SvcInstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_name");

                entity.Property(e => e.SvcListValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_list_value");

                entity.Property(e => e.SvcMaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_desc");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcNetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_net_value");

                entity.Property(e => e.SvcPayerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_country");

                entity.Property(e => e.SvcPayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_payer_key");

                entity.Property(e => e.SvcPayerName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_name");

                entity.Property(e => e.SvcSalesOrder)
                    .HasMaxLength(50)
                    .HasColumnName("svc_sales_order");

                entity.Property(e => e.SvcStartDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_start_date");

                entity.Property(e => e.TargetFlag)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("target_flag");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(250)
                    .HasColumnName("transaction_type");
            });

            modelBuilder.Entity<GmeFlaggedTwb121118>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_flagged_twb_121118", "bak");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("am_country_name");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.BilltoAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("billto_address");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .HasColumnName("claim_status");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_item");

                entity.Property(e => e.DiscPerc)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("disc_perc");

                entity.Property(e => e.DistiAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("disti_address");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(250)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.DrspPosId).HasColumnName("drsp_pos_id");

                entity.Property(e => e.EcSvcJaroScore).HasColumnName("ec_svc_jaro_score");

                entity.Property(e => e.EcSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_key_flag");

                entity.Property(e => e.EcSvcSenzingScore).HasColumnName("ec_svc_senzing_score");

                entity.Property(e => e.EndCustAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("end_cust_address");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("end_cust_theater");

                entity.Property(e => e.EntityExceptionFlag)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("entity_exception_flag");

                entity.Property(e => e.GlobalAcctScore).HasColumnName("global_acct_score");

                entity.Property(e => e.GmeFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("gme_flag");

                entity.Property(e => e.ListAmtPso)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("list_amt_pso");

                entity.Property(e => e.ListAmtWithSvcPso)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("list_amt_with_svc_pso");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.MspAcctScore).HasColumnName("msp_acct_score");

                entity.Property(e => e.NetAmtPso)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("net_amt_pso");

                entity.Property(e => e.NetAmtWithSvcPso)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("net_amt_with_svc_pso");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PSvcAttachedRate)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("p_svc_attached_rate");

                entity.Property(e => e.PartnerDelta)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("partner_delta");

                entity.Property(e => e.PartnerDeltaSum).HasColumnName("partner_delta_sum");

                entity.Property(e => e.PartnerOldNew).HasColumnName("partner_old_new");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("quote_id");

                entity.Property(e => e.ResEcJaroScore).HasColumnName("res_ec_jaro_score");

                entity.Property(e => e.ResEcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_ec_key_flag");

                entity.Property(e => e.ResellerAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("reseller_address");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(500)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.RmaNumber)
                    .HasMaxLength(50)
                    .HasColumnName("rma_number");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SerialNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number_orig");

                entity.Property(e => e.ShiptoAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("shipto_address");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShpListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_list_amt");

                entity.Property(e => e.ShpNetAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_net_amt");

                entity.Property(e => e.ShpSnCnt).HasColumnName("shp_sn_cnt");

                entity.Property(e => e.ShpSnWithSvc).HasColumnName("shp_sn_with_svc");

                entity.Property(e => e.ShpSvcEligibleCnt).HasColumnName("shp_svc_eligible_cnt");

                entity.Property(e => e.SnDelta)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("sn_delta");

                entity.Property(e => e.SnOldNew).HasColumnName("sn_old_new");

                entity.Property(e => e.SnShippedCntPso).HasColumnName("sn_shipped_cnt_pso");

                entity.Property(e => e.SnWithSvcPso).HasColumnName("sn_with_svc_pso");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoDelta)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("so_delta");

                entity.Property(e => e.SoDeltaSum).HasColumnName("so_delta_sum");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("so_number_orig");

                entity.Property(e => e.SoOldNew).HasColumnName("so_old_new");

                entity.Property(e => e.SoType)
                    .HasMaxLength(250)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("soldto_address");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SourceImportId).HasColumnName("source_import_id");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.SvcBilltoCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("svc_billto_country_code");

                entity.Property(e => e.SvcBilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_billto_key");

                entity.Property(e => e.SvcBilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_billto_name");

                entity.Property(e => e.SvcContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_creation_date");

                entity.Property(e => e.SvcContractLineCreation)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_line_creation");

                entity.Property(e => e.SvcContractLineStatus)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_line_status");

                entity.Property(e => e.SvcContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_number");

                entity.Property(e => e.SvcContractStatus)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_status");

                entity.Property(e => e.SvcContractType)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_type");

                entity.Property(e => e.SvcCurrency)
                    .HasMaxLength(50)
                    .HasColumnName("svc_currency");

                entity.Property(e => e.SvcEndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_city");

                entity.Property(e => e.SvcEndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_country_code");

                entity.Property(e => e.SvcEndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_country_name");

                entity.Property(e => e.SvcEndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_key");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_name");

                entity.Property(e => e.SvcEndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_theater");

                entity.Property(e => e.SvcEndDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_end_date");

                entity.Property(e => e.SvcInstalledAtCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_country_code");

                entity.Property(e => e.SvcInstalledAtCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_installed_at_country_name");

                entity.Property(e => e.SvcInstalledAtDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_district");

                entity.Property(e => e.SvcInstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_installed_at_key");

                entity.Property(e => e.SvcInstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_name");

                entity.Property(e => e.SvcListValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_list_value");

                entity.Property(e => e.SvcMaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_desc");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcNetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_net_value");

                entity.Property(e => e.SvcPayerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_country");

                entity.Property(e => e.SvcPayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_payer_key");

                entity.Property(e => e.SvcPayerName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_name");

                entity.Property(e => e.SvcSalesOrder)
                    .HasMaxLength(50)
                    .HasColumnName("svc_sales_order");

                entity.Property(e => e.SvcStartDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_start_date");

                entity.Property(e => e.TargetFlag)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("target_flag");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(250)
                    .HasColumnName("transaction_type");
            });

            modelBuilder.Entity<GmeFlaggedTwbBak>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_flagged_twb_bak", "bak");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("am_country_name");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.BilltoAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("billto_address");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .HasColumnName("claim_status");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_item");

                entity.Property(e => e.DiscPerc)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("disc_perc");

                entity.Property(e => e.DistiAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("disti_address");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(250)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.DrspPosId).HasColumnName("drsp_pos_id");

                entity.Property(e => e.EcSvcJaroScore).HasColumnName("ec_svc_jaro_score");

                entity.Property(e => e.EcSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_key_flag");

                entity.Property(e => e.EcSvcSenzingScore).HasColumnName("ec_svc_senzing_score");

                entity.Property(e => e.EndCustAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("end_cust_address");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("end_cust_theater");

                entity.Property(e => e.EntityExceptionFlag)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("entity_exception_flag");

                entity.Property(e => e.GlobalAcctScore).HasColumnName("global_acct_score");

                entity.Property(e => e.GmeFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("gme_flag");

                entity.Property(e => e.ListAmtPso)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("list_amt_pso");

                entity.Property(e => e.ListAmtWithSvcPso)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("list_amt_with_svc_pso");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.MspAcctScore).HasColumnName("msp_acct_score");

                entity.Property(e => e.NetAmtPso)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("net_amt_pso");

                entity.Property(e => e.NetAmtWithSvcPso)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("net_amt_with_svc_pso");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PSvcAttachedRate)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("p_svc_attached_rate");

                entity.Property(e => e.PartnerDelta)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("partner_delta");

                entity.Property(e => e.PartnerDeltaSum).HasColumnName("partner_delta_sum");

                entity.Property(e => e.PartnerOldNew).HasColumnName("partner_old_new");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("quote_id");

                entity.Property(e => e.ResEcJaroScore).HasColumnName("res_ec_jaro_score");

                entity.Property(e => e.ResEcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_ec_key_flag");

                entity.Property(e => e.ResellerAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("reseller_address");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(500)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.RmaNumber)
                    .HasMaxLength(50)
                    .HasColumnName("rma_number");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SerialNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number_orig");

                entity.Property(e => e.ShiptoAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("shipto_address");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShpListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_list_amt");

                entity.Property(e => e.ShpNetAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_net_amt");

                entity.Property(e => e.ShpSnCnt).HasColumnName("shp_sn_cnt");

                entity.Property(e => e.ShpSnWithSvc).HasColumnName("shp_sn_with_svc");

                entity.Property(e => e.ShpSvcEligibleCnt).HasColumnName("shp_svc_eligible_cnt");

                entity.Property(e => e.SnDelta)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("sn_delta");

                entity.Property(e => e.SnOldNew).HasColumnName("sn_old_new");

                entity.Property(e => e.SnShippedCntPso).HasColumnName("sn_shipped_cnt_pso");

                entity.Property(e => e.SnWithSvcPso).HasColumnName("sn_with_svc_pso");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoDelta)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("so_delta");

                entity.Property(e => e.SoDeltaSum).HasColumnName("so_delta_sum");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("so_number_orig");

                entity.Property(e => e.SoOldNew).HasColumnName("so_old_new");

                entity.Property(e => e.SoType)
                    .HasMaxLength(250)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("soldto_address");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SourceImportId).HasColumnName("source_import_id");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.SvcBilltoCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("svc_billto_country_code");

                entity.Property(e => e.SvcBilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_billto_key");

                entity.Property(e => e.SvcBilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_billto_name");

                entity.Property(e => e.SvcContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_creation_date");

                entity.Property(e => e.SvcContractLineCreation)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_line_creation");

                entity.Property(e => e.SvcContractLineStatus)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_line_status");

                entity.Property(e => e.SvcContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_number");

                entity.Property(e => e.SvcContractStatus)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_status");

                entity.Property(e => e.SvcContractType)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_type");

                entity.Property(e => e.SvcCurrency)
                    .HasMaxLength(50)
                    .HasColumnName("svc_currency");

                entity.Property(e => e.SvcEndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_city");

                entity.Property(e => e.SvcEndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_country_code");

                entity.Property(e => e.SvcEndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_country_name");

                entity.Property(e => e.SvcEndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_key");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_name");

                entity.Property(e => e.SvcEndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_theater");

                entity.Property(e => e.SvcEndDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_end_date");

                entity.Property(e => e.SvcInstalledAtCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_country_code");

                entity.Property(e => e.SvcInstalledAtCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_installed_at_country_name");

                entity.Property(e => e.SvcInstalledAtDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_district");

                entity.Property(e => e.SvcInstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_installed_at_key");

                entity.Property(e => e.SvcInstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_name");

                entity.Property(e => e.SvcListValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_list_value");

                entity.Property(e => e.SvcMaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_desc");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcNetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_net_value");

                entity.Property(e => e.SvcPayerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_country");

                entity.Property(e => e.SvcPayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_payer_key");

                entity.Property(e => e.SvcPayerName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_name");

                entity.Property(e => e.SvcSalesOrder)
                    .HasMaxLength(50)
                    .HasColumnName("svc_sales_order");

                entity.Property(e => e.SvcStartDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_start_date");

                entity.Property(e => e.TargetFlag)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("target_flag");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(250)
                    .HasColumnName("transaction_type");
            });

            modelBuilder.Entity<GmeFlaggedTwbe>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_flagged_twbe", "dev");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("am_country_name");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.AvgDiscPerCntry).HasColumnName("avg_disc_per_cntry");

                entity.Property(e => e.BilltoAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("billto_address");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .HasColumnName("claim_status");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_item");

                entity.Property(e => e.DiscPerc)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("disc_perc");

                entity.Property(e => e.DistiAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("disti_address");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(250)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.DrspPosId).HasColumnName("drsp_pos_id");

                entity.Property(e => e.EcSvcJaroScore).HasColumnName("ec_svc_jaro_score");

                entity.Property(e => e.EcSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_key_flag");

                entity.Property(e => e.EcSvcSenzingScore).HasColumnName("ec_svc_senzing_score");

                entity.Property(e => e.EndCustAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("end_cust_address");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("end_cust_theater");

                entity.Property(e => e.EntityExceptionFlag)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("entity_exception_flag");

                entity.Property(e => e.EolDate)
                    .HasColumnType("date")
                    .HasColumnName("eol_date");

                entity.Property(e => e.EosDate)
                    .HasColumnType("date")
                    .HasColumnName("eos_date");

                entity.Property(e => e.GlobalAcctScore).HasColumnName("global_acct_score");

                entity.Property(e => e.GmeFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("gme_flag");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.MspAcctScore).HasColumnName("msp_acct_score");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.ProdFamily)
                    .HasMaxLength(150)
                    .HasColumnName("prod_family");

                entity.Property(e => e.ProdGroup)
                    .HasMaxLength(150)
                    .HasColumnName("prod_group");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("quote_id");

                entity.Property(e => e.ResEcJaroScore).HasColumnName("res_ec_jaro_score");

                entity.Property(e => e.ResEcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_ec_key_flag");

                entity.Property(e => e.ResellerAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("reseller_address");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.RmaNumber)
                    .HasMaxLength(50)
                    .HasColumnName("rma_number");

                entity.Property(e => e.SalesAchievement)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("sales_achievement");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SerialNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number_orig");

                entity.Property(e => e.ShiptoAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("shipto_address");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShpListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_list_amt");

                entity.Property(e => e.ShpNetAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_net_amt");

                entity.Property(e => e.ShpSnCnt).HasColumnName("shp_sn_cnt");

                entity.Property(e => e.ShpSnWithSvc).HasColumnName("shp_sn_with_svc");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("so_number_orig");

                entity.Property(e => e.SoType)
                    .HasMaxLength(250)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("soldto_address");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SourceImportId).HasColumnName("source_import_id");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.SvcBilltoCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("svc_billto_country_code");

                entity.Property(e => e.SvcBilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_billto_key");

                entity.Property(e => e.SvcBilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_billto_name");

                entity.Property(e => e.SvcContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_creation_date");

                entity.Property(e => e.SvcContractLineCreation)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_line_creation");

                entity.Property(e => e.SvcContractLineStatus)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_line_status");

                entity.Property(e => e.SvcContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_number");

                entity.Property(e => e.SvcContractStatus)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_status");

                entity.Property(e => e.SvcContractType)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_type");

                entity.Property(e => e.SvcCurrency)
                    .HasMaxLength(50)
                    .HasColumnName("svc_currency");

                entity.Property(e => e.SvcEndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_city");

                entity.Property(e => e.SvcEndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_country_code");

                entity.Property(e => e.SvcEndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_country_name");

                entity.Property(e => e.SvcEndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_key");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_name");

                entity.Property(e => e.SvcEndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_theater");

                entity.Property(e => e.SvcEndDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_end_date");

                entity.Property(e => e.SvcInstalledAtCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_country_code");

                entity.Property(e => e.SvcInstalledAtCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_installed_at_country_name");

                entity.Property(e => e.SvcInstalledAtDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_district");

                entity.Property(e => e.SvcInstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_installed_at_key");

                entity.Property(e => e.SvcInstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_name");

                entity.Property(e => e.SvcListValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_list_value");

                entity.Property(e => e.SvcMaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_desc");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcNetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_net_value");

                entity.Property(e => e.SvcPayerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_country");

                entity.Property(e => e.SvcPayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_payer_key");

                entity.Property(e => e.SvcPayerName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_name");

                entity.Property(e => e.SvcSalesOrder)
                    .HasMaxLength(50)
                    .HasColumnName("svc_sales_order");

                entity.Property(e => e.SvcStartDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_start_date");

                entity.Property(e => e.TargetFlag)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("target_flag");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(250)
                    .HasColumnName("transaction_type");
            });

            modelBuilder.Entity<GmeFlaggedTwbe1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_flagged_twbe1", "dev");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("am_country_name");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.AvgDiscPerCntry).HasColumnName("avg_disc_per_cntry");

                entity.Property(e => e.BilltoAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("billto_address");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .HasColumnName("claim_status");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_item");

                entity.Property(e => e.DiscPerc)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("disc_perc");

                entity.Property(e => e.DistiAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("disti_address");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(250)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.DrspPosId).HasColumnName("drsp_pos_id");

                entity.Property(e => e.EcCpiScore).HasColumnName("ec_cpi_score");

                entity.Property(e => e.EcSvcJaroScore).HasColumnName("ec_svc_jaro_score");

                entity.Property(e => e.EcSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_key_flag");

                entity.Property(e => e.EcSvcSenzingScore).HasColumnName("ec_svc_senzing_score");

                entity.Property(e => e.EndCustAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("end_cust_address");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("end_cust_theater");

                entity.Property(e => e.EntityExceptionFlag)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("entity_exception_flag");

                entity.Property(e => e.EolDate)
                    .HasColumnType("date")
                    .HasColumnName("eol_date");

                entity.Property(e => e.EosDate)
                    .HasColumnType("date")
                    .HasColumnName("eos_date");

                entity.Property(e => e.FiscalQuarter)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("fiscal_quarter");

                entity.Property(e => e.GlobalAcctScore).HasColumnName("global_acct_score");

                entity.Property(e => e.GmeFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("gme_flag");

                entity.Property(e => e.IsPublicSector)
                    .HasMaxLength(10)
                    .HasColumnName("isPublicSector");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.MspAcctScore).HasColumnName("msp_acct_score");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.ProdFamily)
                    .HasMaxLength(150)
                    .HasColumnName("prod_family");

                entity.Property(e => e.ProdGroup)
                    .HasMaxLength(150)
                    .HasColumnName("prod_group");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("quote_id");

                entity.Property(e => e.ResEcJaroScore).HasColumnName("res_ec_jaro_score");

                entity.Property(e => e.ResEcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_ec_key_flag");

                entity.Property(e => e.ResellerAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("reseller_address");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.RmaNumber)
                    .HasMaxLength(50)
                    .HasColumnName("rma_number");

                entity.Property(e => e.SalesAchievement)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("sales_achievement");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SerialNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number_orig");

                entity.Property(e => e.ShiptoAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("shipto_address");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShpListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_list_amt");

                entity.Property(e => e.ShpNetAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_net_amt");

                entity.Property(e => e.ShpSnCnt).HasColumnName("shp_sn_cnt");

                entity.Property(e => e.ShpSnWithSvc).HasColumnName("shp_sn_with_svc");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("so_number_orig");

                entity.Property(e => e.SoType)
                    .HasMaxLength(250)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("soldto_address");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SourceImportId).HasColumnName("source_import_id");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.SvcBilltoCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("svc_billto_country_code");

                entity.Property(e => e.SvcBilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_billto_key");

                entity.Property(e => e.SvcBilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_billto_name");

                entity.Property(e => e.SvcContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_creation_date");

                entity.Property(e => e.SvcContractLineCreation)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_line_creation");

                entity.Property(e => e.SvcContractLineStatus)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_line_status");

                entity.Property(e => e.SvcContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_number");

                entity.Property(e => e.SvcContractStatus)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_status");

                entity.Property(e => e.SvcContractType)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_type");

                entity.Property(e => e.SvcCurrency)
                    .HasMaxLength(50)
                    .HasColumnName("svc_currency");

                entity.Property(e => e.SvcEcCpiScore).HasColumnName("svc_ec_cpi_score");

                entity.Property(e => e.SvcEndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_city");

                entity.Property(e => e.SvcEndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_country_code");

                entity.Property(e => e.SvcEndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_country_name");

                entity.Property(e => e.SvcEndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_key");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_name");

                entity.Property(e => e.SvcEndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_theater");

                entity.Property(e => e.SvcEndDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_end_date");

                entity.Property(e => e.SvcInstalledAtCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_country_code");

                entity.Property(e => e.SvcInstalledAtCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_installed_at_country_name");

                entity.Property(e => e.SvcInstalledAtDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_district");

                entity.Property(e => e.SvcInstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_installed_at_key");

                entity.Property(e => e.SvcInstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_name");

                entity.Property(e => e.SvcListValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_list_value");

                entity.Property(e => e.SvcMaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_desc");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcNetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_net_value");

                entity.Property(e => e.SvcPayerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_country");

                entity.Property(e => e.SvcPayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_payer_key");

                entity.Property(e => e.SvcPayerName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_name");

                entity.Property(e => e.SvcSalesOrder)
                    .HasMaxLength(50)
                    .HasColumnName("svc_sales_order");

                entity.Property(e => e.SvcStartDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_start_date");

                entity.Property(e => e.TargetFlag)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("target_flag");

                entity.Property(e => e.TotNetAmtByQ)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("tot_net_amt_ByQ");

                entity.Property(e => e.TotNetAmtWithSvcByQ)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("tot_net_amt_with_svc_ByQ");

                entity.Property(e => e.TotSnShippedByQ).HasColumnName("tot_sn_shipped_ByQ");

                entity.Property(e => e.TotSnWithSvcByQ).HasColumnName("tot_sn_with_svc_ByQ");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(250)
                    .HasColumnName("transaction_type");
            });

            modelBuilder.Entity<GmeFlaggedTwbe1Vw>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("gme_flagged_twbe1_vw", "dev");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("am_country_name");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.BilltoAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("billto_address");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .HasColumnName("claim_status");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_item");

                entity.Property(e => e.DiscPerc)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("disc_perc");

                entity.Property(e => e.DistiAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("disti_address");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(250)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.DrspPosId).HasColumnName("drsp_pos_id");

                entity.Property(e => e.EcCpiScore).HasColumnName("ec_cpi_score");

                entity.Property(e => e.EcSvcJaroScore).HasColumnName("ec_svc_jaro_score");

                entity.Property(e => e.EcSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_key_flag");

                entity.Property(e => e.EcSvcSenzingScore).HasColumnName("ec_svc_senzing_score");

                entity.Property(e => e.EndCustAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("end_cust_address");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("end_cust_theater");

                entity.Property(e => e.EntityExceptionFlag)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("entity_exception_flag");

                entity.Property(e => e.EolDate)
                    .HasColumnType("date")
                    .HasColumnName("eol_date");

                entity.Property(e => e.EosDate)
                    .HasColumnType("date")
                    .HasColumnName("eos_date");

                entity.Property(e => e.FiscalQuarter)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("fiscal_quarter");

                entity.Property(e => e.GlobalAcctScore).HasColumnName("global_acct_score");

                entity.Property(e => e.GmeFlag)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("gme_flag");

                entity.Property(e => e.IsPublicSector)
                    .HasMaxLength(10)
                    .HasColumnName("isPublicSector");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.MspAcctScore).HasColumnName("msp_acct_score");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.ProdFamily)
                    .HasMaxLength(150)
                    .HasColumnName("prod_family");

                entity.Property(e => e.ProdGroup)
                    .HasMaxLength(150)
                    .HasColumnName("prod_group");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("quote_id");

                entity.Property(e => e.ResEcJaroScore).HasColumnName("res_ec_jaro_score");

                entity.Property(e => e.ResEcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_ec_key_flag");

                entity.Property(e => e.ResellerAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("reseller_address");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.RmaNumber)
                    .HasMaxLength(50)
                    .HasColumnName("rma_number");

                entity.Property(e => e.SalesAchievement)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("sales_achievement");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SerialNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number_orig");

                entity.Property(e => e.ShiptoAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("shipto_address");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShpListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_list_amt");

                entity.Property(e => e.ShpNetAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_net_amt");

                entity.Property(e => e.ShpSnCnt).HasColumnName("shp_sn_cnt");

                entity.Property(e => e.ShpSnWithSvc).HasColumnName("shp_sn_with_svc");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("so_number_orig");

                entity.Property(e => e.SoType)
                    .HasMaxLength(250)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("soldto_address");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SourceImportId).HasColumnName("source_import_id");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.SvcBilltoCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("svc_billto_country_code");

                entity.Property(e => e.SvcBilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_billto_key");

                entity.Property(e => e.SvcBilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_billto_name");

                entity.Property(e => e.SvcContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_creation_date");

                entity.Property(e => e.SvcContractLineCreation)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_line_creation");

                entity.Property(e => e.SvcContractLineStatus)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_line_status");

                entity.Property(e => e.SvcContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_number");

                entity.Property(e => e.SvcContractStatus)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_status");

                entity.Property(e => e.SvcContractType)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_type");

                entity.Property(e => e.SvcCurrency)
                    .HasMaxLength(50)
                    .HasColumnName("svc_currency");

                entity.Property(e => e.SvcEcCpiScore).HasColumnName("svc_ec_cpi_score");

                entity.Property(e => e.SvcEndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_city");

                entity.Property(e => e.SvcEndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_country_code");

                entity.Property(e => e.SvcEndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_country_name");

                entity.Property(e => e.SvcEndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_key");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_name");

                entity.Property(e => e.SvcEndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_theater");

                entity.Property(e => e.SvcEndDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_end_date");

                entity.Property(e => e.SvcInstalledAtCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_country_code");

                entity.Property(e => e.SvcInstalledAtCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_installed_at_country_name");

                entity.Property(e => e.SvcInstalledAtDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_district");

                entity.Property(e => e.SvcInstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_installed_at_key");

                entity.Property(e => e.SvcInstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_name");

                entity.Property(e => e.SvcListValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_list_value");

                entity.Property(e => e.SvcMaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_desc");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcNetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_net_value");

                entity.Property(e => e.SvcPayerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_country");

                entity.Property(e => e.SvcPayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_payer_key");

                entity.Property(e => e.SvcPayerName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_name");

                entity.Property(e => e.SvcSalesOrder)
                    .HasMaxLength(50)
                    .HasColumnName("svc_sales_order");

                entity.Property(e => e.SvcStartDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_start_date");

                entity.Property(e => e.TargetFlag)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("target_flag");

                entity.Property(e => e.TotNetAmtByQ)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("tot_net_amt_ByQ");

                entity.Property(e => e.TotNetAmtWithSvcByQ)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("tot_net_amt_with_svc_ByQ");

                entity.Property(e => e.TotSnShippedByQ).HasColumnName("tot_sn_shipped_ByQ");

                entity.Property(e => e.TotSnWithSvcByQ).HasColumnName("tot_sn_with_svc_ByQ");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(250)
                    .HasColumnName("transaction_type");
            });

            modelBuilder.Entity<GmeFlaggedTwbe2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_flagged_twbe2", "dev");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("am_country_name");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.AvgDiscPerCntry).HasColumnName("avg_disc_per_cntry");

                entity.Property(e => e.BilltoAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("billto_address");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .HasColumnName("claim_status");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_item");

                entity.Property(e => e.DiscPerc)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("disc_perc");

                entity.Property(e => e.DistiAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("disti_address");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(250)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.DrspPosId).HasColumnName("drsp_pos_id");

                entity.Property(e => e.EcCpiScore).HasColumnName("ec_cpi_score");

                entity.Property(e => e.EcSvcJaroScore).HasColumnName("ec_svc_jaro_score");

                entity.Property(e => e.EcSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_key_flag");

                entity.Property(e => e.EcSvcSenzingScore).HasColumnName("ec_svc_senzing_score");

                entity.Property(e => e.EndCustAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("end_cust_address");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("end_cust_theater");

                entity.Property(e => e.EntityExceptionFlag)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("entity_exception_flag");

                entity.Property(e => e.EolDate)
                    .HasColumnType("date")
                    .HasColumnName("eol_date");

                entity.Property(e => e.EosDate)
                    .HasColumnType("date")
                    .HasColumnName("eos_date");

                entity.Property(e => e.FiscalQuarter)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("fiscal_quarter");

                entity.Property(e => e.GlobalAcctScore).HasColumnName("global_acct_score");

                entity.Property(e => e.GmeFlag)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("gme_flag");

                entity.Property(e => e.IsPublicSector)
                    .HasMaxLength(10)
                    .HasColumnName("isPublicSector");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.MspAcctScore).HasColumnName("msp_acct_score");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.ProdFamily)
                    .HasMaxLength(150)
                    .HasColumnName("prod_family");

                entity.Property(e => e.ProdGroup)
                    .HasMaxLength(150)
                    .HasColumnName("prod_group");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("quote_id");

                entity.Property(e => e.ResEcJaroScore).HasColumnName("res_ec_jaro_score");

                entity.Property(e => e.ResEcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_ec_key_flag");

                entity.Property(e => e.ResellerAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("reseller_address");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.RmaNumber)
                    .HasMaxLength(50)
                    .HasColumnName("rma_number");

                entity.Property(e => e.SalesAchievement)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("sales_achievement");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SerialNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number_orig");

                entity.Property(e => e.ShiptoAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("shipto_address");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShpListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_list_amt");

                entity.Property(e => e.ShpNetAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_net_amt");

                entity.Property(e => e.ShpSnCnt).HasColumnName("shp_sn_cnt");

                entity.Property(e => e.ShpSnWithSvc).HasColumnName("shp_sn_with_svc");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("so_number_orig");

                entity.Property(e => e.SoType)
                    .HasMaxLength(250)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("soldto_address");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SourceImportId).HasColumnName("source_import_id");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.SvcBilltoCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("svc_billto_country_code");

                entity.Property(e => e.SvcBilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_billto_key");

                entity.Property(e => e.SvcBilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_billto_name");

                entity.Property(e => e.SvcContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_creation_date");

                entity.Property(e => e.SvcContractLineCreation)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_line_creation");

                entity.Property(e => e.SvcContractLineStatus)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_line_status");

                entity.Property(e => e.SvcContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_number");

                entity.Property(e => e.SvcContractStatus)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_status");

                entity.Property(e => e.SvcContractType)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_type");

                entity.Property(e => e.SvcCurrency)
                    .HasMaxLength(50)
                    .HasColumnName("svc_currency");

                entity.Property(e => e.SvcEcCpiScore).HasColumnName("svc_ec_cpi_score");

                entity.Property(e => e.SvcEndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_city");

                entity.Property(e => e.SvcEndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_country_code");

                entity.Property(e => e.SvcEndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_country_name");

                entity.Property(e => e.SvcEndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_key");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_name");

                entity.Property(e => e.SvcEndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_theater");

                entity.Property(e => e.SvcEndDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_end_date");

                entity.Property(e => e.SvcInstalledAtCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_country_code");

                entity.Property(e => e.SvcInstalledAtCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_installed_at_country_name");

                entity.Property(e => e.SvcInstalledAtDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_district");

                entity.Property(e => e.SvcInstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_installed_at_key");

                entity.Property(e => e.SvcInstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_name");

                entity.Property(e => e.SvcListValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_list_value");

                entity.Property(e => e.SvcMaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_desc");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcNetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_net_value");

                entity.Property(e => e.SvcPayerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_country");

                entity.Property(e => e.SvcPayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_payer_key");

                entity.Property(e => e.SvcPayerName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_name");

                entity.Property(e => e.SvcSalesOrder)
                    .HasMaxLength(50)
                    .HasColumnName("svc_sales_order");

                entity.Property(e => e.SvcStartDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_start_date");

                entity.Property(e => e.TargetFlag)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("target_flag");

                entity.Property(e => e.TotNetAmtByQcntry)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("tot_net_amt_ByQCntry");

                entity.Property(e => e.TotNetAmtWithSvcByQcntry)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("tot_net_amt_with_svc_ByQCntry");

                entity.Property(e => e.TotSnShippedByQcntry).HasColumnName("tot_sn_shipped_ByQCntry");

                entity.Property(e => e.TotSnWithSvcByQcntry).HasColumnName("tot_sn_with_svc_ByQCntry");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(250)
                    .HasColumnName("transaction_type");
            });

            modelBuilder.Entity<GmeFlaggedTwbe2Vw>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("gme_flagged_twbe2_vw", "dev");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("am_country_name");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.BilltoAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("billto_address");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .HasColumnName("claim_status");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_item");

                entity.Property(e => e.DiscPerc)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("disc_perc");

                entity.Property(e => e.DistiAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("disti_address");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(250)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.DrspPosId).HasColumnName("drsp_pos_id");

                entity.Property(e => e.EcCpiScore).HasColumnName("ec_cpi_score");

                entity.Property(e => e.EcSvcJaroScore).HasColumnName("ec_svc_jaro_score");

                entity.Property(e => e.EcSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_key_flag");

                entity.Property(e => e.EcSvcSenzingScore).HasColumnName("ec_svc_senzing_score");

                entity.Property(e => e.EndCustAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("end_cust_address");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("end_cust_theater");

                entity.Property(e => e.EntityExceptionFlag)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("entity_exception_flag");

                entity.Property(e => e.EolDate)
                    .HasColumnType("date")
                    .HasColumnName("eol_date");

                entity.Property(e => e.EosDate)
                    .HasColumnType("date")
                    .HasColumnName("eos_date");

                entity.Property(e => e.FiscalQuarter)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("fiscal_quarter");

                entity.Property(e => e.GlobalAcctScore).HasColumnName("global_acct_score");

                entity.Property(e => e.GmeFlag)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("gme_flag");

                entity.Property(e => e.IsPublicSector)
                    .HasMaxLength(10)
                    .HasColumnName("isPublicSector");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.MspAcctScore).HasColumnName("msp_acct_score");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.ProdFamily)
                    .HasMaxLength(150)
                    .HasColumnName("prod_family");

                entity.Property(e => e.ProdGroup)
                    .HasMaxLength(150)
                    .HasColumnName("prod_group");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("quote_id");

                entity.Property(e => e.ResEcJaroScore).HasColumnName("res_ec_jaro_score");

                entity.Property(e => e.ResEcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_ec_key_flag");

                entity.Property(e => e.ResellerAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("reseller_address");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.RmaNumber)
                    .HasMaxLength(50)
                    .HasColumnName("rma_number");

                entity.Property(e => e.SalesAchievement)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("sales_achievement");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SerialNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number_orig");

                entity.Property(e => e.ShiptoAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("shipto_address");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShpListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_list_amt");

                entity.Property(e => e.ShpNetAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_net_amt");

                entity.Property(e => e.ShpSnCnt).HasColumnName("shp_sn_cnt");

                entity.Property(e => e.ShpSnWithSvc).HasColumnName("shp_sn_with_svc");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("so_number_orig");

                entity.Property(e => e.SoType)
                    .HasMaxLength(250)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("soldto_address");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SourceImportId).HasColumnName("source_import_id");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.SvcBilltoCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("svc_billto_country_code");

                entity.Property(e => e.SvcBilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_billto_key");

                entity.Property(e => e.SvcBilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_billto_name");

                entity.Property(e => e.SvcContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_creation_date");

                entity.Property(e => e.SvcContractLineCreation)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_line_creation");

                entity.Property(e => e.SvcContractLineStatus)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_line_status");

                entity.Property(e => e.SvcContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_number");

                entity.Property(e => e.SvcContractStatus)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_status");

                entity.Property(e => e.SvcContractType)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_type");

                entity.Property(e => e.SvcCurrency)
                    .HasMaxLength(50)
                    .HasColumnName("svc_currency");

                entity.Property(e => e.SvcEcCpiScore).HasColumnName("svc_ec_cpi_score");

                entity.Property(e => e.SvcEndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_city");

                entity.Property(e => e.SvcEndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_country_code");

                entity.Property(e => e.SvcEndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_country_name");

                entity.Property(e => e.SvcEndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_key");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_name");

                entity.Property(e => e.SvcEndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_theater");

                entity.Property(e => e.SvcEndDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_end_date");

                entity.Property(e => e.SvcInstalledAtCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_country_code");

                entity.Property(e => e.SvcInstalledAtCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_installed_at_country_name");

                entity.Property(e => e.SvcInstalledAtDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_district");

                entity.Property(e => e.SvcInstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_installed_at_key");

                entity.Property(e => e.SvcInstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_name");

                entity.Property(e => e.SvcListValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_list_value");

                entity.Property(e => e.SvcMaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_desc");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcNetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_net_value");

                entity.Property(e => e.SvcPayerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_country");

                entity.Property(e => e.SvcPayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_payer_key");

                entity.Property(e => e.SvcPayerName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_name");

                entity.Property(e => e.SvcSalesOrder)
                    .HasMaxLength(50)
                    .HasColumnName("svc_sales_order");

                entity.Property(e => e.SvcStartDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_start_date");

                entity.Property(e => e.TargetFlag)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("target_flag");

                entity.Property(e => e.TotNetAmtByQcntry)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("tot_net_amt_ByQCntry");

                entity.Property(e => e.TotNetAmtWithSvcByQcntry)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("tot_net_amt_with_svc_ByQCntry");

                entity.Property(e => e.TotSnShippedByQcntry).HasColumnName("tot_sn_shipped_ByQCntry");

                entity.Property(e => e.TotSnWithSvcByQcntry).HasColumnName("tot_sn_with_svc_ByQCntry");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(250)
                    .HasColumnName("transaction_type");
            });

            modelBuilder.Entity<GmeFlaggedTwbe2a>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_flagged_twbe2a", "dev");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("am_country_name");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.AvgDiscPerCntry).HasColumnName("avg_disc_per_cntry");

                entity.Property(e => e.BilltoAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("billto_address");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .HasColumnName("claim_status");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_item");

                entity.Property(e => e.DiscPerc)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("disc_perc");

                entity.Property(e => e.DistiAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("disti_address");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(250)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.DrspPosId).HasColumnName("drsp_pos_id");

                entity.Property(e => e.EcCpiScore).HasColumnName("ec_cpi_score");

                entity.Property(e => e.EcSvcJaroScore).HasColumnName("ec_svc_jaro_score");

                entity.Property(e => e.EcSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_key_flag");

                entity.Property(e => e.EcSvcSenzingScore).HasColumnName("ec_svc_senzing_score");

                entity.Property(e => e.EndCustAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("end_cust_address");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("end_cust_theater");

                entity.Property(e => e.EntityExceptionFlag)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("entity_exception_flag");

                entity.Property(e => e.EolDate)
                    .HasColumnType("date")
                    .HasColumnName("eol_date");

                entity.Property(e => e.EosDate)
                    .HasColumnType("date")
                    .HasColumnName("eos_date");

                entity.Property(e => e.FiscalQuarter)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("fiscal_quarter");

                entity.Property(e => e.GlobalAcctScore).HasColumnName("global_acct_score");

                entity.Property(e => e.GmeFlag)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("gme_flag");

                entity.Property(e => e.IsPublicSector)
                    .HasMaxLength(10)
                    .HasColumnName("isPublicSector");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.MspAcctScore).HasColumnName("msp_acct_score");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.ProdFamily)
                    .HasMaxLength(150)
                    .HasColumnName("prod_family");

                entity.Property(e => e.ProdGroup)
                    .HasMaxLength(150)
                    .HasColumnName("prod_group");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("quote_id");

                entity.Property(e => e.ResEcJaroScore).HasColumnName("res_ec_jaro_score");

                entity.Property(e => e.ResEcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_ec_key_flag");

                entity.Property(e => e.ResellerAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("reseller_address");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.RmaNumber)
                    .HasMaxLength(50)
                    .HasColumnName("rma_number");

                entity.Property(e => e.SalesAchievement)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("sales_achievement");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SerialNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number_orig");

                entity.Property(e => e.ShiptoAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("shipto_address");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShpListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_list_amt");

                entity.Property(e => e.ShpNetAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_net_amt");

                entity.Property(e => e.ShpSnCnt).HasColumnName("shp_sn_cnt");

                entity.Property(e => e.ShpSnWithSvc).HasColumnName("shp_sn_with_svc");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("so_number_orig");

                entity.Property(e => e.SoType)
                    .HasMaxLength(250)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("soldto_address");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SourceImportId).HasColumnName("source_import_id");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.SvcBilltoCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("svc_billto_country_code");

                entity.Property(e => e.SvcBilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_billto_key");

                entity.Property(e => e.SvcBilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_billto_name");

                entity.Property(e => e.SvcContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_creation_date");

                entity.Property(e => e.SvcContractLineCreation)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_line_creation");

                entity.Property(e => e.SvcContractLineStatus)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_line_status");

                entity.Property(e => e.SvcContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_number");

                entity.Property(e => e.SvcContractStatus)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_status");

                entity.Property(e => e.SvcContractType)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_type");

                entity.Property(e => e.SvcCurrency)
                    .HasMaxLength(50)
                    .HasColumnName("svc_currency");

                entity.Property(e => e.SvcEcCpiScore).HasColumnName("svc_ec_cpi_score");

                entity.Property(e => e.SvcEndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_city");

                entity.Property(e => e.SvcEndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_country_code");

                entity.Property(e => e.SvcEndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_country_name");

                entity.Property(e => e.SvcEndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_key");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_name");

                entity.Property(e => e.SvcEndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_theater");

                entity.Property(e => e.SvcEndDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_end_date");

                entity.Property(e => e.SvcInstalledAtCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_country_code");

                entity.Property(e => e.SvcInstalledAtCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_installed_at_country_name");

                entity.Property(e => e.SvcInstalledAtDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_district");

                entity.Property(e => e.SvcInstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_installed_at_key");

                entity.Property(e => e.SvcInstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_name");

                entity.Property(e => e.SvcListValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_list_value");

                entity.Property(e => e.SvcMaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_desc");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcNetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_net_value");

                entity.Property(e => e.SvcPayerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_country");

                entity.Property(e => e.SvcPayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_payer_key");

                entity.Property(e => e.SvcPayerName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_name");

                entity.Property(e => e.SvcSalesOrder)
                    .HasMaxLength(50)
                    .HasColumnName("svc_sales_order");

                entity.Property(e => e.SvcStartDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_start_date");

                entity.Property(e => e.TargetFlag)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("target_flag");

                entity.Property(e => e.TotNetAmtByCntry)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("tot_net_amt_ByCntry");

                entity.Property(e => e.TotNetAmtWithSvcByCntry)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("tot_net_amt_with_svc_ByCntry");

                entity.Property(e => e.TotSnShippedByCntry).HasColumnName("tot_sn_shipped_ByCntry");

                entity.Property(e => e.TotSnWithSvcByCntry).HasColumnName("tot_sn_with_svc_ByCntry");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(250)
                    .HasColumnName("transaction_type");
            });

            modelBuilder.Entity<GmeFlaggedTwbe3>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_flagged_twbe3", "dev");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("am_country_name");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.AvgDiscPerCntry).HasColumnName("avg_disc_per_cntry");

                entity.Property(e => e.BilltoAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("billto_address");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .HasColumnName("claim_status");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_item");

                entity.Property(e => e.DiscPerc)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("disc_perc");

                entity.Property(e => e.DistiAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("disti_address");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(250)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.DrspPosId).HasColumnName("drsp_pos_id");

                entity.Property(e => e.EcCpiScore).HasColumnName("ec_cpi_score");

                entity.Property(e => e.EcSvcJaroScore).HasColumnName("ec_svc_jaro_score");

                entity.Property(e => e.EcSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_key_flag");

                entity.Property(e => e.EcSvcSenzingScore).HasColumnName("ec_svc_senzing_score");

                entity.Property(e => e.EndCustAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("end_cust_address");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("end_cust_theater");

                entity.Property(e => e.EntityExceptionFlag)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("entity_exception_flag");

                entity.Property(e => e.EolDate)
                    .HasColumnType("date")
                    .HasColumnName("eol_date");

                entity.Property(e => e.EosDate)
                    .HasColumnType("date")
                    .HasColumnName("eos_date");

                entity.Property(e => e.FiscalQuarter)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("fiscal_quarter");

                entity.Property(e => e.GlobalAcctScore).HasColumnName("global_acct_score");

                entity.Property(e => e.GmeFlag)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("gme_flag");

                entity.Property(e => e.IsPublicSector)
                    .HasMaxLength(10)
                    .HasColumnName("isPublicSector");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.MspAcctScore).HasColumnName("msp_acct_score");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.ProdFamily)
                    .HasMaxLength(150)
                    .HasColumnName("prod_family");

                entity.Property(e => e.ProdGroup)
                    .HasMaxLength(150)
                    .HasColumnName("prod_group");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("quote_id");

                entity.Property(e => e.ResEcJaroScore).HasColumnName("res_ec_jaro_score");

                entity.Property(e => e.ResEcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_ec_key_flag");

                entity.Property(e => e.ResellerAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("reseller_address");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.RmaNumber)
                    .HasMaxLength(50)
                    .HasColumnName("rma_number");

                entity.Property(e => e.SalesAchievement)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("sales_achievement");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SerialNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number_orig");

                entity.Property(e => e.ShiptoAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("shipto_address");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShpListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_list_amt");

                entity.Property(e => e.ShpNetAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_net_amt");

                entity.Property(e => e.ShpSnCnt).HasColumnName("shp_sn_cnt");

                entity.Property(e => e.ShpSnWithSvc).HasColumnName("shp_sn_with_svc");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("so_number_orig");

                entity.Property(e => e.SoType)
                    .HasMaxLength(250)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("soldto_address");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SourceImportId).HasColumnName("source_import_id");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.SvcBilltoCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("svc_billto_country_code");

                entity.Property(e => e.SvcBilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_billto_key");

                entity.Property(e => e.SvcBilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_billto_name");

                entity.Property(e => e.SvcContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_creation_date");

                entity.Property(e => e.SvcContractLineCreation)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_line_creation");

                entity.Property(e => e.SvcContractLineStatus)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_line_status");

                entity.Property(e => e.SvcContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_number");

                entity.Property(e => e.SvcContractStatus)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_status");

                entity.Property(e => e.SvcContractType)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_type");

                entity.Property(e => e.SvcCurrency)
                    .HasMaxLength(50)
                    .HasColumnName("svc_currency");

                entity.Property(e => e.SvcEcCpiScore).HasColumnName("svc_ec_cpi_score");

                entity.Property(e => e.SvcEndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_city");

                entity.Property(e => e.SvcEndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_country_code");

                entity.Property(e => e.SvcEndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_country_name");

                entity.Property(e => e.SvcEndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_key");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_name");

                entity.Property(e => e.SvcEndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_theater");

                entity.Property(e => e.SvcEndDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_end_date");

                entity.Property(e => e.SvcInstalledAtCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_country_code");

                entity.Property(e => e.SvcInstalledAtCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_installed_at_country_name");

                entity.Property(e => e.SvcInstalledAtDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_district");

                entity.Property(e => e.SvcInstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_installed_at_key");

                entity.Property(e => e.SvcInstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_name");

                entity.Property(e => e.SvcListValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_list_value");

                entity.Property(e => e.SvcMaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_desc");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcNetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_net_value");

                entity.Property(e => e.SvcPayerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_country");

                entity.Property(e => e.SvcPayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_payer_key");

                entity.Property(e => e.SvcPayerName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_name");

                entity.Property(e => e.SvcSalesOrder)
                    .HasMaxLength(50)
                    .HasColumnName("svc_sales_order");

                entity.Property(e => e.SvcStartDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_start_date");

                entity.Property(e => e.TargetFlag)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("target_flag");

                entity.Property(e => e.TotNetAmtByProd)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("tot_net_amt_ByProd");

                entity.Property(e => e.TotNetAmtWithSvcByProd)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("tot_net_amt_with_svc_ByProd");

                entity.Property(e => e.TotSnShippedByProd).HasColumnName("tot_sn_shipped_ByProd");

                entity.Property(e => e.TotSnWithSvcByProd).HasColumnName("tot_sn_with_svc_ByProd");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(250)
                    .HasColumnName("transaction_type");
            });

            modelBuilder.Entity<GmeFlaggedTwbe3Vw>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("gme_flagged_twbe3_vw", "dev");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("am_country_name");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.BilltoAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("billto_address");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .HasColumnName("claim_status");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_item");

                entity.Property(e => e.DiscPerc)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("disc_perc");

                entity.Property(e => e.DistiAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("disti_address");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(250)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.DrspPosId).HasColumnName("drsp_pos_id");

                entity.Property(e => e.EcCpiScore).HasColumnName("ec_cpi_score");

                entity.Property(e => e.EcSvcJaroScore).HasColumnName("ec_svc_jaro_score");

                entity.Property(e => e.EcSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_key_flag");

                entity.Property(e => e.EcSvcSenzingScore).HasColumnName("ec_svc_senzing_score");

                entity.Property(e => e.EndCustAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("end_cust_address");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("end_cust_theater");

                entity.Property(e => e.EntityExceptionFlag)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("entity_exception_flag");

                entity.Property(e => e.EolDate)
                    .HasColumnType("date")
                    .HasColumnName("eol_date");

                entity.Property(e => e.EosDate)
                    .HasColumnType("date")
                    .HasColumnName("eos_date");

                entity.Property(e => e.FiscalQuarter)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("fiscal_quarter");

                entity.Property(e => e.GlobalAcctScore).HasColumnName("global_acct_score");

                entity.Property(e => e.GmeFlag)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("gme_flag");

                entity.Property(e => e.IsPublicSector)
                    .HasMaxLength(10)
                    .HasColumnName("isPublicSector");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.MspAcctScore).HasColumnName("msp_acct_score");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.ProdFamily)
                    .HasMaxLength(150)
                    .HasColumnName("prod_family");

                entity.Property(e => e.ProdGroup)
                    .HasMaxLength(150)
                    .HasColumnName("prod_group");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("quote_id");

                entity.Property(e => e.ResEcJaroScore).HasColumnName("res_ec_jaro_score");

                entity.Property(e => e.ResEcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_ec_key_flag");

                entity.Property(e => e.ResellerAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("reseller_address");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.RmaNumber)
                    .HasMaxLength(50)
                    .HasColumnName("rma_number");

                entity.Property(e => e.SalesAchievement)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("sales_achievement");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SerialNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number_orig");

                entity.Property(e => e.ShiptoAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("shipto_address");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShpListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_list_amt");

                entity.Property(e => e.ShpNetAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_net_amt");

                entity.Property(e => e.ShpSnCnt).HasColumnName("shp_sn_cnt");

                entity.Property(e => e.ShpSnWithSvc).HasColumnName("shp_sn_with_svc");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("so_number_orig");

                entity.Property(e => e.SoType)
                    .HasMaxLength(250)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("soldto_address");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SourceImportId).HasColumnName("source_import_id");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.SvcBilltoCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("svc_billto_country_code");

                entity.Property(e => e.SvcBilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_billto_key");

                entity.Property(e => e.SvcBilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_billto_name");

                entity.Property(e => e.SvcContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_creation_date");

                entity.Property(e => e.SvcContractLineCreation)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_line_creation");

                entity.Property(e => e.SvcContractLineStatus)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_line_status");

                entity.Property(e => e.SvcContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_number");

                entity.Property(e => e.SvcContractStatus)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_status");

                entity.Property(e => e.SvcContractType)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_type");

                entity.Property(e => e.SvcCurrency)
                    .HasMaxLength(50)
                    .HasColumnName("svc_currency");

                entity.Property(e => e.SvcEcCpiScore).HasColumnName("svc_ec_cpi_score");

                entity.Property(e => e.SvcEndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_city");

                entity.Property(e => e.SvcEndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_country_code");

                entity.Property(e => e.SvcEndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_country_name");

                entity.Property(e => e.SvcEndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_key");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_name");

                entity.Property(e => e.SvcEndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_theater");

                entity.Property(e => e.SvcEndDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_end_date");

                entity.Property(e => e.SvcInstalledAtCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_country_code");

                entity.Property(e => e.SvcInstalledAtCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_installed_at_country_name");

                entity.Property(e => e.SvcInstalledAtDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_district");

                entity.Property(e => e.SvcInstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_installed_at_key");

                entity.Property(e => e.SvcInstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_name");

                entity.Property(e => e.SvcListValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_list_value");

                entity.Property(e => e.SvcMaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_desc");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcNetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_net_value");

                entity.Property(e => e.SvcPayerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_country");

                entity.Property(e => e.SvcPayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_payer_key");

                entity.Property(e => e.SvcPayerName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_name");

                entity.Property(e => e.SvcSalesOrder)
                    .HasMaxLength(50)
                    .HasColumnName("svc_sales_order");

                entity.Property(e => e.SvcStartDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_start_date");

                entity.Property(e => e.TargetFlag)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("target_flag");

                entity.Property(e => e.TotNetAmtByProd)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("tot_net_amt_ByProd");

                entity.Property(e => e.TotNetAmtWithSvcByProd)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("tot_net_amt_with_svc_ByProd");

                entity.Property(e => e.TotSnShippedByProd).HasColumnName("tot_sn_shipped_ByProd");

                entity.Property(e => e.TotSnWithSvcByProd).HasColumnName("tot_sn_with_svc_ByProd");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(250)
                    .HasColumnName("transaction_type");
            });

            modelBuilder.Entity<GmeFlaggedTwbe4>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_flagged_twbe4", "dev");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("am_country_name");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.AvgDiscPerCntry).HasColumnName("avg_disc_per_cntry");

                entity.Property(e => e.BilltoAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("billto_address");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .HasColumnName("claim_status");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_item");

                entity.Property(e => e.DiscPerc)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("disc_perc");

                entity.Property(e => e.DistiAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("disti_address");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(250)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.DrspPosId).HasColumnName("drsp_pos_id");

                entity.Property(e => e.EcCpiScore).HasColumnName("ec_cpi_score");

                entity.Property(e => e.EcSvcJaroScore).HasColumnName("ec_svc_jaro_score");

                entity.Property(e => e.EcSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_key_flag");

                entity.Property(e => e.EcSvcSenzingScore).HasColumnName("ec_svc_senzing_score");

                entity.Property(e => e.EndCustAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("end_cust_address");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("end_cust_theater");

                entity.Property(e => e.EntityExceptionFlag)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("entity_exception_flag");

                entity.Property(e => e.EolDate)
                    .HasColumnType("date")
                    .HasColumnName("eol_date");

                entity.Property(e => e.EosDate)
                    .HasColumnType("date")
                    .HasColumnName("eos_date");

                entity.Property(e => e.FiscalQuarter)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("fiscal_quarter");

                entity.Property(e => e.GlobalAcctScore).HasColumnName("global_acct_score");

                entity.Property(e => e.GmeFlag)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("gme_flag");

                entity.Property(e => e.IsPublicSector)
                    .HasMaxLength(10)
                    .HasColumnName("isPublicSector");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.MspAcctScore).HasColumnName("msp_acct_score");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.ProdFamily)
                    .HasMaxLength(150)
                    .HasColumnName("prod_family");

                entity.Property(e => e.ProdGroup)
                    .HasMaxLength(150)
                    .HasColumnName("prod_group");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("quote_id");

                entity.Property(e => e.ResEcJaroScore).HasColumnName("res_ec_jaro_score");

                entity.Property(e => e.ResEcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_ec_key_flag");

                entity.Property(e => e.ResellerAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("reseller_address");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.RmaNumber)
                    .HasMaxLength(50)
                    .HasColumnName("rma_number");

                entity.Property(e => e.SalesAchievement)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("sales_achievement");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SerialNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number_orig");

                entity.Property(e => e.ShiptoAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("shipto_address");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShpListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_list_amt");

                entity.Property(e => e.ShpNetAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_net_amt");

                entity.Property(e => e.ShpSnCnt).HasColumnName("shp_sn_cnt");

                entity.Property(e => e.ShpSnWithSvc).HasColumnName("shp_sn_with_svc");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("so_number_orig");

                entity.Property(e => e.SoType)
                    .HasMaxLength(250)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("soldto_address");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SourceImportId).HasColumnName("source_import_id");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.SvcBilltoCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("svc_billto_country_code");

                entity.Property(e => e.SvcBilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_billto_key");

                entity.Property(e => e.SvcBilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_billto_name");

                entity.Property(e => e.SvcContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_creation_date");

                entity.Property(e => e.SvcContractLineCreation)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_line_creation");

                entity.Property(e => e.SvcContractLineStatus)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_line_status");

                entity.Property(e => e.SvcContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_number");

                entity.Property(e => e.SvcContractStatus)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_status");

                entity.Property(e => e.SvcContractType)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_type");

                entity.Property(e => e.SvcCurrency)
                    .HasMaxLength(50)
                    .HasColumnName("svc_currency");

                entity.Property(e => e.SvcEcCpiScore).HasColumnName("svc_ec_cpi_score");

                entity.Property(e => e.SvcEndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_city");

                entity.Property(e => e.SvcEndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_country_code");

                entity.Property(e => e.SvcEndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_country_name");

                entity.Property(e => e.SvcEndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_key");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_name");

                entity.Property(e => e.SvcEndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_theater");

                entity.Property(e => e.SvcEndDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_end_date");

                entity.Property(e => e.SvcInstalledAtCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_country_code");

                entity.Property(e => e.SvcInstalledAtCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_installed_at_country_name");

                entity.Property(e => e.SvcInstalledAtDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_district");

                entity.Property(e => e.SvcInstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_installed_at_key");

                entity.Property(e => e.SvcInstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_name");

                entity.Property(e => e.SvcListValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_list_value");

                entity.Property(e => e.SvcMaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_desc");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcNetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_net_value");

                entity.Property(e => e.SvcPayerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_country");

                entity.Property(e => e.SvcPayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_payer_key");

                entity.Property(e => e.SvcPayerName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_name");

                entity.Property(e => e.SvcSalesOrder)
                    .HasMaxLength(50)
                    .HasColumnName("svc_sales_order");

                entity.Property(e => e.SvcStartDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_start_date");

                entity.Property(e => e.TargetFlag)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("target_flag");

                entity.Property(e => e.TotNetAmtByProd)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("tot_net_amt_ByProd");

                entity.Property(e => e.TotNetAmtWithSvcByProd)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("tot_net_amt_with_svc_ByProd");

                entity.Property(e => e.TotSnShippedByProd).HasColumnName("tot_sn_shipped_ByProd");

                entity.Property(e => e.TotSnWithSvcByProd).HasColumnName("tot_sn_with_svc_ByProd");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(250)
                    .HasColumnName("transaction_type");
            });

            modelBuilder.Entity<GmeFlaggedTwbe4Vw>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("gme_flagged_twbe4_vw", "dev");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("am_country_name");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.BilltoAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("billto_address");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .HasColumnName("claim_status");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_item");

                entity.Property(e => e.DiscPerc)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("disc_perc");

                entity.Property(e => e.DistiAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("disti_address");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(250)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.DrspPosId).HasColumnName("drsp_pos_id");

                entity.Property(e => e.EcCpiScore).HasColumnName("ec_cpi_score");

                entity.Property(e => e.EcSvcJaroScore).HasColumnName("ec_svc_jaro_score");

                entity.Property(e => e.EcSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_key_flag");

                entity.Property(e => e.EcSvcSenzingScore).HasColumnName("ec_svc_senzing_score");

                entity.Property(e => e.EndCustAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("end_cust_address");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("end_cust_theater");

                entity.Property(e => e.EntityExceptionFlag)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("entity_exception_flag");

                entity.Property(e => e.EolDate)
                    .HasColumnType("date")
                    .HasColumnName("eol_date");

                entity.Property(e => e.EosDate)
                    .HasColumnType("date")
                    .HasColumnName("eos_date");

                entity.Property(e => e.FiscalQuarter)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("fiscal_quarter");

                entity.Property(e => e.GlobalAcctScore).HasColumnName("global_acct_score");

                entity.Property(e => e.GmeFlag)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("gme_flag");

                entity.Property(e => e.IsPublicSector)
                    .HasMaxLength(10)
                    .HasColumnName("isPublicSector");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.MspAcctScore).HasColumnName("msp_acct_score");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.ProdFamily)
                    .HasMaxLength(150)
                    .HasColumnName("prod_family");

                entity.Property(e => e.ProdGroup)
                    .HasMaxLength(150)
                    .HasColumnName("prod_group");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("quote_id");

                entity.Property(e => e.ResEcJaroScore).HasColumnName("res_ec_jaro_score");

                entity.Property(e => e.ResEcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_ec_key_flag");

                entity.Property(e => e.ResellerAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("reseller_address");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.RmaNumber)
                    .HasMaxLength(50)
                    .HasColumnName("rma_number");

                entity.Property(e => e.SalesAchievement)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("sales_achievement");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SerialNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number_orig");

                entity.Property(e => e.ShiptoAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("shipto_address");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShpListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_list_amt");

                entity.Property(e => e.ShpNetAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_net_amt");

                entity.Property(e => e.ShpSnCnt).HasColumnName("shp_sn_cnt");

                entity.Property(e => e.ShpSnWithSvc).HasColumnName("shp_sn_with_svc");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("so_number_orig");

                entity.Property(e => e.SoType)
                    .HasMaxLength(250)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("soldto_address");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SourceImportId).HasColumnName("source_import_id");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.SvcBilltoCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("svc_billto_country_code");

                entity.Property(e => e.SvcBilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_billto_key");

                entity.Property(e => e.SvcBilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_billto_name");

                entity.Property(e => e.SvcContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_creation_date");

                entity.Property(e => e.SvcContractLineCreation)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_line_creation");

                entity.Property(e => e.SvcContractLineStatus)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_line_status");

                entity.Property(e => e.SvcContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_number");

                entity.Property(e => e.SvcContractStatus)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_status");

                entity.Property(e => e.SvcContractType)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_type");

                entity.Property(e => e.SvcCurrency)
                    .HasMaxLength(50)
                    .HasColumnName("svc_currency");

                entity.Property(e => e.SvcEcCpiScore).HasColumnName("svc_ec_cpi_score");

                entity.Property(e => e.SvcEndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_city");

                entity.Property(e => e.SvcEndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_country_code");

                entity.Property(e => e.SvcEndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_country_name");

                entity.Property(e => e.SvcEndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_key");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_name");

                entity.Property(e => e.SvcEndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_theater");

                entity.Property(e => e.SvcEndDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_end_date");

                entity.Property(e => e.SvcInstalledAtCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_country_code");

                entity.Property(e => e.SvcInstalledAtCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_installed_at_country_name");

                entity.Property(e => e.SvcInstalledAtDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_district");

                entity.Property(e => e.SvcInstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_installed_at_key");

                entity.Property(e => e.SvcInstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_name");

                entity.Property(e => e.SvcListValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_list_value");

                entity.Property(e => e.SvcMaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_desc");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcNetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_net_value");

                entity.Property(e => e.SvcPayerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_country");

                entity.Property(e => e.SvcPayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_payer_key");

                entity.Property(e => e.SvcPayerName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_name");

                entity.Property(e => e.SvcSalesOrder)
                    .HasMaxLength(50)
                    .HasColumnName("svc_sales_order");

                entity.Property(e => e.SvcStartDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_start_date");

                entity.Property(e => e.TargetFlag)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("target_flag");

                entity.Property(e => e.TotNetAmtByProd)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("tot_net_amt_ByProd");

                entity.Property(e => e.TotNetAmtWithSvcByProd)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("tot_net_amt_with_svc_ByProd");

                entity.Property(e => e.TotSnShippedByProd).HasColumnName("tot_sn_shipped_ByProd");

                entity.Property(e => e.TotSnWithSvcByProd).HasColumnName("tot_sn_with_svc_ByProd");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(250)
                    .HasColumnName("transaction_type");
            });

            modelBuilder.Entity<GmeFlaggedTwbe5>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_flagged_twbe5", "dev");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("am_country_name");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.AvgDiscPerCntry).HasColumnName("avg_disc_per_cntry");

                entity.Property(e => e.BilltoAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("billto_address");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .HasColumnName("claim_status");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_item");

                entity.Property(e => e.DiscPerc)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("disc_perc");

                entity.Property(e => e.DistiAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("disti_address");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(250)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.DrspPosId).HasColumnName("drsp_pos_id");

                entity.Property(e => e.EcCpiScore).HasColumnName("ec_cpi_score");

                entity.Property(e => e.EcSvcJaroScore).HasColumnName("ec_svc_jaro_score");

                entity.Property(e => e.EcSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_key_flag");

                entity.Property(e => e.EcSvcSenzingScore).HasColumnName("ec_svc_senzing_score");

                entity.Property(e => e.EndCustAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("end_cust_address");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("end_cust_theater");

                entity.Property(e => e.EntityExceptionFlag)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("entity_exception_flag");

                entity.Property(e => e.EolDate)
                    .HasColumnType("date")
                    .HasColumnName("eol_date");

                entity.Property(e => e.EosDate)
                    .HasColumnType("date")
                    .HasColumnName("eos_date");

                entity.Property(e => e.FiscalQuarter)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("fiscal_quarter");

                entity.Property(e => e.GlobalAcctScore).HasColumnName("global_acct_score");

                entity.Property(e => e.GmeFlag)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("gme_flag");

                entity.Property(e => e.IsPublicSector)
                    .HasMaxLength(10)
                    .HasColumnName("isPublicSector");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.MspAcctScore).HasColumnName("msp_acct_score");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.ProdFamily)
                    .HasMaxLength(150)
                    .HasColumnName("prod_family");

                entity.Property(e => e.ProdGroup)
                    .HasMaxLength(150)
                    .HasColumnName("prod_group");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("quote_id");

                entity.Property(e => e.ResEcJaroScore).HasColumnName("res_ec_jaro_score");

                entity.Property(e => e.ResEcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_ec_key_flag");

                entity.Property(e => e.ResellerAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("reseller_address");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.RmaNumber)
                    .HasMaxLength(50)
                    .HasColumnName("rma_number");

                entity.Property(e => e.SalesAchievement)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("sales_achievement");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SerialNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number_orig");

                entity.Property(e => e.ShiptoAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("shipto_address");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShpListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_list_amt");

                entity.Property(e => e.ShpNetAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_net_amt");

                entity.Property(e => e.ShpSnCnt).HasColumnName("shp_sn_cnt");

                entity.Property(e => e.ShpSnWithSvc).HasColumnName("shp_sn_with_svc");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("so_number_orig");

                entity.Property(e => e.SoType)
                    .HasMaxLength(250)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("soldto_address");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SourceImportId).HasColumnName("source_import_id");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.SvcBilltoCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("svc_billto_country_code");

                entity.Property(e => e.SvcBilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_billto_key");

                entity.Property(e => e.SvcBilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_billto_name");

                entity.Property(e => e.SvcContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_creation_date");

                entity.Property(e => e.SvcContractLineCreation)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_line_creation");

                entity.Property(e => e.SvcContractLineStatus)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_line_status");

                entity.Property(e => e.SvcContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_number");

                entity.Property(e => e.SvcContractStatus)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_status");

                entity.Property(e => e.SvcContractType)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_type");

                entity.Property(e => e.SvcCurrency)
                    .HasMaxLength(50)
                    .HasColumnName("svc_currency");

                entity.Property(e => e.SvcEcCpiScore).HasColumnName("svc_ec_cpi_score");

                entity.Property(e => e.SvcEndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_city");

                entity.Property(e => e.SvcEndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_country_code");

                entity.Property(e => e.SvcEndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_country_name");

                entity.Property(e => e.SvcEndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_key");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_name");

                entity.Property(e => e.SvcEndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_theater");

                entity.Property(e => e.SvcEndDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_end_date");

                entity.Property(e => e.SvcInstalledAtCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_country_code");

                entity.Property(e => e.SvcInstalledAtCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_installed_at_country_name");

                entity.Property(e => e.SvcInstalledAtDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_district");

                entity.Property(e => e.SvcInstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_installed_at_key");

                entity.Property(e => e.SvcInstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_name");

                entity.Property(e => e.SvcListValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_list_value");

                entity.Property(e => e.SvcMaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_desc");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcNetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_net_value");

                entity.Property(e => e.SvcPayerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_country");

                entity.Property(e => e.SvcPayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_payer_key");

                entity.Property(e => e.SvcPayerName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_name");

                entity.Property(e => e.SvcSalesOrder)
                    .HasMaxLength(50)
                    .HasColumnName("svc_sales_order");

                entity.Property(e => e.SvcStartDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_start_date");

                entity.Property(e => e.TargetFlag)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("target_flag");

                entity.Property(e => e.TotListAmtBySvcEc)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("tot_list_amt_bySvcEC");

                entity.Property(e => e.TotNetAmtBySvcEc)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("tot_net_amt_bySvcEC");

                entity.Property(e => e.TotSnWithSvcBySvcEc).HasColumnName("tot_sn_with_svc_bySvcEC");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(250)
                    .HasColumnName("transaction_type");
            });

            modelBuilder.Entity<GmeFlaggedTwbeBak>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_flagged_twbe_bak", "bak");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("am_country_name");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.AvgDiscPerCntry).HasColumnName("avg_disc_per_cntry");

                entity.Property(e => e.BilltoAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("billto_address");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .HasColumnName("claim_status");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_item");

                entity.Property(e => e.DiscPerc)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("disc_perc");

                entity.Property(e => e.DistiAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("disti_address");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(250)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.DrspPosId).HasColumnName("drsp_pos_id");

                entity.Property(e => e.EcSvcJaroScore).HasColumnName("ec_svc_jaro_score");

                entity.Property(e => e.EcSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_key_flag");

                entity.Property(e => e.EcSvcSenzingScore).HasColumnName("ec_svc_senzing_score");

                entity.Property(e => e.EndCustAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("end_cust_address");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("end_cust_theater");

                entity.Property(e => e.EntityExceptionFlag)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("entity_exception_flag");

                entity.Property(e => e.EolDate)
                    .HasColumnType("date")
                    .HasColumnName("eol_date");

                entity.Property(e => e.EosDate)
                    .HasColumnType("date")
                    .HasColumnName("eos_date");

                entity.Property(e => e.GlobalAcctScore).HasColumnName("global_acct_score");

                entity.Property(e => e.GmeFlag)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("gme_flag");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.MspAcctScore).HasColumnName("msp_acct_score");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.ProdFamily)
                    .HasMaxLength(150)
                    .HasColumnName("prod_family");

                entity.Property(e => e.ProdGroup)
                    .HasMaxLength(150)
                    .HasColumnName("prod_group");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("quote_id");

                entity.Property(e => e.ResEcJaroScore).HasColumnName("res_ec_jaro_score");

                entity.Property(e => e.ResEcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_ec_key_flag");

                entity.Property(e => e.ResellerAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("reseller_address");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.RmaNumber)
                    .HasMaxLength(50)
                    .HasColumnName("rma_number");

                entity.Property(e => e.SalesAchievement)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("sales_achievement");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SerialNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number_orig");

                entity.Property(e => e.ShiptoAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("shipto_address");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShpListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_list_amt");

                entity.Property(e => e.ShpNetAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_net_amt");

                entity.Property(e => e.ShpSnCnt).HasColumnName("shp_sn_cnt");

                entity.Property(e => e.ShpSnWithSvc).HasColumnName("shp_sn_with_svc");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("so_number_orig");

                entity.Property(e => e.SoType)
                    .HasMaxLength(250)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("soldto_address");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SourceImportId).HasColumnName("source_import_id");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.SvcBilltoCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("svc_billto_country_code");

                entity.Property(e => e.SvcBilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_billto_key");

                entity.Property(e => e.SvcBilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_billto_name");

                entity.Property(e => e.SvcContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_creation_date");

                entity.Property(e => e.SvcContractLineCreation)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_line_creation");

                entity.Property(e => e.SvcContractLineStatus)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_line_status");

                entity.Property(e => e.SvcContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_number");

                entity.Property(e => e.SvcContractStatus)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_status");

                entity.Property(e => e.SvcContractType)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_type");

                entity.Property(e => e.SvcCurrency)
                    .HasMaxLength(50)
                    .HasColumnName("svc_currency");

                entity.Property(e => e.SvcEndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_city");

                entity.Property(e => e.SvcEndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_country_code");

                entity.Property(e => e.SvcEndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_country_name");

                entity.Property(e => e.SvcEndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_key");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_name");

                entity.Property(e => e.SvcEndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_theater");

                entity.Property(e => e.SvcEndDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_end_date");

                entity.Property(e => e.SvcInstalledAtCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_country_code");

                entity.Property(e => e.SvcInstalledAtCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_installed_at_country_name");

                entity.Property(e => e.SvcInstalledAtDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_district");

                entity.Property(e => e.SvcInstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_installed_at_key");

                entity.Property(e => e.SvcInstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_name");

                entity.Property(e => e.SvcListValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_list_value");

                entity.Property(e => e.SvcMaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_desc");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcNetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_net_value");

                entity.Property(e => e.SvcPayerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_country");

                entity.Property(e => e.SvcPayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_payer_key");

                entity.Property(e => e.SvcPayerName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_name");

                entity.Property(e => e.SvcSalesOrder)
                    .HasMaxLength(50)
                    .HasColumnName("svc_sales_order");

                entity.Property(e => e.SvcStartDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_start_date");

                entity.Property(e => e.TargetFlag)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("target_flag");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(250)
                    .HasColumnName("transaction_type");
            });

            modelBuilder.Entity<GmeFlaggedVw>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("gme_flagged_vw");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("am_country_name");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("billto_district");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.BilltoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("billto_postal_code");

                entity.Property(e => e.BilltoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("billto_region");

                entity.Property(e => e.BilltoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street1");

                entity.Property(e => e.BilltoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street2");

                entity.Property(e => e.BilltoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street3");

                entity.Property(e => e.BilltoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street4");

                entity.Property(e => e.BilltoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street5");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .HasColumnName("claim_status");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_item");

                entity.Property(e => e.DiscPerc)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("disc_perc");

                entity.Property(e => e.DistiCity)
                    .HasMaxLength(255)
                    .HasColumnName("disti_city");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("disti_postal_code");

                entity.Property(e => e.DistiRegion)
                    .HasMaxLength(255)
                    .HasColumnName("disti_region");

                entity.Property(e => e.DistiStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street1");

                entity.Property(e => e.DistiStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street2");

                entity.Property(e => e.DistiStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street3");

                entity.Property(e => e.DistiStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street4");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(250)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.DrspPosId).HasColumnName("drsp_pos_id");

                entity.Property(e => e.EcSvcJaroScore).HasColumnName("ec_svc_jaro_score");

                entity.Property(e => e.EcSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_key_flag");

                entity.Property(e => e.EcSvcSamegidFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_samegid_flag");

                entity.Property(e => e.EcSvcSenzingScore).HasColumnName("ec_svc_senzing_score");

                entity.Property(e => e.EndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_city");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_postal_code");

                entity.Property(e => e.EndCustRegion)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_region");

                entity.Property(e => e.EndCustStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street1");

                entity.Property(e => e.EndCustStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street2");

                entity.Property(e => e.EndCustStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street3");

                entity.Property(e => e.EndCustStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street4");

                entity.Property(e => e.EndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("end_cust_theater");

                entity.Property(e => e.EndUserStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("end_user_street5");

                entity.Property(e => e.EntityExceptionFlag)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("entity_exception_flag");

                entity.Property(e => e.EntityRelatedFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("entity_related_flag");

                entity.Property(e => e.GlobalAcctScore).HasColumnName("global_acct_score");

                entity.Property(e => e.GmeFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("gme_flag");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.MspAcctScore).HasColumnName("msp_acct_score");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PartnerDelta)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("partner_delta");

                entity.Property(e => e.PartnerDeltaSum).HasColumnName("partner_delta_sum");

                entity.Property(e => e.PartnerOldNew).HasColumnName("partner_old_new");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.ProcessedFlag)
                    .HasMaxLength(50)
                    .HasColumnName("processed_flag");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("quote_id");

                entity.Property(e => e.ReportedQty).HasColumnName("reported_qty");

                entity.Property(e => e.ResEcJaroScore).HasColumnName("res_ec_jaro_score");

                entity.Property(e => e.ResEcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_ec_key_flag");

                entity.Property(e => e.ResSvcEntityRelatedFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("res_svc_entity_related_flag");

                entity.Property(e => e.ResSvcJaroScore).HasColumnName("res_svc_jaro_score");

                entity.Property(e => e.ResSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_svc_key_flag");

                entity.Property(e => e.ResellerCity)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_city");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_postal_code");

                entity.Property(e => e.ResellerStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street1");

                entity.Property(e => e.ResellerStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street2");

                entity.Property(e => e.ResellerStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street3");

                entity.Property(e => e.ResellerStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street4");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.RmaNumber)
                    .HasMaxLength(50)
                    .HasColumnName("rma_number");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SerialNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number_orig");

                entity.Property(e => e.ShiptoCity)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_city");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShiptoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_postal_code");

                entity.Property(e => e.ShiptoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_region");

                entity.Property(e => e.ShiptoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street1");

                entity.Property(e => e.ShiptoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street2");

                entity.Property(e => e.ShiptoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street3");

                entity.Property(e => e.ShiptoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street4");

                entity.Property(e => e.ShiptoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street5");

                entity.Property(e => e.SnDelta)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("sn_delta");

                entity.Property(e => e.SnOldNew).HasColumnName("sn_old_new");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoDelta)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("so_delta");

                entity.Property(e => e.SoDeltaSum).HasColumnName("so_delta_sum");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("so_number_orig");

                entity.Property(e => e.SoOldNew).HasColumnName("so_old_new");

                entity.Property(e => e.SoType)
                    .HasMaxLength(250)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoCity)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_city");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SoldtoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_postal_code");

                entity.Property(e => e.SoldtoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street1");

                entity.Property(e => e.SoldtoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street2");

                entity.Property(e => e.SoldtoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street3");

                entity.Property(e => e.SoldtoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street4");

                entity.Property(e => e.SoldtoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street5");

                entity.Property(e => e.SourceImportId).HasColumnName("source_import_id");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.SvcBilltoCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("svc_billto_country_code");

                entity.Property(e => e.SvcBilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_billto_key");

                entity.Property(e => e.SvcBilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_billto_name");

                entity.Property(e => e.SvcContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_creation_date");

                entity.Property(e => e.SvcContractLineCreation)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_line_creation");

                entity.Property(e => e.SvcContractLineStatus)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_line_status");

                entity.Property(e => e.SvcContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_number");

                entity.Property(e => e.SvcContractStatus)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_status");

                entity.Property(e => e.SvcContractType)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_type");

                entity.Property(e => e.SvcCurrency)
                    .HasMaxLength(50)
                    .HasColumnName("svc_currency");

                entity.Property(e => e.SvcEligibleFlag)
                    .HasMaxLength(50)
                    .HasColumnName("svc_eligible_flag");

                entity.Property(e => e.SvcEndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_city");

                entity.Property(e => e.SvcEndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_country_code");

                entity.Property(e => e.SvcEndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_country_name");

                entity.Property(e => e.SvcEndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_key");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_name");

                entity.Property(e => e.SvcEndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_theater");

                entity.Property(e => e.SvcEndDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_end_date");

                entity.Property(e => e.SvcInstalledAtCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_country_code");

                entity.Property(e => e.SvcInstalledAtCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_installed_at_country_name");

                entity.Property(e => e.SvcInstalledAtDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_district");

                entity.Property(e => e.SvcInstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_installed_at_key");

                entity.Property(e => e.SvcInstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_name");

                entity.Property(e => e.SvcListValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_list_value");

                entity.Property(e => e.SvcMaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_desc");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcNetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_net_value");

                entity.Property(e => e.SvcPayerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_country");

                entity.Property(e => e.SvcPayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_payer_key");

                entity.Property(e => e.SvcPayerName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_name");

                entity.Property(e => e.SvcSalesOrder)
                    .HasMaxLength(50)
                    .HasColumnName("svc_sales_order");

                entity.Property(e => e.SvcStartDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_start_date");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(250)
                    .HasColumnName("transaction_type");
            });

            modelBuilder.Entity<GmeKpiDashTwb>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_kpi_dash_twb");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("am_country_name");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DiscPerc)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("disc_perc");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(250)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.DrspPosId).HasColumnName("drsp_pos_id");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("end_cust_theater");

                entity.Property(e => e.GlobalAcctScore).HasColumnName("global_acct_score");

                entity.Property(e => e.GmeFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("gme_flag");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.MspAcctScore).HasColumnName("msp_acct_score");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PCustomersince).HasColumnName("p_customersince");

                entity.Property(e => e.PDivCnt).HasColumnName("p_div_cnt");

                entity.Property(e => e.PDivRate)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("p_div_rate");

                entity.Property(e => e.PPartnerLevel)
                    .HasMaxLength(50)
                    .HasColumnName("p_partner_level");

                entity.Property(e => e.PPartnerStatus)
                    .HasMaxLength(50)
                    .HasColumnName("p_partner_status");

                entity.Property(e => e.PResellerAddress)
                    .HasMaxLength(1500)
                    .HasColumnName("p_reseller_address");

                entity.Property(e => e.PResellerCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("p_reseller_country_code");

                entity.Property(e => e.PResellerCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("p_reseller_country_name");

                entity.Property(e => e.PResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("p_reseller_theater");

                entity.Property(e => e.PShpListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("p_shp_list_amt");

                entity.Property(e => e.PShpNetAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("p_shp_net_amt");

                entity.Property(e => e.PShpSnCnt).HasColumnName("p_shp_sn_cnt");

                entity.Property(e => e.PShpSnWithSvc).HasColumnName("p_shp_sn_with_svc");

                entity.Property(e => e.PShpSoCnt).HasColumnName("p_shp_so_cnt");

                entity.Property(e => e.PShpSvcEligibleCnt).HasColumnName("p_shp_svc_eligible_cnt");

                entity.Property(e => e.PSvcAttachedRate)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("p_svc_attached_rate");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("quote_id");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(1500)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.RmaNumber)
                    .HasMaxLength(50)
                    .HasColumnName("rma_number");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.SvcBilltoCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("svc_billto_country_code");

                entity.Property(e => e.SvcBilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_billto_key");

                entity.Property(e => e.SvcBilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_billto_name");

                entity.Property(e => e.SvcContractLineStatus)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_line_status");

                entity.Property(e => e.SvcContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_number");

                entity.Property(e => e.SvcEligibleFlag)
                    .HasMaxLength(50)
                    .HasColumnName("svc_eligible_flag");

                entity.Property(e => e.SvcEndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_country_code");

                entity.Property(e => e.SvcEndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_country_name");

                entity.Property(e => e.SvcEndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_key");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_name");

                entity.Property(e => e.SvcEndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_theater");

                entity.Property(e => e.SvcInstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_installed_at_key");

                entity.Property(e => e.SvcInstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_name");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcNetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_net_value");

                entity.Property(e => e.SvcSalesOrder)
                    .HasMaxLength(50)
                    .HasColumnName("svc_sales_order");

                entity.Property(e => e.TargetFlag)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("target_flag");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TrnxFiscalQtr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("trnx_fiscal_qtr");
            });

            modelBuilder.Entity<GmeKpiDashVw>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("gme_kpi_dash_vw");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("am_country_name");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DiscPerc)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("disc_perc");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(250)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.DrspPosId).HasColumnName("drsp_pos_id");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("end_cust_theater");

                entity.Property(e => e.GlobalAcctScore).HasColumnName("global_acct_score");

                entity.Property(e => e.GmeFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("gme_flag");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.MspAcctScore).HasColumnName("msp_acct_score");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PCustomersince).HasColumnName("p_customersince");

                entity.Property(e => e.PDivCnt).HasColumnName("p_div_cnt");

                entity.Property(e => e.PDivRate)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("p_div_rate");

                entity.Property(e => e.PPartnerLevel)
                    .HasMaxLength(50)
                    .HasColumnName("p_partner_level");

                entity.Property(e => e.PPartnerStatus)
                    .HasMaxLength(50)
                    .HasColumnName("p_partner_status");

                entity.Property(e => e.PResellerAddress)
                    .HasMaxLength(1500)
                    .HasColumnName("p_reseller_address");

                entity.Property(e => e.PResellerCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("p_reseller_country_code");

                entity.Property(e => e.PResellerCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("p_reseller_country_name");

                entity.Property(e => e.PResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("p_reseller_theater");

                entity.Property(e => e.PShpListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("p_shp_list_amt");

                entity.Property(e => e.PShpNetAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("p_shp_net_amt");

                entity.Property(e => e.PShpSnCnt).HasColumnName("p_shp_sn_cnt");

                entity.Property(e => e.PShpSnWithSvc).HasColumnName("p_shp_sn_with_svc");

                entity.Property(e => e.PShpSoCnt).HasColumnName("p_shp_so_cnt");

                entity.Property(e => e.PShpSvcEligibleCnt).HasColumnName("p_shp_svc_eligible_cnt");

                entity.Property(e => e.PSvcAttachedRate)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("p_svc_attached_rate");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("quote_id");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(1500)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.RmaNumber)
                    .HasMaxLength(50)
                    .HasColumnName("rma_number");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.SvcBilltoCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("svc_billto_country_code");

                entity.Property(e => e.SvcBilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_billto_key");

                entity.Property(e => e.SvcBilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_billto_name");

                entity.Property(e => e.SvcContractLineStatus)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_line_status");

                entity.Property(e => e.SvcContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_number");

                entity.Property(e => e.SvcEligibleFlag)
                    .HasMaxLength(50)
                    .HasColumnName("svc_eligible_flag");

                entity.Property(e => e.SvcEndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_country_code");

                entity.Property(e => e.SvcEndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_country_name");

                entity.Property(e => e.SvcEndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_key");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_name");

                entity.Property(e => e.SvcEndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_theater");

                entity.Property(e => e.SvcInstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_installed_at_key");

                entity.Property(e => e.SvcInstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_name");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcNetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_net_value");

                entity.Property(e => e.SvcSalesOrder)
                    .HasMaxLength(50)
                    .HasColumnName("svc_sales_order");

                entity.Property(e => e.TargetFlag)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("target_flag");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TrnxFiscalQtr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("trnx_fiscal_qtr");
            });

            modelBuilder.Entity<GmeKpiDashVw1>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("gme_kpi_dash_vw", "dev");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("am_country_name");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DiscPerc)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("disc_perc");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(250)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.DrspPosId).HasColumnName("drsp_pos_id");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("end_cust_theater");

                entity.Property(e => e.GlobalAcctScore).HasColumnName("global_acct_score");

                entity.Property(e => e.GmeFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("gme_flag");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.MspAcctScore).HasColumnName("msp_acct_score");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PCustomersince).HasColumnName("p_customersince");

                entity.Property(e => e.PDivCnt).HasColumnName("p_div_cnt");

                entity.Property(e => e.PDivRate)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("p_div_rate");

                entity.Property(e => e.PPartnerLevel)
                    .HasMaxLength(50)
                    .HasColumnName("p_partner_level");

                entity.Property(e => e.PPartnerStatus)
                    .HasMaxLength(50)
                    .HasColumnName("p_partner_status");

                entity.Property(e => e.PResellerAddress)
                    .HasMaxLength(1500)
                    .HasColumnName("p_reseller_address");

                entity.Property(e => e.PResellerCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("p_reseller_country_code");

                entity.Property(e => e.PResellerCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("p_reseller_country_name");

                entity.Property(e => e.PResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("p_reseller_theater");

                entity.Property(e => e.PShpListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("p_shp_list_amt");

                entity.Property(e => e.PShpNetAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("p_shp_net_amt");

                entity.Property(e => e.PShpSnCnt).HasColumnName("p_shp_sn_cnt");

                entity.Property(e => e.PShpSnWithSvc).HasColumnName("p_shp_sn_with_svc");

                entity.Property(e => e.PShpSoCnt).HasColumnName("p_shp_so_cnt");

                entity.Property(e => e.PShpSvcEligibleCnt).HasColumnName("p_shp_svc_eligible_cnt");

                entity.Property(e => e.PSvcAttachedRate)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("p_svc_attached_rate");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("quote_id");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(1500)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.RmaNumber)
                    .HasMaxLength(50)
                    .HasColumnName("rma_number");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.SvcBilltoCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("svc_billto_country_code");

                entity.Property(e => e.SvcBilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_billto_key");

                entity.Property(e => e.SvcBilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_billto_name");

                entity.Property(e => e.SvcContractLineStatus)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_line_status");

                entity.Property(e => e.SvcContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_number");

                entity.Property(e => e.SvcEligibleFlag)
                    .HasMaxLength(50)
                    .HasColumnName("svc_eligible_flag");

                entity.Property(e => e.SvcEndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_country_code");

                entity.Property(e => e.SvcEndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_country_name");

                entity.Property(e => e.SvcEndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_key");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_name");

                entity.Property(e => e.SvcEndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_theater");

                entity.Property(e => e.SvcInstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_installed_at_key");

                entity.Property(e => e.SvcInstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_name");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcNetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_net_value");

                entity.Property(e => e.SvcSalesOrder)
                    .HasMaxLength(50)
                    .HasColumnName("svc_sales_order");

                entity.Property(e => e.TargetFlag)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("target_flag");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TrnxFiscalQtr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("trnx_fiscal_qtr");
            });

            modelBuilder.Entity<GmeKpiOecSummary>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_kpi_oec_summary", "bak");

                entity.Property(e => e.Customersince).HasColumnName("customersince");

                entity.Property(e => e.DivCnt).HasColumnName("div_cnt");

                entity.Property(e => e.DivListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("div_list_amt");

                entity.Property(e => e.DivNetAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("div_net_amt");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndcustCountry)
                    .HasMaxLength(250)
                    .HasColumnName("endcust_country");

                entity.Property(e => e.EndcustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("endcust_country_code");

                entity.Property(e => e.EndcustName)
                    .HasMaxLength(1500)
                    .HasColumnName("endcust_name");

                entity.Property(e => e.EndcustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("endcust_theater");

                entity.Property(e => e.NsFlag)
                    .HasMaxLength(20)
                    .HasColumnName("ns_flag");

                entity.Property(e => e.ShpListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_list_amt");

                entity.Property(e => e.ShpNetAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_net_amt");

                entity.Property(e => e.ShpSnCnt).HasColumnName("shp_sn_cnt");

                entity.Property(e => e.ShpSnWithSvc).HasColumnName("shp_sn_with_svc");

                entity.Property(e => e.ShpSoCnt).HasColumnName("shp_so_cnt");

                entity.Property(e => e.ShpSvcEligibleCnt).HasColumnName("shp_svc_eligible_cnt");

                entity.Property(e => e.SvcAttachedRate)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_attached_rate");
            });

            modelBuilder.Entity<GmeKpiOecSummary1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_kpi_oec_summary");

                entity.Property(e => e.Customersince).HasColumnName("customersince");

                entity.Property(e => e.DivCnt).HasColumnName("div_cnt");

                entity.Property(e => e.DivListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("div_list_amt");

                entity.Property(e => e.DivNetAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("div_net_amt");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndcustCountry)
                    .HasMaxLength(250)
                    .HasColumnName("endcust_country");

                entity.Property(e => e.EndcustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("endcust_country_code");

                entity.Property(e => e.EndcustName)
                    .HasMaxLength(1500)
                    .HasColumnName("endcust_name");

                entity.Property(e => e.EndcustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("endcust_theater");

                entity.Property(e => e.NsFlag)
                    .HasMaxLength(20)
                    .HasColumnName("ns_flag");

                entity.Property(e => e.ShpListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_list_amt");

                entity.Property(e => e.ShpNetAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_net_amt");

                entity.Property(e => e.ShpSnCnt).HasColumnName("shp_sn_cnt");

                entity.Property(e => e.ShpSnWithSvc).HasColumnName("shp_sn_with_svc");

                entity.Property(e => e.ShpSoCnt).HasColumnName("shp_so_cnt");

                entity.Property(e => e.ShpSvcEligibleCnt).HasColumnName("shp_svc_eligible_cnt");

                entity.Property(e => e.SvcAttachedRate)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_attached_rate");
            });

            modelBuilder.Entity<GmeKpiOecSummaryVw>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("gme_kpi_oec_summary_vw");

                entity.Property(e => e.Customersince).HasColumnName("customersince");

                entity.Property(e => e.DivCnt).HasColumnName("div_cnt");

                entity.Property(e => e.DivListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("div_list_amt");

                entity.Property(e => e.DivMarginLoss)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("div_margin_loss");

                entity.Property(e => e.DivNetAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("div_net_amt");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndcustCountry)
                    .HasMaxLength(250)
                    .HasColumnName("endcust_country");

                entity.Property(e => e.EndcustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("endcust_country_code");

                entity.Property(e => e.EndcustName)
                    .HasMaxLength(1500)
                    .HasColumnName("endcust_name");

                entity.Property(e => e.EndcustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("endcust_theater");

                entity.Property(e => e.NsFlag)
                    .HasMaxLength(20)
                    .HasColumnName("ns_flag");

                entity.Property(e => e.ShpListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_list_amt");

                entity.Property(e => e.ShpNetAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_net_amt");

                entity.Property(e => e.ShpSnCnt).HasColumnName("shp_sn_cnt");

                entity.Property(e => e.ShpSnWithSvc).HasColumnName("shp_sn_with_svc");

                entity.Property(e => e.ShpSoCnt).HasColumnName("shp_so_cnt");

                entity.Property(e => e.ShpSvcEligibleCnt).HasColumnName("shp_svc_eligible_cnt");

                entity.Property(e => e.SvcAttachedRate)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_attached_rate");
            });

            modelBuilder.Entity<GmeKpiPartnerAnalyzerVw>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("gme_kpi_partner_analyzer_vw");

                entity.Property(e => e.PCustomersince).HasColumnName("p_customersince");

                entity.Property(e => e.PDivCnt).HasColumnName("p_div_cnt");

                entity.Property(e => e.PDivListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("p_div_list_amt");

                entity.Property(e => e.PDivNetAmt).HasColumnName("p_div_net_amt");

                entity.Property(e => e.PDivRate)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("p_div_rate");

                entity.Property(e => e.PResellerCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("p_reseller_country_code");

                entity.Property(e => e.PResellerCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("p_reseller_country_name");

                entity.Property(e => e.PResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("p_reseller_key");

                entity.Property(e => e.PResellerName)
                    .HasMaxLength(1500)
                    .HasColumnName("p_reseller_name");

                entity.Property(e => e.PResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("p_reseller_theater");

                entity.Property(e => e.PShpListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("p_shp_list_amt");

                entity.Property(e => e.PShpNetAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("p_shp_net_amt");

                entity.Property(e => e.PShpSnCnt).HasColumnName("p_shp_sn_cnt");

                entity.Property(e => e.PShpSnWithSvc).HasColumnName("p_shp_sn_with_svc");

                entity.Property(e => e.PShpSoCnt).HasColumnName("p_shp_so_cnt");

                entity.Property(e => e.PShpSvcEligibleCnt).HasColumnName("p_shp_svc_eligible_cnt");

                entity.Property(e => e.PSvcAttachedRate)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("p_svc_attached_rate");
            });

            modelBuilder.Entity<GmeKpiPartnerSummary>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_kpi_partner_summary", "bak");

                entity.Property(e => e.Customersince).HasColumnName("customersince");

                entity.Property(e => e.DivCnt).HasColumnName("div_cnt");

                entity.Property(e => e.DivListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("div_list_amt");

                entity.Property(e => e.DivNetAmt).HasColumnName("div_net_amt");

                entity.Property(e => e.NsFlag)
                    .HasMaxLength(20)
                    .HasColumnName("ns_flag");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(1500)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.ShpListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_list_amt");

                entity.Property(e => e.ShpNetAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_net_amt");

                entity.Property(e => e.ShpSnCnt).HasColumnName("shp_sn_cnt");

                entity.Property(e => e.ShpSnWithSvc).HasColumnName("shp_sn_with_svc");

                entity.Property(e => e.ShpSoCnt).HasColumnName("shp_so_cnt");

                entity.Property(e => e.ShpSvcEligibleCnt).HasColumnName("shp_svc_eligible_cnt");

                entity.Property(e => e.SvcAttachedRate)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_attached_rate");
            });

            modelBuilder.Entity<GmeKpiPartnerSummary1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_kpi_partner_summary1", "bak");

                entity.Property(e => e.DivCnt).HasColumnName("div_cnt");

                entity.Property(e => e.DivListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("div_list_amt");

                entity.Property(e => e.DivNetAmt).HasColumnName("div_net_amt");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKeys).HasColumnName("reseller_keys");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(1500)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.ShpListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_list_amt");

                entity.Property(e => e.ShpNetAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_net_amt");

                entity.Property(e => e.ShpSnCnt).HasColumnName("shp_sn_cnt");

                entity.Property(e => e.ShpSnWithSvc).HasColumnName("shp_sn_with_svc");

                entity.Property(e => e.ShpSvcEligibleCnt).HasColumnName("shp_svc_eligible_cnt");
            });

            modelBuilder.Entity<GmeKpiPartnerSummaryTwb>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_kpi_partner_summary_twb", "bak");

                entity.Property(e => e.AttachedRate)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("attached_rate");

                entity.Property(e => e.DivCnt).HasColumnName("div_cnt");

                entity.Property(e => e.DivListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("div_list_amt");

                entity.Property(e => e.DivNetAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("div_net_amt");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKeys).HasColumnName("reseller_keys");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(1500)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.ShpListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_list_amt");

                entity.Property(e => e.ShpNetAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_net_amt");

                entity.Property(e => e.ShpSnCnt).HasColumnName("shp_sn_cnt");

                entity.Property(e => e.ShpSnWithSvc).HasColumnName("shp_sn_with_svc");

                entity.Property(e => e.ShpSvcEligibleCnt).HasColumnName("shp_svc_eligible_cnt");
            });

            modelBuilder.Entity<GmeKpiPartnerSummaryTwb1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_kpi_partner_summary_twb");

                entity.Property(e => e.AttachedRate)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("attached_rate");

                entity.Property(e => e.DivCnt).HasColumnName("div_cnt");

                entity.Property(e => e.DivListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("div_list_amt");

                entity.Property(e => e.DivMarginLoss)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("div_margin_loss");

                entity.Property(e => e.DivNetAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("div_net_amt");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKeys).HasColumnName("reseller_keys");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(1500)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.ShpListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_list_amt");

                entity.Property(e => e.ShpNetAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_net_amt");

                entity.Property(e => e.ShpSnCnt).HasColumnName("shp_sn_cnt");

                entity.Property(e => e.ShpSnWithSvc).HasColumnName("shp_sn_with_svc");

                entity.Property(e => e.ShpSvcEligibleCnt).HasColumnName("shp_svc_eligible_cnt");
            });

            modelBuilder.Entity<GmeKpiPartnerSummaryTwb20190401>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_kpi_partner_summary_twb_20190401", "bak");

                entity.Property(e => e.AttachedRate)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("attached_rate");

                entity.Property(e => e.DivCnt).HasColumnName("div_cnt");

                entity.Property(e => e.DivListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("div_list_amt");

                entity.Property(e => e.DivMarginLoss)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("div_margin_loss");

                entity.Property(e => e.DivNetAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("div_net_amt");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKeys).HasColumnName("reseller_keys");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(1500)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.ShpListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_list_amt");

                entity.Property(e => e.ShpNetAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_net_amt");

                entity.Property(e => e.ShpSnCnt).HasColumnName("shp_sn_cnt");

                entity.Property(e => e.ShpSnWithSvc).HasColumnName("shp_sn_with_svc");

                entity.Property(e => e.ShpSvcEligibleCnt).HasColumnName("shp_svc_eligible_cnt");
            });

            modelBuilder.Entity<GmeKpiPartnerSummaryVw>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("gme_kpi_partner_summary_vw");

                entity.Property(e => e.Customersince).HasColumnName("customersince");

                entity.Property(e => e.DivCnt).HasColumnName("div_cnt");

                entity.Property(e => e.DivListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("div_list_amt");

                entity.Property(e => e.DivMarginLoss)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("div_margin_loss");

                entity.Property(e => e.DivNetAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("div_net_amt");

                entity.Property(e => e.NsFlag)
                    .HasMaxLength(20)
                    .HasColumnName("ns_flag");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(1500)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.ShpListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_list_amt");

                entity.Property(e => e.ShpNetAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_net_amt");

                entity.Property(e => e.ShpSnCnt).HasColumnName("shp_sn_cnt");

                entity.Property(e => e.ShpSnWithSvc).HasColumnName("shp_sn_with_svc");

                entity.Property(e => e.ShpSoCnt).HasColumnName("shp_so_cnt");

                entity.Property(e => e.ShpSvcEligibleCnt).HasColumnName("shp_svc_eligible_cnt");

                entity.Property(e => e.SvcAttachedRate)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_attached_rate");
            });

            modelBuilder.Entity<GmeKpiTargetPartner>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_kpi_target_partner");

                entity.Property(e => e.AttachedRate)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("attached_rate");

                entity.Property(e => e.DateComplete)
                    .HasColumnType("date")
                    .HasColumnName("date_complete");

                entity.Property(e => e.DateOpened)
                    .HasColumnType("date")
                    .HasColumnName("date_opened");

                entity.Property(e => e.DivCnt).HasColumnName("div_cnt");

                entity.Property(e => e.DivListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("div_list_amt");

                entity.Property(e => e.DivMarginLoss)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("div_margin_loss");

                entity.Property(e => e.DivNetAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("div_net_amt");

                entity.Property(e => e.EmailForm)
                    .HasMaxLength(250)
                    .HasColumnName("email_form");

                entity.Property(e => e.EmailSent)
                    .HasMaxLength(250)
                    .HasColumnName("email_sent");

                entity.Property(e => e.EntityKey)
                    .HasMaxLength(500)
                    .HasColumnName("entity_key");

                entity.Property(e => e.EntityLevel)
                    .HasMaxLength(250)
                    .HasColumnName("entity_level");

                entity.Property(e => e.EntityName)
                    .HasMaxLength(500)
                    .HasColumnName("entity_name");

                entity.Property(e => e.EntityType)
                    .HasMaxLength(100)
                    .HasColumnName("entity_type");

                entity.Property(e => e.Notes)
                    .HasMaxLength(4000)
                    .HasColumnName("notes");

                entity.Property(e => e.QtrComplete)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("qtr_complete");

                entity.Property(e => e.QtrOpened)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("qtr_opened");

                entity.Property(e => e.Recoveries)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("recoveries");

                entity.Property(e => e.Remediation)
                    .HasMaxLength(250)
                    .HasColumnName("remediation");

                entity.Property(e => e.RemediationStatus)
                    .HasMaxLength(250)
                    .HasColumnName("remediation_status");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKeys).HasColumnName("reseller_keys");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(1500)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.ShpListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_list_amt");

                entity.Property(e => e.ShpNetAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_net_amt");

                entity.Property(e => e.ShpSnCnt).HasColumnName("shp_sn_cnt");

                entity.Property(e => e.ShpSnWithSvc).HasColumnName("shp_sn_with_svc");

                entity.Property(e => e.ShpSvcEligibleCnt).HasColumnName("shp_svc_eligible_cnt");
            });

            modelBuilder.Entity<GmeKpiTargetTwb>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_kpi_target_twb", "bak");

                entity.Property(e => e.DateComplete)
                    .HasColumnType("date")
                    .HasColumnName("date_complete");

                entity.Property(e => e.DateOpened)
                    .HasColumnType("date")
                    .HasColumnName("date_opened");

                entity.Property(e => e.DivCnt).HasColumnName("div_cnt");

                entity.Property(e => e.DivListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("div_list_amt");

                entity.Property(e => e.DivNetAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("div_net_amt");

                entity.Property(e => e.EmailForm)
                    .HasMaxLength(250)
                    .HasColumnName("email_form");

                entity.Property(e => e.EmailSent)
                    .HasMaxLength(250)
                    .HasColumnName("email_sent");

                entity.Property(e => e.EntityCountry)
                    .HasMaxLength(250)
                    .HasColumnName("entity_country");

                entity.Property(e => e.EntityCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("entity_country_code");

                entity.Property(e => e.EntityKey)
                    .HasMaxLength(500)
                    .HasColumnName("entity_key");

                entity.Property(e => e.EntityLevel)
                    .HasMaxLength(250)
                    .HasColumnName("entity_level");

                entity.Property(e => e.EntityName)
                    .HasMaxLength(500)
                    .HasColumnName("entity_name");

                entity.Property(e => e.EntityTheater)
                    .HasMaxLength(250)
                    .HasColumnName("entity_theater");

                entity.Property(e => e.EntityType)
                    .HasMaxLength(100)
                    .HasColumnName("entity_type");

                entity.Property(e => e.Notes)
                    .HasMaxLength(4000)
                    .HasColumnName("notes");

                entity.Property(e => e.NsFlag)
                    .HasMaxLength(20)
                    .HasColumnName("ns_flag");

                entity.Property(e => e.QtrComplete)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("qtr_complete");

                entity.Property(e => e.QtrOpened)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("qtr_opened");

                entity.Property(e => e.Recoveries)
                    .HasColumnType("decimal(38, 6)")
                    .HasColumnName("recoveries");

                entity.Property(e => e.Remediation)
                    .HasMaxLength(250)
                    .HasColumnName("remediation");

                entity.Property(e => e.RemediationStatus)
                    .HasMaxLength(250)
                    .HasColumnName("remediation_status");

                entity.Property(e => e.ShpListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_list_amt");

                entity.Property(e => e.ShpNetAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_net_amt");

                entity.Property(e => e.ShpSnCnt).HasColumnName("shp_sn_cnt");

                entity.Property(e => e.ShpSnWithSvc).HasColumnName("shp_sn_with_svc");

                entity.Property(e => e.ShpSvcEligibleCnt).HasColumnName("shp_svc_eligible_cnt");
            });

            modelBuilder.Entity<GmeKpiTargetTwb1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_kpi_target_twb");

                entity.Property(e => e.DateComplete)
                    .HasColumnType("date")
                    .HasColumnName("date_complete");

                entity.Property(e => e.DateOpened)
                    .HasColumnType("date")
                    .HasColumnName("date_opened");

                entity.Property(e => e.DivCnt).HasColumnName("div_cnt");

                entity.Property(e => e.DivListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("div_list_amt");

                entity.Property(e => e.DivMarginLoss)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("div_margin_loss");

                entity.Property(e => e.DivNetAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("div_net_amt");

                entity.Property(e => e.EmailForm)
                    .HasMaxLength(250)
                    .HasColumnName("email_form");

                entity.Property(e => e.EmailSent)
                    .HasMaxLength(250)
                    .HasColumnName("email_sent");

                entity.Property(e => e.EntityCountry)
                    .HasMaxLength(250)
                    .HasColumnName("entity_country");

                entity.Property(e => e.EntityCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("entity_country_code");

                entity.Property(e => e.EntityKey)
                    .HasMaxLength(500)
                    .HasColumnName("entity_key");

                entity.Property(e => e.EntityLevel)
                    .HasMaxLength(250)
                    .HasColumnName("entity_level");

                entity.Property(e => e.EntityName)
                    .HasMaxLength(500)
                    .HasColumnName("entity_name");

                entity.Property(e => e.EntityTheater)
                    .HasMaxLength(250)
                    .HasColumnName("entity_theater");

                entity.Property(e => e.EntityType)
                    .HasMaxLength(100)
                    .HasColumnName("entity_type");

                entity.Property(e => e.Notes)
                    .HasMaxLength(4000)
                    .HasColumnName("notes");

                entity.Property(e => e.NsFlag)
                    .HasMaxLength(20)
                    .HasColumnName("ns_flag");

                entity.Property(e => e.QtrComplete)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("qtr_complete");

                entity.Property(e => e.QtrOpened)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("qtr_opened");

                entity.Property(e => e.Recoveries)
                    .HasColumnType("decimal(38, 6)")
                    .HasColumnName("recoveries");

                entity.Property(e => e.Remediation)
                    .HasMaxLength(250)
                    .HasColumnName("remediation");

                entity.Property(e => e.RemediationStatus)
                    .HasMaxLength(250)
                    .HasColumnName("remediation_status");

                entity.Property(e => e.ShpListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_list_amt");

                entity.Property(e => e.ShpNetAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_net_amt");

                entity.Property(e => e.ShpSnCnt).HasColumnName("shp_sn_cnt");

                entity.Property(e => e.ShpSnWithSvc).HasColumnName("shp_sn_with_svc");

                entity.Property(e => e.ShpSvcEligibleCnt).HasColumnName("shp_svc_eligible_cnt");
            });

            modelBuilder.Entity<GmeKpiTargetsOecVw>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("gme_kpi_targets_oec_vw");

                entity.Property(e => e.Customersince).HasColumnName("customersince");

                entity.Property(e => e.DateComplete)
                    .HasColumnType("date")
                    .HasColumnName("date_complete");

                entity.Property(e => e.DateOpened)
                    .HasColumnType("date")
                    .HasColumnName("date_opened");

                entity.Property(e => e.DivCnt).HasColumnName("div_cnt");

                entity.Property(e => e.DivListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("div_list_amt");

                entity.Property(e => e.DivMarginLoss)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("div_margin_loss");

                entity.Property(e => e.DivNetAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("div_net_amt");

                entity.Property(e => e.EmailForm)
                    .HasMaxLength(250)
                    .HasColumnName("email_form");

                entity.Property(e => e.EmailSent)
                    .HasMaxLength(250)
                    .HasColumnName("email_sent");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndcustCountry)
                    .HasMaxLength(250)
                    .HasColumnName("endcust_country");

                entity.Property(e => e.EndcustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("endcust_country_code");

                entity.Property(e => e.EndcustName)
                    .HasMaxLength(1500)
                    .HasColumnName("endcust_name");

                entity.Property(e => e.EndcustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("endcust_theater");

                entity.Property(e => e.EntityKey)
                    .HasMaxLength(500)
                    .HasColumnName("entity_key");

                entity.Property(e => e.EntityLevel)
                    .HasMaxLength(250)
                    .HasColumnName("entity_level");

                entity.Property(e => e.EntityName)
                    .HasMaxLength(500)
                    .HasColumnName("entity_name");

                entity.Property(e => e.EntityType)
                    .HasMaxLength(100)
                    .HasColumnName("entity_type");

                entity.Property(e => e.Notes)
                    .HasMaxLength(4000)
                    .HasColumnName("notes");

                entity.Property(e => e.NsFlag)
                    .HasMaxLength(20)
                    .HasColumnName("ns_flag");

                entity.Property(e => e.QtrComplete)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("qtr_complete");

                entity.Property(e => e.QtrOpened)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("qtr_opened");

                entity.Property(e => e.Recoveries)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("recoveries");

                entity.Property(e => e.Remediation)
                    .HasMaxLength(250)
                    .HasColumnName("remediation");

                entity.Property(e => e.RemediationStatus)
                    .HasMaxLength(250)
                    .HasColumnName("remediation_status");

                entity.Property(e => e.ShpListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_list_amt");

                entity.Property(e => e.ShpNetAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_net_amt");

                entity.Property(e => e.ShpSnCnt).HasColumnName("shp_sn_cnt");

                entity.Property(e => e.ShpSnWithSvc).HasColumnName("shp_sn_with_svc");

                entity.Property(e => e.ShpSoCnt).HasColumnName("shp_so_cnt");

                entity.Property(e => e.ShpSvcEligibleCnt).HasColumnName("shp_svc_eligible_cnt");

                entity.Property(e => e.SvcAttachedRate)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_attached_rate");
            });

            modelBuilder.Entity<GmeKpiTargetsTwb20190219>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_kpi_targets_twb_20190219", "bak");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("am_country_name");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(500)
                    .HasColumnName("country_code");

                entity.Property(e => e.CountryName)
                    .HasMaxLength(250)
                    .HasColumnName("country_name");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("date")
                    .HasColumnName("created_date");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DateComplete)
                    .HasColumnType("date")
                    .HasColumnName("date_complete");

                entity.Property(e => e.DateOpened)
                    .HasColumnType("date")
                    .HasColumnName("date_opened");

                entity.Property(e => e.DealSize)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("deal_size");

                entity.Property(e => e.DiscPerc)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("disc_perc");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(250)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.DrspPosId).HasColumnName("drsp_pos_id");

                entity.Property(e => e.EmailForm)
                    .HasMaxLength(250)
                    .HasColumnName("email_form");

                entity.Property(e => e.EmailSent)
                    .HasMaxLength(250)
                    .HasColumnName("email_sent");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("end_cust_theater");

                entity.Property(e => e.EntityKey)
                    .HasMaxLength(500)
                    .HasColumnName("entity_key");

                entity.Property(e => e.EntityLevel)
                    .HasMaxLength(250)
                    .HasColumnName("entity_level");

                entity.Property(e => e.EntityName)
                    .HasMaxLength(500)
                    .HasColumnName("entity_name");

                entity.Property(e => e.EntityType)
                    .HasMaxLength(100)
                    .HasColumnName("entity_type");

                entity.Property(e => e.GlobalAcctScore).HasColumnName("global_acct_score");

                entity.Property(e => e.GmeFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("gme_flag");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.MspAcctScore).HasColumnName("msp_acct_score");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.Notes)
                    .HasMaxLength(4000)
                    .HasColumnName("notes");

                entity.Property(e => e.NsNotes)
                    .HasMaxLength(500)
                    .HasColumnName("ns_notes");

                entity.Property(e => e.PCustomersince).HasColumnName("p_customersince");

                entity.Property(e => e.PDivCnt).HasColumnName("p_div_cnt");

                entity.Property(e => e.PDivRate)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("p_div_rate");

                entity.Property(e => e.PPartnerLevel)
                    .HasMaxLength(50)
                    .HasColumnName("p_partner_level");

                entity.Property(e => e.PPartnerStatus)
                    .HasMaxLength(50)
                    .HasColumnName("p_partner_status");

                entity.Property(e => e.PResellerAddress)
                    .HasMaxLength(1500)
                    .HasColumnName("p_reseller_address");

                entity.Property(e => e.PResellerCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("p_reseller_country_code");

                entity.Property(e => e.PResellerCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("p_reseller_country_name");

                entity.Property(e => e.PResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("p_reseller_theater");

                entity.Property(e => e.PShpListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("p_shp_list_amt");

                entity.Property(e => e.PShpNetAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("p_shp_net_amt");

                entity.Property(e => e.PShpSnCnt).HasColumnName("p_shp_sn_cnt");

                entity.Property(e => e.PShpSnWithSvc).HasColumnName("p_shp_sn_with_svc");

                entity.Property(e => e.PShpSoCnt).HasColumnName("p_shp_so_cnt");

                entity.Property(e => e.PShpSvcEligibleCnt).HasColumnName("p_shp_svc_eligible_cnt");

                entity.Property(e => e.PSvcAttachedRate)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("p_svc_attached_rate");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("quote_id");

                entity.Property(e => e.Remediation)
                    .HasMaxLength(250)
                    .HasColumnName("remediation");

                entity.Property(e => e.RemediationStatus)
                    .HasMaxLength(250)
                    .HasColumnName("remediation_status");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(1500)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.RmaNumber)
                    .HasMaxLength(50)
                    .HasColumnName("rma_number");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SfdcId)
                    .HasMaxLength(250)
                    .HasColumnName("sfdc_id");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.Status)
                    .HasMaxLength(10)
                    .HasColumnName("status");

                entity.Property(e => e.SvcBilltoCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("svc_billto_country_code");

                entity.Property(e => e.SvcBilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_billto_key");

                entity.Property(e => e.SvcBilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_billto_name");

                entity.Property(e => e.SvcContractLineStatus)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_line_status");

                entity.Property(e => e.SvcContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_number");

                entity.Property(e => e.SvcEligibleFlag)
                    .HasMaxLength(50)
                    .HasColumnName("svc_eligible_flag");

                entity.Property(e => e.SvcEndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_country_code");

                entity.Property(e => e.SvcEndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_country_name");

                entity.Property(e => e.SvcEndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_key");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_name");

                entity.Property(e => e.SvcEndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_theater");

                entity.Property(e => e.SvcInstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_installed_at_key");

                entity.Property(e => e.SvcInstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_name");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcNetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_net_value");

                entity.Property(e => e.SvcSalesOrder)
                    .HasMaxLength(50)
                    .HasColumnName("svc_sales_order");

                entity.Property(e => e.TargetFlag)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("target_flag");

                entity.Property(e => e.Theater)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("theater");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TrnxFiscalQtr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("trnx_fiscal_qtr");

                entity.Property(e => e.VarId)
                    .HasMaxLength(250)
                    .HasColumnName("var_id");

                entity.Property(e => e.Website)
                    .HasMaxLength(250)
                    .HasColumnName("website");

                entity.Property(e => e.WinFlag)
                    .HasMaxLength(250)
                    .HasColumnName("win_flag");
            });

            modelBuilder.Entity<GmeMeasurePartnerSo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_measure_partner_so");

                entity.HasIndex(e => new { e.ResellerKey, e.SoNumber }, "gme_measure_partner_so_ndx1");

                entity.Property(e => e.ListAmtWithSvcByResSo)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("list_amt_with_svc_byResSo");

                entity.Property(e => e.NetAmtWithSvcByResSo)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("net_amt_with_svc_ByResSo");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(1500)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ShpListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_list_amt");

                entity.Property(e => e.ShpNetAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_net_amt");

                entity.Property(e => e.ShpSnCntByResSo).HasColumnName("shp_sn_cnt_byResSo");

                entity.Property(e => e.ShpSnWithSvcByResSo).HasColumnName("shp_sn_with_svc_byResSo");

                entity.Property(e => e.ShpSvcEligibleCntByResSo).HasColumnName("shp_svc_eligible_cnt_byResSo");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");
            });

            modelBuilder.Entity<GmeMeasurePartnerSoBak>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_measure_partner_so_bak", "bak");

                entity.Property(e => e.ListAmtWithSvcByResSo)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("list_amt_with_svc_byResSo");

                entity.Property(e => e.NetAmtWithSvcByResSo)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("net_amt_with_svc_ByResSo");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(500)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ShpListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_list_amt");

                entity.Property(e => e.ShpNetAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_net_amt");

                entity.Property(e => e.ShpSnCntByResSo).HasColumnName("shp_sn_cnt_byResSo");

                entity.Property(e => e.ShpSnWithSvcByResSo).HasColumnName("shp_sn_with_svc_byResSo");

                entity.Property(e => e.ShpSvcEligibleCntByResSo).HasColumnName("shp_svc_eligible_cnt_byResSo");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");
            });

            modelBuilder.Entity<GmeMeasureSo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_measure_so");

                entity.HasIndex(e => e.SoNumber, "gme_measure_so_ndx1");

                entity.Property(e => e.ListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("list_amt");

                entity.Property(e => e.ListAmtWithSvc)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("list_amt_with_svc");

                entity.Property(e => e.NetAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("net_amt");

                entity.Property(e => e.NetAmtWithSvc)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("net_amt_with_svc");

                entity.Property(e => e.SnShippedCnt).HasColumnName("sn_shipped_cnt");

                entity.Property(e => e.SnWithSvc).HasColumnName("sn_with_svc");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");
            });

            modelBuilder.Entity<GmeNewPartnerDom>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_new_partner_dom", "dev");

                entity.Property(e => e.AmtProductsSold).HasColumnName("amt_products_sold");

                entity.Property(e => e.NetAmtWithService).HasColumnName("net_amt_with_service");

                entity.Property(e => e.PoType)
                    .HasMaxLength(255)
                    .HasColumnName("po_type");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ServiceAttachPerc).HasColumnName("service_attach_perc");

                entity.Property(e => e.TotLinesBooked).HasColumnName("tot_lines_booked");

                entity.Property(e => e.TotLinesWithService).HasColumnName("tot_lines_with_service");
            });

            modelBuilder.Entity<GmeNewPartnerDomestic>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_new_partner_domestic", "dev");

                entity.Property(e => e.AmtProductsSold).HasColumnName("amt_products_sold");

                entity.Property(e => e.NetAmtWithService).HasColumnName("net_amt_with_service");

                entity.Property(e => e.PoType)
                    .HasMaxLength(255)
                    .HasColumnName("po_type");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ServiceAttachPerc).HasColumnName("service_attach_perc");

                entity.Property(e => e.TotLinesBooked).HasColumnName("tot_lines_booked");

                entity.Property(e => e.TotLinesWithService).HasColumnName("tot_lines_with_service");
            });

            modelBuilder.Entity<GmeNewPartnerDomestic1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_new_partner_domestic1", "dev");

                entity.Property(e => e.AmtProductsSold)
                    .HasMaxLength(100)
                    .HasColumnName("amt_products_sold");

                entity.Property(e => e.NetAmtWithService)
                    .HasMaxLength(100)
                    .HasColumnName("net_amt_with_service");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ServiceAttachPerc)
                    .HasMaxLength(100)
                    .HasColumnName("service_attach_perc");

                entity.Property(e => e.TotLinesBooked)
                    .HasMaxLength(100)
                    .HasColumnName("tot_lines_booked");

                entity.Property(e => e.TotLinesWithService)
                    .HasMaxLength(100)
                    .HasColumnName("tot_lines_with_service");
            });

            modelBuilder.Entity<GmePartnerAnalyzer1Twb>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_partner_analyzer1_twb");

                entity.Property(e => e.AttachedRate)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("attached_rate");

                entity.Property(e => e.DateComplete)
                    .HasColumnType("date")
                    .HasColumnName("date_complete");

                entity.Property(e => e.DateOpened)
                    .HasColumnType("date")
                    .HasColumnName("date_opened");

                entity.Property(e => e.DivCnt).HasColumnName("div_cnt");

                entity.Property(e => e.DivListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("div_list_amt");

                entity.Property(e => e.DivMarginLoss)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("div_margin_loss");

                entity.Property(e => e.DivNetAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("div_net_amt");

                entity.Property(e => e.EmailForm)
                    .HasMaxLength(250)
                    .HasColumnName("email_form");

                entity.Property(e => e.EmailSent)
                    .HasMaxLength(250)
                    .HasColumnName("email_sent");

                entity.Property(e => e.EntityKey)
                    .HasMaxLength(500)
                    .HasColumnName("entity_key");

                entity.Property(e => e.EntityLevel)
                    .HasMaxLength(250)
                    .HasColumnName("entity_level");

                entity.Property(e => e.EntityName)
                    .HasMaxLength(500)
                    .HasColumnName("entity_name");

                entity.Property(e => e.EntityType)
                    .HasMaxLength(100)
                    .HasColumnName("entity_type");

                entity.Property(e => e.Notes)
                    .HasMaxLength(4000)
                    .HasColumnName("notes");

                entity.Property(e => e.QtrComplete)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("qtr_complete");

                entity.Property(e => e.QtrOpened)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("qtr_opened");

                entity.Property(e => e.Recoveries)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("recoveries");

                entity.Property(e => e.Remediation)
                    .HasMaxLength(250)
                    .HasColumnName("remediation");

                entity.Property(e => e.RemediationStatus)
                    .HasMaxLength(250)
                    .HasColumnName("remediation_status");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKeys).HasColumnName("reseller_keys");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(1500)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.ShpListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_list_amt");

                entity.Property(e => e.ShpNetAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_net_amt");

                entity.Property(e => e.ShpSnCnt).HasColumnName("shp_sn_cnt");

                entity.Property(e => e.ShpSnWithSvc).HasColumnName("shp_sn_with_svc");

                entity.Property(e => e.ShpSvcEligibleCnt).HasColumnName("shp_svc_eligible_cnt");
            });

            modelBuilder.Entity<GmePartnerAnalyzerTwb>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_partner_analyzer_twb");

                entity.HasIndex(e => e.SvcEndCustName, "gme_partner_analyzer_twb_ec");

                entity.HasIndex(e => e.GmeFlag, "gme_partner_analyzer_twb_gmeflg");

                entity.HasIndex(e => e.ResellerKey, "gme_partner_analyzer_twb_reskey");

                entity.HasIndex(e => e.ResellerName, "gme_partner_analyzer_twb_resname");

                entity.HasIndex(e => new { e.SerialNumber, e.MaterialKey }, "gme_partner_analyzer_twb_sn");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("am_country_name");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.BilltoAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("billto_address");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ci_status");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DiscPerc)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("disc_perc");

                entity.Property(e => e.DistiAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("disti_address");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(250)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.DrspPosId).HasColumnName("drsp_pos_id");

                entity.Property(e => e.EcSvcJaroScore).HasColumnName("ec_svc_jaro_score");

                entity.Property(e => e.EcSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_key_flag");

                entity.Property(e => e.EcSvcSamegidFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_samegid_flag");

                entity.Property(e => e.EcSvcSenzingScore).HasColumnName("ec_svc_senzing_score");

                entity.Property(e => e.EndCustAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("end_cust_address");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("end_cust_theater");

                entity.Property(e => e.EntityExceptionFlag)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("entity_exception_flag");

                entity.Property(e => e.GlobalAcctScore).HasColumnName("global_acct_score");

                entity.Property(e => e.GmeFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("gme_flag");

                entity.Property(e => e.ListAmtWithSvcByResSo)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("list_amt_with_svc_byResSo");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.MspAcctScore).HasColumnName("msp_acct_score");

                entity.Property(e => e.NetAmtWithSvcByResSo)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("net_amt_with_svc_ByResSo");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PCustomersince).HasColumnName("p_customersince");

                entity.Property(e => e.PDivCnt).HasColumnName("p_div_cnt");

                entity.Property(e => e.PDivRate)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("p_div_rate");

                entity.Property(e => e.PDplFlag)
                    .HasMaxLength(10)
                    .HasColumnName("p_dpl_flag");

                entity.Property(e => e.PPartnerLevel)
                    .HasMaxLength(50)
                    .HasColumnName("p_partner_level");

                entity.Property(e => e.PPartnerStatus)
                    .HasMaxLength(50)
                    .HasColumnName("p_partner_status");

                entity.Property(e => e.PRefreshedDate)
                    .HasColumnType("date")
                    .HasColumnName("p_refreshed_date");

                entity.Property(e => e.PResellerAddress)
                    .HasMaxLength(1500)
                    .HasColumnName("p_reseller_address");

                entity.Property(e => e.PResellerCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("p_reseller_country_code");

                entity.Property(e => e.PResellerCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("p_reseller_country_name");

                entity.Property(e => e.PResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("p_reseller_theater");

                entity.Property(e => e.PShpListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("p_shp_list_amt");

                entity.Property(e => e.PShpNetAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("p_shp_net_amt");

                entity.Property(e => e.PShpSnCnt).HasColumnName("p_shp_sn_cnt");

                entity.Property(e => e.PShpSnWithSvc).HasColumnName("p_shp_sn_with_svc");

                entity.Property(e => e.PShpSoCnt).HasColumnName("p_shp_so_cnt");

                entity.Property(e => e.PShpSvcEligibleCnt).HasColumnName("p_shp_svc_eligible_cnt");

                entity.Property(e => e.PSplFlag)
                    .HasMaxLength(10)
                    .HasColumnName("p_spl_flag");

                entity.Property(e => e.PSvcAttachedRate)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("p_svc_attached_rate");

                entity.Property(e => e.PartnerDelta)
                    .HasMaxLength(20)
                    .HasColumnName("partner_delta");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("quote_id");

                entity.Property(e => e.ResEcJaroScore).HasColumnName("res_ec_jaro_score");

                entity.Property(e => e.ResEcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_ec_key_flag");

                entity.Property(e => e.ResSvcEntityRelatedFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("res_svc_entity_related_flag");

                entity.Property(e => e.ResSvcJaroScore).HasColumnName("res_svc_jaro_score");

                entity.Property(e => e.ResSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_svc_key_flag");

                entity.Property(e => e.ResellerAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("reseller_address");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(1500)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.RmaNumber)
                    .HasMaxLength(50)
                    .HasColumnName("rma_number");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.ShiptoAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("shipto_address");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShpListAmtByResSo)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_list_amt_byResSo");

                entity.Property(e => e.ShpNetAmtByResSo)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_net_amt_byResSo");

                entity.Property(e => e.ShpSnCntByResSo).HasColumnName("shp_sn_cnt_byResSo");

                entity.Property(e => e.ShpSnWithSvcByResSo).HasColumnName("shp_sn_with_svc_byResSo");

                entity.Property(e => e.SnDelta)
                    .HasMaxLength(20)
                    .HasColumnName("sn_delta");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoDelta)
                    .HasMaxLength(20)
                    .HasColumnName("so_delta");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoType)
                    .HasMaxLength(250)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("soldto_address");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.SvcBilltoCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("svc_billto_country_code");

                entity.Property(e => e.SvcBilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_billto_key");

                entity.Property(e => e.SvcBilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_billto_name");

                entity.Property(e => e.SvcContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_creation_date");

                entity.Property(e => e.SvcContractLineCreation)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_line_creation");

                entity.Property(e => e.SvcContractLineStatus)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_line_status");

                entity.Property(e => e.SvcContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_number");

                entity.Property(e => e.SvcContractStatus)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_status");

                entity.Property(e => e.SvcContractType)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_type");

                entity.Property(e => e.SvcCurrency)
                    .HasMaxLength(50)
                    .HasColumnName("svc_currency");

                entity.Property(e => e.SvcEligibleFlag)
                    .HasMaxLength(50)
                    .HasColumnName("svc_eligible_flag");

                entity.Property(e => e.SvcEndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_city");

                entity.Property(e => e.SvcEndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_country_code");

                entity.Property(e => e.SvcEndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_country_name");

                entity.Property(e => e.SvcEndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_key");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_name");

                entity.Property(e => e.SvcEndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_theater");

                entity.Property(e => e.SvcEndDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_end_date");

                entity.Property(e => e.SvcInstalledAtCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_country_code");

                entity.Property(e => e.SvcInstalledAtCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_installed_at_country_name");

                entity.Property(e => e.SvcInstalledAtDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_district");

                entity.Property(e => e.SvcInstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_installed_at_key");

                entity.Property(e => e.SvcInstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_name");

                entity.Property(e => e.SvcListValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_list_value");

                entity.Property(e => e.SvcMaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_desc");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcNetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_net_value");

                entity.Property(e => e.SvcPayerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_country");

                entity.Property(e => e.SvcPayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_payer_key");

                entity.Property(e => e.SvcPayerName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_name");

                entity.Property(e => e.SvcSalesOrder)
                    .HasMaxLength(50)
                    .HasColumnName("svc_sales_order");

                entity.Property(e => e.SvcStartDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_start_date");

                entity.Property(e => e.TargetFlag)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("target_flag");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(250)
                    .HasColumnName("transaction_type");

                entity.Property(e => e.TrnxFiscalQtr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("trnx_fiscal_qtr");
            });

            modelBuilder.Entity<GmePartnerAnalyzerTwb121118>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_partner_analyzer_twb_121118", "bak");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("am_country_name");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.BilltoAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("billto_address");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ci_status");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DiscPerc)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("disc_perc");

                entity.Property(e => e.DistiAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("disti_address");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(250)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.DrspPosId).HasColumnName("drsp_pos_id");

                entity.Property(e => e.EcSvcJaroScore).HasColumnName("ec_svc_jaro_score");

                entity.Property(e => e.EcSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_key_flag");

                entity.Property(e => e.EcSvcSamegidFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_samegid_flag");

                entity.Property(e => e.EcSvcSenzingScore).HasColumnName("ec_svc_senzing_score");

                entity.Property(e => e.EndCustAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("end_cust_address");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("end_cust_theater");

                entity.Property(e => e.EntityExceptionFlag)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("entity_exception_flag");

                entity.Property(e => e.GlobalAcctScore).HasColumnName("global_acct_score");

                entity.Property(e => e.GmeFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("gme_flag");

                entity.Property(e => e.ListAmtWithSvcByResSo)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("list_amt_with_svc_byResSo");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.MspAcctScore).HasColumnName("msp_acct_score");

                entity.Property(e => e.NetAmtWithSvcByResSo)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("net_amt_with_svc_ByResSo");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PCustomersince)
                    .HasColumnType("datetime")
                    .HasColumnName("p_customersince");

                entity.Property(e => e.PDivCnt).HasColumnName("p_div_cnt");

                entity.Property(e => e.PDivRate)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("p_div_rate");

                entity.Property(e => e.PDplFlag)
                    .HasMaxLength(10)
                    .HasColumnName("p_dpl_flag");

                entity.Property(e => e.PPartnerLevel)
                    .HasMaxLength(50)
                    .HasColumnName("p_partner_level");

                entity.Property(e => e.PPartnerStatus)
                    .HasMaxLength(50)
                    .HasColumnName("p_partner_status");

                entity.Property(e => e.PRefreshedDate)
                    .HasColumnType("date")
                    .HasColumnName("p_refreshed_date");

                entity.Property(e => e.PResellerAddress)
                    .HasMaxLength(1000)
                    .HasColumnName("p_reseller_address");

                entity.Property(e => e.PResellerCountryCode)
                    .HasMaxLength(20)
                    .HasColumnName("p_reseller_country_code");

                entity.Property(e => e.PResellerCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("p_reseller_country_name");

                entity.Property(e => e.PResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("p_reseller_theater");

                entity.Property(e => e.PShpListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("p_shp_list_amt");

                entity.Property(e => e.PShpNetAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("p_shp_net_amt");

                entity.Property(e => e.PShpSnCnt).HasColumnName("p_shp_sn_cnt");

                entity.Property(e => e.PShpSnWithSvc).HasColumnName("p_shp_sn_with_svc");

                entity.Property(e => e.PShpSoCnt).HasColumnName("p_shp_so_cnt");

                entity.Property(e => e.PShpSvcEligibleCnt).HasColumnName("p_shp_svc_eligible_cnt");

                entity.Property(e => e.PSplFlag)
                    .HasMaxLength(10)
                    .HasColumnName("p_spl_flag");

                entity.Property(e => e.PSvcAttachedRate)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("p_svc_attached_rate");

                entity.Property(e => e.PartnerDelta)
                    .HasMaxLength(20)
                    .HasColumnName("partner_delta");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("quote_id");

                entity.Property(e => e.ResEcJaroScore).HasColumnName("res_ec_jaro_score");

                entity.Property(e => e.ResEcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_ec_key_flag");

                entity.Property(e => e.ResSvcEntityRelatedFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("res_svc_entity_related_flag");

                entity.Property(e => e.ResSvcJaroScore).HasColumnName("res_svc_jaro_score");

                entity.Property(e => e.ResSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_svc_key_flag");

                entity.Property(e => e.ResellerAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("reseller_address");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(500)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.RmaNumber)
                    .HasMaxLength(50)
                    .HasColumnName("rma_number");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.ShiptoAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("shipto_address");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShpListAmtByResSo)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_list_amt_byResSo");

                entity.Property(e => e.ShpNetAmtByResSo)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_net_amt_byResSo");

                entity.Property(e => e.ShpSnCntByResSo).HasColumnName("shp_sn_cnt_byResSo");

                entity.Property(e => e.ShpSnWithSvcByResSo).HasColumnName("shp_sn_with_svc_byResSo");

                entity.Property(e => e.SnDelta)
                    .HasMaxLength(20)
                    .HasColumnName("sn_delta");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoDelta)
                    .HasMaxLength(20)
                    .HasColumnName("so_delta");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoType)
                    .HasMaxLength(250)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("soldto_address");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.SvcBilltoCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("svc_billto_country_code");

                entity.Property(e => e.SvcBilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_billto_key");

                entity.Property(e => e.SvcBilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_billto_name");

                entity.Property(e => e.SvcContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_creation_date");

                entity.Property(e => e.SvcContractLineCreation)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_line_creation");

                entity.Property(e => e.SvcContractLineStatus)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_line_status");

                entity.Property(e => e.SvcContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_number");

                entity.Property(e => e.SvcContractStatus)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_status");

                entity.Property(e => e.SvcContractType)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_type");

                entity.Property(e => e.SvcCurrency)
                    .HasMaxLength(50)
                    .HasColumnName("svc_currency");

                entity.Property(e => e.SvcEndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_city");

                entity.Property(e => e.SvcEndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_country_code");

                entity.Property(e => e.SvcEndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_country_name");

                entity.Property(e => e.SvcEndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_key");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_name");

                entity.Property(e => e.SvcEndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_theater");

                entity.Property(e => e.SvcEndDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_end_date");

                entity.Property(e => e.SvcInstalledAtCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_country_code");

                entity.Property(e => e.SvcInstalledAtCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_installed_at_country_name");

                entity.Property(e => e.SvcInstalledAtDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_district");

                entity.Property(e => e.SvcInstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_installed_at_key");

                entity.Property(e => e.SvcInstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_name");

                entity.Property(e => e.SvcListValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_list_value");

                entity.Property(e => e.SvcMaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_desc");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcNetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_net_value");

                entity.Property(e => e.SvcPayerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_country");

                entity.Property(e => e.SvcPayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_payer_key");

                entity.Property(e => e.SvcPayerName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_name");

                entity.Property(e => e.SvcSalesOrder)
                    .HasMaxLength(50)
                    .HasColumnName("svc_sales_order");

                entity.Property(e => e.SvcStartDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_start_date");

                entity.Property(e => e.TargetFlag)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("target_flag");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(250)
                    .HasColumnName("transaction_type");

                entity.Property(e => e.TrnxFiscalQtr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("trnx_fiscal_qtr");
            });

            modelBuilder.Entity<GmePartnerAnalyzerTwbBak>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_partner_analyzer_twb_bak", "bak");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("am_country_name");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.BilltoAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("billto_address");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ci_status");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DiscPerc)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("disc_perc");

                entity.Property(e => e.DistiAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("disti_address");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(250)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.DrspPosId).HasColumnName("drsp_pos_id");

                entity.Property(e => e.EcSvcJaroScore).HasColumnName("ec_svc_jaro_score");

                entity.Property(e => e.EcSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_key_flag");

                entity.Property(e => e.EcSvcSamegidFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_samegid_flag");

                entity.Property(e => e.EcSvcSenzingScore).HasColumnName("ec_svc_senzing_score");

                entity.Property(e => e.EndCustAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("end_cust_address");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("end_cust_theater");

                entity.Property(e => e.EntityExceptionFlag)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("entity_exception_flag");

                entity.Property(e => e.GlobalAcctScore).HasColumnName("global_acct_score");

                entity.Property(e => e.GmeFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("gme_flag");

                entity.Property(e => e.ListAmtWithSvcByResSo)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("list_amt_with_svc_byResSo");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.MspAcctScore).HasColumnName("msp_acct_score");

                entity.Property(e => e.NetAmtWithSvcByResSo)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("net_amt_with_svc_ByResSo");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PCustomersince)
                    .HasColumnType("datetime")
                    .HasColumnName("p_customersince");

                entity.Property(e => e.PDivCnt).HasColumnName("p_div_cnt");

                entity.Property(e => e.PDivRate)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("p_div_rate");

                entity.Property(e => e.PDplFlag)
                    .HasMaxLength(10)
                    .HasColumnName("p_dpl_flag");

                entity.Property(e => e.PPartnerLevel)
                    .HasMaxLength(50)
                    .HasColumnName("p_partner_level");

                entity.Property(e => e.PPartnerStatus)
                    .HasMaxLength(50)
                    .HasColumnName("p_partner_status");

                entity.Property(e => e.PRefreshedDate)
                    .HasColumnType("date")
                    .HasColumnName("p_refreshed_date");

                entity.Property(e => e.PResellerAddress)
                    .HasMaxLength(1000)
                    .HasColumnName("p_reseller_address");

                entity.Property(e => e.PResellerCountryCode)
                    .HasMaxLength(20)
                    .HasColumnName("p_reseller_country_code");

                entity.Property(e => e.PResellerCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("p_reseller_country_name");

                entity.Property(e => e.PResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("p_reseller_theater");

                entity.Property(e => e.PShpListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("p_shp_list_amt");

                entity.Property(e => e.PShpNetAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("p_shp_net_amt");

                entity.Property(e => e.PShpSnCnt).HasColumnName("p_shp_sn_cnt");

                entity.Property(e => e.PShpSnWithSvc).HasColumnName("p_shp_sn_with_svc");

                entity.Property(e => e.PShpSoCnt).HasColumnName("p_shp_so_cnt");

                entity.Property(e => e.PShpSvcEligibleCnt).HasColumnName("p_shp_svc_eligible_cnt");

                entity.Property(e => e.PSplFlag)
                    .HasMaxLength(10)
                    .HasColumnName("p_spl_flag");

                entity.Property(e => e.PSvcAttachedRate)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("p_svc_attached_rate");

                entity.Property(e => e.PartnerDelta)
                    .HasMaxLength(20)
                    .HasColumnName("partner_delta");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("quote_id");

                entity.Property(e => e.ResEcJaroScore).HasColumnName("res_ec_jaro_score");

                entity.Property(e => e.ResEcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_ec_key_flag");

                entity.Property(e => e.ResSvcEntityRelatedFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("res_svc_entity_related_flag");

                entity.Property(e => e.ResSvcJaroScore).HasColumnName("res_svc_jaro_score");

                entity.Property(e => e.ResSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_svc_key_flag");

                entity.Property(e => e.ResellerAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("reseller_address");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(500)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.RmaNumber)
                    .HasMaxLength(50)
                    .HasColumnName("rma_number");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.ShiptoAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("shipto_address");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShpListAmtByResSo)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_list_amt_byResSo");

                entity.Property(e => e.ShpNetAmtByResSo)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_net_amt_byResSo");

                entity.Property(e => e.ShpSnCntByResSo).HasColumnName("shp_sn_cnt_byResSo");

                entity.Property(e => e.ShpSnWithSvcByResSo).HasColumnName("shp_sn_with_svc_byResSo");

                entity.Property(e => e.SnDelta)
                    .HasMaxLength(20)
                    .HasColumnName("sn_delta");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoDelta)
                    .HasMaxLength(20)
                    .HasColumnName("so_delta");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoType)
                    .HasMaxLength(250)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("soldto_address");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.SvcBilltoCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("svc_billto_country_code");

                entity.Property(e => e.SvcBilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_billto_key");

                entity.Property(e => e.SvcBilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_billto_name");

                entity.Property(e => e.SvcContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_creation_date");

                entity.Property(e => e.SvcContractLineCreation)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_line_creation");

                entity.Property(e => e.SvcContractLineStatus)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_line_status");

                entity.Property(e => e.SvcContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_number");

                entity.Property(e => e.SvcContractStatus)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_status");

                entity.Property(e => e.SvcContractType)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_type");

                entity.Property(e => e.SvcCurrency)
                    .HasMaxLength(50)
                    .HasColumnName("svc_currency");

                entity.Property(e => e.SvcEndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_city");

                entity.Property(e => e.SvcEndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_country_code");

                entity.Property(e => e.SvcEndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_country_name");

                entity.Property(e => e.SvcEndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_key");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_name");

                entity.Property(e => e.SvcEndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_theater");

                entity.Property(e => e.SvcEndDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_end_date");

                entity.Property(e => e.SvcInstalledAtCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_country_code");

                entity.Property(e => e.SvcInstalledAtCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_installed_at_country_name");

                entity.Property(e => e.SvcInstalledAtDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_district");

                entity.Property(e => e.SvcInstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_installed_at_key");

                entity.Property(e => e.SvcInstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_name");

                entity.Property(e => e.SvcListValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_list_value");

                entity.Property(e => e.SvcMaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_desc");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcNetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_net_value");

                entity.Property(e => e.SvcPayerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_country");

                entity.Property(e => e.SvcPayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_payer_key");

                entity.Property(e => e.SvcPayerName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_name");

                entity.Property(e => e.SvcSalesOrder)
                    .HasMaxLength(50)
                    .HasColumnName("svc_sales_order");

                entity.Property(e => e.SvcStartDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_start_date");

                entity.Property(e => e.TargetFlag)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("target_flag");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(250)
                    .HasColumnName("transaction_type");

                entity.Property(e => e.TrnxFiscalQtr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("trnx_fiscal_qtr");
            });

            modelBuilder.Entity<GmePartnerAnalyzerVw>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("gme_partner_analyzer_vw");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("am_country_name");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("billto_district");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.BilltoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("billto_postal_code");

                entity.Property(e => e.BilltoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("billto_region");

                entity.Property(e => e.BilltoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street1");

                entity.Property(e => e.BilltoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street2");

                entity.Property(e => e.BilltoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street3");

                entity.Property(e => e.BilltoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street4");

                entity.Property(e => e.BilltoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street5");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .HasColumnName("claim_status");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_item");

                entity.Property(e => e.DiscPerc)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("disc_perc");

                entity.Property(e => e.DistiCity)
                    .HasMaxLength(255)
                    .HasColumnName("disti_city");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("disti_postal_code");

                entity.Property(e => e.DistiRegion)
                    .HasMaxLength(255)
                    .HasColumnName("disti_region");

                entity.Property(e => e.DistiStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street1");

                entity.Property(e => e.DistiStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street2");

                entity.Property(e => e.DistiStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street3");

                entity.Property(e => e.DistiStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street4");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(250)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.DrspPosId).HasColumnName("drsp_pos_id");

                entity.Property(e => e.EcSvcJaroScore).HasColumnName("ec_svc_jaro_score");

                entity.Property(e => e.EcSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_key_flag");

                entity.Property(e => e.EcSvcSamegidFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_samegid_flag");

                entity.Property(e => e.EcSvcSenzingScore).HasColumnName("ec_svc_senzing_score");

                entity.Property(e => e.EndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_city");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_postal_code");

                entity.Property(e => e.EndCustRegion)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_region");

                entity.Property(e => e.EndCustStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street1");

                entity.Property(e => e.EndCustStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street2");

                entity.Property(e => e.EndCustStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street3");

                entity.Property(e => e.EndCustStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street4");

                entity.Property(e => e.EndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("end_cust_theater");

                entity.Property(e => e.EndUserStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("end_user_street5");

                entity.Property(e => e.EntityExceptionFlag)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("entity_exception_flag");

                entity.Property(e => e.EntityRelatedFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("entity_related_flag");

                entity.Property(e => e.GlobalAcctScore).HasColumnName("global_acct_score");

                entity.Property(e => e.GmeFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("gme_flag");

                entity.Property(e => e.ListAmtWithSvcByResSo)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("list_amt_with_svc_byResSo");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.MspAcctScore).HasColumnName("msp_acct_score");

                entity.Property(e => e.NetAmtWithSvcByResSo)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("net_amt_with_svc_ByResSo");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PAccountgroup)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("p_accountgroup");

                entity.Property(e => e.PCustomersince).HasColumnName("p_customersince");

                entity.Property(e => e.PDivCnt).HasColumnName("p_div_cnt");

                entity.Property(e => e.PDivRate)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("p_div_rate");

                entity.Property(e => e.PDplFlag)
                    .HasMaxLength(10)
                    .HasColumnName("p_dpl_flag");

                entity.Property(e => e.PDuns)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("p_duns");

                entity.Property(e => e.PPartnerLevel)
                    .HasMaxLength(50)
                    .HasColumnName("p_partner_level");

                entity.Property(e => e.PPartnerStatus)
                    .HasMaxLength(50)
                    .HasColumnName("p_partner_status");

                entity.Property(e => e.PRefreshDataRange)
                    .HasMaxLength(50)
                    .HasColumnName("p_refresh_data_range");

                entity.Property(e => e.PRefreshedDate)
                    .HasColumnType("date")
                    .HasColumnName("p_refreshed_date");

                entity.Property(e => e.PResellerAddress)
                    .HasMaxLength(1500)
                    .HasColumnName("p_reseller_address");

                entity.Property(e => e.PResellerCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("p_reseller_country_code");

                entity.Property(e => e.PResellerCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("p_reseller_country_name");

                entity.Property(e => e.PResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("p_reseller_key");

                entity.Property(e => e.PResellerName)
                    .HasMaxLength(1500)
                    .HasColumnName("p_reseller_name");

                entity.Property(e => e.PResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("p_reseller_theater");

                entity.Property(e => e.PResellerrole)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("p_resellerrole");

                entity.Property(e => e.PSfdcId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("p_sfdc_id");

                entity.Property(e => e.PShpListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("p_shp_list_amt");

                entity.Property(e => e.PShpNetAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("p_shp_net_amt");

                entity.Property(e => e.PShpSnCnt).HasColumnName("p_shp_sn_cnt");

                entity.Property(e => e.PShpSnWithSvc).HasColumnName("p_shp_sn_with_svc");

                entity.Property(e => e.PShpSoCnt).HasColumnName("p_shp_so_cnt");

                entity.Property(e => e.PShpSvcEligibleCnt).HasColumnName("p_shp_svc_eligible_cnt");

                entity.Property(e => e.PSplFlag)
                    .HasMaxLength(10)
                    .HasColumnName("p_spl_flag");

                entity.Property(e => e.PSvcAttachedRate)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("p_svc_attached_rate");

                entity.Property(e => e.PVarId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("p_var_id");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.ProcessedFlag)
                    .HasMaxLength(50)
                    .HasColumnName("processed_flag");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("quote_id");

                entity.Property(e => e.ReportedQty).HasColumnName("reported_qty");

                entity.Property(e => e.ResEcJaroScore).HasColumnName("res_ec_jaro_score");

                entity.Property(e => e.ResEcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_ec_key_flag");

                entity.Property(e => e.ResSvcEntityRelatedFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("res_svc_entity_related_flag");

                entity.Property(e => e.ResSvcJaroScore).HasColumnName("res_svc_jaro_score");

                entity.Property(e => e.ResSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_svc_key_flag");

                entity.Property(e => e.ResellerCity)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_city");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_postal_code");

                entity.Property(e => e.ResellerStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street1");

                entity.Property(e => e.ResellerStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street2");

                entity.Property(e => e.ResellerStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street3");

                entity.Property(e => e.ResellerStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street4");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.RmaNumber)
                    .HasMaxLength(50)
                    .HasColumnName("rma_number");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SerialNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number_orig");

                entity.Property(e => e.ShiptoCity)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_city");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShiptoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_postal_code");

                entity.Property(e => e.ShiptoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_region");

                entity.Property(e => e.ShiptoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street1");

                entity.Property(e => e.ShiptoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street2");

                entity.Property(e => e.ShiptoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street3");

                entity.Property(e => e.ShiptoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street4");

                entity.Property(e => e.ShiptoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street5");

                entity.Property(e => e.ShpListAmtByResSo)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_list_amt_byResSo");

                entity.Property(e => e.ShpNetAmtByResSo)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_net_amt_byResSo");

                entity.Property(e => e.ShpSnCntByResSo).HasColumnName("shp_sn_cnt_byResSo");

                entity.Property(e => e.ShpSnWithSvcByResSo).HasColumnName("shp_sn_with_svc_byResSo");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("so_number_orig");

                entity.Property(e => e.SoType)
                    .HasMaxLength(250)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoCity)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_city");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SoldtoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_postal_code");

                entity.Property(e => e.SoldtoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street1");

                entity.Property(e => e.SoldtoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street2");

                entity.Property(e => e.SoldtoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street3");

                entity.Property(e => e.SoldtoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street4");

                entity.Property(e => e.SoldtoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street5");

                entity.Property(e => e.SourceImportId).HasColumnName("source_import_id");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.SvcBilltoCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("svc_billto_country_code");

                entity.Property(e => e.SvcBilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_billto_key");

                entity.Property(e => e.SvcBilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_billto_name");

                entity.Property(e => e.SvcContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_creation_date");

                entity.Property(e => e.SvcContractLineCreation)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_line_creation");

                entity.Property(e => e.SvcContractLineStatus)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_line_status");

                entity.Property(e => e.SvcContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_number");

                entity.Property(e => e.SvcContractStatus)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_status");

                entity.Property(e => e.SvcContractType)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_type");

                entity.Property(e => e.SvcCurrency)
                    .HasMaxLength(50)
                    .HasColumnName("svc_currency");

                entity.Property(e => e.SvcEligibleFlag)
                    .HasMaxLength(50)
                    .HasColumnName("svc_eligible_flag");

                entity.Property(e => e.SvcEndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_city");

                entity.Property(e => e.SvcEndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_country_code");

                entity.Property(e => e.SvcEndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_country_name");

                entity.Property(e => e.SvcEndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_key");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_name");

                entity.Property(e => e.SvcEndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_theater");

                entity.Property(e => e.SvcEndDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_end_date");

                entity.Property(e => e.SvcInstalledAtCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_country_code");

                entity.Property(e => e.SvcInstalledAtCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_installed_at_country_name");

                entity.Property(e => e.SvcInstalledAtDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_district");

                entity.Property(e => e.SvcInstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_installed_at_key");

                entity.Property(e => e.SvcInstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_name");

                entity.Property(e => e.SvcListValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_list_value");

                entity.Property(e => e.SvcMaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_desc");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcNetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_net_value");

                entity.Property(e => e.SvcPayerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_country");

                entity.Property(e => e.SvcPayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_payer_key");

                entity.Property(e => e.SvcPayerName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_name");

                entity.Property(e => e.SvcSalesOrder)
                    .HasMaxLength(50)
                    .HasColumnName("svc_sales_order");

                entity.Property(e => e.SvcStartDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_start_date");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(250)
                    .HasColumnName("transaction_type");
            });

            modelBuilder.Entity<GmePartnerSummary>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_partner_summary");

                entity.HasIndex(e => e.ResellerKey, "gme_partner_summary_ndx1");

                entity.HasIndex(e => e.ResellerName, "gme_partner_summary_ndx2");

                entity.Property(e => e.Accountgroup)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("accountgroup");

                entity.Property(e => e.Customersince).HasColumnName("customersince");

                entity.Property(e => e.DplFlag)
                    .HasMaxLength(10)
                    .HasColumnName("dpl_flag");

                entity.Property(e => e.Duns)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("duns");

                entity.Property(e => e.NsFlag)
                    .HasMaxLength(20)
                    .HasColumnName("ns_flag");

                entity.Property(e => e.PartnerLevel)
                    .HasMaxLength(50)
                    .HasColumnName("partner_level");

                entity.Property(e => e.PartnerStatus)
                    .HasMaxLength(50)
                    .HasColumnName("partner_status");

                entity.Property(e => e.RefreshDataRange)
                    .HasMaxLength(50)
                    .HasColumnName("refresh_data_range");

                entity.Property(e => e.RefreshedDate)
                    .HasColumnType("date")
                    .HasColumnName("refreshed_date");

                entity.Property(e => e.ResellerAddress)
                    .HasMaxLength(1500)
                    .HasColumnName("reseller_address");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(1500)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.Resellerrole)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("resellerrole");

                entity.Property(e => e.SfdcId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sfdc_id");

                entity.Property(e => e.ShpListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_list_amt");

                entity.Property(e => e.ShpNetAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_net_amt");

                entity.Property(e => e.ShpSnCnt).HasColumnName("shp_sn_cnt");

                entity.Property(e => e.ShpSnWithSvc).HasColumnName("shp_sn_with_svc");

                entity.Property(e => e.ShpSoCnt).HasColumnName("shp_so_cnt");

                entity.Property(e => e.ShpSvcEligibleCnt).HasColumnName("shp_svc_eligible_cnt");

                entity.Property(e => e.SplFlag)
                    .HasMaxLength(10)
                    .HasColumnName("spl_flag");

                entity.Property(e => e.SvcAttachedRate)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_attached_rate");

                entity.Property(e => e.VarId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("var_id");
            });

            modelBuilder.Entity<GmePartnerSummary1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_partner_summary", "dev");

                entity.Property(e => e.Accountgroup)
                    .HasMaxLength(50)
                    .HasColumnName("accountgroup");

                entity.Property(e => e.Customersince)
                    .HasColumnType("datetime")
                    .HasColumnName("customersince");

                entity.Property(e => e.DplFlag)
                    .HasMaxLength(10)
                    .HasColumnName("dpl_flag");

                entity.Property(e => e.Duns)
                    .HasMaxLength(50)
                    .HasColumnName("duns");

                entity.Property(e => e.NsFlag)
                    .HasMaxLength(20)
                    .HasColumnName("ns_flag");

                entity.Property(e => e.PartnerLevel)
                    .HasMaxLength(50)
                    .HasColumnName("partner_level");

                entity.Property(e => e.PartnerStatus)
                    .HasMaxLength(50)
                    .HasColumnName("partner_status");

                entity.Property(e => e.RefreshDataRange)
                    .HasMaxLength(50)
                    .HasColumnName("refresh_data_range");

                entity.Property(e => e.RefreshedDate)
                    .HasColumnType("date")
                    .HasColumnName("refreshed_date");

                entity.Property(e => e.ResellerAddress)
                    .HasMaxLength(1000)
                    .HasColumnName("reseller_address");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(20)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(500)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.Resellerrole)
                    .HasMaxLength(50)
                    .HasColumnName("resellerrole");

                entity.Property(e => e.SfdcId)
                    .HasMaxLength(255)
                    .HasColumnName("sfdc_id");

                entity.Property(e => e.ShpListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_list_amt");

                entity.Property(e => e.ShpNetAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_net_amt");

                entity.Property(e => e.ShpSnCnt).HasColumnName("shp_sn_cnt");

                entity.Property(e => e.ShpSnWithSvc).HasColumnName("shp_sn_with_svc");

                entity.Property(e => e.ShpSoCnt).HasColumnName("shp_so_cnt");

                entity.Property(e => e.SplFlag)
                    .HasMaxLength(10)
                    .HasColumnName("spl_flag");

                entity.Property(e => e.SvcAttachedRate)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_attached_rate");

                entity.Property(e => e.VarId)
                    .HasMaxLength(255)
                    .HasColumnName("var_id");
            });

            modelBuilder.Entity<GmePartnerSummary11>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_partner_summary1", "dev");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.SalesAchievement).HasColumnName("sales_achievement");

                entity.Property(e => e.ShpResellerKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("shp_reseller_key");

                entity.Property(e => e.ShpResellerName)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("shp_reseller_name");

                entity.Property(e => e.TotBookingQty).HasColumnName("tot_booking_qty");

                entity.Property(e => e.TotListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("tot_list_amt");

                entity.Property(e => e.TotNetAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("tot_net_amt");

                entity.Property(e => e.TotSnCnt).HasColumnName("tot_sn_cnt");

                entity.Property(e => e.TotSnWithSvc).HasColumnName("tot_sn_with_svc");

                entity.Property(e => e.TotSoCnt).HasColumnName("tot_so_cnt");
            });

            modelBuilder.Entity<GmePartnerSummary2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_partner_summary2", "dev");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.TotListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("tot_list_amt");

                entity.Property(e => e.TotNetAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("tot_net_amt");

                entity.Property(e => e.TotSnCnt).HasColumnName("tot_sn_cnt");

                entity.Property(e => e.TotSnWithSvc).HasColumnName("tot_sn_with_svc");

                entity.Property(e => e.TotSoCnt).HasColumnName("tot_so_cnt");
            });

            modelBuilder.Entity<GmePartnerSummaryBak>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_partner_summary_bak", "bak");

                entity.Property(e => e.Accountgroup)
                    .HasMaxLength(50)
                    .HasColumnName("accountgroup");

                entity.Property(e => e.Customersince)
                    .HasColumnType("datetime")
                    .HasColumnName("customersince");

                entity.Property(e => e.DplFlag)
                    .HasMaxLength(10)
                    .HasColumnName("dpl_flag");

                entity.Property(e => e.Duns)
                    .HasMaxLength(50)
                    .HasColumnName("duns");

                entity.Property(e => e.NsFlag)
                    .HasMaxLength(20)
                    .HasColumnName("ns_flag");

                entity.Property(e => e.PartnerLevel)
                    .HasMaxLength(50)
                    .HasColumnName("partner_level");

                entity.Property(e => e.PartnerStatus)
                    .HasMaxLength(50)
                    .HasColumnName("partner_status");

                entity.Property(e => e.RefreshDataRange)
                    .HasMaxLength(50)
                    .HasColumnName("refresh_data_range");

                entity.Property(e => e.RefreshedDate)
                    .HasColumnType("date")
                    .HasColumnName("refreshed_date");

                entity.Property(e => e.ResellerAddress)
                    .HasMaxLength(1000)
                    .HasColumnName("reseller_address");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(20)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(500)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.Resellerrole)
                    .HasMaxLength(50)
                    .HasColumnName("resellerrole");

                entity.Property(e => e.SfdcId)
                    .HasMaxLength(255)
                    .HasColumnName("sfdc_id");

                entity.Property(e => e.ShpListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_list_amt");

                entity.Property(e => e.ShpNetAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_net_amt");

                entity.Property(e => e.ShpSnCnt).HasColumnName("shp_sn_cnt");

                entity.Property(e => e.ShpSnWithSvc).HasColumnName("shp_sn_with_svc");

                entity.Property(e => e.ShpSoCnt).HasColumnName("shp_so_cnt");

                entity.Property(e => e.ShpSvcEligibleCnt).HasColumnName("shp_svc_eligible_cnt");

                entity.Property(e => e.SplFlag)
                    .HasMaxLength(10)
                    .HasColumnName("spl_flag");

                entity.Property(e => e.SvcAttachedRate)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_attached_rate");

                entity.Property(e => e.VarId)
                    .HasMaxLength(255)
                    .HasColumnName("var_id");
            });

            modelBuilder.Entity<GmePartnerSummaryVw>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("gme_partner_summary_vw");

                entity.Property(e => e.Accountgroup)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("accountgroup");

                entity.Property(e => e.Customersince).HasColumnName("customersince");

                entity.Property(e => e.DplFlag)
                    .HasMaxLength(10)
                    .HasColumnName("dpl_flag");

                entity.Property(e => e.Duns)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("duns");

                entity.Property(e => e.NsFlag)
                    .HasMaxLength(20)
                    .HasColumnName("ns_flag");

                entity.Property(e => e.PartnerLevel)
                    .HasMaxLength(50)
                    .HasColumnName("partner_level");

                entity.Property(e => e.PartnerStatus)
                    .HasMaxLength(50)
                    .HasColumnName("partner_status");

                entity.Property(e => e.RefreshDataRange)
                    .HasMaxLength(50)
                    .HasColumnName("refresh_data_range");

                entity.Property(e => e.RefreshedDate)
                    .HasColumnType("date")
                    .HasColumnName("refreshed_date");

                entity.Property(e => e.ResellerAddress)
                    .HasMaxLength(1500)
                    .HasColumnName("reseller_address");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(1500)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.Resellerrole)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("resellerrole");

                entity.Property(e => e.SfdcId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sfdc_id");

                entity.Property(e => e.ShpListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_list_amt");

                entity.Property(e => e.ShpNetAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_net_amt");

                entity.Property(e => e.ShpSnCnt).HasColumnName("shp_sn_cnt");

                entity.Property(e => e.ShpSnWithSvc).HasColumnName("shp_sn_with_svc");

                entity.Property(e => e.ShpSoCnt).HasColumnName("shp_so_cnt");

                entity.Property(e => e.ShpSvcEligibleCnt).HasColumnName("shp_svc_eligible_cnt");

                entity.Property(e => e.SplFlag)
                    .HasMaxLength(10)
                    .HasColumnName("spl_flag");

                entity.Property(e => e.SvcAttachedRate)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_attached_rate");

                entity.Property(e => e.VarId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("var_id");
            });

            modelBuilder.Entity<GmeRelatedCustomerG2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_related_customer_g2", "dev");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.RelatedEntityIds).HasColumnName("related_entity_ids");
            });

            modelBuilder.Entity<GmeStocking>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_stocking", "dev");

                entity.Property(e => e.ListPrice)
                    .HasMaxLength(50)
                    .HasColumnName("List_Price");

                entity.Property(e => e.PosChannelPartnerKey)
                    .HasMaxLength(50)
                    .HasColumnName("pos_channel_partner_key");

                entity.Property(e => e.PosCiStatus)
                    .HasMaxLength(50)
                    .HasColumnName("pos_ci_status");

                entity.Property(e => e.PosClaimAmt)
                    .HasMaxLength(50)
                    .HasColumnName("pos_claim_amt");

                entity.Property(e => e.PosClaimStatus)
                    .HasMaxLength(50)
                    .HasColumnName("pos_claim_status");

                entity.Property(e => e.PosDistiCountry)
                    .HasMaxLength(50)
                    .HasColumnName("pos_disti_country");

                entity.Property(e => e.PosDistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("pos_disti_key");

                entity.Property(e => e.PosDistiName).HasColumnName("pos_disti_name");

                entity.Property(e => e.PosDistiSales)
                    .HasMaxLength(50)
                    .HasColumnName("pos_disti_sales");

                entity.Property(e => e.PosDocOrderNumber)
                    .HasMaxLength(50)
                    .HasColumnName("pos_doc_order_number");

                entity.Property(e => e.PosEndCustCountry)
                    .HasMaxLength(50)
                    .HasColumnName("pos_end_cust_country");

                entity.Property(e => e.PosEndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("pos_end_cust_country_code");

                entity.Property(e => e.PosEndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("pos_end_cust_key");

                entity.Property(e => e.PosEndCustName).HasColumnName("pos_end_cust_name");

                entity.Property(e => e.PosItemCreatedDate)
                    .HasMaxLength(50)
                    .HasColumnName("pos_item_created_date");

                entity.Property(e => e.PosItemNumber)
                    .HasMaxLength(50)
                    .HasColumnName("pos_item_number");

                entity.Property(e => e.PosJnprPosValue)
                    .HasMaxLength(50)
                    .HasColumnName("pos_jnpr_pos_value");

                entity.Property(e => e.PosMaterial).HasColumnName("pos_material");

                entity.Property(e => e.PosMaterialKey)
                    .HasMaxLength(50)
                    .HasColumnName("pos_material_key");

                entity.Property(e => e.PosMaterialProductCat).HasColumnName("pos_material_product_cat");

                entity.Property(e => e.PosMaterialType)
                    .HasMaxLength(250)
                    .HasColumnName("pos_material_type");

                entity.Property(e => e.PosMaterialTypeKey)
                    .HasMaxLength(50)
                    .HasColumnName("pos_material_type_key");

                entity.Property(e => e.PosReportedQty)
                    .HasMaxLength(50)
                    .HasColumnName("pos_reported_qty");

                entity.Property(e => e.PosResellerCountry)
                    .HasMaxLength(50)
                    .HasColumnName("pos_reseller_country");

                entity.Property(e => e.PosResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("pos_reseller_key");

                entity.Property(e => e.PosResellerName)
                    .HasMaxLength(100)
                    .HasColumnName("pos_reseller_name");

                entity.Property(e => e.PosSdContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("pos_sd_contract_number");

                entity.Property(e => e.PosSerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("pos_serial_number");

                entity.Property(e => e.PosSoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("pos_so_number");

                entity.Property(e => e.PosTransactionQty)
                    .HasMaxLength(50)
                    .HasColumnName("pos_transaction_qty");

                entity.Property(e => e.PosTransmissionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("pos_transmission_number");

                entity.Property(e => e.SameEndCustomerInADifferentCountry)
                    .HasMaxLength(50)
                    .HasColumnName("Same_End_Customer_in_a_Different_Country");

                entity.Property(e => e.SvcContractCreationDate).HasColumnName("svc_contract_creation_date");

                entity.Property(e => e.SvcContractItemNo).HasColumnName("svc_contract_item_no");

                entity.Property(e => e.SvcContractLineItemStatus)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_line_item_status");

                entity.Property(e => e.SvcContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_number");

                entity.Property(e => e.SvcContractStatus)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_status");

                entity.Property(e => e.SvcContractType)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_type");

                entity.Property(e => e.SvcEndCustCountryCode)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_country_code");

                entity.Property(e => e.SvcEndCustKey)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_key");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_name");

                entity.Property(e => e.SvcMaterial)
                    .HasMaxLength(250)
                    .HasColumnName("svc_material");

                entity.Property(e => e.SvcMaterialEccn)
                    .HasMaxLength(250)
                    .HasColumnName("svc_material_eccn");

                entity.Property(e => e.SvcMaterialHts)
                    .HasMaxLength(250)
                    .HasColumnName("svc_material_hts");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(250)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcProductFamily)
                    .HasMaxLength(250)
                    .HasColumnName("svc_product_family");

                entity.Property(e => e.SvcProductLine)
                    .HasMaxLength(250)
                    .HasColumnName("svc_product_line");

                entity.Property(e => e.SvcSalesOrderAlpha)
                    .HasMaxLength(250)
                    .HasColumnName("svc_sales_order_alpha");

                entity.Property(e => e.SvcSerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("svc_serial_number");

                entity.Property(e => e.SvcServiceEndDate)
                    .HasMaxLength(50)
                    .HasColumnName("svc_service_end_date");

                entity.Property(e => e.SvcServiceMaterial)
                    .HasMaxLength(250)
                    .HasColumnName("svc_service_material");

                entity.Property(e => e.SvcServiceMaterialKey)
                    .HasMaxLength(250)
                    .HasColumnName("svc_service_material_key");

                entity.Property(e => e.SvcServiceMaterialProductLine)
                    .HasMaxLength(250)
                    .HasColumnName("svc_service_material_product_line");

                entity.Property(e => e.SvcServiceStartDate)
                    .HasMaxLength(50)
                    .HasColumnName("svc_service_start_date");
            });

            modelBuilder.Entity<GmeSummary>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_summary", "dev");

                entity.Property(e => e.Column17)
                    .HasMaxLength(1)
                    .HasColumnName("column_17");

                entity.Property(e => e.Column18)
                    .HasMaxLength(50)
                    .HasColumnName("column_18");

                entity.Property(e => e.DiscountForDivertedProducts)
                    .HasMaxLength(50)
                    .HasColumnName("__Discount_for_Diverted_Products");

                entity.Property(e => e.Diversion)
                    .HasMaxLength(50)
                    .HasColumnName("Diversion__");

                entity.Property(e => e.GreyMarketLossBasedOnStandardDiscountOf37)
                    .HasMaxLength(50)
                    .HasColumnName("GreyMarket___Loss_Based_on_Standard_Discount_of_37_");

                entity.Property(e => e.ListPriceOfFlaggedDivertedProducts)
                    .HasMaxLength(50)
                    .HasColumnName("__List_Price_of_Flagged_Diverted_Products");

                entity.Property(e => e.NumberOfLinesSnsWithCountryMismatches)
                    .HasMaxLength(50)
                    .HasColumnName("Number_of_Lines__SNs__with_Country_Mismatches");

                entity.Property(e => e.NumberOfLinesSnsWithNameCountryMismatches)
                    .HasMaxLength(50)
                    .HasColumnName("Number_of_Lines__SNs__with_Name___Country_Mismatches");

                entity.Property(e => e.NumberOfLinesWithServiceAttached)
                    .HasMaxLength(50)
                    .HasColumnName("Number_of_Lines_with_Service_Attached");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("PO_TYPE");

                entity.Property(e => e.ResellerCountry2)
                    .HasMaxLength(50)
                    .HasColumnName("Reseller_Country_2");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(150)
                    .HasColumnName("Reseller_Country_Code");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(250)
                    .HasColumnName("Reseller_Name");

                entity.Property(e => e.ServiceAttach)
                    .HasMaxLength(50)
                    .HasColumnName("Service_Attach__");

                entity.Property(e => e.TotalNumberOfPosLinesReportedInJan2016May2017)
                    .HasMaxLength(50)
                    .HasColumnName("Total_Number_of_POS_Lines_Reported_in_Jan_2016____May_2017");

                entity.Property(e => e.ValueOfAllProductsSold)
                    .HasMaxLength(50)
                    .HasColumnName("__Value_of_All_Products_Sold");

                entity.Property(e => e.ValueOfFlaggedDivertedProducts)
                    .HasMaxLength(50)
                    .HasColumnName("__Value_of_Flagged_Diverted_Products");

                entity.Property(e => e.ValueOfProductsWithServiceAttached)
                    .HasMaxLength(50)
                    .HasColumnName("__Value_of_Products_with_Service_Attached");
            });

            modelBuilder.Entity<GmeSummaryBak>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_summary_bak", "dev");

                entity.Property(e => e.Column17)
                    .HasMaxLength(1)
                    .HasColumnName("column_17");

                entity.Property(e => e.Column18)
                    .HasMaxLength(50)
                    .HasColumnName("column_18");

                entity.Property(e => e.DiscountForDivertedProducts)
                    .HasMaxLength(50)
                    .HasColumnName("__Discount_for_Diverted_Products");

                entity.Property(e => e.Diversion)
                    .HasMaxLength(50)
                    .HasColumnName("Diversion__");

                entity.Property(e => e.GreyMarketLossBasedOnStandardDiscountOf37)
                    .HasMaxLength(50)
                    .HasColumnName("GreyMarket___Loss_Based_on_Standard_Discount_of_37_");

                entity.Property(e => e.ListPriceOfFlaggedDivertedProducts)
                    .HasMaxLength(50)
                    .HasColumnName("__List_Price_of_Flagged_Diverted_Products");

                entity.Property(e => e.NumberOfLinesSnsWithCountryMismatches)
                    .HasMaxLength(50)
                    .HasColumnName("Number_of_Lines__SNs__with_Country_Mismatches");

                entity.Property(e => e.NumberOfLinesSnsWithNameCountryMismatches)
                    .HasMaxLength(50)
                    .HasColumnName("Number_of_Lines__SNs__with_Name___Country_Mismatches");

                entity.Property(e => e.NumberOfLinesWithServiceAttached)
                    .HasMaxLength(50)
                    .HasColumnName("Number_of_Lines_with_Service_Attached");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("PO_TYPE");

                entity.Property(e => e.ResellerCountry2)
                    .HasMaxLength(50)
                    .HasColumnName("Reseller_Country_2");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(150)
                    .HasColumnName("Reseller_Country_Code");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(250)
                    .HasColumnName("Reseller_Name");

                entity.Property(e => e.ServiceAttach)
                    .HasMaxLength(50)
                    .HasColumnName("Service_Attach__");

                entity.Property(e => e.TotalNumberOfPosLinesReportedInJan2016May2017)
                    .HasMaxLength(50)
                    .HasColumnName("Total_Number_of_POS_Lines_Reported_in_Jan_2016____May_2017");

                entity.Property(e => e.ValueOfAllProductsSold)
                    .HasMaxLength(50)
                    .HasColumnName("__Value_of_All_Products_Sold");

                entity.Property(e => e.ValueOfFlaggedDivertedProducts)
                    .HasMaxLength(50)
                    .HasColumnName("__Value_of_Flagged_Diverted_Products");

                entity.Property(e => e.ValueOfProductsWithServiceAttached)
                    .HasMaxLength(50)
                    .HasColumnName("__Value_of_Products_with_Service_Attached");
            });

            modelBuilder.Entity<GmeSummaryMeasure>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_summary_measure", "dev");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.EcCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("ec_country_code");

                entity.Property(e => e.FiscalQtr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("fiscal_qtr");

                entity.Property(e => e.ListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("list_amt");

                entity.Property(e => e.NetAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("net_amt");

                entity.Property(e => e.NetAmtWithSvc)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("net_amt_with_svc");

                entity.Property(e => e.ProductId)
                    .HasMaxLength(150)
                    .HasColumnName("product_id");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.SnShippedCnt).HasColumnName("sn_shipped_cnt");

                entity.Property(e => e.SnWithSvc).HasColumnName("sn_with_svc");
            });

            modelBuilder.Entity<GmeSummaryMeasureBySvcEc>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_summary_measure_bySvcEC", "dev");

                entity.Property(e => e.ListAmtBySvcEc)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("list_amt_bySvcEC");

                entity.Property(e => e.NetAmtBySvcEc)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("net_amt_bySvcEC");

                entity.Property(e => e.SnWithSvcBySvcEc).HasColumnName("sn_with_svc_bySvcEC");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_name");
            });

            modelBuilder.Entity<GmeSummaryVw>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("gme_summary_vw", "dev");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("am_country_name");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(500)
                    .HasColumnName("country_code");

                entity.Property(e => e.CountryName)
                    .HasMaxLength(250)
                    .HasColumnName("country_name");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("date")
                    .HasColumnName("created_date");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DateComplete)
                    .HasColumnType("date")
                    .HasColumnName("date_complete");

                entity.Property(e => e.DateOpened)
                    .HasColumnType("date")
                    .HasColumnName("date_opened");

                entity.Property(e => e.DealSize)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("deal_size");

                entity.Property(e => e.DiscPerc)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("disc_perc");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(250)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.DrspPosId).HasColumnName("drsp_pos_id");

                entity.Property(e => e.EmailForm)
                    .HasMaxLength(250)
                    .HasColumnName("email_form");

                entity.Property(e => e.EmailSent)
                    .HasMaxLength(250)
                    .HasColumnName("email_sent");

                entity.Property(e => e.EndCustAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("end_cust_address");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("end_cust_theater");

                entity.Property(e => e.EntityKey)
                    .HasMaxLength(500)
                    .HasColumnName("entity_key");

                entity.Property(e => e.EntityLevel)
                    .HasMaxLength(250)
                    .HasColumnName("entity_level");

                entity.Property(e => e.EntityName)
                    .HasMaxLength(500)
                    .HasColumnName("entity_name");

                entity.Property(e => e.EntityType)
                    .HasMaxLength(100)
                    .HasColumnName("entity_type");

                entity.Property(e => e.GlobalAcctScore).HasColumnName("global_acct_score");

                entity.Property(e => e.GmeFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("gme_flag");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.MspAcctScore).HasColumnName("msp_acct_score");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.Notes)
                    .HasMaxLength(4000)
                    .HasColumnName("notes");

                entity.Property(e => e.NsNotes)
                    .HasMaxLength(500)
                    .HasColumnName("ns_notes");

                entity.Property(e => e.PCustomersince).HasColumnName("p_customersince");

                entity.Property(e => e.PDivCnt).HasColumnName("p_div_cnt");

                entity.Property(e => e.PDivRate)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("p_div_rate");

                entity.Property(e => e.PPartnerLevel)
                    .HasMaxLength(50)
                    .HasColumnName("p_partner_level");

                entity.Property(e => e.PPartnerStatus)
                    .HasMaxLength(50)
                    .HasColumnName("p_partner_status");

                entity.Property(e => e.PResellerAddress)
                    .HasMaxLength(1500)
                    .HasColumnName("p_reseller_address");

                entity.Property(e => e.PResellerCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("p_reseller_country_code");

                entity.Property(e => e.PResellerCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("p_reseller_country_name");

                entity.Property(e => e.PResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("p_reseller_theater");

                entity.Property(e => e.PShpListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("p_shp_list_amt");

                entity.Property(e => e.PShpNetAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("p_shp_net_amt");

                entity.Property(e => e.PShpSnCnt).HasColumnName("p_shp_sn_cnt");

                entity.Property(e => e.PShpSnWithSvc).HasColumnName("p_shp_sn_with_svc");

                entity.Property(e => e.PShpSoCnt).HasColumnName("p_shp_so_cnt");

                entity.Property(e => e.PShpSvcEligibleCnt).HasColumnName("p_shp_svc_eligible_cnt");

                entity.Property(e => e.PSvcAttachedRate)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("p_svc_attached_rate");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("quote_id");

                entity.Property(e => e.Remediation)
                    .HasMaxLength(250)
                    .HasColumnName("remediation");

                entity.Property(e => e.RemediationStatus)
                    .HasMaxLength(250)
                    .HasColumnName("remediation_status");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(1500)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.RmaNumber)
                    .HasMaxLength(50)
                    .HasColumnName("rma_number");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SfdcId)
                    .HasMaxLength(250)
                    .HasColumnName("sfdc_id");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.Status)
                    .HasMaxLength(10)
                    .HasColumnName("status");

                entity.Property(e => e.SvcBilltoCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("svc_billto_country_code");

                entity.Property(e => e.SvcBilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_billto_key");

                entity.Property(e => e.SvcBilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_billto_name");

                entity.Property(e => e.SvcContractLineStatus)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_line_status");

                entity.Property(e => e.SvcContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_number");

                entity.Property(e => e.SvcEligibleFlag)
                    .HasMaxLength(50)
                    .HasColumnName("svc_eligible_flag");

                entity.Property(e => e.SvcEndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_country_code");

                entity.Property(e => e.SvcEndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_country_name");

                entity.Property(e => e.SvcEndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_key");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_name");

                entity.Property(e => e.SvcEndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_theater");

                entity.Property(e => e.SvcInstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_installed_at_key");

                entity.Property(e => e.SvcInstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_name");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcNetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_net_value");

                entity.Property(e => e.SvcSalesOrder)
                    .HasMaxLength(50)
                    .HasColumnName("svc_sales_order");

                entity.Property(e => e.TargetFlag)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("target_flag");

                entity.Property(e => e.Theater)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("theater");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TrnxFiscalQtr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("trnx_fiscal_qtr");

                entity.Property(e => e.VarId)
                    .HasMaxLength(250)
                    .HasColumnName("var_id");

                entity.Property(e => e.Website)
                    .HasMaxLength(250)
                    .HasColumnName("website");

                entity.Property(e => e.WinFlag)
                    .HasMaxLength(250)
                    .HasColumnName("win_flag");
            });

            modelBuilder.Entity<GmeTarget>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_targets");

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(500)
                    .HasColumnName("country_code");

                entity.Property(e => e.CountryName)
                    .HasMaxLength(250)
                    .HasColumnName("country_name");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("date")
                    .HasColumnName("created_date");

                entity.Property(e => e.DateComplete)
                    .HasColumnType("date")
                    .HasColumnName("date_complete");

                entity.Property(e => e.DateOpened)
                    .HasColumnType("date")
                    .HasColumnName("date_opened");

                entity.Property(e => e.DealSize)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("deal_size");

                entity.Property(e => e.EmailForm)
                    .HasMaxLength(250)
                    .HasColumnName("email_form");

                entity.Property(e => e.EmailSent)
                    .HasMaxLength(250)
                    .HasColumnName("email_sent");

                entity.Property(e => e.EntityKey)
                    .HasMaxLength(500)
                    .HasColumnName("entity_key");

                entity.Property(e => e.EntityLevel)
                    .HasMaxLength(250)
                    .HasColumnName("entity_level");

                entity.Property(e => e.EntityName)
                    .HasMaxLength(500)
                    .HasColumnName("entity_name");

                entity.Property(e => e.EntityType)
                    .HasMaxLength(100)
                    .HasColumnName("entity_type");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Notes)
                    .HasMaxLength(4000)
                    .HasColumnName("notes");

                entity.Property(e => e.NsNotes)
                    .HasMaxLength(500)
                    .HasColumnName("ns_notes");

                entity.Property(e => e.Recoveries)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("recoveries");

                entity.Property(e => e.Remediation)
                    .HasMaxLength(250)
                    .HasColumnName("remediation");

                entity.Property(e => e.RemediationStatus)
                    .HasMaxLength(250)
                    .HasColumnName("remediation_status");

                entity.Property(e => e.SfdcId)
                    .HasMaxLength(250)
                    .HasColumnName("sfdc_id");

                entity.Property(e => e.Status)
                    .HasMaxLength(10)
                    .HasColumnName("status");

                entity.Property(e => e.Theater)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("theater");

                entity.Property(e => e.VarId)
                    .HasMaxLength(250)
                    .HasColumnName("var_id");

                entity.Property(e => e.Website)
                    .HasMaxLength(250)
                    .HasColumnName("website");

                entity.Property(e => e.WinFlag)
                    .HasMaxLength(250)
                    .HasColumnName("win_flag");
            });

            modelBuilder.Entity<GmeTargetDetail>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_target_details");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountry)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("am_country");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.ContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("contract_creation_date");

                entity.Property(e => e.ContractEndStartDate)
                    .HasColumnType("date")
                    .HasColumnName("contract_end_start_date");

                entity.Property(e => e.ContractItemNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_item_no");

                entity.Property(e => e.ContractLineItemStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_line_item_status");

                entity.Property(e => e.ContractLineStartDate)
                    .HasColumnType("date")
                    .HasColumnName("contract_line_start_date");

                entity.Property(e => e.ContractNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_number");

                entity.Property(e => e.ContractStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_status");

                entity.Property(e => e.ContractType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_type");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DedupId).HasColumnName("dedup_id");

                entity.Property(e => e.DeliveryDate)
                    .HasColumnType("date")
                    .HasColumnName("delivery_date");

                entity.Property(e => e.DeliveryNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("delivery_number");

                entity.Property(e => e.DistiCountry)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("disti_country");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.EcCountry)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ec_country");

                entity.Property(e => e.EcCountryCode)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("ec_country_code");

                entity.Property(e => e.EcCustomer)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("ec_customer");

                entity.Property(e => e.EcGblGroupCompare)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("ec_gbl_group_compare");

                entity.Property(e => e.EcGblJaroScore).HasColumnName("ec_gbl_jaro_score");

                entity.Property(e => e.EcLatitude).HasColumnName("ec_latitude");

                entity.Property(e => e.EcLongitude).HasColumnName("ec_longitude");

                entity.Property(e => e.EcSvcJaroScore).HasColumnName("ec_svc_jaro_score");

                entity.Property(e => e.EcSvcSenzingScore).HasColumnName("ec_svc_senzing_score");

                entity.Property(e => e.EcTheater)
                    .HasMaxLength(250)
                    .HasColumnName("ec_theater");

                entity.Property(e => e.EntityExceptionFlag)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("entity_exception_flag");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ItemNumber).HasColumnName("item_number");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaxGblScore).HasColumnName("max_gbl_score");

                entity.Property(e => e.MspScore).HasColumnName("msp_score");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PartnerLevelKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("partner_level_key");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("po_type");

                entity.Property(e => e.PosEc)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec");

                entity.Property(e => e.PosEcCity)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec_city");

                entity.Property(e => e.PosEcCountry)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec_country");

                entity.Property(e => e.PosEcCountryCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec_country_code");

                entity.Property(e => e.PosEcPostalcode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec_postalcode");

                entity.Property(e => e.PosEcRegion)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec_region");

                entity.Property(e => e.PosEcStreet1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec_street1");

                entity.Property(e => e.PosEcStreet2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec_street2");

                entity.Property(e => e.PosEcStreet3)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec_street3");

                entity.Property(e => e.PosEcStreet4)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec_street4");

                entity.Property(e => e.ProductId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("product_id");

                entity.Property(e => e.ResEcJaroScore).HasColumnName("res_ec_jaro_score");

                entity.Property(e => e.ResEcSenzingScore).HasColumnName("res_ec_senzing_score");

                entity.Property(e => e.ResGblGroupCompare)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("res_gbl_group_compare");

                entity.Property(e => e.ResGblJaroScore).HasColumnName("res_gbl_jaro_score");

                entity.Property(e => e.ResSvcJaroScore).HasColumnName("res_svc_jaro_score");

                entity.Property(e => e.ResSvcSenzingScore).HasColumnName("res_svc_senzing_score");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.SameEndCustFlag)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("same_end_cust_flag");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("serial_number");

                entity.Property(e => e.ShiptoCountry)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_country");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoDistrict)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_district");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShiptoPostalCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_postal_code");

                entity.Property(e => e.ShiptoRegion)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_region");

                entity.Property(e => e.ShiptoStreet1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street1");

                entity.Property(e => e.ShiptoStreet2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street2");

                entity.Property(e => e.ShiptoStreet3)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street3");

                entity.Property(e => e.ShiptoStreet4)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street4");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("so_type");

                entity.Property(e => e.SvcCountry)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("svc_country");

                entity.Property(e => e.SvcCountryCode)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("svc_country_code");

                entity.Property(e => e.SvcCustomer)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("svc_customer");

                entity.Property(e => e.SvcGblGroupCompare)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("svc_gbl_group_compare");

                entity.Property(e => e.SvcGblJaroScore).HasColumnName("svc_gbl_jaro_score");

                entity.Property(e => e.SvcLatitude).HasColumnName("svc_latitude");

                entity.Property(e => e.SvcLongitude).HasColumnName("svc_longitude");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_theater");

                entity.Property(e => e.TransactionItem)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("transaction_item");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Transaction_type");
            });

            modelBuilder.Entity<GmeTargetSummary>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_target_summary");

                entity.Property(e => e.AmtProductsSold)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("amt_products_sold");

                entity.Property(e => e.AmtProductsWithSvc)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("amt_products_with_svc");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(150)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerCountryName)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_country_name");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.ServiceAttachPerc)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("service_attach_perc");

                entity.Property(e => e.TotLinesBooked).HasColumnName("tot_lines_booked");

                entity.Property(e => e.TotLinesWithSvc).HasColumnName("tot_lines_with_svc");
            });

            modelBuilder.Entity<GmeTargetsTwb>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("gme_targets_twb");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("am_country_name");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("billto_district");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.BilltoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("billto_postal_code");

                entity.Property(e => e.BilltoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("billto_region");

                entity.Property(e => e.BilltoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street1");

                entity.Property(e => e.BilltoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street2");

                entity.Property(e => e.BilltoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street3");

                entity.Property(e => e.BilltoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street4");

                entity.Property(e => e.BilltoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street5");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .HasColumnName("claim_status");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_item");

                entity.Property(e => e.DiscPerc)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("disc_perc");

                entity.Property(e => e.DistiCity)
                    .HasMaxLength(255)
                    .HasColumnName("disti_city");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("disti_postal_code");

                entity.Property(e => e.DistiRegion)
                    .HasMaxLength(255)
                    .HasColumnName("disti_region");

                entity.Property(e => e.DistiStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street1");

                entity.Property(e => e.DistiStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street2");

                entity.Property(e => e.DistiStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street3");

                entity.Property(e => e.DistiStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street4");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(250)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.DrspPosId).HasColumnName("drsp_pos_id");

                entity.Property(e => e.EcSvcJaroScore).HasColumnName("ec_svc_jaro_score");

                entity.Property(e => e.EcSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_key_flag");

                entity.Property(e => e.EcSvcSamegidFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_samegid_flag");

                entity.Property(e => e.EcSvcSenzingScore).HasColumnName("ec_svc_senzing_score");

                entity.Property(e => e.EndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_city");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_postal_code");

                entity.Property(e => e.EndCustRegion)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_region");

                entity.Property(e => e.EndCustStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street1");

                entity.Property(e => e.EndCustStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street2");

                entity.Property(e => e.EndCustStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street3");

                entity.Property(e => e.EndCustStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street4");

                entity.Property(e => e.EndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("end_cust_theater");

                entity.Property(e => e.EndUserStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("end_user_street5");

                entity.Property(e => e.EntityExceptionFlag)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("entity_exception_flag");

                entity.Property(e => e.EntityRelatedFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("entity_related_flag");

                entity.Property(e => e.GlobalAcctScore).HasColumnName("global_acct_score");

                entity.Property(e => e.GmeFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("gme_flag");

                entity.Property(e => e.ListAmtWithSvcByResSo)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("list_amt_with_svc_byResSo");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.MspAcctScore).HasColumnName("msp_acct_score");

                entity.Property(e => e.NetAmtWithSvcByResSo)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("net_amt_with_svc_ByResSo");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PAccountgroup)
                    .HasMaxLength(50)
                    .HasColumnName("p_accountgroup");

                entity.Property(e => e.PCustomersince)
                    .HasColumnType("datetime")
                    .HasColumnName("p_customersince");

                entity.Property(e => e.PDivCnt).HasColumnName("p_div_cnt");

                entity.Property(e => e.PDivRate)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("p_div_rate");

                entity.Property(e => e.PDplFlag)
                    .HasMaxLength(10)
                    .HasColumnName("p_dpl_flag");

                entity.Property(e => e.PDuns)
                    .HasMaxLength(50)
                    .HasColumnName("p_duns");

                entity.Property(e => e.PPartnerLevel)
                    .HasMaxLength(50)
                    .HasColumnName("p_partner_level");

                entity.Property(e => e.PPartnerStatus)
                    .HasMaxLength(50)
                    .HasColumnName("p_partner_status");

                entity.Property(e => e.PRefreshDataRange)
                    .HasMaxLength(50)
                    .HasColumnName("p_refresh_data_range");

                entity.Property(e => e.PRefreshedDate)
                    .HasColumnType("date")
                    .HasColumnName("p_refreshed_date");

                entity.Property(e => e.PResellerAddress)
                    .HasMaxLength(1000)
                    .HasColumnName("p_reseller_address");

                entity.Property(e => e.PResellerCountryCode)
                    .HasMaxLength(20)
                    .HasColumnName("p_reseller_country_code");

                entity.Property(e => e.PResellerCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("p_reseller_country_name");

                entity.Property(e => e.PResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("p_reseller_key");

                entity.Property(e => e.PResellerName)
                    .HasMaxLength(500)
                    .HasColumnName("p_reseller_name");

                entity.Property(e => e.PResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("p_reseller_theater");

                entity.Property(e => e.PResellerrole)
                    .HasMaxLength(50)
                    .HasColumnName("p_resellerrole");

                entity.Property(e => e.PSfdcId)
                    .HasMaxLength(255)
                    .HasColumnName("p_sfdc_id");

                entity.Property(e => e.PShpListAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("p_shp_list_amt");

                entity.Property(e => e.PShpNetAmt)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("p_shp_net_amt");

                entity.Property(e => e.PShpSnCnt).HasColumnName("p_shp_sn_cnt");

                entity.Property(e => e.PShpSnWithSvc).HasColumnName("p_shp_sn_with_svc");

                entity.Property(e => e.PShpSoCnt).HasColumnName("p_shp_so_cnt");

                entity.Property(e => e.PShpSvcEligibleCnt).HasColumnName("p_shp_svc_eligible_cnt");

                entity.Property(e => e.PSplFlag)
                    .HasMaxLength(10)
                    .HasColumnName("p_spl_flag");

                entity.Property(e => e.PSvcAttachedRate)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("p_svc_attached_rate");

                entity.Property(e => e.PVarId)
                    .HasMaxLength(255)
                    .HasColumnName("p_var_id");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.ProcessedFlag)
                    .HasMaxLength(50)
                    .HasColumnName("processed_flag");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("quote_id");

                entity.Property(e => e.ReportedQty).HasColumnName("reported_qty");

                entity.Property(e => e.ResEcJaroScore).HasColumnName("res_ec_jaro_score");

                entity.Property(e => e.ResEcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_ec_key_flag");

                entity.Property(e => e.ResSvcEntityRelatedFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("res_svc_entity_related_flag");

                entity.Property(e => e.ResSvcJaroScore).HasColumnName("res_svc_jaro_score");

                entity.Property(e => e.ResSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_svc_key_flag");

                entity.Property(e => e.ResellerCity)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_city");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_postal_code");

                entity.Property(e => e.ResellerStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street1");

                entity.Property(e => e.ResellerStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street2");

                entity.Property(e => e.ResellerStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street3");

                entity.Property(e => e.ResellerStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street4");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.RmaNumber)
                    .HasMaxLength(50)
                    .HasColumnName("rma_number");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SerialNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number_orig");

                entity.Property(e => e.ShiptoCity)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_city");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShiptoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_postal_code");

                entity.Property(e => e.ShiptoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_region");

                entity.Property(e => e.ShiptoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street1");

                entity.Property(e => e.ShiptoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street2");

                entity.Property(e => e.ShiptoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street3");

                entity.Property(e => e.ShiptoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street4");

                entity.Property(e => e.ShiptoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street5");

                entity.Property(e => e.ShpListAmtByResSo)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_list_amt_byResSo");

                entity.Property(e => e.ShpNetAmtByResSo)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("shp_net_amt_byResSo");

                entity.Property(e => e.ShpSnCntByResSo).HasColumnName("shp_sn_cnt_byResSo");

                entity.Property(e => e.ShpSnWithSvcByResSo).HasColumnName("shp_sn_with_svc_byResSo");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("so_number_orig");

                entity.Property(e => e.SoType)
                    .HasMaxLength(250)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoCity)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_city");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SoldtoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_postal_code");

                entity.Property(e => e.SoldtoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street1");

                entity.Property(e => e.SoldtoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street2");

                entity.Property(e => e.SoldtoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street3");

                entity.Property(e => e.SoldtoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street4");

                entity.Property(e => e.SoldtoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street5");

                entity.Property(e => e.SourceImportId).HasColumnName("source_import_id");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.SvcBilltoCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("svc_billto_country_code");

                entity.Property(e => e.SvcBilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_billto_key");

                entity.Property(e => e.SvcBilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_billto_name");

                entity.Property(e => e.SvcContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_creation_date");

                entity.Property(e => e.SvcContractLineCreation)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_line_creation");

                entity.Property(e => e.SvcContractLineStatus)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_line_status");

                entity.Property(e => e.SvcContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_number");

                entity.Property(e => e.SvcContractStatus)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_status");

                entity.Property(e => e.SvcContractType)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_type");

                entity.Property(e => e.SvcCurrency)
                    .HasMaxLength(50)
                    .HasColumnName("svc_currency");

                entity.Property(e => e.SvcEligibleFlag)
                    .HasMaxLength(50)
                    .HasColumnName("svc_eligible_flag");

                entity.Property(e => e.SvcEndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_city");

                entity.Property(e => e.SvcEndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_country_code");

                entity.Property(e => e.SvcEndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_country_name");

                entity.Property(e => e.SvcEndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_key");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_name");

                entity.Property(e => e.SvcEndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_theater");

                entity.Property(e => e.SvcEndDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_end_date");

                entity.Property(e => e.SvcInstalledAtCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_country_code");

                entity.Property(e => e.SvcInstalledAtCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_installed_at_country_name");

                entity.Property(e => e.SvcInstalledAtDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_district");

                entity.Property(e => e.SvcInstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_installed_at_key");

                entity.Property(e => e.SvcInstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_name");

                entity.Property(e => e.SvcListValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_list_value");

                entity.Property(e => e.SvcMaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_desc");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcNetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_net_value");

                entity.Property(e => e.SvcPayerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_country");

                entity.Property(e => e.SvcPayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_payer_key");

                entity.Property(e => e.SvcPayerName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_name");

                entity.Property(e => e.SvcSalesOrder)
                    .HasMaxLength(50)
                    .HasColumnName("svc_sales_order");

                entity.Property(e => e.SvcStartDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_start_date");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(250)
                    .HasColumnName("transaction_type");
            });

            modelBuilder.Entity<Hash>(entity =>
            {
                entity.ToTable("Hash", "HangFire");

                entity.HasIndex(e => e.ExpireAt, "IX_HangFire_Hash_ExpireAt");

                entity.HasIndex(e => e.Key, "IX_HangFire_Hash_Key");

                entity.HasIndex(e => new { e.Key, e.Field }, "UX_HangFire_Hash_Key_Field")
                    .IsUnique();

                entity.Property(e => e.Field).HasMaxLength(100);

                entity.Property(e => e.Key).HasMaxLength(100);
            });

            modelBuilder.Entity<HrExtract>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("HR_Extract");

                entity.Property(e => e.CeoStaff)
                    .IsUnicode(false)
                    .HasColumnName("ceo_staff");

                entity.Property(e => e.EmployeeEmail)
                    .IsUnicode(false)
                    .HasColumnName("employee_email");

                entity.Property(e => e.EmployeeId)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("employee_id");

                entity.Property(e => e.EmployeeName)
                    .IsUnicode(false)
                    .HasColumnName("employee_name");

                entity.Property(e => e.EmployeeStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("employee_status");

                entity.Property(e => e.EmployeeType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("employee_type");

                entity.Property(e => e.Region)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("region");

                entity.Property(e => e.Segment)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("segment");
            });

            modelBuilder.Entity<Job>(entity =>
            {
                entity.ToTable("Job", "HangFire");

                entity.HasIndex(e => e.ExpireAt, "IX_HangFire_Job_ExpireAt");

                entity.HasIndex(e => e.StateName, "IX_HangFire_Job_StateName");

                entity.Property(e => e.CreatedAt).HasColumnType("datetime");

                entity.Property(e => e.ExpireAt).HasColumnType("datetime");

                entity.Property(e => e.StateName).HasMaxLength(20);
            });

            modelBuilder.Entity<JobParameter>(entity =>
            {
                entity.ToTable("JobParameter", "HangFire");

                entity.HasIndex(e => new { e.JobId, e.Name }, "IX_HangFire_JobParameter_JobIdAndName");

                entity.Property(e => e.Name).HasMaxLength(40);

                entity.HasOne(d => d.Job)
                    .WithMany(p => p.JobParameters)
                    .HasForeignKey(d => d.JobId)
                    .HasConstraintName("FK_HangFire_JobParameter_Job");
            });

            modelBuilder.Entity<JobQueue>(entity =>
            {
                entity.ToTable("JobQueue", "HangFire");

                entity.HasIndex(e => new { e.Queue, e.FetchedAt }, "IX_HangFire_JobQueue_QueueAndFetchedAt");

                entity.Property(e => e.FetchedAt).HasColumnType("datetime");

                entity.Property(e => e.Queue).HasMaxLength(50);
            });

            modelBuilder.Entity<LampBooking>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lamp_bookings");

                entity.HasIndex(e => e.SoNumber, "lamp_bookings_ndx1");

                entity.HasIndex(e => e.ImportStatus, "lamp_bookings_ndx2");

                entity.HasIndex(e => e.ResellerKey, "lamp_bookings_ndx3");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.BilltoCountry)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("billto_country");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoLoc)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("billto_loc");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("billto_name");

                entity.Property(e => e.BilltoPostalCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("billto_postal_code");

                entity.Property(e => e.BilltoStreet1)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("billto_street1");

                entity.Property(e => e.BilltoStreet2)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("billto_street2");

                entity.Property(e => e.BilltoStreet3)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("billto_street3");

                entity.Property(e => e.BilltoStreet4)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("billto_street4");

                entity.Property(e => e.BookedDate)
                    .HasColumnType("date")
                    .HasColumnName("booked_date");

                entity.Property(e => e.BookingNetValue).HasColumnName("booking_net_value");

                entity.Property(e => e.BookingQty).HasColumnName("booking_qty");

                entity.Property(e => e.CompleteDelivery)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("complete_delivery");

                entity.Property(e => e.Compliance)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("compliance");

                entity.Property(e => e.CustomerPo)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("customer_po");

                entity.Property(e => e.DeliveryStatus)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("delivery_status");

                entity.Property(e => e.EmbargoLineStatus)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("embargo_line_status");

                entity.Property(e => e.EndCustomerGsaFlag)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("end_customer_gsa_flag");

                entity.Property(e => e.EndCustomerPartnerLevel)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("end_customer_partner_level");

                entity.Property(e => e.EndUser)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("end_user");

                entity.Property(e => e.EndUserCountry)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("end_user_country");

                entity.Property(e => e.EndUserCountryCode)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("end_user_country_code");

                entity.Property(e => e.EndUserKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("end_user_key");

                entity.Property(e => e.EndUserLocation)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("end_user_location");

                entity.Property(e => e.EndUserPostalCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("end_user_postal_code");

                entity.Property(e => e.EndUserStreet1)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("end_user_street1");

                entity.Property(e => e.EndUserStreet2)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("end_user_street2");

                entity.Property(e => e.EndUserStreet3)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("end_user_street3");

                entity.Property(e => e.EndUserStreet4)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("end_user_street4");

                entity.Property(e => e.FrieghtForwarder1)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder1");

                entity.Property(e => e.FrieghtForwarder1Country)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder1_country");

                entity.Property(e => e.FrieghtForwarder1Loc)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder1_loc");

                entity.Property(e => e.FrieghtForwarder1Street1)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder1_street1");

                entity.Property(e => e.FrieghtForwarder1Street2)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder1_street2");

                entity.Property(e => e.FrieghtForwarder1Street3)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder1_street3");

                entity.Property(e => e.FrieghtForwarder1Street4)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder1_street4");

                entity.Property(e => e.FrieghtForwarder2)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder2");

                entity.Property(e => e.FrieghtForwarder2Country)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder2_country");

                entity.Property(e => e.FrieghtForwarder2Loc)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder2_loc");

                entity.Property(e => e.FrieghtForwarder2Street1)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder2_street1");

                entity.Property(e => e.FrieghtForwarder2Street2)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder2_street2");

                entity.Property(e => e.FrieghtForwarder2Street3)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder2_street3");

                entity.Property(e => e.FrieghtForwarder2Street4)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder2_street4");

                entity.Property(e => e.FrieghtForwarder3)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder3");

                entity.Property(e => e.FrieghtForwarder3Country)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder3_country");

                entity.Property(e => e.FrieghtForwarder3Loc)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder3_loc");

                entity.Property(e => e.FrieghtForwarder3Street1)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder3_street1");

                entity.Property(e => e.FrieghtForwarder3Street2)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder3_street2");

                entity.Property(e => e.FrieghtForwarder3Street3)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder3_street3");

                entity.Property(e => e.FrieghtForwarder3Street4)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder3_street4");

                entity.Property(e => e.GtsOverallStatus)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("gts_overall_status");

                entity.Property(e => e.ImportDate)
                    .HasColumnType("datetime")
                    .HasColumnName("import_date");

                entity.Property(e => e.ImportId).HasColumnName("import_id");

                entity.Property(e => e.ImportStatus)
                    .HasMaxLength(255)
                    .HasColumnName("import_status");

                entity.Property(e => e.Incoterms1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("incoterms1");

                entity.Property(e => e.Incoterms2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("incoterms2");

                entity.Property(e => e.LicenseBlocked)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("license_blocked");

                entity.Property(e => e.Material)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("material");

                entity.Property(e => e.MaterialEccn)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("material_eccn");

                entity.Property(e => e.MaterialHts)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("material_hts");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("material_key");

                entity.Property(e => e.MaterialMedium)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("material_medium");

                entity.Property(e => e.MaterialPlantCountryOrig)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("material_plant_country_orig");

                entity.Property(e => e.Mit)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("mit");

                entity.Property(e => e.Payer)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("payer");

                entity.Property(e => e.PlantCountryCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("plant_country_code");

                entity.Property(e => e.PlantKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("plant_key");

                entity.Property(e => e.PlantMedium)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("plant_medium");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("po_type");

                entity.Property(e => e.ResasonCode)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("resason_code");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerDistrict)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("reseller_district");

                entity.Property(e => e.ResellerGsaFlag)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("reseller_gsa_flag");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerPartnerLevelKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("reseller_partner_level_key");

                entity.Property(e => e.RtphStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("rtph_status");

                entity.Property(e => e.SalesDocItemCat)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("sales_doc_item_cat");

                entity.Property(e => e.ScheduleLineDate)
                    .HasColumnType("date")
                    .HasColumnName("schedule_line_date");

                entity.Property(e => e.ShippingNote)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("shipping_note");

                entity.Property(e => e.ShippingType)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("shipping_type");

                entity.Property(e => e.ShiptoCountry)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("shipto_country");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShiptoLoc)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("shipto_loc");

                entity.Property(e => e.ShiptoName)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("shipto_name");

                entity.Property(e => e.ShiptoPostalCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("shipto_postal_code");

                entity.Property(e => e.ShiptoStreet1)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street1");

                entity.Property(e => e.ShiptoStreet2)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street2");

                entity.Property(e => e.ShiptoStreet3)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street3");

                entity.Property(e => e.ShiptoStreet4)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street4");

                entity.Property(e => e.SoLineNum).HasColumnName("so_line_num");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoSchedLineNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("so_sched_line_no");

                entity.Property(e => e.SoType)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoTypeKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("so_type_key");

                entity.Property(e => e.SoldtoCountry)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("soldto_country");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoLoc)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("soldto_loc");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SoldtoPartyGsaFlag)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("soldto_party_gsa_flag");

                entity.Property(e => e.SoldtoPostalCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("soldto_postal_code");

                entity.Property(e => e.SoldtoStreet1)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("soldto_street1");

                entity.Property(e => e.SoldtoStreet2)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("soldto_street2");

                entity.Property(e => e.SoldtoStreet3)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("soldto_street3");

                entity.Property(e => e.SoldtoStreet4)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("soldto_street4");

                entity.Property(e => e.SplLineStatus)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("spl_line_status");

                entity.Property(e => e.TransactionCreated)
                    .HasColumnType("date")
                    .HasColumnName("transaction_created");
            });

            modelBuilder.Entity<LampBookingsStg>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lamp_bookings_stg", "stg");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.BilltoCountry)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("billto_country");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoLoc)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("billto_loc");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("billto_name");

                entity.Property(e => e.BilltoPostalCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("billto_postal_code");

                entity.Property(e => e.BilltoStreet1)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("billto_street1");

                entity.Property(e => e.BilltoStreet2)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("billto_street2");

                entity.Property(e => e.BilltoStreet3)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("billto_street3");

                entity.Property(e => e.BilltoStreet4)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("billto_street4");

                entity.Property(e => e.BookedDate)
                    .HasColumnType("date")
                    .HasColumnName("booked_date");

                entity.Property(e => e.BookingNetValue).HasColumnName("booking_net_value");

                entity.Property(e => e.BookingQty).HasColumnName("booking_qty");

                entity.Property(e => e.CompleteDelivery)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("complete_delivery");

                entity.Property(e => e.Compliance)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("compliance");

                entity.Property(e => e.CustomerPo)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("customer_po");

                entity.Property(e => e.DeliveryStatus)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("delivery_status");

                entity.Property(e => e.EmbargoLineStatus)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("embargo_line_status");

                entity.Property(e => e.EndCustomerGsaFlag)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("end_customer_gsa_flag");

                entity.Property(e => e.EndCustomerPartnerLevel)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("end_customer_partner_level");

                entity.Property(e => e.EndUser)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("end_user");

                entity.Property(e => e.EndUserCountry)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("end_user_country");

                entity.Property(e => e.EndUserCountryCode)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("end_user_country_code");

                entity.Property(e => e.EndUserKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("end_user_key");

                entity.Property(e => e.EndUserLocation)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("end_user_location");

                entity.Property(e => e.EndUserPostalCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("end_user_postal_code");

                entity.Property(e => e.EndUserStreet1)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("end_user_street1");

                entity.Property(e => e.EndUserStreet2)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("end_user_street2");

                entity.Property(e => e.EndUserStreet3)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("end_user_street3");

                entity.Property(e => e.EndUserStreet4)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("end_user_street4");

                entity.Property(e => e.FrieghtForwarder1)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder1");

                entity.Property(e => e.FrieghtForwarder1Country)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder1_country");

                entity.Property(e => e.FrieghtForwarder1Loc)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder1_loc");

                entity.Property(e => e.FrieghtForwarder1Street1)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder1_street1");

                entity.Property(e => e.FrieghtForwarder1Street2)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder1_street2");

                entity.Property(e => e.FrieghtForwarder1Street3)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder1_street3");

                entity.Property(e => e.FrieghtForwarder1Street4)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder1_street4");

                entity.Property(e => e.FrieghtForwarder2)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder2");

                entity.Property(e => e.FrieghtForwarder2Country)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder2_country");

                entity.Property(e => e.FrieghtForwarder2Loc)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder2_loc");

                entity.Property(e => e.FrieghtForwarder2Street1)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder2_street1");

                entity.Property(e => e.FrieghtForwarder2Street2)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder2_street2");

                entity.Property(e => e.FrieghtForwarder2Street3)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder2_street3");

                entity.Property(e => e.FrieghtForwarder2Street4)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder2_street4");

                entity.Property(e => e.FrieghtForwarder3)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder3");

                entity.Property(e => e.FrieghtForwarder3Country)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder3_country");

                entity.Property(e => e.FrieghtForwarder3Loc)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder3_loc");

                entity.Property(e => e.FrieghtForwarder3Street1)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder3_street1");

                entity.Property(e => e.FrieghtForwarder3Street2)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder3_street2");

                entity.Property(e => e.FrieghtForwarder3Street3)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder3_street3");

                entity.Property(e => e.FrieghtForwarder3Street4)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("frieght_forwarder3_street4");

                entity.Property(e => e.GtsOverallStatus)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("gts_overall_status");

                entity.Property(e => e.ImportDate)
                    .HasColumnType("datetime")
                    .HasColumnName("import_date");

                entity.Property(e => e.ImportId).HasColumnName("import_id");

                entity.Property(e => e.ImportStatus)
                    .HasMaxLength(255)
                    .HasColumnName("import_status");

                entity.Property(e => e.Incoterms1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("incoterms1");

                entity.Property(e => e.Incoterms2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("incoterms2");

                entity.Property(e => e.LicenseBlocked)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("license_blocked");

                entity.Property(e => e.Material)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("material");

                entity.Property(e => e.MaterialEccn)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("material_eccn");

                entity.Property(e => e.MaterialHts)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("material_hts");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("material_key");

                entity.Property(e => e.MaterialMedium)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("material_medium");

                entity.Property(e => e.MaterialPlantCountryOrig)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("material_plant_country_orig");

                entity.Property(e => e.Mit)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("mit");

                entity.Property(e => e.Payer)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("payer");

                entity.Property(e => e.PlantCountryCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("plant_country_code");

                entity.Property(e => e.PlantKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("plant_key");

                entity.Property(e => e.PlantMedium)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("plant_medium");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("po_type");

                entity.Property(e => e.ResasonCode)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("resason_code");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerDistrict)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("reseller_district");

                entity.Property(e => e.ResellerGsaFlag)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("reseller_gsa_flag");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerPartnerLevelKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("reseller_partner_level_key");

                entity.Property(e => e.RtphStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("rtph_status");

                entity.Property(e => e.SalesDocItemCat)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("sales_doc_item_cat");

                entity.Property(e => e.ScheduleLineDate)
                    .HasColumnType("date")
                    .HasColumnName("schedule_line_date");

                entity.Property(e => e.ShippingNote)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("shipping_note");

                entity.Property(e => e.ShippingType)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("shipping_type");

                entity.Property(e => e.ShiptoCountry)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("shipto_country");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShiptoLoc)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("shipto_loc");

                entity.Property(e => e.ShiptoName)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("shipto_name");

                entity.Property(e => e.ShiptoPostalCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("shipto_postal_code");

                entity.Property(e => e.ShiptoStreet1)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street1");

                entity.Property(e => e.ShiptoStreet2)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street2");

                entity.Property(e => e.ShiptoStreet3)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street3");

                entity.Property(e => e.ShiptoStreet4)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street4");

                entity.Property(e => e.SoLineNum).HasColumnName("so_line_num");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoSchedLineNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("so_sched_line_no");

                entity.Property(e => e.SoType)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoTypeKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("so_type_key");

                entity.Property(e => e.SoldtoCountry)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("soldto_country");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoLoc)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("soldto_loc");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SoldtoPartyGsaFlag)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("soldto_party_gsa_flag");

                entity.Property(e => e.SoldtoPostalCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("soldto_postal_code");

                entity.Property(e => e.SoldtoStreet1)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("soldto_street1");

                entity.Property(e => e.SoldtoStreet2)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("soldto_street2");

                entity.Property(e => e.SoldtoStreet3)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("soldto_street3");

                entity.Property(e => e.SoldtoStreet4)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("soldto_street4");

                entity.Property(e => e.SplLineStatus)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("spl_line_status");

                entity.Property(e => e.TransactionCreated)
                    .HasColumnType("date")
                    .HasColumnName("transaction_created");
            });

            modelBuilder.Entity<LampBpProfile>(entity =>
            {
                entity.ToTable("lamp_bp_profile");

                entity.HasIndex(e => e.LastestId, "lamp_bp_profile_lastid");

                entity.HasIndex(e => e.Bpid, "lamp_bp_profile_ndx1");

                entity.Property(e => e.Bpid)
                    .HasMaxLength(50)
                    .HasColumnName("bpid");

                entity.Property(e => e.Comments).HasColumnName("comments");

                entity.Property(e => e.CommercialRestricted).HasColumnName("commercial_restricted");

                entity.Property(e => e.ComplianceStatus)
                    .HasMaxLength(50)
                    .HasColumnName("compliance_status");

                entity.Property(e => e.ConsigneeUndertakingReq).HasColumnName("consignee_undertaking_req");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("date")
                    .HasColumnName("created_date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.DutchBrokerNotifCty).HasColumnName("dutch_broker_notif_cty");

                entity.Property(e => e.DutchExpLicenseCty).HasColumnName("dutch_exp_license_cty");

                entity.Property(e => e.DutchExpRisk)
                    .HasMaxLength(5)
                    .HasColumnName("dutch_exp_risk");

                entity.Property(e => e.ElaEligible).HasColumnName("ela_eligible");

                entity.Property(e => e.EucRequired).HasColumnName("euc_required");

                entity.Property(e => e.ExistingEu).HasColumnName("existing_eu");

                entity.Property(e => e.Ftz).HasColumnName("ftz");

                entity.Property(e => e.GovtFlag).HasColumnName("govt_flag");

                entity.Property(e => e.IsCityChanged).HasColumnName("isCityChanged");

                entity.Property(e => e.IsCountryChanged).HasColumnName("isCountryChanged");

                entity.Property(e => e.IsNameChanged).HasColumnName("isNameChanged");

                entity.Property(e => e.IsStreetChanged).HasColumnName("isStreetChanged");

                entity.Property(e => e.IvlRequired).HasColumnName("ivl_required");

                entity.Property(e => e.LastProfiledDate)
                    .HasColumnType("date")
                    .HasColumnName("last_profiled_date");

                entity.Property(e => e.LastestId)
                    .HasColumnName("lastest_id")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.LawEnforcementFlag).HasColumnName("law_enforcement_flag");

                entity.Property(e => e.LicenseException).HasColumnName("license_exception");

                entity.Property(e => e.MilitaryFlag).HasColumnName("military_flag");

                entity.Property(e => e.MilitaryLawEnforcement).HasColumnName("military_law_enforcement");

                entity.Property(e => e.NlExportRestriction).HasColumnName("nl_export_restriction");

                entity.Property(e => e.ProfileFlag).HasColumnName("profile_flag");

                entity.Property(e => e.Profiledby)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("profiledby");

                entity.Property(e => e.SgConsigneeUndertaking).HasColumnName("sg_consignee_undertaking");

                entity.Property(e => e.SuppGroup)
                    .HasMaxLength(5)
                    .HasColumnName("supp_group");

                entity.Property(e => e.SvcProvider).HasColumnName("svc_provider");

                entity.Property(e => e.TrnxChanged)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("trnx_changed");

                entity.Property(e => e.TrnxType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("trnx_type");

                entity.Property(e => e.TrueEndUser).HasColumnName("true_end_user");

                entity.Property(e => e.UndeterminedFlag).HasColumnName("undetermined_flag");

                entity.Property(e => e.Watchlist).HasColumnName("watchlist");
            });

            modelBuilder.Entity<LampBpProfile1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lamp_bp_profile", "dev");

                entity.HasIndex(e => e.Bpid, "lamp_bp_profile");

                entity.HasIndex(e => e.MaxBpid, "lamp_bp_profile_maxbpid");

                entity.Property(e => e.Attribute1).HasColumnName("attribute1");

                entity.Property(e => e.Attribute10)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("attribute10");

                entity.Property(e => e.Attribute11)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("attribute11");

                entity.Property(e => e.Attribute12).HasColumnName("attribute12");

                entity.Property(e => e.Attribute13).HasColumnName("attribute13");

                entity.Property(e => e.Attribute14).HasColumnName("attribute14");

                entity.Property(e => e.Attribute15)
                    .HasMaxLength(5)
                    .HasColumnName("attribute15");

                entity.Property(e => e.Attribute16)
                    .HasMaxLength(5)
                    .HasColumnName("attribute16");

                entity.Property(e => e.Attribute17)
                    .HasMaxLength(5)
                    .HasColumnName("attribute17");

                entity.Property(e => e.Attribute18)
                    .HasMaxLength(5)
                    .HasColumnName("attribute18");

                entity.Property(e => e.Attribute19)
                    .HasMaxLength(5)
                    .HasColumnName("attribute19");

                entity.Property(e => e.Attribute2).HasColumnName("attribute2");

                entity.Property(e => e.Attribute20)
                    .HasMaxLength(5)
                    .HasColumnName("attribute20");

                entity.Property(e => e.Attribute3).HasColumnName("attribute3");

                entity.Property(e => e.Attribute4).HasColumnName("attribute4");

                entity.Property(e => e.Attribute5).HasColumnName("attribute5");

                entity.Property(e => e.Attribute6).HasColumnName("attribute6");

                entity.Property(e => e.Attribute7).HasColumnName("attribute7");

                entity.Property(e => e.Attribute8).HasColumnName("attribute8");

                entity.Property(e => e.Attribute9).HasColumnName("attribute9");

                entity.Property(e => e.Bpid)
                    .HasMaxLength(50)
                    .HasColumnName("bpid");

                entity.Property(e => e.Comments).HasColumnName("comments");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("date")
                    .HasColumnName("created_date");

                entity.Property(e => e.GovtFlag).HasColumnName("govt_flag");

                entity.Property(e => e.HighriskElrFlag).HasColumnName("highrisk_elr_flag");

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.IsCityChanged).HasColumnName("isCityChanged");

                entity.Property(e => e.IsCountryChanged).HasColumnName("isCountryChanged");

                entity.Property(e => e.IsNameChanged).HasColumnName("isNameChanged");

                entity.Property(e => e.IsStreetChanged).HasColumnName("isStreetChanged");

                entity.Property(e => e.LastProfiledDate)
                    .HasColumnType("date")
                    .HasColumnName("last_profiled_date");

                entity.Property(e => e.LawEnforcementFlag).HasColumnName("law_enforcement_flag");

                entity.Property(e => e.MaxBpid).HasColumnName("max_bpid");

                entity.Property(e => e.MilitaryFlag).HasColumnName("military_flag");

                entity.Property(e => e.ProfileFlag).HasColumnName("profile_flag");
            });

            modelBuilder.Entity<LampBpProfile20181022>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lamp_bp_profile_20181022", "bak");

                entity.Property(e => e.Bpid)
                    .HasMaxLength(50)
                    .HasColumnName("bpid");

                entity.Property(e => e.Comments).HasColumnName("comments");

                entity.Property(e => e.CommercialRestricted).HasColumnName("commercial_restricted");

                entity.Property(e => e.ComplianceStatus)
                    .HasMaxLength(50)
                    .HasColumnName("compliance_status");

                entity.Property(e => e.ConsigneeUndertakingReq).HasColumnName("consignee_undertaking_req");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("date")
                    .HasColumnName("created_date");

                entity.Property(e => e.DutchBrokerNotifCty).HasColumnName("dutch_broker_notif_cty");

                entity.Property(e => e.DutchExpLicenseCty).HasColumnName("dutch_exp_license_cty");

                entity.Property(e => e.DutchExpRisk)
                    .HasMaxLength(5)
                    .HasColumnName("dutch_exp_risk");

                entity.Property(e => e.ElaEligible).HasColumnName("ela_eligible");

                entity.Property(e => e.EucRequired).HasColumnName("euc_required");

                entity.Property(e => e.ExistingEu).HasColumnName("existing_eu");

                entity.Property(e => e.Ftz).HasColumnName("ftz");

                entity.Property(e => e.GovtFlag).HasColumnName("govt_flag");

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.IsCityChanged).HasColumnName("isCityChanged");

                entity.Property(e => e.IsCountryChanged).HasColumnName("isCountryChanged");

                entity.Property(e => e.IsNameChanged).HasColumnName("isNameChanged");

                entity.Property(e => e.IsStreetChanged).HasColumnName("isStreetChanged");

                entity.Property(e => e.IvlRequired).HasColumnName("ivl_required");

                entity.Property(e => e.LastProfiledDate)
                    .HasColumnType("date")
                    .HasColumnName("last_profiled_date");

                entity.Property(e => e.LastestId).HasColumnName("lastest_id");

                entity.Property(e => e.LawEnforcementFlag).HasColumnName("law_enforcement_flag");

                entity.Property(e => e.LicenseException).HasColumnName("license_exception");

                entity.Property(e => e.MilitaryFlag).HasColumnName("military_flag");

                entity.Property(e => e.MilitaryLawEnforcement).HasColumnName("military_law_enforcement");

                entity.Property(e => e.NlExportRestriction).HasColumnName("nl_export_restriction");

                entity.Property(e => e.ProfileFlag).HasColumnName("profile_flag");

                entity.Property(e => e.Profiledby)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("profiledby");

                entity.Property(e => e.SgConsigneeUndertaking).HasColumnName("sg_consignee_undertaking");

                entity.Property(e => e.SuppGroup)
                    .HasMaxLength(5)
                    .HasColumnName("supp_group");

                entity.Property(e => e.SvcProvider).HasColumnName("svc_provider");

                entity.Property(e => e.TrnxChanged)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("trnx_changed");

                entity.Property(e => e.TrnxType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("trnx_type");

                entity.Property(e => e.TrueEndUser).HasColumnName("true_end_user");

                entity.Property(e => e.UndeterminedFlag).HasColumnName("undetermined_flag");

                entity.Property(e => e.Watchlist).HasColumnName("watchlist");
            });

            modelBuilder.Entity<LampBpProfileBak>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lamp_bp_profile_bak", "bak");

                entity.Property(e => e.Bpid)
                    .HasMaxLength(50)
                    .HasColumnName("bpid");

                entity.Property(e => e.Comments).HasColumnName("comments");

                entity.Property(e => e.CommercialRestricted).HasColumnName("commercial_restricted");

                entity.Property(e => e.ComplianceStatus)
                    .HasMaxLength(50)
                    .HasColumnName("compliance_status");

                entity.Property(e => e.ConsigneeUndertakingReq).HasColumnName("consignee_undertaking_req");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("date")
                    .HasColumnName("created_date");

                entity.Property(e => e.DutchBrokerNotifCty).HasColumnName("dutch_broker_notif_cty");

                entity.Property(e => e.DutchExpLicenseCty).HasColumnName("dutch_exp_license_cty");

                entity.Property(e => e.DutchExpRisk)
                    .HasMaxLength(5)
                    .HasColumnName("dutch_exp_risk");

                entity.Property(e => e.ElaEligible).HasColumnName("ela_eligible");

                entity.Property(e => e.EucRequired).HasColumnName("euc_required");

                entity.Property(e => e.ExistingEu).HasColumnName("existing_eu");

                entity.Property(e => e.Ftz).HasColumnName("ftz");

                entity.Property(e => e.GovtFlag).HasColumnName("govt_flag");

                entity.Property(e => e.HighriskElrFlag).HasColumnName("highrisk_elr_flag");

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.IsCityChanged).HasColumnName("isCityChanged");

                entity.Property(e => e.IsCountryChanged).HasColumnName("isCountryChanged");

                entity.Property(e => e.IsNameChanged).HasColumnName("isNameChanged");

                entity.Property(e => e.IsStreetChanged).HasColumnName("isStreetChanged");

                entity.Property(e => e.IvlRequired).HasColumnName("ivl_required");

                entity.Property(e => e.LastProfiledDate)
                    .HasColumnType("date")
                    .HasColumnName("last_profiled_date");

                entity.Property(e => e.LastestId).HasColumnName("lastest_id");

                entity.Property(e => e.LawEnforcementFlag).HasColumnName("law_enforcement_flag");

                entity.Property(e => e.LicenseException).HasColumnName("license_exception");

                entity.Property(e => e.MilitaryFlag).HasColumnName("military_flag");

                entity.Property(e => e.MilitaryLawEnforcement).HasColumnName("military_law_enforcement");

                entity.Property(e => e.NlExportRestriction).HasColumnName("nl_export_restriction");

                entity.Property(e => e.ProfileFlag).HasColumnName("profile_flag");

                entity.Property(e => e.Profiledby)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("profiledby");

                entity.Property(e => e.SgConsigneeUndertaking).HasColumnName("sg_consignee_undertaking");

                entity.Property(e => e.SuppGroup)
                    .HasMaxLength(5)
                    .HasColumnName("supp_group");

                entity.Property(e => e.SvcProvider).HasColumnName("svc_provider");

                entity.Property(e => e.TrnxChanged)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("trnx_changed");

                entity.Property(e => e.TrnxType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("trnx_type");

                entity.Property(e => e.TrueEndUser).HasColumnName("true_end_user");

                entity.Property(e => e.Watchlist).HasColumnName("watchlist");
            });

            modelBuilder.Entity<LampBpProfileUi>(entity =>
            {
                entity.HasKey(e => e.Bpid);

                entity.ToTable("lamp_bp_profile_ui");

                entity.Property(e => e.Bpid)
                    .HasMaxLength(50)
                    .HasColumnName("BPID");

                entity.Property(e => e.City).HasMaxLength(255);

                entity.Property(e => e.CountryCode).HasMaxLength(20);

                entity.Property(e => e.CountryName).HasMaxLength(250);

                entity.Property(e => e.CustName).HasMaxLength(500);

                entity.Property(e => e.DedupId).HasColumnName("dedup_id");

                entity.Property(e => e.LastProfiledDate).HasColumnType("date");

                entity.Property(e => e.Street).HasMaxLength(1000);

                entity.Property(e => e.TrnxChanged)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrnxType)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<LampBpProfileVw>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("lamp_bp_profile_vw");

                entity.Property(e => e.Bpid)
                    .HasMaxLength(50)
                    .HasColumnName("BPID");

                entity.Property(e => e.City).HasMaxLength(250);

                entity.Property(e => e.CommercialRestricted).HasColumnName("commercial_restricted");

                entity.Property(e => e.ComplianceStatus)
                    .HasMaxLength(50)
                    .HasColumnName("compliance_status");

                entity.Property(e => e.ConsigneeUndertakingReq)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("consignee_undertaking_req");

                entity.Property(e => e.CountryCode).HasMaxLength(50);

                entity.Property(e => e.CountryName).HasMaxLength(255);

                entity.Property(e => e.CustName).HasMaxLength(1500);

                entity.Property(e => e.DutchBrokerNotifCty)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("dutch_broker_notif_cty");

                entity.Property(e => e.DutchExpLicenseCty)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("dutch_exp_license_cty");

                entity.Property(e => e.DutchExpRisk)
                    .HasMaxLength(50)
                    .HasColumnName("DUTCH_EXP_RISK");

                entity.Property(e => e.ElaEligible).HasColumnName("ela_eligible");

                entity.Property(e => e.EucRequired).HasColumnName("euc_required");

                entity.Property(e => e.ExistingEu).HasColumnName("existing_eu");

                entity.Property(e => e.Ftz).HasColumnName("ftz");

                entity.Property(e => e.IvlRequired).HasColumnName("ivl_required");

                entity.Property(e => e.LastProfiledDate).HasColumnType("date");

                entity.Property(e => e.LicenseException).HasColumnName("license_exception");

                entity.Property(e => e.MilitaryLawEnforcement).HasColumnName("military_law_enforcement");

                entity.Property(e => e.NlExportRestriction)
                    .HasMaxLength(50)
                    .HasColumnName("nl_export_restriction");

                entity.Property(e => e.Profiledby)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("profiledby");

                entity.Property(e => e.SgConsigneeUndertaking).HasColumnName("sg_consignee_undertaking");

                entity.Property(e => e.Street).HasMaxLength(1500);

                entity.Property(e => e.SuppGroup)
                    .HasMaxLength(255)
                    .HasColumnName("supp_group");

                entity.Property(e => e.SvcProvider).HasColumnName("svc_provider");

                entity.Property(e => e.TrnxChanged)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrnxType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrueEndUser).HasColumnName("true_end_user");

                entity.Property(e => e.Watchlist)
                    .HasMaxLength(50)
                    .HasColumnName("watchlist");
            });

            modelBuilder.Entity<LampBpProfileVw1>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("lamp_bp_profile_vw", "dev");

                entity.Property(e => e.Bpid)
                    .HasMaxLength(50)
                    .HasColumnName("BPID");

                entity.Property(e => e.City).HasMaxLength(255);

                entity.Property(e => e.CountryCode).HasMaxLength(20);

                entity.Property(e => e.CountryName).HasMaxLength(250);

                entity.Property(e => e.CustName).HasMaxLength(500);

                entity.Property(e => e.LastProfiledDate).HasColumnType("date");

                entity.Property(e => e.Street).HasMaxLength(1000);

                entity.Property(e => e.TrnxChanged)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrnxType)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<LampBpProfileVwTest>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("lamp_bp_profile_vw_test", "dev");

                entity.Property(e => e.Bpid)
                    .HasMaxLength(50)
                    .HasColumnName("BPID");

                entity.Property(e => e.City).HasMaxLength(255);

                entity.Property(e => e.CommercialRestricted).HasColumnName("commercial_restricted");

                entity.Property(e => e.ComplianceStatus)
                    .HasMaxLength(50)
                    .HasColumnName("compliance_status");

                entity.Property(e => e.ConsigneeUndertakingReq)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("consignee_undertaking_req");

                entity.Property(e => e.CountryCode).HasMaxLength(20);

                entity.Property(e => e.CountryName).HasMaxLength(250);

                entity.Property(e => e.CustName).HasMaxLength(500);

                entity.Property(e => e.DutchExpLicenseCty)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("dutch_exp_license_cty");

                entity.Property(e => e.DutchExpRisk)
                    .HasMaxLength(50)
                    .HasColumnName("DUTCH_EXP_RISK");

                entity.Property(e => e.ElaEligible).HasColumnName("ela_eligible");

                entity.Property(e => e.EucRequired).HasColumnName("euc_required");

                entity.Property(e => e.ExistingEu).HasColumnName("existing_eu");

                entity.Property(e => e.Ftz).HasColumnName("ftz");

                entity.Property(e => e.IvlRequired).HasColumnName("ivl_required");

                entity.Property(e => e.LastProfiledDate).HasColumnType("date");

                entity.Property(e => e.LicenseException).HasColumnName("license_exception");

                entity.Property(e => e.MilitaryLawEnforcement).HasColumnName("military_law_enforcement");

                entity.Property(e => e.NlExportRestriction)
                    .HasMaxLength(50)
                    .HasColumnName("nl_export_restriction");

                entity.Property(e => e.SgConsigneeUndertaking).HasColumnName("sg_consignee_undertaking");

                entity.Property(e => e.Street).HasMaxLength(1000);

                entity.Property(e => e.SuppGroup)
                    .HasMaxLength(255)
                    .HasColumnName("supp_group");

                entity.Property(e => e.SvcProvider).HasColumnName("svc_provider");

                entity.Property(e => e.TrnxChanged)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrnxType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrueEndUser).HasColumnName("true_end_user");

                entity.Property(e => e.Watchlist)
                    .HasMaxLength(50)
                    .HasColumnName("watchlist");
            });

            modelBuilder.Entity<LampCountry>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lamp_country");

                entity.HasIndex(e => e.CountryCode, "lamp_country_ndx1");

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("country_code");

                entity.Property(e => e.CountryName)
                    .HasMaxLength(250)
                    .HasColumnName("country_name");

                entity.Property(e => e.CountryNameAlt)
                    .HasMaxLength(250)
                    .HasColumnName("country_name_alt");

                entity.Property(e => e.EeaFlag)
                    .HasMaxLength(10)
                    .HasColumnName("eea_flag")
                    .IsFixedLength();

                entity.Property(e => e.IsoCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("iso_country_code");

                entity.Property(e => e.Latitude).HasColumnName("latitude");

                entity.Property(e => e.Longitude).HasColumnName("longitude");

                entity.Property(e => e.Region)
                    .HasMaxLength(250)
                    .HasColumnName("region")
                    .IsFixedLength();

                entity.Property(e => e.Theater)
                    .HasMaxLength(250)
                    .HasColumnName("theater");
            });

            modelBuilder.Entity<LampCustomerEr>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lamp_customer_er");

                entity.HasIndex(e => e.EntityKey, "lamp_customer_er_ndx1");

                entity.HasIndex(e => e.Name1, "lamp_customer_er_ndx2");

                entity.Property(e => e.BpmEndCustomer)
                    .HasMaxLength(250)
                    .HasColumnName("bpm_end_customer");

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(20)
                    .HasColumnName("country_code");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("date")
                    .HasColumnName("created_date");

                entity.Property(e => e.EntityKey)
                    .HasMaxLength(50)
                    .HasColumnName("entity_key");

                entity.Property(e => e.GId).HasColumnName("g_id");

                entity.Property(e => e.GblAcctFlag)
                    .HasMaxLength(20)
                    .HasColumnName("gbl_acct_flag");

                entity.Property(e => e.GlobalUltimateParent)
                    .HasMaxLength(250)
                    .HasColumnName("global_ultimate_parent");

                entity.Property(e => e.GlobalUltimateParentKey)
                    .HasMaxLength(50)
                    .HasColumnName("global_ultimate_parent_key");

                entity.Property(e => e.GpId).HasColumnName("gp_id");

                entity.Property(e => e.GuId).HasColumnName("gu_id");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.LastUpdateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("last_update_date");

                entity.Property(e => e.MspAcctFlag)
                    .HasMaxLength(20)
                    .HasColumnName("msp_acct_flag");

                entity.Property(e => e.Name1)
                    .HasMaxLength(255)
                    .HasColumnName("name1");

                entity.Property(e => e.Name2)
                    .HasMaxLength(255)
                    .HasColumnName("name2");

                entity.Property(e => e.ParentCustomer)
                    .HasMaxLength(250)
                    .HasColumnName("parent_customer");

                entity.Property(e => e.ParentCustomerKey)
                    .HasMaxLength(50)
                    .HasColumnName("parent_customer_key");

                entity.Property(e => e.Status)
                    .HasMaxLength(20)
                    .HasColumnName("status");

                entity.Property(e => e.UltimateParent)
                    .HasMaxLength(250)
                    .HasColumnName("ultimate_parent");

                entity.Property(e => e.UltimateParentKey)
                    .HasMaxLength(50)
                    .HasColumnName("ultimate_parent_key");
            });

            modelBuilder.Entity<LampCustomerEr1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lamp_customer_er", "dev");

                entity.Property(e => e.BpmEndCustomer)
                    .HasMaxLength(250)
                    .HasColumnName("bpm_end_customer");

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(20)
                    .HasColumnName("country_code");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("date")
                    .HasColumnName("created_date");

                entity.Property(e => e.EntityKey)
                    .HasMaxLength(50)
                    .HasColumnName("entity_key");

                entity.Property(e => e.GId).HasColumnName("g_id");

                entity.Property(e => e.GblAcctFlag)
                    .HasMaxLength(20)
                    .HasColumnName("gbl_acct_flag");

                entity.Property(e => e.GlobalUltimateParent)
                    .HasMaxLength(250)
                    .HasColumnName("global_ultimate_parent");

                entity.Property(e => e.GlobalUltimateParentKey)
                    .HasMaxLength(50)
                    .HasColumnName("global_ultimate_parent_key");

                entity.Property(e => e.GpId).HasColumnName("gp_id");

                entity.Property(e => e.GuId).HasColumnName("gu_id");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.LastUpdateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("last_update_date");

                entity.Property(e => e.MspAcctFlag)
                    .HasMaxLength(20)
                    .HasColumnName("msp_acct_flag");

                entity.Property(e => e.Name1)
                    .HasMaxLength(255)
                    .HasColumnName("name1");

                entity.Property(e => e.Name2)
                    .HasMaxLength(255)
                    .HasColumnName("name2");

                entity.Property(e => e.ParentCustomer)
                    .HasMaxLength(250)
                    .HasColumnName("parent_customer");

                entity.Property(e => e.ParentCustomerKey)
                    .HasMaxLength(50)
                    .HasColumnName("parent_customer_key");

                entity.Property(e => e.Status)
                    .HasMaxLength(20)
                    .HasColumnName("status");

                entity.Property(e => e.UltimateParent)
                    .HasMaxLength(250)
                    .HasColumnName("ultimate_parent");

                entity.Property(e => e.UltimateParentKey)
                    .HasMaxLength(50)
                    .HasColumnName("ultimate_parent_key");
            });

            modelBuilder.Entity<LampCustomerEr2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lamp_customer_er", "stg");

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(20)
                    .HasColumnName("country_code");

                entity.Property(e => e.EntityKey)
                    .HasMaxLength(50)
                    .HasColumnName("entity_key");

                entity.Property(e => e.GId).HasColumnName("g_id");

                entity.Property(e => e.GblAcctFlag)
                    .HasMaxLength(20)
                    .HasColumnName("gbl_acct_flag");

                entity.Property(e => e.GuId).HasColumnName("gu_id");

                entity.Property(e => e.LastUpdateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("last_update_date");

                entity.Property(e => e.MspAcctFlag)
                    .HasMaxLength(20)
                    .HasColumnName("msp_acct_flag");

                entity.Property(e => e.Name1)
                    .HasMaxLength(255)
                    .HasColumnName("name1");

                entity.Property(e => e.Name2)
                    .HasMaxLength(255)
                    .HasColumnName("name2");

                entity.Property(e => e.Status)
                    .HasMaxLength(20)
                    .HasColumnName("status");
            });

            modelBuilder.Entity<LampCustomerErBak>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lamp_customer_er_bak", "bak");

                entity.Property(e => e.BpmEndCustomer)
                    .HasMaxLength(250)
                    .HasColumnName("bpm_end_customer");

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(20)
                    .HasColumnName("country_code");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("date")
                    .HasColumnName("created_date");

                entity.Property(e => e.EntityKey)
                    .HasMaxLength(50)
                    .HasColumnName("entity_key");

                entity.Property(e => e.GId).HasColumnName("g_id");

                entity.Property(e => e.GblAcctFlag)
                    .HasMaxLength(20)
                    .HasColumnName("gbl_acct_flag");

                entity.Property(e => e.GlobalUltimateParent)
                    .HasMaxLength(250)
                    .HasColumnName("global_ultimate_parent");

                entity.Property(e => e.GlobalUltimateParentKey)
                    .HasMaxLength(50)
                    .HasColumnName("global_ultimate_parent_key");

                entity.Property(e => e.GpId).HasColumnName("gp_id");

                entity.Property(e => e.GuId).HasColumnName("gu_id");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.LastUpdateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("last_update_date");

                entity.Property(e => e.MspAcctFlag)
                    .HasMaxLength(20)
                    .HasColumnName("msp_acct_flag");

                entity.Property(e => e.Name1)
                    .HasMaxLength(255)
                    .HasColumnName("name1");

                entity.Property(e => e.Name2)
                    .HasMaxLength(255)
                    .HasColumnName("name2");

                entity.Property(e => e.ParentCustomer)
                    .HasMaxLength(250)
                    .HasColumnName("parent_customer");

                entity.Property(e => e.ParentCustomerKey)
                    .HasMaxLength(50)
                    .HasColumnName("parent_customer_key");

                entity.Property(e => e.Status)
                    .HasMaxLength(20)
                    .HasColumnName("status");

                entity.Property(e => e.UltimateParent)
                    .HasMaxLength(250)
                    .HasColumnName("ultimate_parent");

                entity.Property(e => e.UltimateParentKey)
                    .HasMaxLength(50)
                    .HasColumnName("ultimate_parent_key");
            });

            modelBuilder.Entity<LampCustomerHier>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lamp_customer_hier");

                entity.HasIndex(e => e.ParentCustomerKey, "lamp_customer_hier_ndx1");

                entity.HasIndex(e => e.EndCustomerKey, "lamp_customer_hier_ndx2");

                entity.Property(e => e.AllianceCustomer)
                    .HasMaxLength(250)
                    .HasColumnName("alliance_customer");

                entity.Property(e => e.AllianceNameCustomer)
                    .HasMaxLength(250)
                    .HasColumnName("alliance_name_customer");

                entity.Property(e => e.EndCustomer)
                    .HasMaxLength(250)
                    .HasColumnName("end_customer");

                entity.Property(e => e.EndCustomerAcctClass)
                    .HasMaxLength(50)
                    .HasColumnName("end_customer_acct_class");

                entity.Property(e => e.EndCustomerAcctClassKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_customer_acct_class_key");

                entity.Property(e => e.EndCustomerAcctType)
                    .HasMaxLength(50)
                    .HasColumnName("end_customer_acct_type");

                entity.Property(e => e.EndCustomerAcctTypeKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_customer_acct_type_key");

                entity.Property(e => e.EndCustomerCountry)
                    .HasMaxLength(100)
                    .HasColumnName("end_customer_country");

                entity.Property(e => e.EndCustomerCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_customer_country_key");

                entity.Property(e => e.EndCustomerGeoTheater)
                    .HasMaxLength(50)
                    .HasColumnName("end_customer_geo_theater");

                entity.Property(e => e.EndCustomerKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_customer_key");

                entity.Property(e => e.EndCustomerPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_customer_postal_code_key");

                entity.Property(e => e.EndCustomerRegionKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_customer_region_key");

                entity.Property(e => e.EndCustomerVertical)
                    .HasMaxLength(250)
                    .HasColumnName("end_customer_vertical");

                entity.Property(e => e.GlobalUltimateParent)
                    .HasMaxLength(250)
                    .HasColumnName("global_ultimate_parent");

                entity.Property(e => e.GlobalUltimateParentKey)
                    .HasMaxLength(50)
                    .HasColumnName("global_ultimate_parent_key");

                entity.Property(e => e.GtmVertical)
                    .HasMaxLength(250)
                    .HasColumnName("gtm_vertical");

                entity.Property(e => e.ParentCustomer)
                    .HasMaxLength(250)
                    .HasColumnName("parent_customer");

                entity.Property(e => e.ParentCustomerKey)
                    .HasMaxLength(50)
                    .HasColumnName("parent_customer_key");

                entity.Property(e => e.ParentVertical)
                    .HasMaxLength(250)
                    .HasColumnName("parent_vertical");

                entity.Property(e => e.UltimateParent)
                    .HasMaxLength(250)
                    .HasColumnName("ultimate_parent");

                entity.Property(e => e.UltimateParentKey)
                    .HasMaxLength(50)
                    .HasColumnName("ultimate_parent_key");

                entity.Property(e => e.UltimateParentVertical)
                    .HasMaxLength(250)
                    .HasColumnName("ultimate_parent_vertical");
            });

            modelBuilder.Entity<LampCustomerHier1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lamp_customer_hier", "dsf");

                entity.Property(e => e.AllianceCustomer)
                    .HasMaxLength(250)
                    .HasColumnName("Alliance__Customer_");

                entity.Property(e => e.AllianceNameCustomer)
                    .HasMaxLength(250)
                    .HasColumnName("Alliance_Name__Customer_");

                entity.Property(e => e.EndCustomer)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer");

                entity.Property(e => e.EndCustomerAcctClass)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer_Acct_Class");

                entity.Property(e => e.EndCustomerAcctClassKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer_Acct_Class___Key");

                entity.Property(e => e.EndCustomerAcctType)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer_Acct_Type");

                entity.Property(e => e.EndCustomerAcctTypeKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer_Acct_Type___Key");

                entity.Property(e => e.EndCustomerCountry)
                    .HasMaxLength(100)
                    .HasColumnName("End_Customer_Country");

                entity.Property(e => e.EndCustomerCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer_Country___Key");

                entity.Property(e => e.EndCustomerGeoTheater)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer_Geo_Theater");

                entity.Property(e => e.EndCustomerKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Key");

                entity.Property(e => e.EndCustomerPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer_Postal_Code___Key");

                entity.Property(e => e.EndCustomerRegionKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer_Region___Key");

                entity.Property(e => e.EndCustomerVertical)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer_Vertical");

                entity.Property(e => e.GlobalUltimateParent)
                    .HasMaxLength(250)
                    .HasColumnName("Global_Ultimate_Parent");

                entity.Property(e => e.GlobalUltimateParentKey)
                    .HasMaxLength(50)
                    .HasColumnName("Global_Ultimate_Parent___Key");

                entity.Property(e => e.GtmVertical)
                    .HasMaxLength(250)
                    .HasColumnName("GTM_Vertical");

                entity.Property(e => e.ParentCustomer)
                    .HasMaxLength(250)
                    .HasColumnName("Parent_Customer");

                entity.Property(e => e.ParentCustomerKey)
                    .HasMaxLength(50)
                    .HasColumnName("Parent_Customer___Key");

                entity.Property(e => e.ParentVertical)
                    .HasMaxLength(250)
                    .HasColumnName("Parent_Vertical");

                entity.Property(e => e.UltimateParent)
                    .HasMaxLength(250)
                    .HasColumnName("Ultimate_Parent");

                entity.Property(e => e.UltimateParentKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ultimate_Parent___Key");

                entity.Property(e => e.UltimateParentVertical)
                    .HasMaxLength(250)
                    .HasColumnName("Ultimate_Parent_Vertical");
            });

            modelBuilder.Entity<LampCustomerHierMetaVw>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("lamp_customer_hier_meta_vw");

                entity.Property(e => e.AllianceCustomer)
                    .HasMaxLength(250)
                    .HasColumnName("alliance_customer");

                entity.Property(e => e.AllianceNameCustomer)
                    .HasMaxLength(250)
                    .HasColumnName("alliance_name_customer");

                entity.Property(e => e.EndCustomer)
                    .HasMaxLength(250)
                    .HasColumnName("end_customer");

                entity.Property(e => e.EndCustomerAcctClass)
                    .HasMaxLength(50)
                    .HasColumnName("end_customer_acct_class");

                entity.Property(e => e.EndCustomerAcctClassKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_customer_acct_class_key");

                entity.Property(e => e.EndCustomerAcctType)
                    .HasMaxLength(50)
                    .HasColumnName("end_customer_acct_type");

                entity.Property(e => e.EndCustomerAcctTypeKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_customer_acct_type_key");

                entity.Property(e => e.EndCustomerCountry)
                    .HasMaxLength(100)
                    .HasColumnName("end_customer_country");

                entity.Property(e => e.EndCustomerCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_customer_country_key");

                entity.Property(e => e.EndCustomerGeoTheater)
                    .HasMaxLength(50)
                    .HasColumnName("end_customer_geo_theater");

                entity.Property(e => e.EndCustomerKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_customer_key");

                entity.Property(e => e.EndCustomerPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_customer_postal_code_key");

                entity.Property(e => e.EndCustomerRegionKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_customer_region_key");

                entity.Property(e => e.EndCustomerVertical)
                    .HasMaxLength(250)
                    .HasColumnName("end_customer_vertical");

                entity.Property(e => e.GlobalUltimateParent)
                    .HasMaxLength(250)
                    .HasColumnName("global_ultimate_parent");

                entity.Property(e => e.GlobalUltimateParentKey)
                    .HasMaxLength(50)
                    .HasColumnName("global_ultimate_parent_key");

                entity.Property(e => e.GtmVertical)
                    .HasMaxLength(250)
                    .HasColumnName("gtm_vertical");

                entity.Property(e => e.ParentCustomer)
                    .HasMaxLength(250)
                    .HasColumnName("parent_customer");

                entity.Property(e => e.ParentCustomerKey)
                    .HasMaxLength(50)
                    .HasColumnName("parent_customer_key");

                entity.Property(e => e.ParentVertical)
                    .HasMaxLength(250)
                    .HasColumnName("parent_vertical");

                entity.Property(e => e.UltimateParent)
                    .HasMaxLength(250)
                    .HasColumnName("ultimate_parent");

                entity.Property(e => e.UltimateParentKey)
                    .HasMaxLength(50)
                    .HasColumnName("ultimate_parent_key");

                entity.Property(e => e.UltimateParentVertical)
                    .HasMaxLength(250)
                    .HasColumnName("ultimate_parent_vertical");
            });

            modelBuilder.Entity<LampCustomerMaster>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lamp_customer_master");

                entity.HasIndex(e => e.Bpid, "lamp_customer_master_bpid");

                entity.HasIndex(e => e.NameConc, "lamp_customer_master_nconc");

                entity.Property(e => e.AddressNo)
                    .HasMaxLength(50)
                    .HasColumnName("address_no");

                entity.Property(e => e.BpBillingHold)
                    .HasMaxLength(50)
                    .HasColumnName("bp_billing_hold");

                entity.Property(e => e.BpCategory)
                    .HasMaxLength(50)
                    .HasColumnName("bp_category");

                entity.Property(e => e.BpDeliveryHold)
                    .HasMaxLength(50)
                    .HasColumnName("bp_delivery_hold");

                entity.Property(e => e.BpExternalNo)
                    .HasMaxLength(50)
                    .HasColumnName("bp_external_no");

                entity.Property(e => e.BpGrouping)
                    .HasMaxLength(50)
                    .HasColumnName("bp_grouping");

                entity.Property(e => e.BpGuid)
                    .HasMaxLength(50)
                    .HasColumnName("bp_guid");

                entity.Property(e => e.BpRole)
                    .HasMaxLength(50)
                    .HasColumnName("bp_role");

                entity.Property(e => e.BpStatusCode)
                    .HasMaxLength(50)
                    .HasColumnName("bp_status_code");

                entity.Property(e => e.BpStatusDesc)
                    .HasMaxLength(50)
                    .HasColumnName("bp_status_desc");

                entity.Property(e => e.BpTransactionHold)
                    .HasMaxLength(50)
                    .HasColumnName("bp_transaction_hold");

                entity.Property(e => e.BpType)
                    .HasMaxLength(50)
                    .HasColumnName("bp_type");

                entity.Property(e => e.Bpid)
                    .HasMaxLength(50)
                    .HasColumnName("bpid");

                entity.Property(e => e.BuildingFloor)
                    .HasMaxLength(50)
                    .HasColumnName("building_floor");

                entity.Property(e => e.BuildingNo)
                    .HasMaxLength(50)
                    .HasColumnName("building_no");

                entity.Property(e => e.CentralArchiveFlag)
                    .HasMaxLength(50)
                    .HasColumnName("central_archive_flag");

                entity.Property(e => e.City)
                    .HasMaxLength(250)
                    .HasColumnName("city");

                entity.Property(e => e.ComplianceStatusCode)
                    .HasMaxLength(50)
                    .HasColumnName("compliance_status_code");

                entity.Property(e => e.ComplianceStatusDesc)
                    .HasMaxLength(50)
                    .HasColumnName("compliance_status_desc");

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("country_code");

                entity.Property(e => e.CountryGrp)
                    .HasMaxLength(50)
                    .HasColumnName("country_grp");

                entity.Property(e => e.CreatedAt)
                    .HasMaxLength(50)
                    .HasColumnName("created_at");

                entity.Property(e => e.CreatedOn).HasColumnName("created_on");

                entity.Property(e => e.Deleted)
                    .HasMaxLength(50)
                    .HasColumnName("deleted");

                entity.Property(e => e.District)
                    .HasMaxLength(250)
                    .HasColumnName("district");

                entity.Property(e => e.DistrictCode)
                    .HasMaxLength(250)
                    .HasColumnName("district_code");

                entity.Property(e => e.EdpCreated)
                    .HasMaxLength(50)
                    .HasColumnName("edp_created");

                entity.Property(e => e.EdpCreatedTxnId)
                    .HasMaxLength(50)
                    .HasColumnName("edp_created_txn_id");

                entity.Property(e => e.EdpLastUpdated)
                    .HasMaxLength(50)
                    .HasColumnName("edp_last_updated");

                entity.Property(e => e.EdpTxnId)
                    .HasMaxLength(50)
                    .HasColumnName("edp_txn_id");

                entity.Property(e => e.HouseNo)
                    .HasMaxLength(50)
                    .HasColumnName("house_no");

                entity.Property(e => e.IndustrySector)
                    .HasMaxLength(50)
                    .HasColumnName("industry_sector");

                entity.Property(e => e.IsPartnerConverted)
                    .HasMaxLength(50)
                    .HasColumnName("is_partner_converted");

                entity.Property(e => e.LastChangedAt)
                    .HasMaxLength(50)
                    .HasColumnName("last_changed_at");

                entity.Property(e => e.LastChangedOn).HasColumnName("last_changed_on");

                entity.Property(e => e.Name1)
                    .HasMaxLength(250)
                    .HasColumnName("name1");

                entity.Property(e => e.Name2)
                    .HasMaxLength(250)
                    .HasColumnName("name2");

                entity.Property(e => e.Name3)
                    .HasMaxLength(250)
                    .HasColumnName("name3");

                entity.Property(e => e.Name4)
                    .HasMaxLength(250)
                    .HasColumnName("name4");

                entity.Property(e => e.NameConc)
                    .HasMaxLength(1500)
                    .HasColumnName("name_conc");

                entity.Property(e => e.Postalcode)
                    .HasMaxLength(250)
                    .HasColumnName("postalcode");

                entity.Property(e => e.Region)
                    .HasMaxLength(250)
                    .HasColumnName("region");

                entity.Property(e => e.Street1)
                    .HasMaxLength(250)
                    .HasColumnName("street1");

                entity.Property(e => e.Street2)
                    .HasMaxLength(250)
                    .HasColumnName("street2");

                entity.Property(e => e.Street3)
                    .HasMaxLength(250)
                    .HasColumnName("street3");

                entity.Property(e => e.Street4)
                    .HasMaxLength(250)
                    .HasColumnName("street4");

                entity.Property(e => e.Street5)
                    .HasMaxLength(250)
                    .HasColumnName("street5");

                entity.Property(e => e.StreetConc)
                    .HasMaxLength(1500)
                    .HasColumnName("street_conc");
            });

            modelBuilder.Entity<LampCustomerMaster1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lamp_customer_master", "dev");

                entity.Property(e => e.AddressNo)
                    .HasMaxLength(50)
                    .HasColumnName("address_no");

                entity.Property(e => e.BpBillingHold)
                    .HasMaxLength(50)
                    .HasColumnName("bp_billing_hold");

                entity.Property(e => e.BpCategory)
                    .HasMaxLength(50)
                    .HasColumnName("bp_category");

                entity.Property(e => e.BpDeliveryHold)
                    .HasMaxLength(50)
                    .HasColumnName("bp_delivery_hold");

                entity.Property(e => e.BpExternalNo)
                    .HasMaxLength(50)
                    .HasColumnName("bp_external_no");

                entity.Property(e => e.BpGrouping)
                    .HasMaxLength(50)
                    .HasColumnName("bp_grouping");

                entity.Property(e => e.BpGuid)
                    .HasMaxLength(50)
                    .HasColumnName("bp_guid");

                entity.Property(e => e.BpRole)
                    .HasMaxLength(50)
                    .HasColumnName("bp_role");

                entity.Property(e => e.BpStatusCode)
                    .HasMaxLength(50)
                    .HasColumnName("bp_status_code");

                entity.Property(e => e.BpStatusDesc)
                    .HasMaxLength(50)
                    .HasColumnName("bp_status_desc");

                entity.Property(e => e.BpTransactionHold)
                    .HasMaxLength(50)
                    .HasColumnName("bp_transaction_hold");

                entity.Property(e => e.BpType)
                    .HasMaxLength(50)
                    .HasColumnName("bp_type");

                entity.Property(e => e.Bpid)
                    .HasMaxLength(50)
                    .HasColumnName("bpid");

                entity.Property(e => e.BuildingFloor)
                    .HasMaxLength(50)
                    .HasColumnName("building_floor");

                entity.Property(e => e.BuildingNo)
                    .HasMaxLength(50)
                    .HasColumnName("building_no");

                entity.Property(e => e.CentralArchiveFlag)
                    .HasMaxLength(50)
                    .HasColumnName("central_archive_flag");

                entity.Property(e => e.City)
                    .HasMaxLength(250)
                    .HasColumnName("city");

                entity.Property(e => e.ComplianceStatusCode)
                    .HasMaxLength(50)
                    .HasColumnName("compliance_status_code");

                entity.Property(e => e.ComplianceStatusDesc)
                    .HasMaxLength(50)
                    .HasColumnName("compliance_status_desc");

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("country_code");

                entity.Property(e => e.CountryGrp)
                    .HasMaxLength(50)
                    .HasColumnName("country_grp");

                entity.Property(e => e.CreatedAt)
                    .HasMaxLength(50)
                    .HasColumnName("created_at");

                entity.Property(e => e.CreatedOn).HasColumnName("created_on");

                entity.Property(e => e.Deleted)
                    .HasMaxLength(50)
                    .HasColumnName("deleted");

                entity.Property(e => e.District)
                    .HasMaxLength(250)
                    .HasColumnName("district");

                entity.Property(e => e.DistrictCode)
                    .HasMaxLength(250)
                    .HasColumnName("district_code");

                entity.Property(e => e.EdpCreated)
                    .HasMaxLength(50)
                    .HasColumnName("edp_created");

                entity.Property(e => e.EdpCreatedTxnId)
                    .HasMaxLength(50)
                    .HasColumnName("edp_created_txn_id");

                entity.Property(e => e.EdpLastUpdated)
                    .HasMaxLength(50)
                    .HasColumnName("edp_last_updated");

                entity.Property(e => e.EdpTxnId)
                    .HasMaxLength(50)
                    .HasColumnName("edp_txn_id");

                entity.Property(e => e.HouseNo)
                    .HasMaxLength(50)
                    .HasColumnName("house_no");

                entity.Property(e => e.IndustrySector)
                    .HasMaxLength(50)
                    .HasColumnName("industry_sector");

                entity.Property(e => e.IsPartnerConverted)
                    .HasMaxLength(50)
                    .HasColumnName("is_partner_converted");

                entity.Property(e => e.LastChangedAt)
                    .HasMaxLength(50)
                    .HasColumnName("last_changed_at");

                entity.Property(e => e.LastChangedOn).HasColumnName("last_changed_on");

                entity.Property(e => e.Name1)
                    .HasMaxLength(250)
                    .HasColumnName("name1");

                entity.Property(e => e.Name2)
                    .HasMaxLength(250)
                    .HasColumnName("name2");

                entity.Property(e => e.Name3)
                    .HasMaxLength(250)
                    .HasColumnName("name3");

                entity.Property(e => e.Name4)
                    .HasMaxLength(250)
                    .HasColumnName("name4");

                entity.Property(e => e.NameConc)
                    .HasMaxLength(1500)
                    .HasColumnName("name_conc");

                entity.Property(e => e.Postalcode)
                    .HasMaxLength(250)
                    .HasColumnName("postalcode");

                entity.Property(e => e.Region)
                    .HasMaxLength(250)
                    .HasColumnName("region");

                entity.Property(e => e.Street1)
                    .HasMaxLength(250)
                    .HasColumnName("street1");

                entity.Property(e => e.Street2)
                    .HasMaxLength(250)
                    .HasColumnName("street2");

                entity.Property(e => e.Street3)
                    .HasMaxLength(250)
                    .HasColumnName("street3");

                entity.Property(e => e.Street4)
                    .HasMaxLength(250)
                    .HasColumnName("street4");

                entity.Property(e => e.Street5)
                    .HasMaxLength(250)
                    .HasColumnName("street5");

                entity.Property(e => e.StreetConc)
                    .HasMaxLength(1500)
                    .HasColumnName("street_conc");
            });

            modelBuilder.Entity<LampCustomerMaster20181019>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lamp_customer_master_20181019", "bak");

                entity.Property(e => e.AddressNo)
                    .HasMaxLength(50)
                    .HasColumnName("address_no");

                entity.Property(e => e.BpBillingHold)
                    .HasMaxLength(50)
                    .HasColumnName("bp_billing_hold");

                entity.Property(e => e.BpCategory)
                    .HasMaxLength(50)
                    .HasColumnName("bp_category");

                entity.Property(e => e.BpDeliveryHold)
                    .HasMaxLength(50)
                    .HasColumnName("bp_delivery_hold");

                entity.Property(e => e.BpExternalNo)
                    .HasMaxLength(50)
                    .HasColumnName("bp_external_no");

                entity.Property(e => e.BpGrouping)
                    .HasMaxLength(50)
                    .HasColumnName("bp_grouping");

                entity.Property(e => e.BpGuid)
                    .HasMaxLength(50)
                    .HasColumnName("bp_guid");

                entity.Property(e => e.BpRole)
                    .HasMaxLength(50)
                    .HasColumnName("bp_role");

                entity.Property(e => e.BpStatusCode)
                    .HasMaxLength(50)
                    .HasColumnName("bp_status_code");

                entity.Property(e => e.BpStatusDesc)
                    .HasMaxLength(50)
                    .HasColumnName("bp_status_desc");

                entity.Property(e => e.BpTransactionHold)
                    .HasMaxLength(50)
                    .HasColumnName("bp_transaction_hold");

                entity.Property(e => e.BpType)
                    .HasMaxLength(50)
                    .HasColumnName("bp_type");

                entity.Property(e => e.Bpid)
                    .HasMaxLength(50)
                    .HasColumnName("bpid");

                entity.Property(e => e.BuildingFloor)
                    .HasMaxLength(50)
                    .HasColumnName("building_floor");

                entity.Property(e => e.BuildingNo)
                    .HasMaxLength(50)
                    .HasColumnName("building_no");

                entity.Property(e => e.CentralArchiveFlag)
                    .HasMaxLength(50)
                    .HasColumnName("central_archive_flag");

                entity.Property(e => e.City)
                    .HasMaxLength(250)
                    .HasColumnName("city");

                entity.Property(e => e.ComplianceStatusCode)
                    .HasMaxLength(50)
                    .HasColumnName("compliance_status_code");

                entity.Property(e => e.ComplianceStatusDesc)
                    .HasMaxLength(50)
                    .HasColumnName("compliance_status_desc");

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("country_code");

                entity.Property(e => e.CountryGrp)
                    .HasMaxLength(50)
                    .HasColumnName("country_grp");

                entity.Property(e => e.CreatedAt)
                    .HasMaxLength(50)
                    .HasColumnName("created_at");

                entity.Property(e => e.CreatedOn).HasColumnName("created_on");

                entity.Property(e => e.Deleted)
                    .HasMaxLength(50)
                    .HasColumnName("deleted");

                entity.Property(e => e.District)
                    .HasMaxLength(250)
                    .HasColumnName("district");

                entity.Property(e => e.DistrictCode)
                    .HasMaxLength(250)
                    .HasColumnName("district_code");

                entity.Property(e => e.EdpCreated)
                    .HasMaxLength(50)
                    .HasColumnName("edp_created");

                entity.Property(e => e.EdpCreatedTxnId)
                    .HasMaxLength(50)
                    .HasColumnName("edp_created_txn_id");

                entity.Property(e => e.EdpLastUpdated)
                    .HasMaxLength(50)
                    .HasColumnName("edp_last_updated");

                entity.Property(e => e.EdpTxnId)
                    .HasMaxLength(50)
                    .HasColumnName("edp_txn_id");

                entity.Property(e => e.HouseNo)
                    .HasMaxLength(50)
                    .HasColumnName("house_no");

                entity.Property(e => e.IndustrySector)
                    .HasMaxLength(50)
                    .HasColumnName("industry_sector");

                entity.Property(e => e.IsPartnerConverted)
                    .HasMaxLength(50)
                    .HasColumnName("is_partner_converted");

                entity.Property(e => e.LastChangedAt)
                    .HasMaxLength(50)
                    .HasColumnName("last_changed_at");

                entity.Property(e => e.LastChangedOn).HasColumnName("last_changed_on");

                entity.Property(e => e.Name1)
                    .HasMaxLength(250)
                    .HasColumnName("name1");

                entity.Property(e => e.Name2)
                    .HasMaxLength(250)
                    .HasColumnName("name2");

                entity.Property(e => e.Name3)
                    .HasMaxLength(250)
                    .HasColumnName("name3");

                entity.Property(e => e.Name4)
                    .HasMaxLength(250)
                    .HasColumnName("name4");

                entity.Property(e => e.NameConc)
                    .HasMaxLength(1500)
                    .HasColumnName("name_conc");

                entity.Property(e => e.Postalcode)
                    .HasMaxLength(250)
                    .HasColumnName("postalcode");

                entity.Property(e => e.Region)
                    .HasMaxLength(250)
                    .HasColumnName("region");

                entity.Property(e => e.Street1)
                    .HasMaxLength(250)
                    .HasColumnName("street1");

                entity.Property(e => e.Street2)
                    .HasMaxLength(250)
                    .HasColumnName("street2");

                entity.Property(e => e.Street3)
                    .HasMaxLength(250)
                    .HasColumnName("street3");

                entity.Property(e => e.Street4)
                    .HasMaxLength(250)
                    .HasColumnName("street4");

                entity.Property(e => e.Street5)
                    .HasMaxLength(250)
                    .HasColumnName("street5");

                entity.Property(e => e.StreetConc)
                    .HasMaxLength(1500)
                    .HasColumnName("street_conc");
            });

            modelBuilder.Entity<LampCustomerMasterBak>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lamp_customer_master_bak", "bak");

                entity.Property(e => e.Accountclass)
                    .HasMaxLength(50)
                    .HasColumnName("accountclass");

                entity.Property(e => e.Accountgroup)
                    .HasMaxLength(50)
                    .HasColumnName("accountgroup");

                entity.Property(e => e.Accounttype)
                    .HasMaxLength(50)
                    .HasColumnName("accounttype");

                entity.Property(e => e.Addrnumber)
                    .HasMaxLength(50)
                    .HasColumnName("addrnumber");

                entity.Property(e => e.ArchivingFlag)
                    .HasMaxLength(50)
                    .HasColumnName("archiving_flag");

                entity.Property(e => e.Attr4)
                    .HasMaxLength(255)
                    .HasColumnName("attr4");

                entity.Property(e => e.Billtorole)
                    .HasMaxLength(50)
                    .HasColumnName("billtorole");

                entity.Property(e => e.BpLastUpd)
                    .HasColumnType("datetime")
                    .HasColumnName("BP_LAST_UPD");

                entity.Property(e => e.Bpid)
                    .HasMaxLength(50)
                    .HasColumnName("bpid");

                entity.Property(e => e.BpidOrig)
                    .HasMaxLength(50)
                    .HasColumnName("bpid_orig");

                entity.Property(e => e.Buildingcode)
                    .HasMaxLength(50)
                    .HasColumnName("buildingcode");

                entity.Property(e => e.CentralBlock)
                    .HasMaxLength(255)
                    .HasColumnName("central_block");

                entity.Property(e => e.Chusr)
                    .HasMaxLength(255)
                    .HasColumnName("chusr");

                entity.Property(e => e.City)
                    .HasMaxLength(255)
                    .HasColumnName("city");

                entity.Property(e => e.Commonid)
                    .HasMaxLength(50)
                    .HasColumnName("commonid");

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(20)
                    .HasColumnName("country_code");

                entity.Property(e => e.CountryName)
                    .HasMaxLength(250)
                    .HasColumnName("country_name");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("created_date");

                entity.Property(e => e.Customersince)
                    .HasColumnType("datetime")
                    .HasColumnName("customersince");

                entity.Property(e => e.Distributorrole)
                    .HasMaxLength(50)
                    .HasColumnName("distributorrole");

                entity.Property(e => e.Domduns)
                    .HasMaxLength(255)
                    .HasColumnName("domduns");

                entity.Property(e => e.Duns)
                    .HasMaxLength(50)
                    .HasColumnName("duns");

                entity.Property(e => e.EdiId)
                    .HasMaxLength(255)
                    .HasColumnName("edi_id");

                entity.Property(e => e.EmpLogin)
                    .HasMaxLength(100)
                    .HasColumnName("emp_login");

                entity.Property(e => e.EmpName)
                    .HasMaxLength(100)
                    .HasColumnName("emp_name");

                entity.Property(e => e.EmpOrgCode)
                    .HasMaxLength(50)
                    .HasColumnName("emp_org_code");

                entity.Property(e => e.EmpOrgUnit)
                    .HasMaxLength(50)
                    .HasColumnName("emp_org_unit");

                entity.Property(e => e.EmpOrgUntiName)
                    .HasMaxLength(255)
                    .HasColumnName("emp_org_unti_name");

                entity.Property(e => e.Endcustomerrole)
                    .HasMaxLength(50)
                    .HasColumnName("endcustomerrole");

                entity.Property(e => e.FaxNumber)
                    .HasMaxLength(50)
                    .HasColumnName("fax_number");

                entity.Property(e => e.Floor)
                    .HasMaxLength(50)
                    .HasColumnName("floor");

                entity.Property(e => e.Globalultduns)
                    .HasMaxLength(255)
                    .HasColumnName("globalultduns");

                entity.Property(e => e.Grouping)
                    .HasMaxLength(50)
                    .HasColumnName("grouping");

                entity.Property(e => e.Housenumber)
                    .HasMaxLength(255)
                    .HasColumnName("housenumber");

                entity.Property(e => e.Housenumbersupplement)
                    .HasMaxLength(255)
                    .HasColumnName("housenumbersupplement");

                entity.Property(e => e.Iscustomer)
                    .HasMaxLength(50)
                    .HasColumnName("iscustomer");

                entity.Property(e => e.JuniperIndustryCode)
                    .HasMaxLength(50)
                    .HasColumnName("juniper_industry_code");

                entity.Property(e => e.Langu)
                    .HasMaxLength(50)
                    .HasColumnName("langu");

                entity.Property(e => e.Name1)
                    .HasMaxLength(255)
                    .HasColumnName("name1");

                entity.Property(e => e.Name2)
                    .HasMaxLength(255)
                    .HasColumnName("name2");

                entity.Property(e => e.Name3)
                    .HasMaxLength(255)
                    .HasColumnName("name3");

                entity.Property(e => e.Name4)
                    .HasMaxLength(255)
                    .HasColumnName("name4");

                entity.Property(e => e.NameConc)
                    .HasMaxLength(500)
                    .HasColumnName("name_conc");

                entity.Property(e => e.Oracleid)
                    .HasMaxLength(255)
                    .HasColumnName("oracleid");

                entity.Property(e => e.PartnerAuthCode)
                    .HasMaxLength(255)
                    .HasColumnName("partner_auth_code");

                entity.Property(e => e.Payerrole)
                    .HasMaxLength(50)
                    .HasColumnName("payerrole");

                entity.Property(e => e.Postalcode)
                    .HasMaxLength(50)
                    .HasColumnName("postalcode");

                entity.Property(e => e.PrimaryVarId)
                    .HasMaxLength(255)
                    .HasColumnName("primary_var_id");

                entity.Property(e => e.Region)
                    .HasMaxLength(50)
                    .HasColumnName("region");

                entity.Property(e => e.Resellerrole)
                    .HasMaxLength(50)
                    .HasColumnName("resellerrole");

                entity.Property(e => e.Roomnumber)
                    .HasMaxLength(50)
                    .HasColumnName("roomnumber");

                entity.Property(e => e.Salessystemflag)
                    .HasMaxLength(50)
                    .HasColumnName("salessystemflag");

                entity.Property(e => e.Searchterm1)
                    .HasMaxLength(50)
                    .HasColumnName("searchterm1");

                entity.Property(e => e.Searchterm2)
                    .HasMaxLength(50)
                    .HasColumnName("searchterm2");

                entity.Property(e => e.SfdcId)
                    .HasMaxLength(255)
                    .HasColumnName("sfdc_id");

                entity.Property(e => e.SfdcVictimId)
                    .HasMaxLength(255)
                    .HasColumnName("sfdc_victim_id");

                entity.Property(e => e.Shiptorole)
                    .HasMaxLength(50)
                    .HasColumnName("shiptorole");

                entity.Property(e => e.Siebelid)
                    .HasMaxLength(255)
                    .HasColumnName("siebelid");

                entity.Property(e => e.Soldtorole)
                    .HasMaxLength(50)
                    .HasColumnName("soldtorole");

                entity.Property(e => e.Source)
                    .HasMaxLength(50)
                    .HasColumnName("source");

                entity.Property(e => e.Street1)
                    .HasMaxLength(255)
                    .HasColumnName("street1");

                entity.Property(e => e.Street2)
                    .HasMaxLength(255)
                    .HasColumnName("street2");

                entity.Property(e => e.Street3)
                    .HasMaxLength(255)
                    .HasColumnName("street3");

                entity.Property(e => e.Street4)
                    .HasMaxLength(255)
                    .HasColumnName("street4");

                entity.Property(e => e.Street5)
                    .HasMaxLength(255)
                    .HasColumnName("street5");

                entity.Property(e => e.StreetConc)
                    .HasMaxLength(1000)
                    .HasColumnName("street_conc");

                entity.Property(e => e.TelNumber)
                    .HasMaxLength(50)
                    .HasColumnName("tel_number");

                entity.Property(e => e.TransZone)
                    .HasMaxLength(50)
                    .HasColumnName("trans_zone");

                entity.Property(e => e.UcmId)
                    .HasMaxLength(255)
                    .HasColumnName("ucm_id");

                entity.Property(e => e.UriAddr)
                    .HasMaxLength(255)
                    .HasColumnName("uri_addr");

                entity.Property(e => e.VarId)
                    .HasMaxLength(255)
                    .HasColumnName("var_id");

                entity.Property(e => e.Verifydate)
                    .HasColumnType("datetime")
                    .HasColumnName("verifydate");
            });

            modelBuilder.Entity<LampCustomerMasterTmp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lamp_customer_master_tmp");

                entity.HasIndex(e => e.Bpid, "lamp_customer_master_tmp_bpid");

                entity.Property(e => e.Accountclass)
                    .HasMaxLength(50)
                    .HasColumnName("accountclass");

                entity.Property(e => e.Accountgroup)
                    .HasMaxLength(50)
                    .HasColumnName("accountgroup");

                entity.Property(e => e.Accounttype)
                    .HasMaxLength(50)
                    .HasColumnName("accounttype");

                entity.Property(e => e.Addrnumber)
                    .HasMaxLength(50)
                    .HasColumnName("addrnumber");

                entity.Property(e => e.ArchivingFlag)
                    .HasMaxLength(50)
                    .HasColumnName("archiving_flag");

                entity.Property(e => e.Attr4)
                    .HasMaxLength(255)
                    .HasColumnName("attr4");

                entity.Property(e => e.Billtorole)
                    .HasMaxLength(50)
                    .HasColumnName("billtorole");

                entity.Property(e => e.BpLastUpd)
                    .HasColumnType("datetime")
                    .HasColumnName("BP_LAST_UPD");

                entity.Property(e => e.Bpid)
                    .HasMaxLength(50)
                    .HasColumnName("bpid");

                entity.Property(e => e.BpidOrig)
                    .HasMaxLength(50)
                    .HasColumnName("bpid_orig");

                entity.Property(e => e.Buildingcode)
                    .HasMaxLength(50)
                    .HasColumnName("buildingcode");

                entity.Property(e => e.CentralBlock)
                    .HasMaxLength(255)
                    .HasColumnName("central_block");

                entity.Property(e => e.Chusr)
                    .HasMaxLength(255)
                    .HasColumnName("chusr");

                entity.Property(e => e.City)
                    .HasMaxLength(255)
                    .HasColumnName("city");

                entity.Property(e => e.Commonid)
                    .HasMaxLength(50)
                    .HasColumnName("commonid");

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(20)
                    .HasColumnName("country_code");

                entity.Property(e => e.CountryName)
                    .HasMaxLength(250)
                    .HasColumnName("country_name");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("created_date");

                entity.Property(e => e.Customersince)
                    .HasColumnType("datetime")
                    .HasColumnName("customersince");

                entity.Property(e => e.Distributorrole)
                    .HasMaxLength(50)
                    .HasColumnName("distributorrole");

                entity.Property(e => e.Domduns)
                    .HasMaxLength(255)
                    .HasColumnName("domduns");

                entity.Property(e => e.Duns)
                    .HasMaxLength(50)
                    .HasColumnName("duns");

                entity.Property(e => e.EdiId)
                    .HasMaxLength(255)
                    .HasColumnName("edi_id");

                entity.Property(e => e.EmpLogin)
                    .HasMaxLength(100)
                    .HasColumnName("emp_login");

                entity.Property(e => e.EmpName)
                    .HasMaxLength(100)
                    .HasColumnName("emp_name");

                entity.Property(e => e.EmpOrgCode)
                    .HasMaxLength(50)
                    .HasColumnName("emp_org_code");

                entity.Property(e => e.EmpOrgUnit)
                    .HasMaxLength(50)
                    .HasColumnName("emp_org_unit");

                entity.Property(e => e.EmpOrgUntiName)
                    .HasMaxLength(255)
                    .HasColumnName("emp_org_unti_name");

                entity.Property(e => e.Endcustomerrole)
                    .HasMaxLength(50)
                    .HasColumnName("endcustomerrole");

                entity.Property(e => e.FaxNumber)
                    .HasMaxLength(50)
                    .HasColumnName("fax_number");

                entity.Property(e => e.Floor)
                    .HasMaxLength(50)
                    .HasColumnName("floor");

                entity.Property(e => e.Globalultduns)
                    .HasMaxLength(255)
                    .HasColumnName("globalultduns");

                entity.Property(e => e.Grouping)
                    .HasMaxLength(50)
                    .HasColumnName("grouping");

                entity.Property(e => e.Housenumber)
                    .HasMaxLength(255)
                    .HasColumnName("housenumber");

                entity.Property(e => e.Housenumbersupplement)
                    .HasMaxLength(255)
                    .HasColumnName("housenumbersupplement");

                entity.Property(e => e.Iscustomer)
                    .HasMaxLength(50)
                    .HasColumnName("iscustomer");

                entity.Property(e => e.JuniperIndustryCode)
                    .HasMaxLength(50)
                    .HasColumnName("juniper_industry_code");

                entity.Property(e => e.Langu)
                    .HasMaxLength(50)
                    .HasColumnName("langu");

                entity.Property(e => e.Name1)
                    .HasMaxLength(255)
                    .HasColumnName("name1");

                entity.Property(e => e.Name2)
                    .HasMaxLength(255)
                    .HasColumnName("name2");

                entity.Property(e => e.Name3)
                    .HasMaxLength(255)
                    .HasColumnName("name3");

                entity.Property(e => e.Name4)
                    .HasMaxLength(255)
                    .HasColumnName("name4");

                entity.Property(e => e.NameConc)
                    .HasMaxLength(500)
                    .HasColumnName("name_conc");

                entity.Property(e => e.Oracleid)
                    .HasMaxLength(255)
                    .HasColumnName("oracleid");

                entity.Property(e => e.PartnerAuthCode)
                    .HasMaxLength(255)
                    .HasColumnName("partner_auth_code");

                entity.Property(e => e.Payerrole)
                    .HasMaxLength(50)
                    .HasColumnName("payerrole");

                entity.Property(e => e.Postalcode)
                    .HasMaxLength(50)
                    .HasColumnName("postalcode");

                entity.Property(e => e.PrimaryVarId)
                    .HasMaxLength(255)
                    .HasColumnName("primary_var_id");

                entity.Property(e => e.Region)
                    .HasMaxLength(50)
                    .HasColumnName("region");

                entity.Property(e => e.Resellerrole)
                    .HasMaxLength(50)
                    .HasColumnName("resellerrole");

                entity.Property(e => e.Roomnumber)
                    .HasMaxLength(50)
                    .HasColumnName("roomnumber");

                entity.Property(e => e.Salessystemflag)
                    .HasMaxLength(50)
                    .HasColumnName("salessystemflag");

                entity.Property(e => e.Searchterm1)
                    .HasMaxLength(50)
                    .HasColumnName("searchterm1");

                entity.Property(e => e.Searchterm2)
                    .HasMaxLength(50)
                    .HasColumnName("searchterm2");

                entity.Property(e => e.SfdcId)
                    .HasMaxLength(255)
                    .HasColumnName("sfdc_id");

                entity.Property(e => e.SfdcVictimId)
                    .HasMaxLength(255)
                    .HasColumnName("sfdc_victim_id");

                entity.Property(e => e.Shiptorole)
                    .HasMaxLength(50)
                    .HasColumnName("shiptorole");

                entity.Property(e => e.Siebelid)
                    .HasMaxLength(255)
                    .HasColumnName("siebelid");

                entity.Property(e => e.Soldtorole)
                    .HasMaxLength(50)
                    .HasColumnName("soldtorole");

                entity.Property(e => e.Source)
                    .HasMaxLength(50)
                    .HasColumnName("source");

                entity.Property(e => e.Street1)
                    .HasMaxLength(255)
                    .HasColumnName("street1");

                entity.Property(e => e.Street2)
                    .HasMaxLength(255)
                    .HasColumnName("street2");

                entity.Property(e => e.Street3)
                    .HasMaxLength(255)
                    .HasColumnName("street3");

                entity.Property(e => e.Street4)
                    .HasMaxLength(255)
                    .HasColumnName("street4");

                entity.Property(e => e.Street5)
                    .HasMaxLength(255)
                    .HasColumnName("street5");

                entity.Property(e => e.StreetConc)
                    .HasMaxLength(1000)
                    .HasColumnName("street_conc");

                entity.Property(e => e.TelNumber)
                    .HasMaxLength(50)
                    .HasColumnName("tel_number");

                entity.Property(e => e.TransZone)
                    .HasMaxLength(50)
                    .HasColumnName("trans_zone");

                entity.Property(e => e.UcmId)
                    .HasMaxLength(255)
                    .HasColumnName("ucm_id");

                entity.Property(e => e.UriAddr)
                    .HasMaxLength(255)
                    .HasColumnName("uri_addr");

                entity.Property(e => e.VarId)
                    .HasMaxLength(255)
                    .HasColumnName("var_id");

                entity.Property(e => e.Verifydate)
                    .HasColumnType("datetime")
                    .HasColumnName("verifydate");
            });

            modelBuilder.Entity<LampCustomerMasterTmpBak>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lamp_customer_master_tmp_bak", "bak");

                entity.Property(e => e.Accountclass)
                    .HasMaxLength(50)
                    .HasColumnName("accountclass");

                entity.Property(e => e.Accountgroup)
                    .HasMaxLength(50)
                    .HasColumnName("accountgroup");

                entity.Property(e => e.Accounttype)
                    .HasMaxLength(50)
                    .HasColumnName("accounttype");

                entity.Property(e => e.Addrnumber)
                    .HasMaxLength(50)
                    .HasColumnName("addrnumber");

                entity.Property(e => e.ArchivingFlag)
                    .HasMaxLength(50)
                    .HasColumnName("archiving_flag");

                entity.Property(e => e.Attr4)
                    .HasMaxLength(255)
                    .HasColumnName("attr4");

                entity.Property(e => e.Billtorole)
                    .HasMaxLength(50)
                    .HasColumnName("billtorole");

                entity.Property(e => e.BpLastUpd)
                    .HasColumnType("datetime")
                    .HasColumnName("BP_LAST_UPD");

                entity.Property(e => e.Bpid)
                    .HasMaxLength(50)
                    .HasColumnName("bpid");

                entity.Property(e => e.BpidOrig)
                    .HasMaxLength(50)
                    .HasColumnName("bpid_orig");

                entity.Property(e => e.Buildingcode)
                    .HasMaxLength(50)
                    .HasColumnName("buildingcode");

                entity.Property(e => e.CentralBlock)
                    .HasMaxLength(255)
                    .HasColumnName("central_block");

                entity.Property(e => e.Chusr)
                    .HasMaxLength(255)
                    .HasColumnName("chusr");

                entity.Property(e => e.City)
                    .HasMaxLength(255)
                    .HasColumnName("city");

                entity.Property(e => e.Commonid)
                    .HasMaxLength(50)
                    .HasColumnName("commonid");

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(20)
                    .HasColumnName("country_code");

                entity.Property(e => e.CountryName)
                    .HasMaxLength(250)
                    .HasColumnName("country_name");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("created_date");

                entity.Property(e => e.Customersince)
                    .HasColumnType("datetime")
                    .HasColumnName("customersince");

                entity.Property(e => e.Distributorrole)
                    .HasMaxLength(50)
                    .HasColumnName("distributorrole");

                entity.Property(e => e.Domduns)
                    .HasMaxLength(255)
                    .HasColumnName("domduns");

                entity.Property(e => e.Duns)
                    .HasMaxLength(50)
                    .HasColumnName("duns");

                entity.Property(e => e.EdiId)
                    .HasMaxLength(255)
                    .HasColumnName("edi_id");

                entity.Property(e => e.EmpLogin)
                    .HasMaxLength(100)
                    .HasColumnName("emp_login");

                entity.Property(e => e.EmpName)
                    .HasMaxLength(100)
                    .HasColumnName("emp_name");

                entity.Property(e => e.EmpOrgCode)
                    .HasMaxLength(50)
                    .HasColumnName("emp_org_code");

                entity.Property(e => e.EmpOrgUnit)
                    .HasMaxLength(50)
                    .HasColumnName("emp_org_unit");

                entity.Property(e => e.EmpOrgUntiName)
                    .HasMaxLength(255)
                    .HasColumnName("emp_org_unti_name");

                entity.Property(e => e.Endcustomerrole)
                    .HasMaxLength(50)
                    .HasColumnName("endcustomerrole");

                entity.Property(e => e.FaxNumber)
                    .HasMaxLength(50)
                    .HasColumnName("fax_number");

                entity.Property(e => e.Floor)
                    .HasMaxLength(50)
                    .HasColumnName("floor");

                entity.Property(e => e.Globalultduns)
                    .HasMaxLength(255)
                    .HasColumnName("globalultduns");

                entity.Property(e => e.Grouping)
                    .HasMaxLength(50)
                    .HasColumnName("grouping");

                entity.Property(e => e.Housenumber)
                    .HasMaxLength(255)
                    .HasColumnName("housenumber");

                entity.Property(e => e.Housenumbersupplement)
                    .HasMaxLength(255)
                    .HasColumnName("housenumbersupplement");

                entity.Property(e => e.Iscustomer)
                    .HasMaxLength(50)
                    .HasColumnName("iscustomer");

                entity.Property(e => e.JuniperIndustryCode)
                    .HasMaxLength(50)
                    .HasColumnName("juniper_industry_code");

                entity.Property(e => e.Langu)
                    .HasMaxLength(50)
                    .HasColumnName("langu");

                entity.Property(e => e.Name1)
                    .HasMaxLength(255)
                    .HasColumnName("name1");

                entity.Property(e => e.Name2)
                    .HasMaxLength(255)
                    .HasColumnName("name2");

                entity.Property(e => e.Name3)
                    .HasMaxLength(255)
                    .HasColumnName("name3");

                entity.Property(e => e.Name4)
                    .HasMaxLength(255)
                    .HasColumnName("name4");

                entity.Property(e => e.NameConc)
                    .HasMaxLength(500)
                    .HasColumnName("name_conc");

                entity.Property(e => e.Oracleid)
                    .HasMaxLength(255)
                    .HasColumnName("oracleid");

                entity.Property(e => e.PartnerAuthCode)
                    .HasMaxLength(255)
                    .HasColumnName("partner_auth_code");

                entity.Property(e => e.Payerrole)
                    .HasMaxLength(50)
                    .HasColumnName("payerrole");

                entity.Property(e => e.Postalcode)
                    .HasMaxLength(50)
                    .HasColumnName("postalcode");

                entity.Property(e => e.PrimaryVarId)
                    .HasMaxLength(255)
                    .HasColumnName("primary_var_id");

                entity.Property(e => e.Region)
                    .HasMaxLength(50)
                    .HasColumnName("region");

                entity.Property(e => e.Resellerrole)
                    .HasMaxLength(50)
                    .HasColumnName("resellerrole");

                entity.Property(e => e.Roomnumber)
                    .HasMaxLength(50)
                    .HasColumnName("roomnumber");

                entity.Property(e => e.Salessystemflag)
                    .HasMaxLength(50)
                    .HasColumnName("salessystemflag");

                entity.Property(e => e.Searchterm1)
                    .HasMaxLength(50)
                    .HasColumnName("searchterm1");

                entity.Property(e => e.Searchterm2)
                    .HasMaxLength(50)
                    .HasColumnName("searchterm2");

                entity.Property(e => e.SfdcId)
                    .HasMaxLength(255)
                    .HasColumnName("sfdc_id");

                entity.Property(e => e.SfdcVictimId)
                    .HasMaxLength(255)
                    .HasColumnName("sfdc_victim_id");

                entity.Property(e => e.Shiptorole)
                    .HasMaxLength(50)
                    .HasColumnName("shiptorole");

                entity.Property(e => e.Siebelid)
                    .HasMaxLength(255)
                    .HasColumnName("siebelid");

                entity.Property(e => e.Soldtorole)
                    .HasMaxLength(50)
                    .HasColumnName("soldtorole");

                entity.Property(e => e.Source)
                    .HasMaxLength(50)
                    .HasColumnName("source");

                entity.Property(e => e.Street1)
                    .HasMaxLength(255)
                    .HasColumnName("street1");

                entity.Property(e => e.Street2)
                    .HasMaxLength(255)
                    .HasColumnName("street2");

                entity.Property(e => e.Street3)
                    .HasMaxLength(255)
                    .HasColumnName("street3");

                entity.Property(e => e.Street4)
                    .HasMaxLength(255)
                    .HasColumnName("street4");

                entity.Property(e => e.Street5)
                    .HasMaxLength(255)
                    .HasColumnName("street5");

                entity.Property(e => e.StreetConc)
                    .HasMaxLength(1000)
                    .HasColumnName("street_conc");

                entity.Property(e => e.TelNumber)
                    .HasMaxLength(50)
                    .HasColumnName("tel_number");

                entity.Property(e => e.TransZone)
                    .HasMaxLength(50)
                    .HasColumnName("trans_zone");

                entity.Property(e => e.UcmId)
                    .HasMaxLength(255)
                    .HasColumnName("ucm_id");

                entity.Property(e => e.UriAddr)
                    .HasMaxLength(255)
                    .HasColumnName("uri_addr");

                entity.Property(e => e.VarId)
                    .HasMaxLength(255)
                    .HasColumnName("var_id");

                entity.Property(e => e.Verifydate)
                    .HasColumnType("datetime")
                    .HasColumnName("verifydate");
            });

            modelBuilder.Entity<LampCustomerNewupdated>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lamp_customer_newupdated");

                entity.Property(e => e.AddressNo)
                    .HasMaxLength(50)
                    .HasColumnName("address_no");

                entity.Property(e => e.BpBillingHold)
                    .HasMaxLength(50)
                    .HasColumnName("bp_billing_hold");

                entity.Property(e => e.BpCategory)
                    .HasMaxLength(50)
                    .HasColumnName("bp_category");

                entity.Property(e => e.BpDeliveryHold)
                    .HasMaxLength(50)
                    .HasColumnName("bp_delivery_hold");

                entity.Property(e => e.BpExternalNo)
                    .HasMaxLength(50)
                    .HasColumnName("bp_external_no");

                entity.Property(e => e.BpGrouping)
                    .HasMaxLength(50)
                    .HasColumnName("bp_grouping");

                entity.Property(e => e.BpGuid)
                    .HasMaxLength(50)
                    .HasColumnName("bp_guid");

                entity.Property(e => e.BpRole)
                    .HasMaxLength(50)
                    .HasColumnName("bp_role");

                entity.Property(e => e.BpStatusCode)
                    .HasMaxLength(50)
                    .HasColumnName("bp_status_code");

                entity.Property(e => e.BpStatusDesc)
                    .HasMaxLength(50)
                    .HasColumnName("bp_status_desc");

                entity.Property(e => e.BpTransactionHold)
                    .HasMaxLength(50)
                    .HasColumnName("bp_transaction_hold");

                entity.Property(e => e.BpType)
                    .HasMaxLength(50)
                    .HasColumnName("bp_type");

                entity.Property(e => e.Bpid)
                    .HasMaxLength(50)
                    .HasColumnName("bpid");

                entity.Property(e => e.BuildingFloor)
                    .HasMaxLength(50)
                    .HasColumnName("building_floor");

                entity.Property(e => e.BuildingNo)
                    .HasMaxLength(50)
                    .HasColumnName("building_no");

                entity.Property(e => e.CentralArchiveFlag)
                    .HasMaxLength(50)
                    .HasColumnName("central_archive_flag");

                entity.Property(e => e.City)
                    .HasMaxLength(250)
                    .HasColumnName("city");

                entity.Property(e => e.ComplianceStatusCode)
                    .HasMaxLength(50)
                    .HasColumnName("compliance_status_code");

                entity.Property(e => e.ComplianceStatusDesc)
                    .HasMaxLength(50)
                    .HasColumnName("compliance_status_desc");

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("country_code");

                entity.Property(e => e.CountryGrp)
                    .HasMaxLength(50)
                    .HasColumnName("country_grp");

                entity.Property(e => e.CreatedAt)
                    .HasMaxLength(50)
                    .HasColumnName("created_at");

                entity.Property(e => e.CreatedOn).HasColumnName("created_on");

                entity.Property(e => e.Deleted)
                    .HasMaxLength(50)
                    .HasColumnName("deleted");

                entity.Property(e => e.District)
                    .HasMaxLength(250)
                    .HasColumnName("district");

                entity.Property(e => e.DistrictCode)
                    .HasMaxLength(250)
                    .HasColumnName("district_code");

                entity.Property(e => e.EdpCreated)
                    .HasMaxLength(50)
                    .HasColumnName("edp_created");

                entity.Property(e => e.EdpCreatedTxnId)
                    .HasMaxLength(50)
                    .HasColumnName("edp_created_txn_id");

                entity.Property(e => e.EdpLastUpdated)
                    .HasMaxLength(50)
                    .HasColumnName("edp_last_updated");

                entity.Property(e => e.EdpTxnId)
                    .HasMaxLength(50)
                    .HasColumnName("edp_txn_id");

                entity.Property(e => e.HouseNo)
                    .HasMaxLength(50)
                    .HasColumnName("house_no");

                entity.Property(e => e.IndustrySector)
                    .HasMaxLength(50)
                    .HasColumnName("industry_sector");

                entity.Property(e => e.IsPartnerConverted)
                    .HasMaxLength(50)
                    .HasColumnName("is_partner_converted");

                entity.Property(e => e.LastChangedAt)
                    .HasMaxLength(50)
                    .HasColumnName("last_changed_at");

                entity.Property(e => e.LastChangedOn).HasColumnName("last_changed_on");

                entity.Property(e => e.Name1)
                    .HasMaxLength(250)
                    .HasColumnName("name1");

                entity.Property(e => e.Name2)
                    .HasMaxLength(250)
                    .HasColumnName("name2");

                entity.Property(e => e.Name3)
                    .HasMaxLength(250)
                    .HasColumnName("name3");

                entity.Property(e => e.Name4)
                    .HasMaxLength(250)
                    .HasColumnName("name4");

                entity.Property(e => e.NameConc)
                    .HasMaxLength(1500)
                    .HasColumnName("name_conc");

                entity.Property(e => e.Postalcode)
                    .HasMaxLength(250)
                    .HasColumnName("postalcode");

                entity.Property(e => e.Region)
                    .HasMaxLength(250)
                    .HasColumnName("region");

                entity.Property(e => e.Street1)
                    .HasMaxLength(250)
                    .HasColumnName("street1");

                entity.Property(e => e.Street2)
                    .HasMaxLength(250)
                    .HasColumnName("street2");

                entity.Property(e => e.Street3)
                    .HasMaxLength(250)
                    .HasColumnName("street3");

                entity.Property(e => e.Street4)
                    .HasMaxLength(250)
                    .HasColumnName("street4");

                entity.Property(e => e.Street5)
                    .HasMaxLength(250)
                    .HasColumnName("street5");

                entity.Property(e => e.StreetConc)
                    .HasMaxLength(1500)
                    .HasColumnName("street_conc");
            });

            modelBuilder.Entity<LampCustomerNewupdated1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lamp_customer_newupdated", "dev");

                entity.Property(e => e.AddressNo)
                    .HasMaxLength(50)
                    .HasColumnName("address_no");

                entity.Property(e => e.BpBillingHold)
                    .HasMaxLength(50)
                    .HasColumnName("bp_billing_hold");

                entity.Property(e => e.BpCategory)
                    .HasMaxLength(50)
                    .HasColumnName("bp_category");

                entity.Property(e => e.BpDeliveryHold)
                    .HasMaxLength(50)
                    .HasColumnName("bp_delivery_hold");

                entity.Property(e => e.BpExternalNo)
                    .HasMaxLength(50)
                    .HasColumnName("bp_external_no");

                entity.Property(e => e.BpGrouping)
                    .HasMaxLength(50)
                    .HasColumnName("bp_grouping");

                entity.Property(e => e.BpGuid)
                    .HasMaxLength(50)
                    .HasColumnName("bp_guid");

                entity.Property(e => e.BpRole)
                    .HasMaxLength(50)
                    .HasColumnName("bp_role");

                entity.Property(e => e.BpStatusCode)
                    .HasMaxLength(50)
                    .HasColumnName("bp_status_code");

                entity.Property(e => e.BpStatusDesc)
                    .HasMaxLength(50)
                    .HasColumnName("bp_status_desc");

                entity.Property(e => e.BpTransactionHold)
                    .HasMaxLength(50)
                    .HasColumnName("bp_transaction_hold");

                entity.Property(e => e.BpType)
                    .HasMaxLength(50)
                    .HasColumnName("bp_type");

                entity.Property(e => e.Bpid)
                    .HasMaxLength(50)
                    .HasColumnName("bpid");

                entity.Property(e => e.BuildingFloor)
                    .HasMaxLength(50)
                    .HasColumnName("building_floor");

                entity.Property(e => e.BuildingNo)
                    .HasMaxLength(50)
                    .HasColumnName("building_no");

                entity.Property(e => e.CentralArchiveFlag)
                    .HasMaxLength(50)
                    .HasColumnName("central_archive_flag");

                entity.Property(e => e.City)
                    .HasMaxLength(250)
                    .HasColumnName("city");

                entity.Property(e => e.ComplianceStatusCode)
                    .HasMaxLength(50)
                    .HasColumnName("compliance_status_code");

                entity.Property(e => e.ComplianceStatusDesc)
                    .HasMaxLength(50)
                    .HasColumnName("compliance_status_desc");

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("country_code");

                entity.Property(e => e.CountryGrp)
                    .HasMaxLength(50)
                    .HasColumnName("country_grp");

                entity.Property(e => e.CreatedAt)
                    .HasMaxLength(50)
                    .HasColumnName("created_at");

                entity.Property(e => e.CreatedOn).HasColumnName("created_on");

                entity.Property(e => e.Deleted)
                    .HasMaxLength(50)
                    .HasColumnName("deleted");

                entity.Property(e => e.District)
                    .HasMaxLength(250)
                    .HasColumnName("district");

                entity.Property(e => e.DistrictCode)
                    .HasMaxLength(250)
                    .HasColumnName("district_code");

                entity.Property(e => e.EdpCreated)
                    .HasMaxLength(50)
                    .HasColumnName("edp_created");

                entity.Property(e => e.EdpCreatedTxnId)
                    .HasMaxLength(50)
                    .HasColumnName("edp_created_txn_id");

                entity.Property(e => e.EdpLastUpdated)
                    .HasMaxLength(50)
                    .HasColumnName("edp_last_updated");

                entity.Property(e => e.EdpTxnId)
                    .HasMaxLength(50)
                    .HasColumnName("edp_txn_id");

                entity.Property(e => e.HouseNo)
                    .HasMaxLength(50)
                    .HasColumnName("house_no");

                entity.Property(e => e.IndustrySector)
                    .HasMaxLength(50)
                    .HasColumnName("industry_sector");

                entity.Property(e => e.IsPartnerConverted)
                    .HasMaxLength(50)
                    .HasColumnName("is_partner_converted");

                entity.Property(e => e.LastChangedAt)
                    .HasMaxLength(50)
                    .HasColumnName("last_changed_at");

                entity.Property(e => e.LastChangedOn).HasColumnName("last_changed_on");

                entity.Property(e => e.Name1)
                    .HasMaxLength(250)
                    .HasColumnName("name1");

                entity.Property(e => e.Name2)
                    .HasMaxLength(250)
                    .HasColumnName("name2");

                entity.Property(e => e.Name3)
                    .HasMaxLength(250)
                    .HasColumnName("name3");

                entity.Property(e => e.Name4)
                    .HasMaxLength(250)
                    .HasColumnName("name4");

                entity.Property(e => e.NameConc)
                    .HasMaxLength(1500)
                    .HasColumnName("name_conc");

                entity.Property(e => e.Postalcode)
                    .HasMaxLength(250)
                    .HasColumnName("postalcode");

                entity.Property(e => e.Region)
                    .HasMaxLength(250)
                    .HasColumnName("region");

                entity.Property(e => e.Street1)
                    .HasMaxLength(250)
                    .HasColumnName("street1");

                entity.Property(e => e.Street2)
                    .HasMaxLength(250)
                    .HasColumnName("street2");

                entity.Property(e => e.Street3)
                    .HasMaxLength(250)
                    .HasColumnName("street3");

                entity.Property(e => e.Street4)
                    .HasMaxLength(250)
                    .HasColumnName("street4");

                entity.Property(e => e.Street5)
                    .HasMaxLength(250)
                    .HasColumnName("street5");

                entity.Property(e => e.StreetConc)
                    .HasMaxLength(1500)
                    .HasColumnName("street_conc");
            });

            modelBuilder.Entity<LampCustomerNewupdatedBak>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lamp_customer_newupdated_bak", "bak");

                entity.Property(e => e.AddressNo)
                    .HasMaxLength(50)
                    .HasColumnName("address_no");

                entity.Property(e => e.BpBillingHold)
                    .HasMaxLength(50)
                    .HasColumnName("bp_billing_hold");

                entity.Property(e => e.BpCategory)
                    .HasMaxLength(50)
                    .HasColumnName("bp_category");

                entity.Property(e => e.BpDeliveryHold)
                    .HasMaxLength(50)
                    .HasColumnName("bp_delivery_hold");

                entity.Property(e => e.BpExternalNo)
                    .HasMaxLength(50)
                    .HasColumnName("bp_external_no");

                entity.Property(e => e.BpGrouping)
                    .HasMaxLength(50)
                    .HasColumnName("bp_grouping");

                entity.Property(e => e.BpGuid)
                    .HasMaxLength(50)
                    .HasColumnName("bp_guid");

                entity.Property(e => e.BpRole)
                    .HasMaxLength(50)
                    .HasColumnName("bp_role");

                entity.Property(e => e.BpStatusCode)
                    .HasMaxLength(50)
                    .HasColumnName("bp_status_code");

                entity.Property(e => e.BpStatusDesc)
                    .HasMaxLength(50)
                    .HasColumnName("bp_status_desc");

                entity.Property(e => e.BpTransactionHold)
                    .HasMaxLength(50)
                    .HasColumnName("bp_transaction_hold");

                entity.Property(e => e.BpType)
                    .HasMaxLength(50)
                    .HasColumnName("bp_type");

                entity.Property(e => e.Bpid)
                    .HasMaxLength(50)
                    .HasColumnName("bpid");

                entity.Property(e => e.BuildingFloor)
                    .HasMaxLength(50)
                    .HasColumnName("building_floor");

                entity.Property(e => e.BuildingNo)
                    .HasMaxLength(50)
                    .HasColumnName("building_no");

                entity.Property(e => e.CentralArchiveFlag)
                    .HasMaxLength(50)
                    .HasColumnName("central_archive_flag");

                entity.Property(e => e.City)
                    .HasMaxLength(250)
                    .HasColumnName("city");

                entity.Property(e => e.ComplianceStatusCode)
                    .HasMaxLength(50)
                    .HasColumnName("compliance_status_code");

                entity.Property(e => e.ComplianceStatusDesc)
                    .HasMaxLength(50)
                    .HasColumnName("compliance_status_desc");

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("country_code");

                entity.Property(e => e.CountryGrp)
                    .HasMaxLength(50)
                    .HasColumnName("country_grp");

                entity.Property(e => e.CreatedAt)
                    .HasMaxLength(50)
                    .HasColumnName("created_at");

                entity.Property(e => e.CreatedOn).HasColumnName("created_on");

                entity.Property(e => e.Deleted)
                    .HasMaxLength(50)
                    .HasColumnName("deleted");

                entity.Property(e => e.District)
                    .HasMaxLength(250)
                    .HasColumnName("district");

                entity.Property(e => e.DistrictCode)
                    .HasMaxLength(250)
                    .HasColumnName("district_code");

                entity.Property(e => e.EdpCreated)
                    .HasMaxLength(50)
                    .HasColumnName("edp_created");

                entity.Property(e => e.EdpCreatedTxnId)
                    .HasMaxLength(50)
                    .HasColumnName("edp_created_txn_id");

                entity.Property(e => e.EdpLastUpdated)
                    .HasMaxLength(50)
                    .HasColumnName("edp_last_updated");

                entity.Property(e => e.EdpTxnId)
                    .HasMaxLength(50)
                    .HasColumnName("edp_txn_id");

                entity.Property(e => e.HouseNo)
                    .HasMaxLength(50)
                    .HasColumnName("house_no");

                entity.Property(e => e.IndustrySector)
                    .HasMaxLength(50)
                    .HasColumnName("industry_sector");

                entity.Property(e => e.IsPartnerConverted)
                    .HasMaxLength(50)
                    .HasColumnName("is_partner_converted");

                entity.Property(e => e.LastChangedAt)
                    .HasMaxLength(50)
                    .HasColumnName("last_changed_at");

                entity.Property(e => e.LastChangedOn).HasColumnName("last_changed_on");

                entity.Property(e => e.Name1)
                    .HasMaxLength(250)
                    .HasColumnName("name1");

                entity.Property(e => e.Name2)
                    .HasMaxLength(250)
                    .HasColumnName("name2");

                entity.Property(e => e.Name3)
                    .HasMaxLength(250)
                    .HasColumnName("name3");

                entity.Property(e => e.Name4)
                    .HasMaxLength(250)
                    .HasColumnName("name4");

                entity.Property(e => e.NameConc)
                    .HasMaxLength(1500)
                    .HasColumnName("name_conc");

                entity.Property(e => e.Postalcode)
                    .HasMaxLength(250)
                    .HasColumnName("postalcode");

                entity.Property(e => e.Region)
                    .HasMaxLength(250)
                    .HasColumnName("region");

                entity.Property(e => e.Street1)
                    .HasMaxLength(250)
                    .HasColumnName("street1");

                entity.Property(e => e.Street2)
                    .HasMaxLength(250)
                    .HasColumnName("street2");

                entity.Property(e => e.Street3)
                    .HasMaxLength(250)
                    .HasColumnName("street3");

                entity.Property(e => e.Street4)
                    .HasMaxLength(250)
                    .HasColumnName("street4");

                entity.Property(e => e.Street5)
                    .HasMaxLength(250)
                    .HasColumnName("street5");

                entity.Property(e => e.StreetConc)
                    .HasMaxLength(1500)
                    .HasColumnName("street_conc");
            });

            modelBuilder.Entity<LampDrspPosMerged>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lamp_drsp_pos_merged", "bak");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("account_manager");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("billto_district");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.BilltoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("billto_postal_code");

                entity.Property(e => e.BilltoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("billto_region");

                entity.Property(e => e.BilltoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street1");

                entity.Property(e => e.BilltoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street2");

                entity.Property(e => e.BilltoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street3");

                entity.Property(e => e.BilltoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street4");

                entity.Property(e => e.BilltoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street5");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .HasColumnName("claim_status");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("created_date");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_item");

                entity.Property(e => e.DistiCity)
                    .HasMaxLength(255)
                    .HasColumnName("disti_city");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("disti_postal_code");

                entity.Property(e => e.DistiRegion)
                    .HasMaxLength(255)
                    .HasColumnName("disti_region");

                entity.Property(e => e.DistiStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street1");

                entity.Property(e => e.DistiStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street2");

                entity.Property(e => e.DistiStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street3");

                entity.Property(e => e.DistiStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street4");

                entity.Property(e => e.EndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_city");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_postal_code");

                entity.Property(e => e.EndCustRegion)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_region");

                entity.Property(e => e.EndCustStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street1");

                entity.Property(e => e.EndCustStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street2");

                entity.Property(e => e.EndCustStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street3");

                entity.Property(e => e.EndCustStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street4");

                entity.Property(e => e.EndUserStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("end_user_street5");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.ProcessedFlag)
                    .HasMaxLength(50)
                    .HasColumnName("processed_flag");

                entity.Property(e => e.ReportedQty).HasColumnName("reported_qty");

                entity.Property(e => e.ResellerCity)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_city");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_postal_code");

                entity.Property(e => e.ResellerStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street1");

                entity.Property(e => e.ResellerStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street2");

                entity.Property(e => e.ResellerStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street3");

                entity.Property(e => e.ResellerStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street4");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SerialNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number_orig");

                entity.Property(e => e.ShiptoCity)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_city");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShiptoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_postal_code");

                entity.Property(e => e.ShiptoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_region");

                entity.Property(e => e.ShiptoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street1");

                entity.Property(e => e.ShiptoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street2");

                entity.Property(e => e.ShiptoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street3");

                entity.Property(e => e.ShiptoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street4");

                entity.Property(e => e.ShiptoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street5");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("so_number_orig");

                entity.Property(e => e.SoType)
                    .HasMaxLength(250)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoCity)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_city");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SoldtoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_postal_code");

                entity.Property(e => e.SoldtoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street1");

                entity.Property(e => e.SoldtoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street2");

                entity.Property(e => e.SoldtoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street3");

                entity.Property(e => e.SoldtoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street4");

                entity.Property(e => e.SoldtoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street5");

                entity.Property(e => e.SourceImportId).HasColumnName("source_import_id");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(250)
                    .HasColumnName("transaction_type");
            });

            modelBuilder.Entity<LampDrspPosMerged1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lamp_drsp_pos_merged");

                entity.HasIndex(e => new { e.SerialNumber, e.MaterialKey }, "lamp_drsp_pos_merged_ndx2");

                entity.HasIndex(e => e.PoType, "lamp_drsp_pos_merged_ndx3");

                entity.HasIndex(e => e.ResellerKey, "lamp_drsp_pos_merged_ndx4");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("account_manager");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("billto_district");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.BilltoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("billto_postal_code");

                entity.Property(e => e.BilltoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("billto_region");

                entity.Property(e => e.BilltoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street1");

                entity.Property(e => e.BilltoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street2");

                entity.Property(e => e.BilltoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street3");

                entity.Property(e => e.BilltoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street4");

                entity.Property(e => e.BilltoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street5");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .HasColumnName("claim_status");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("created_date");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_item");

                entity.Property(e => e.DistiCity)
                    .HasMaxLength(255)
                    .HasColumnName("disti_city");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("disti_postal_code");

                entity.Property(e => e.DistiRegion)
                    .HasMaxLength(255)
                    .HasColumnName("disti_region");

                entity.Property(e => e.DistiStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street1");

                entity.Property(e => e.DistiStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street2");

                entity.Property(e => e.DistiStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street3");

                entity.Property(e => e.DistiStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street4");

                entity.Property(e => e.EndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_city");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_postal_code");

                entity.Property(e => e.EndCustRegion)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_region");

                entity.Property(e => e.EndCustStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street1");

                entity.Property(e => e.EndCustStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street2");

                entity.Property(e => e.EndCustStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street3");

                entity.Property(e => e.EndCustStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street4");

                entity.Property(e => e.EndUserStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("end_user_street5");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.ProcessedFlag)
                    .HasMaxLength(50)
                    .HasColumnName("processed_flag");

                entity.Property(e => e.ReportedQty).HasColumnName("reported_qty");

                entity.Property(e => e.ResellerCity)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_city");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_postal_code");

                entity.Property(e => e.ResellerStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street1");

                entity.Property(e => e.ResellerStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street2");

                entity.Property(e => e.ResellerStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street3");

                entity.Property(e => e.ResellerStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street4");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SerialNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number_orig");

                entity.Property(e => e.ShiptoCity)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_city");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShiptoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_postal_code");

                entity.Property(e => e.ShiptoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_region");

                entity.Property(e => e.ShiptoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street1");

                entity.Property(e => e.ShiptoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street2");

                entity.Property(e => e.ShiptoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street3");

                entity.Property(e => e.ShiptoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street4");

                entity.Property(e => e.ShiptoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street5");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("so_number_orig");

                entity.Property(e => e.SoType)
                    .HasMaxLength(250)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoCity)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_city");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SoldtoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_postal_code");

                entity.Property(e => e.SoldtoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street1");

                entity.Property(e => e.SoldtoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street2");

                entity.Property(e => e.SoldtoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street3");

                entity.Property(e => e.SoldtoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street4");

                entity.Property(e => e.SoldtoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street5");

                entity.Property(e => e.SourceImportId).HasColumnName("source_import_id");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(250)
                    .HasColumnName("transaction_type");
            });

            modelBuilder.Entity<LampDrspPosMerged2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lamp_drsp_pos_merged", "dev");

                entity.HasIndex(e => e.Id, "lamp_merged_id");

                entity.HasIndex(e => e.SoNumber, "lamp_merged_ndx1");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("account_manager");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("billto_district");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.BilltoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("billto_postal_code");

                entity.Property(e => e.BilltoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("billto_region");

                entity.Property(e => e.BilltoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street1");

                entity.Property(e => e.BilltoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street2");

                entity.Property(e => e.BilltoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street3");

                entity.Property(e => e.BilltoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street4");

                entity.Property(e => e.BilltoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street5");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .HasColumnName("claim_status");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("created_date");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_item");

                entity.Property(e => e.DistiCity)
                    .HasMaxLength(255)
                    .HasColumnName("disti_city");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("disti_postal_code");

                entity.Property(e => e.DistiRegion)
                    .HasMaxLength(255)
                    .HasColumnName("disti_region");

                entity.Property(e => e.DistiStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street1");

                entity.Property(e => e.DistiStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street2");

                entity.Property(e => e.DistiStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street3");

                entity.Property(e => e.DistiStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street4");

                entity.Property(e => e.EndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_city");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_postal_code");

                entity.Property(e => e.EndCustRegion)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_region");

                entity.Property(e => e.EndCustStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street1");

                entity.Property(e => e.EndCustStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street2");

                entity.Property(e => e.EndCustStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street3");

                entity.Property(e => e.EndCustStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street4");

                entity.Property(e => e.EndUserStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("end_user_street5");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.ProcessedFlag)
                    .HasMaxLength(50)
                    .HasColumnName("processed_flag");

                entity.Property(e => e.ReportedQty).HasColumnName("reported_qty");

                entity.Property(e => e.ResellerCity)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_city");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_postal_code");

                entity.Property(e => e.ResellerStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street1");

                entity.Property(e => e.ResellerStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street2");

                entity.Property(e => e.ResellerStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street3");

                entity.Property(e => e.ResellerStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street4");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SerialNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number_orig");

                entity.Property(e => e.ShiptoCity)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_city");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShiptoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_postal_code");

                entity.Property(e => e.ShiptoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_region");

                entity.Property(e => e.ShiptoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street1");

                entity.Property(e => e.ShiptoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street2");

                entity.Property(e => e.ShiptoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street3");

                entity.Property(e => e.ShiptoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street4");

                entity.Property(e => e.ShiptoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street5");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("so_number_orig");

                entity.Property(e => e.SoType)
                    .HasMaxLength(250)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoCity)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_city");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SoldtoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_postal_code");

                entity.Property(e => e.SoldtoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street1");

                entity.Property(e => e.SoldtoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street2");

                entity.Property(e => e.SoldtoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street3");

                entity.Property(e => e.SoldtoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street4");

                entity.Property(e => e.SoldtoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street5");

                entity.Property(e => e.SourceImportId).HasColumnName("source_import_id");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(250)
                    .HasColumnName("transaction_type");
            });

            modelBuilder.Entity<LampDrspPosMerged20190130>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lamp_drsp_pos_merged_20190130", "bak");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("account_manager");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("billto_district");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.BilltoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("billto_postal_code");

                entity.Property(e => e.BilltoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("billto_region");

                entity.Property(e => e.BilltoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street1");

                entity.Property(e => e.BilltoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street2");

                entity.Property(e => e.BilltoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street3");

                entity.Property(e => e.BilltoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street4");

                entity.Property(e => e.BilltoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street5");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .HasColumnName("claim_status");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("created_date");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_item");

                entity.Property(e => e.DistiCity)
                    .HasMaxLength(255)
                    .HasColumnName("disti_city");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("disti_postal_code");

                entity.Property(e => e.DistiRegion)
                    .HasMaxLength(255)
                    .HasColumnName("disti_region");

                entity.Property(e => e.DistiStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street1");

                entity.Property(e => e.DistiStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street2");

                entity.Property(e => e.DistiStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street3");

                entity.Property(e => e.DistiStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street4");

                entity.Property(e => e.EndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_city");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_postal_code");

                entity.Property(e => e.EndCustRegion)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_region");

                entity.Property(e => e.EndCustStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street1");

                entity.Property(e => e.EndCustStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street2");

                entity.Property(e => e.EndCustStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street3");

                entity.Property(e => e.EndCustStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street4");

                entity.Property(e => e.EndUserStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("end_user_street5");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.ProcessedFlag)
                    .HasMaxLength(50)
                    .HasColumnName("processed_flag");

                entity.Property(e => e.ReportedQty).HasColumnName("reported_qty");

                entity.Property(e => e.ResellerCity)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_city");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_postal_code");

                entity.Property(e => e.ResellerStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street1");

                entity.Property(e => e.ResellerStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street2");

                entity.Property(e => e.ResellerStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street3");

                entity.Property(e => e.ResellerStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street4");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SerialNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number_orig");

                entity.Property(e => e.ShiptoCity)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_city");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShiptoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_postal_code");

                entity.Property(e => e.ShiptoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_region");

                entity.Property(e => e.ShiptoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street1");

                entity.Property(e => e.ShiptoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street2");

                entity.Property(e => e.ShiptoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street3");

                entity.Property(e => e.ShiptoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street4");

                entity.Property(e => e.ShiptoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street5");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("so_number_orig");

                entity.Property(e => e.SoType)
                    .HasMaxLength(250)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoCity)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_city");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SoldtoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_postal_code");

                entity.Property(e => e.SoldtoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street1");

                entity.Property(e => e.SoldtoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street2");

                entity.Property(e => e.SoldtoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street3");

                entity.Property(e => e.SoldtoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street4");

                entity.Property(e => e.SoldtoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street5");

                entity.Property(e => e.SourceImportId).HasColumnName("source_import_id");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(250)
                    .HasColumnName("transaction_type");
            });

            modelBuilder.Entity<LampDrspPosMergedStg>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lamp_drsp_pos_merged_stg");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("account_manager");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("billto_district");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.BilltoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("billto_postal_code");

                entity.Property(e => e.BilltoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("billto_region");

                entity.Property(e => e.BilltoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street1");

                entity.Property(e => e.BilltoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street2");

                entity.Property(e => e.BilltoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street3");

                entity.Property(e => e.BilltoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street4");

                entity.Property(e => e.BilltoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street5");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .HasColumnName("claim_status");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("created_date");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_item");

                entity.Property(e => e.DistiCity)
                    .HasMaxLength(255)
                    .HasColumnName("disti_city");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("disti_postal_code");

                entity.Property(e => e.DistiRegion)
                    .HasMaxLength(255)
                    .HasColumnName("disti_region");

                entity.Property(e => e.DistiStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street1");

                entity.Property(e => e.DistiStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street2");

                entity.Property(e => e.DistiStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street3");

                entity.Property(e => e.DistiStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street4");

                entity.Property(e => e.EndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_city");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_postal_code");

                entity.Property(e => e.EndCustRegion)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_region");

                entity.Property(e => e.EndCustStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street1");

                entity.Property(e => e.EndCustStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street2");

                entity.Property(e => e.EndCustStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street3");

                entity.Property(e => e.EndCustStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street4");

                entity.Property(e => e.EndUserStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("end_user_street5");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.ProcessedFlag)
                    .HasMaxLength(50)
                    .HasColumnName("processed_flag");

                entity.Property(e => e.ReportedQty).HasColumnName("reported_qty");

                entity.Property(e => e.ResellerCity)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_city");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_postal_code");

                entity.Property(e => e.ResellerStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street1");

                entity.Property(e => e.ResellerStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street2");

                entity.Property(e => e.ResellerStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street3");

                entity.Property(e => e.ResellerStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street4");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SerialNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number_orig");

                entity.Property(e => e.ShiptoCity)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_city");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShiptoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_postal_code");

                entity.Property(e => e.ShiptoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_region");

                entity.Property(e => e.ShiptoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street1");

                entity.Property(e => e.ShiptoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street2");

                entity.Property(e => e.ShiptoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street3");

                entity.Property(e => e.ShiptoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street4");

                entity.Property(e => e.ShiptoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street5");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("so_number_orig");

                entity.Property(e => e.SoType)
                    .HasMaxLength(250)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoCity)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_city");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SoldtoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_postal_code");

                entity.Property(e => e.SoldtoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street1");

                entity.Property(e => e.SoldtoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street2");

                entity.Property(e => e.SoldtoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street3");

                entity.Property(e => e.SoldtoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street4");

                entity.Property(e => e.SoldtoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street5");

                entity.Property(e => e.SourceImportId).HasColumnName("source_import_id");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(250)
                    .HasColumnName("transaction_type");
            });

            modelBuilder.Entity<LampDrspPosMergedStg1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lamp_drsp_pos_merged_stg", "stg");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("billto_district");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.BilltoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("billto_postal_code");

                entity.Property(e => e.BilltoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("billto_region");

                entity.Property(e => e.BilltoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street1");

                entity.Property(e => e.BilltoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street2");

                entity.Property(e => e.BilltoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street3");

                entity.Property(e => e.BilltoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street4");

                entity.Property(e => e.BilltoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street5");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .HasColumnName("claim_status");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("created_date");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_item");

                entity.Property(e => e.DistiCity)
                    .HasMaxLength(255)
                    .HasColumnName("disti_city");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("disti_postal_code");

                entity.Property(e => e.DistiRegion)
                    .HasMaxLength(255)
                    .HasColumnName("disti_region");

                entity.Property(e => e.DistiStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street1");

                entity.Property(e => e.DistiStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street2");

                entity.Property(e => e.DistiStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street3");

                entity.Property(e => e.DistiStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street4");

                entity.Property(e => e.EndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_city");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_postal_code");

                entity.Property(e => e.EndCustRegion)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_region");

                entity.Property(e => e.EndCustStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street1");

                entity.Property(e => e.EndCustStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street2");

                entity.Property(e => e.EndCustStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street3");

                entity.Property(e => e.EndCustStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street4");

                entity.Property(e => e.EndUserStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("end_user_street5");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.ProcessedFlag)
                    .HasMaxLength(50)
                    .HasColumnName("processed_flag");

                entity.Property(e => e.ReportedQty).HasColumnName("reported_qty");

                entity.Property(e => e.ResellerCity)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_city");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_postal_code");

                entity.Property(e => e.ResellerStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street1");

                entity.Property(e => e.ResellerStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street2");

                entity.Property(e => e.ResellerStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street3");

                entity.Property(e => e.ResellerStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street4");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.ShiptoCity)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_city");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShiptoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_postal_code");

                entity.Property(e => e.ShiptoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_region");

                entity.Property(e => e.ShiptoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street1");

                entity.Property(e => e.ShiptoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street2");

                entity.Property(e => e.ShiptoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street3");

                entity.Property(e => e.ShiptoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street4");

                entity.Property(e => e.ShiptoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street5");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoType)
                    .HasMaxLength(250)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoCity)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_city");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SoldtoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_postal_code");

                entity.Property(e => e.SoldtoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street1");

                entity.Property(e => e.SoldtoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street2");

                entity.Property(e => e.SoldtoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street3");

                entity.Property(e => e.SoldtoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street4");

                entity.Property(e => e.SoldtoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street5");

                entity.Property(e => e.SourceImportId).HasColumnName("source_import_id");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(250)
                    .HasColumnName("transaction_type");
            });

            modelBuilder.Entity<LampDrspPosSvcMerged>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lamp_drsp_pos_svc_merged", "dev");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("am_country_name");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("billto_district");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.BilltoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("billto_postal_code");

                entity.Property(e => e.BilltoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("billto_region");

                entity.Property(e => e.BilltoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street1");

                entity.Property(e => e.BilltoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street2");

                entity.Property(e => e.BilltoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street3");

                entity.Property(e => e.BilltoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street4");

                entity.Property(e => e.BilltoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street5");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .HasColumnName("claim_status");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("create_date");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_item");

                entity.Property(e => e.DiscPerc)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("disc_perc");

                entity.Property(e => e.DistiCity)
                    .HasMaxLength(255)
                    .HasColumnName("disti_city");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("disti_postal_code");

                entity.Property(e => e.DistiRegion)
                    .HasMaxLength(255)
                    .HasColumnName("disti_region");

                entity.Property(e => e.DistiStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street1");

                entity.Property(e => e.DistiStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street2");

                entity.Property(e => e.DistiStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street3");

                entity.Property(e => e.DistiStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street4");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(250)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.DrspPosId).HasColumnName("drsp_pos_id");

                entity.Property(e => e.EcSvcJaroScore).HasColumnName("ec_svc_jaro_score");

                entity.Property(e => e.EcSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_key_flag");

                entity.Property(e => e.EcSvcSamegidFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_samegid_flag");

                entity.Property(e => e.EcSvcSenzingScore).HasColumnName("ec_svc_senzing_score");

                entity.Property(e => e.EndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_city");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_postal_code");

                entity.Property(e => e.EndCustRegion)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_region");

                entity.Property(e => e.EndCustStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street1");

                entity.Property(e => e.EndCustStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street2");

                entity.Property(e => e.EndCustStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street3");

                entity.Property(e => e.EndCustStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street4");

                entity.Property(e => e.EndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("end_cust_theater");

                entity.Property(e => e.EndUserStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("end_user_street5");

                entity.Property(e => e.EntityExceptionFlag)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("entity_exception_flag");

                entity.Property(e => e.EntityRelatedFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("entity_related_flag");

                entity.Property(e => e.GlobalAcctScore).HasColumnName("global_acct_score");

                entity.Property(e => e.GmeFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("gme_flag");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.MspAcctScore).HasColumnName("msp_acct_score");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.ProcessedFlag)
                    .HasMaxLength(50)
                    .HasColumnName("processed_flag");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("quote_id");

                entity.Property(e => e.ReportedQty).HasColumnName("reported_qty");

                entity.Property(e => e.ResEcJaroScore).HasColumnName("res_ec_jaro_score");

                entity.Property(e => e.ResEcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_ec_key_flag");

                entity.Property(e => e.ResSvcEntityRelatedFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("res_svc_entity_related_flag");

                entity.Property(e => e.ResSvcJaroScore).HasColumnName("res_svc_jaro_score");

                entity.Property(e => e.ResSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_svc_key_flag");

                entity.Property(e => e.ResellerCity)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_city");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_postal_code");

                entity.Property(e => e.ResellerStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street1");

                entity.Property(e => e.ResellerStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street2");

                entity.Property(e => e.ResellerStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street3");

                entity.Property(e => e.ResellerStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street4");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.RmaNumber)
                    .HasMaxLength(50)
                    .HasColumnName("rma_number");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SerialNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number_orig");

                entity.Property(e => e.ShiptoCity)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_city");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShiptoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_postal_code");

                entity.Property(e => e.ShiptoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_region");

                entity.Property(e => e.ShiptoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street1");

                entity.Property(e => e.ShiptoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street2");

                entity.Property(e => e.ShiptoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street3");

                entity.Property(e => e.ShiptoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street4");

                entity.Property(e => e.ShiptoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street5");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("so_number_orig");

                entity.Property(e => e.SoType)
                    .HasMaxLength(250)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoCity)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_city");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SoldtoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_postal_code");

                entity.Property(e => e.SoldtoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street1");

                entity.Property(e => e.SoldtoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street2");

                entity.Property(e => e.SoldtoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street3");

                entity.Property(e => e.SoldtoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street4");

                entity.Property(e => e.SoldtoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street5");

                entity.Property(e => e.SourceImportId).HasColumnName("source_import_id");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.SvcBilltoCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("svc_billto_country_code");

                entity.Property(e => e.SvcBilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_billto_key");

                entity.Property(e => e.SvcBilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_billto_name");

                entity.Property(e => e.SvcContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_creation_date");

                entity.Property(e => e.SvcContractLineCreation)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_line_creation");

                entity.Property(e => e.SvcContractLineStatus)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_line_status");

                entity.Property(e => e.SvcContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_number");

                entity.Property(e => e.SvcContractStatus)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_status");

                entity.Property(e => e.SvcContractType)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_type");

                entity.Property(e => e.SvcCurrency)
                    .HasMaxLength(50)
                    .HasColumnName("svc_currency");

                entity.Property(e => e.SvcEndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_city");

                entity.Property(e => e.SvcEndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_country_code");

                entity.Property(e => e.SvcEndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_country_name");

                entity.Property(e => e.SvcEndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_key");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_name");

                entity.Property(e => e.SvcEndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_theater");

                entity.Property(e => e.SvcEndDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_end_date");

                entity.Property(e => e.SvcInstalledAtCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_country_code");

                entity.Property(e => e.SvcInstalledAtCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_installed_at_country_name");

                entity.Property(e => e.SvcInstalledAtDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_district");

                entity.Property(e => e.SvcInstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_installed_at_key");

                entity.Property(e => e.SvcInstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_name");

                entity.Property(e => e.SvcListValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_list_value");

                entity.Property(e => e.SvcMaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_desc");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcNetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_net_value");

                entity.Property(e => e.SvcPayerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_country");

                entity.Property(e => e.SvcPayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_payer_key");

                entity.Property(e => e.SvcPayerName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_name");

                entity.Property(e => e.SvcSalesOrder)
                    .HasMaxLength(50)
                    .HasColumnName("svc_sales_order");

                entity.Property(e => e.SvcStartDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_start_date");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(250)
                    .HasColumnName("transaction_type");
            });

            modelBuilder.Entity<LampEtlLog>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lamp_etl_log");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("created_date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Message)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("message");

                entity.Property(e => e.Process)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("process");

                entity.Property(e => e.ProgramExec)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("program_exec");

                entity.Property(e => e.RecordCnt).HasColumnName("record_cnt");

                entity.Property(e => e.Status)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("status");
            });

            modelBuilder.Entity<LampEtlLog1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lamp_etl_log", "dev");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("created_date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Message)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("message");

                entity.Property(e => e.Process)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("process");

                entity.Property(e => e.ProgramExec)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("program_exec");

                entity.Property(e => e.RecordCnt).HasColumnName("record_cnt");

                entity.Property(e => e.Status)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("status");
            });

            modelBuilder.Entity<LampGlobalAcct>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lamp_global_acct");

                entity.HasIndex(e => e.EntityKey, "lamp_global_acct_ndx1");

                entity.HasIndex(e => e.Parent, "lamp_global_acct_ndx2");

                entity.Property(e => e.AltGroup)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("alt_group");

                entity.Property(e => e.AltParent)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("alt_parent");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("created_date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.EntityKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("entity_key");

                entity.Property(e => e.FyList)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("fy_list");

                entity.Property(e => e.GMnDesignation)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("g_mn_designation");

                entity.Property(e => e.GamUserid)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("gam_userid");

                entity.Property(e => e.GlobalAcctManager)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("global_acct_manager");

                entity.Property(e => e.Group)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("group");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Parent)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("parent");

                entity.Property(e => e.ParentAcctVertical)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("parent_acct_vertical");

                entity.Property(e => e.Status)
                    .HasMaxLength(100)
                    .HasColumnName("status");

                entity.Property(e => e.Theater)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("theater");
            });

            modelBuilder.Entity<LampGlobalAcct1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lamp_global_acct", "stg");

                entity.Property(e => e.AltGroup)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("alt_group");

                entity.Property(e => e.AltParent)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("alt_parent");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("created_date");

                entity.Property(e => e.FyList)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("fy_list");

                entity.Property(e => e.GMnDesignation)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("g_mn_designation");

                entity.Property(e => e.GamUserid)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("gam_userid");

                entity.Property(e => e.GlobalAcctManager)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("global_acct_manager");

                entity.Property(e => e.Group)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("group");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Parent)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("parent");

                entity.Property(e => e.ParentAcctVertical)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("parent_acct_vertical");

                entity.Property(e => e.Status)
                    .HasMaxLength(100)
                    .HasColumnName("status");

                entity.Property(e => e.Theater)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("theater");
            });

            modelBuilder.Entity<LampGmeDataset>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lamp_gme_dataset", "stg");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("billto_district");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.BilltoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("billto_postal_code");

                entity.Property(e => e.BilltoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("billto_region");

                entity.Property(e => e.BilltoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street1");

                entity.Property(e => e.BilltoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street2");

                entity.Property(e => e.BilltoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street3");

                entity.Property(e => e.BilltoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street4");

                entity.Property(e => e.BilltoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street5");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .HasColumnName("claim_status");

                entity.Property(e => e.ContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("contract_creation_date");

                entity.Property(e => e.ContractItemNo).HasColumnName("contract_item_no");

                entity.Property(e => e.ContractLineItemStatus)
                    .HasMaxLength(50)
                    .HasColumnName("contract_line_item_status");

                entity.Property(e => e.ContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("contract_number");

                entity.Property(e => e.ContractStatus)
                    .HasMaxLength(250)
                    .HasColumnName("contract_status");

                entity.Property(e => e.ContractType)
                    .HasMaxLength(250)
                    .HasColumnName("contract_type");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("created_date");

                entity.Property(e => e.Currency)
                    .HasMaxLength(50)
                    .HasColumnName("currency");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_item");

                entity.Property(e => e.DistiCity)
                    .HasMaxLength(255)
                    .HasColumnName("disti_city");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("disti_postal_code");

                entity.Property(e => e.DistiRegion)
                    .HasMaxLength(255)
                    .HasColumnName("disti_region");

                entity.Property(e => e.DistiStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street1");

                entity.Property(e => e.DistiStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street2");

                entity.Property(e => e.DistiStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street3");

                entity.Property(e => e.DistiStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street4");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.EcSvcJaroScore).HasColumnName("ec_svc_jaro_score");

                entity.Property(e => e.EcSvcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("ec_svc_key_flag");

                entity.Property(e => e.EcSvcSenzingScore).HasColumnName("ec_svc_senzing_score");

                entity.Property(e => e.EndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_city");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("end_cust_country_name");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_postal_code");

                entity.Property(e => e.EndCustRegion)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_region");

                entity.Property(e => e.EndCustStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street1");

                entity.Property(e => e.EndCustStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street2");

                entity.Property(e => e.EndCustStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street3");

                entity.Property(e => e.EndCustStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street4");

                entity.Property(e => e.EndUserStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("end_user_street5");

                entity.Property(e => e.EntityExceptionFlag).HasColumnName("entity_exception_flag");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.InstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("installed_at_key");

                entity.Property(e => e.InstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("installed_at_name");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.NetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_value");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.ProcessedFlag)
                    .HasMaxLength(50)
                    .HasColumnName("processed_flag");

                entity.Property(e => e.ReportedQty).HasColumnName("reported_qty");

                entity.Property(e => e.ResEcJaroScore).HasColumnName("res_ec_jaro_score");

                entity.Property(e => e.ResEcKeyFlag)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("res_ec_key_flag");

                entity.Property(e => e.ResellerCity)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_city");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_postal_code");

                entity.Property(e => e.ResellerStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street1");

                entity.Property(e => e.ResellerStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street2");

                entity.Property(e => e.ResellerStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street3");

                entity.Property(e => e.ResellerStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street4");

                entity.Property(e => e.RmaNumber)
                    .HasMaxLength(50)
                    .HasColumnName("rma_number");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SerialNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number_orig");

                entity.Property(e => e.ServiceEndDate)
                    .HasColumnType("date")
                    .HasColumnName("service_end_date");

                entity.Property(e => e.ServiceStartDate)
                    .HasColumnType("date")
                    .HasColumnName("service_start_date");

                entity.Property(e => e.ShiptoCity)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_city");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShiptoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_postal_code");

                entity.Property(e => e.ShiptoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_region");

                entity.Property(e => e.ShiptoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street1");

                entity.Property(e => e.ShiptoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street2");

                entity.Property(e => e.ShiptoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street3");

                entity.Property(e => e.ShiptoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street4");

                entity.Property(e => e.ShiptoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street5");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("so_number_orig");

                entity.Property(e => e.SoType)
                    .HasMaxLength(250)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoCity)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_city");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SoldtoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_postal_code");

                entity.Property(e => e.SoldtoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street1");

                entity.Property(e => e.SoldtoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street2");

                entity.Property(e => e.SoldtoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street3");

                entity.Property(e => e.SoldtoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street4");

                entity.Property(e => e.SoldtoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street5");

                entity.Property(e => e.SourceImportId).HasColumnName("source_import_id");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.SvcEndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_country_code");

                entity.Property(e => e.SvcEndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_key");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_name");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(250)
                    .HasColumnName("transaction_type");
            });

            modelBuilder.Entity<LampMspAcct>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lamp_msp_acct");

                entity.HasIndex(e => e.SapId, "lamp_msp_acct_ndx1");

                entity.Property(e => e.AccountName)
                    .HasMaxLength(255)
                    .HasColumnName("account_name");

                entity.Property(e => e.Attribute1)
                    .HasMaxLength(255)
                    .HasColumnName("attribute1");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("created_date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SapId)
                    .HasMaxLength(50)
                    .HasColumnName("sap_id");

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .HasColumnName("status");
            });

            modelBuilder.Entity<LampNewUpdateValidation>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lamp_new_update_validation", "dev");

                entity.Property(e => e.AddressNo)
                    .HasMaxLength(50)
                    .HasColumnName("address_no");

                entity.Property(e => e.BpBillingHold)
                    .HasMaxLength(50)
                    .HasColumnName("bp_billing_hold");

                entity.Property(e => e.BpCategory)
                    .HasMaxLength(50)
                    .HasColumnName("bp_category");

                entity.Property(e => e.BpDeliveryHold)
                    .HasMaxLength(50)
                    .HasColumnName("bp_delivery_hold");

                entity.Property(e => e.BpExternalNo)
                    .HasMaxLength(50)
                    .HasColumnName("bp_external_no");

                entity.Property(e => e.BpGrouping)
                    .HasMaxLength(50)
                    .HasColumnName("bp_grouping");

                entity.Property(e => e.BpGuid)
                    .HasMaxLength(50)
                    .HasColumnName("bp_guid");

                entity.Property(e => e.BpRole)
                    .HasMaxLength(50)
                    .HasColumnName("bp_role");

                entity.Property(e => e.BpStatusCode)
                    .HasMaxLength(50)
                    .HasColumnName("bp_status_code");

                entity.Property(e => e.BpStatusDesc)
                    .HasMaxLength(50)
                    .HasColumnName("bp_status_desc");

                entity.Property(e => e.BpTransactionHold)
                    .HasMaxLength(50)
                    .HasColumnName("bp_transaction_hold");

                entity.Property(e => e.BpType)
                    .HasMaxLength(50)
                    .HasColumnName("bp_type");

                entity.Property(e => e.Bpid)
                    .HasMaxLength(50)
                    .HasColumnName("bpid");

                entity.Property(e => e.BuildingFloor)
                    .HasMaxLength(50)
                    .HasColumnName("building_floor");

                entity.Property(e => e.BuildingNo)
                    .HasMaxLength(50)
                    .HasColumnName("building_no");

                entity.Property(e => e.CentralArchiveFlag)
                    .HasMaxLength(50)
                    .HasColumnName("central_archive_flag");

                entity.Property(e => e.City)
                    .HasMaxLength(250)
                    .HasColumnName("city");

                entity.Property(e => e.ComplianceStatusCode)
                    .HasMaxLength(50)
                    .HasColumnName("compliance_status_code");

                entity.Property(e => e.ComplianceStatusDesc)
                    .HasMaxLength(50)
                    .HasColumnName("compliance_status_desc");

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("country_code");

                entity.Property(e => e.CountryGrp)
                    .HasMaxLength(50)
                    .HasColumnName("country_grp");

                entity.Property(e => e.CreatedAt)
                    .HasMaxLength(50)
                    .HasColumnName("created_at");

                entity.Property(e => e.CreatedOn).HasColumnName("created_on");

                entity.Property(e => e.Deleted)
                    .HasMaxLength(50)
                    .HasColumnName("deleted");

                entity.Property(e => e.District)
                    .HasMaxLength(250)
                    .HasColumnName("district");

                entity.Property(e => e.DistrictCode)
                    .HasMaxLength(250)
                    .HasColumnName("district_code");

                entity.Property(e => e.EdpCreated)
                    .HasMaxLength(50)
                    .HasColumnName("edp_created");

                entity.Property(e => e.EdpCreatedTxnId)
                    .HasMaxLength(50)
                    .HasColumnName("edp_created_txn_id");

                entity.Property(e => e.EdpLastUpdated)
                    .HasMaxLength(50)
                    .HasColumnName("edp_last_updated");

                entity.Property(e => e.EdpTxnId)
                    .HasMaxLength(50)
                    .HasColumnName("edp_txn_id");

                entity.Property(e => e.HouseNo)
                    .HasMaxLength(50)
                    .HasColumnName("house_no");

                entity.Property(e => e.IndustrySector)
                    .HasMaxLength(50)
                    .HasColumnName("industry_sector");

                entity.Property(e => e.IsPartnerConverted)
                    .HasMaxLength(50)
                    .HasColumnName("is_partner_converted");

                entity.Property(e => e.LastChangedAt)
                    .HasMaxLength(50)
                    .HasColumnName("last_changed_at");

                entity.Property(e => e.LastChangedOn).HasColumnName("last_changed_on");

                entity.Property(e => e.Name1)
                    .HasMaxLength(250)
                    .HasColumnName("name1");

                entity.Property(e => e.Name2)
                    .HasMaxLength(250)
                    .HasColumnName("name2");

                entity.Property(e => e.Name3)
                    .HasMaxLength(250)
                    .HasColumnName("name3");

                entity.Property(e => e.Name4)
                    .HasMaxLength(250)
                    .HasColumnName("name4");

                entity.Property(e => e.NameConc)
                    .HasMaxLength(1500)
                    .HasColumnName("name_conc");

                entity.Property(e => e.Postalcode)
                    .HasMaxLength(250)
                    .HasColumnName("postalcode");

                entity.Property(e => e.Region)
                    .HasMaxLength(250)
                    .HasColumnName("region");

                entity.Property(e => e.Street1)
                    .HasMaxLength(250)
                    .HasColumnName("street1");

                entity.Property(e => e.Street2)
                    .HasMaxLength(250)
                    .HasColumnName("street2");

                entity.Property(e => e.Street3)
                    .HasMaxLength(250)
                    .HasColumnName("street3");

                entity.Property(e => e.Street4)
                    .HasMaxLength(250)
                    .HasColumnName("street4");

                entity.Property(e => e.Street5)
                    .HasMaxLength(250)
                    .HasColumnName("street5");

                entity.Property(e => e.StreetConc)
                    .HasMaxLength(1500)
                    .HasColumnName("street_conc");
            });

            modelBuilder.Entity<LampPartnerHier>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lamp_partner_hier", "dev");

                entity.Property(e => e.AllianceNamePartner)
                    .HasMaxLength(250)
                    .HasColumnName("Alliance_Name__Partner_");

                entity.Property(e => e.AlliancePartner)
                    .HasMaxLength(50)
                    .HasColumnName("Alliance__Partner_");

                entity.Property(e => e.BusinessPartnerAccountTypeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Business_Partner___Account_Type__Key_");

                entity.Property(e => e.BusinessPartnerAcctClassKey)
                    .HasMaxLength(50)
                    .HasColumnName("Business_Partner___Acct_Class__Key_");

                entity.Property(e => e.FulfillmentPartnerFlag)
                    .HasMaxLength(50)
                    .HasColumnName("Fulfillment_Partner_Flag");

                entity.Property(e => e.ManagedPartner)
                    .HasMaxLength(50)
                    .HasColumnName("Managed_Partner");

                entity.Property(e => e.ManagedPartnerPlanList)
                    .HasMaxLength(50)
                    .HasColumnName("Managed_Partner__Plan_List_");

                entity.Property(e => e.Partner).HasMaxLength(250);

                entity.Property(e => e.PartnerCountry)
                    .HasMaxLength(50)
                    .HasColumnName("Partner_Country");

                entity.Property(e => e.PartnerCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("Partner_Country___Key");

                entity.Property(e => e.PartnerGeoTheater)
                    .HasMaxLength(50)
                    .HasColumnName("Partner_Geo_Theater");

                entity.Property(e => e.PartnerKey)
                    .HasMaxLength(50)
                    .HasColumnName("Partner___Key");

                entity.Property(e => e.PartnerLevel)
                    .HasMaxLength(50)
                    .HasColumnName("Partner_Level");

                entity.Property(e => e.PartnerParent)
                    .HasMaxLength(250)
                    .HasColumnName("Partner_Parent");

                entity.Property(e => e.PartnerParentKey)
                    .HasMaxLength(50)
                    .HasColumnName("Partner_Parent___Key");

                entity.Property(e => e.PartnerPostalCode)
                    .HasMaxLength(50)
                    .HasColumnName("Partner_Postal_Code");

                entity.Property(e => e.PartnerRegionKey)
                    .HasMaxLength(50)
                    .HasColumnName("Partner_Region___Key");

                entity.Property(e => e.PartnerType)
                    .HasMaxLength(50)
                    .HasColumnName("Partner_Type");

                entity.Property(e => e.PssPartner)
                    .HasMaxLength(250)
                    .HasColumnName("PSS_Partner");

                entity.Property(e => e.VarId)
                    .HasMaxLength(50)
                    .HasColumnName("VAR_ID");
            });

            modelBuilder.Entity<LampPartnerMaster>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lamp_partner_master", "dev");

                entity.Property(e => e.Accountgroup)
                    .HasMaxLength(50)
                    .HasColumnName("accountgroup");

                entity.Property(e => e.Bpid)
                    .HasMaxLength(50)
                    .HasColumnName("bpid");

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(20)
                    .HasColumnName("country_code");

                entity.Property(e => e.NameConc)
                    .HasMaxLength(500)
                    .HasColumnName("name_conc");

                entity.Property(e => e.Resellerrole)
                    .HasMaxLength(50)
                    .HasColumnName("resellerrole");

                entity.Property(e => e.VarId)
                    .HasMaxLength(255)
                    .HasColumnName("var_id");
            });

            modelBuilder.Entity<LampPo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lamp_pos");

                entity.HasIndex(e => e.ImportId, "lamp_pos_ndx1");

                entity.HasIndex(e => e.ItemNumber, "lamp_pos_ndx2");

                entity.HasIndex(e => e.SerialNumber, "lamp_pos_ndx3");

                entity.HasIndex(e => e.ItemCreatedDate, "lamp_pos_ndx4");

                entity.Property(e => e.BilltoPartyCountry)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_country");

                entity.Property(e => e.BilltoPartyDistrict)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_district");

                entity.Property(e => e.BilltoPartyKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_key");

                entity.Property(e => e.BilltoPartyName)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_name");

                entity.Property(e => e.BilltoPartyPostalCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_postal_code");

                entity.Property(e => e.BilltoPartyRegion)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_region");

                entity.Property(e => e.BilltoPartyStreet1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_street1");

                entity.Property(e => e.BilltoPartyStreet2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_street2");

                entity.Property(e => e.BilltoPartyStreet3)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_street3");

                entity.Property(e => e.BilltoPartyStreet4)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_street4");

                entity.Property(e => e.ChannelPartnerKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("channel_partner_key");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("claim_status");

                entity.Property(e => e.DedupId).HasColumnName("dedup_id");

                entity.Property(e => e.DistiCountry)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_country");

                entity.Property(e => e.DistiDistrict)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_district");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiPostalCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_postal_code");

                entity.Property(e => e.DistiRegion)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_region");

                entity.Property(e => e.DistiSales)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_sales");

                entity.Property(e => e.DistiStreet1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_street1");

                entity.Property(e => e.DistiStreet2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_street2");

                entity.Property(e => e.DistiStreet3)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_street3");

                entity.Property(e => e.DistiStreet4)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_street4");

                entity.Property(e => e.DocOrderNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("doc_order_number");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustDistrict)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_district");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustPoNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_po_number");

                entity.Property(e => e.EndCustPostalCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_postal_code");

                entity.Property(e => e.EndCustRegion)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_region");

                entity.Property(e => e.EndCustStreet1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_street1");

                entity.Property(e => e.EndCustStreet2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_street2");

                entity.Property(e => e.EndCustStreet3)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_street3");

                entity.Property(e => e.EndCustStreet4)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_street4");

                entity.Property(e => e.ImportDate)
                    .HasColumnType("datetime")
                    .HasColumnName("import_date");

                entity.Property(e => e.ImportId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("import_id");

                entity.Property(e => e.ImportStatus)
                    .HasMaxLength(255)
                    .HasColumnName("import_status");

                entity.Property(e => e.ItemCreatedDate)
                    .HasColumnType("date")
                    .HasColumnName("item_created_date");

                entity.Property(e => e.ItemNumber).HasColumnName("item_number");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.Material)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material");

                entity.Property(e => e.MaterialEccn)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material_eccn");

                entity.Property(e => e.MaterialHts)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material_hts");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material_key");

                entity.Property(e => e.MaterialProductCat)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material_product_cat");

                entity.Property(e => e.MaterialType)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material_type");

                entity.Property(e => e.MaterialTypeKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material_type_key");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.NpSerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("np_serial_number");

                entity.Property(e => e.ReportedQty)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reported_qty");

                entity.Property(e => e.ResaleShipDate)
                    .HasColumnType("date")
                    .HasColumnName("resale_ship_date");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerDistrict)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_district");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerPoNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_po_number");

                entity.Property(e => e.ResellerPostalCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_postal_code");

                entity.Property(e => e.ResellerStreet1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_street1");

                entity.Property(e => e.ResellerStreet2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_street2");

                entity.Property(e => e.ResellerStreet3)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_street3");

                entity.Property(e => e.ResellerStreet4)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_street4");

                entity.Property(e => e.SdContractNumber)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("sd_contract_number");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("so_number");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionQty)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("transaction_qty");

                entity.Property(e => e.TransmissionNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("transmission_number");
            });

            modelBuilder.Entity<LampPos20190131>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lamp_pos_20190131", "stg");

                entity.Property(e => e.BilltoPartyCountry)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_country");

                entity.Property(e => e.BilltoPartyDistrict)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_district");

                entity.Property(e => e.BilltoPartyKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_key");

                entity.Property(e => e.BilltoPartyName)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_name");

                entity.Property(e => e.BilltoPartyPostalCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_postal_code");

                entity.Property(e => e.BilltoPartyRegion)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_region");

                entity.Property(e => e.BilltoPartyStreet1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_street1");

                entity.Property(e => e.BilltoPartyStreet2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_street2");

                entity.Property(e => e.BilltoPartyStreet3)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_street3");

                entity.Property(e => e.BilltoPartyStreet4)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_street4");

                entity.Property(e => e.ChannelPartnerKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("channel_partner_key");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("claim_status");

                entity.Property(e => e.DistiCountry)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_country");

                entity.Property(e => e.DistiDistrict)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_district");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiPostalCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_postal_code");

                entity.Property(e => e.DistiRegion)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_region");

                entity.Property(e => e.DistiSales)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_sales");

                entity.Property(e => e.DistiStreet1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_street1");

                entity.Property(e => e.DistiStreet2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_street2");

                entity.Property(e => e.DistiStreet3)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_street3");

                entity.Property(e => e.DistiStreet4)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_street4");

                entity.Property(e => e.DocOrderNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("doc_order_number");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustDistrict)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_district");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustPoNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_po_number");

                entity.Property(e => e.EndCustPostalCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_postal_code");

                entity.Property(e => e.EndCustRegion)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_region");

                entity.Property(e => e.EndCustStreet1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_street1");

                entity.Property(e => e.EndCustStreet2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_street2");

                entity.Property(e => e.EndCustStreet3)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_street3");

                entity.Property(e => e.EndCustStreet4)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_street4");

                entity.Property(e => e.ImportId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("import_id");

                entity.Property(e => e.ItemCreatedDate)
                    .HasColumnType("date")
                    .HasColumnName("item_created_date");

                entity.Property(e => e.ItemNumber).HasColumnName("item_number");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.Material)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material");

                entity.Property(e => e.MaterialEccn)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material_eccn");

                entity.Property(e => e.MaterialHts)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material_hts");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material_key");

                entity.Property(e => e.MaterialProductCat)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material_product_cat");

                entity.Property(e => e.MaterialType)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material_type");

                entity.Property(e => e.MaterialTypeKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material_type_key");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.NpSerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("np_serial_number");

                entity.Property(e => e.ReportedQty)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reported_qty");

                entity.Property(e => e.ResaleShipDate)
                    .HasColumnType("date")
                    .HasColumnName("resale_ship_date");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerDistrict)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_district");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerPoNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_po_number");

                entity.Property(e => e.ResellerPostalCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_postal_code");

                entity.Property(e => e.ResellerStreet1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_street1");

                entity.Property(e => e.ResellerStreet2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_street2");

                entity.Property(e => e.ResellerStreet3)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_street3");

                entity.Property(e => e.ResellerStreet4)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_street4");

                entity.Property(e => e.SdContractNumber)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("sd_contract_number");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("so_number");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionQty)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("transaction_qty");

                entity.Property(e => e.TransmissionNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("transmission_number");
            });

            modelBuilder.Entity<LampPos2snow>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lamp_pos_2snow", "dev");

                entity.Property(e => e.BilltoPartyCountry)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_country");

                entity.Property(e => e.BilltoPartyDistrict)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_district");

                entity.Property(e => e.BilltoPartyKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_key");

                entity.Property(e => e.BilltoPartyName)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_name");

                entity.Property(e => e.BilltoPartyPostalCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_postal_code");

                entity.Property(e => e.BilltoPartyRegion)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_region");

                entity.Property(e => e.BilltoPartyStreet1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_street1");

                entity.Property(e => e.BilltoPartyStreet2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_street2");

                entity.Property(e => e.BilltoPartyStreet3)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_street3");

                entity.Property(e => e.BilltoPartyStreet4)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_street4");

                entity.Property(e => e.ChannelPartnerKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("channel_partner_key");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("claim_status");

                entity.Property(e => e.DistiCountry)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_country");

                entity.Property(e => e.DistiDistrict)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_district");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiPostalCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_postal_code");

                entity.Property(e => e.DistiRegion)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_region");

                entity.Property(e => e.DistiSales)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_sales");

                entity.Property(e => e.DistiStreet1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_street1");

                entity.Property(e => e.DistiStreet2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_street2");

                entity.Property(e => e.DistiStreet3)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_street3");

                entity.Property(e => e.DistiStreet4)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_street4");

                entity.Property(e => e.DocOrderNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("doc_order_number");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustDistrict)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_district");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustPoNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_po_number");

                entity.Property(e => e.EndCustPostalCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_postal_code");

                entity.Property(e => e.EndCustRegion)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_region");

                entity.Property(e => e.EndCustStreet1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_street1");

                entity.Property(e => e.EndCustStreet2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_street2");

                entity.Property(e => e.EndCustStreet3)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_street3");

                entity.Property(e => e.EndCustStreet4)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_street4");

                entity.Property(e => e.ImportId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("import_id");

                entity.Property(e => e.ItemCreatedDate)
                    .HasColumnType("date")
                    .HasColumnName("item_created_date");

                entity.Property(e => e.ItemNumber).HasColumnName("item_number");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.Material)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material");

                entity.Property(e => e.MaterialEccn)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material_eccn");

                entity.Property(e => e.MaterialHts)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material_hts");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material_key");

                entity.Property(e => e.MaterialProductCat)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material_product_cat");

                entity.Property(e => e.MaterialType)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material_type");

                entity.Property(e => e.MaterialTypeKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material_type_key");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.NpSerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("np_serial_number");

                entity.Property(e => e.ReportedQty)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reported_qty");

                entity.Property(e => e.ResaleShipDate)
                    .HasColumnType("date")
                    .HasColumnName("resale_ship_date");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerDistrict)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_district");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerPoNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_po_number");

                entity.Property(e => e.ResellerPostalCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_postal_code");

                entity.Property(e => e.ResellerStreet1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_street1");

                entity.Property(e => e.ResellerStreet2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_street2");

                entity.Property(e => e.ResellerStreet3)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_street3");

                entity.Property(e => e.ResellerStreet4)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_street4");

                entity.Property(e => e.SdContractNumber)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("sd_contract_number");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("so_number");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionQty)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("transaction_qty");

                entity.Property(e => e.TransmissionNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("transmission_number");
            });

            modelBuilder.Entity<LampPosStg>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lamp_pos_stg", "stg");

                entity.Property(e => e.BilltoPartyCountry)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_country");

                entity.Property(e => e.BilltoPartyDistrict)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_district");

                entity.Property(e => e.BilltoPartyKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_key");

                entity.Property(e => e.BilltoPartyName)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_name");

                entity.Property(e => e.BilltoPartyPostalCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_postal_code");

                entity.Property(e => e.BilltoPartyRegion)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_region");

                entity.Property(e => e.BilltoPartyStreet1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_street1");

                entity.Property(e => e.BilltoPartyStreet2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_street2");

                entity.Property(e => e.BilltoPartyStreet3)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_street3");

                entity.Property(e => e.BilltoPartyStreet4)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_street4");

                entity.Property(e => e.ChannelPartnerKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("channel_partner_key");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("claim_status");

                entity.Property(e => e.DedupId).HasColumnName("dedup_id");

                entity.Property(e => e.DistiCountry)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_country");

                entity.Property(e => e.DistiDistrict)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_district");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiPostalCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_postal_code");

                entity.Property(e => e.DistiRegion)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_region");

                entity.Property(e => e.DistiSales)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_sales");

                entity.Property(e => e.DistiStreet1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_street1");

                entity.Property(e => e.DistiStreet2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_street2");

                entity.Property(e => e.DistiStreet3)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_street3");

                entity.Property(e => e.DistiStreet4)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_street4");

                entity.Property(e => e.DocOrderNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("doc_order_number");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustDistrict)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_district");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustPoNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_po_number");

                entity.Property(e => e.EndCustPostalCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_postal_code");

                entity.Property(e => e.EndCustRegion)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_region");

                entity.Property(e => e.EndCustStreet1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_street1");

                entity.Property(e => e.EndCustStreet2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_street2");

                entity.Property(e => e.EndCustStreet3)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_street3");

                entity.Property(e => e.EndCustStreet4)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_street4");

                entity.Property(e => e.ImportDate)
                    .HasColumnType("datetime")
                    .HasColumnName("import_date");

                entity.Property(e => e.ImportId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("import_id");

                entity.Property(e => e.ImportStatus)
                    .HasMaxLength(255)
                    .HasColumnName("import_status");

                entity.Property(e => e.ItemCreatedDate)
                    .HasColumnType("date")
                    .HasColumnName("item_created_date");

                entity.Property(e => e.ItemNumber).HasColumnName("item_number");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.Material)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material");

                entity.Property(e => e.MaterialEccn)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material_eccn");

                entity.Property(e => e.MaterialHts)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material_hts");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material_key");

                entity.Property(e => e.MaterialProductCat)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material_product_cat");

                entity.Property(e => e.MaterialType)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material_type");

                entity.Property(e => e.MaterialTypeKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material_type_key");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.NpSerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("np_serial_number");

                entity.Property(e => e.ReportedQty)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reported_qty");

                entity.Property(e => e.ResaleShipDate)
                    .HasColumnType("date")
                    .HasColumnName("resale_ship_date");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerDistrict)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_district");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerPoNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_po_number");

                entity.Property(e => e.ResellerPostalCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_postal_code");

                entity.Property(e => e.ResellerStreet1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_street1");

                entity.Property(e => e.ResellerStreet2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_street2");

                entity.Property(e => e.ResellerStreet3)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_street3");

                entity.Property(e => e.ResellerStreet4)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_street4");

                entity.Property(e => e.SdContractNumber)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("sd_contract_number");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("so_number");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionQty)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("transaction_qty");

                entity.Property(e => e.TransmissionNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("transmission_number");
            });

            modelBuilder.Entity<LampProductMaster>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lamp_product_master");

                entity.HasIndex(e => e.ProductId, "lamp_product_master_pid");

                entity.Property(e => e.EolDate)
                    .HasColumnType("date")
                    .HasColumnName("eol_date");

                entity.Property(e => e.EolIndicator)
                    .HasMaxLength(10)
                    .HasColumnName("eol_indicator");

                entity.Property(e => e.EosDate)
                    .HasColumnType("date")
                    .HasColumnName("eos_date");

                entity.Property(e => e.EosIndicator)
                    .HasMaxLength(10)
                    .HasColumnName("eos_indicator");

                entity.Property(e => e.HsnCode)
                    .HasMaxLength(50)
                    .HasColumnName("hsn_code");

                entity.Property(e => e.HsnDescription)
                    .HasMaxLength(255)
                    .HasColumnName("hsn_description");

                entity.Property(e => e.OverLengthPartNumber)
                    .HasMaxLength(255)
                    .HasColumnName("over_length_part_number");

                entity.Property(e => e.ProdDimensions)
                    .HasMaxLength(50)
                    .HasColumnName("prod_dimensions");

                entity.Property(e => e.ProdGrossWeight)
                    .HasMaxLength(50)
                    .HasColumnName("prod_gross_weight");

                entity.Property(e => e.ProdHeight)
                    .HasMaxLength(50)
                    .HasColumnName("prod_height");

                entity.Property(e => e.ProdLength)
                    .HasMaxLength(50)
                    .HasColumnName("prod_length");

                entity.Property(e => e.ProdNetWeight)
                    .HasMaxLength(50)
                    .HasColumnName("prod_net_weight");

                entity.Property(e => e.ProdWidth)
                    .HasMaxLength(50)
                    .HasColumnName("prod_width");

                entity.Property(e => e.ProductCategory)
                    .HasMaxLength(255)
                    .HasColumnName("product_category");

                entity.Property(e => e.ProductCreatedDate)
                    .HasColumnType("date")
                    .HasColumnName("product_created_date");

                entity.Property(e => e.ProductFamily)
                    .HasMaxLength(255)
                    .HasColumnName("product_family");

                entity.Property(e => e.ProductId)
                    .HasMaxLength(50)
                    .HasColumnName("product_id");

                entity.Property(e => e.ProductLine)
                    .HasMaxLength(255)
                    .HasColumnName("product_line");

                entity.Property(e => e.ProductLongDesc)
                    .HasMaxLength(255)
                    .HasColumnName("product_long_desc");

                entity.Property(e => e.ProductReleaseStatus)
                    .HasMaxLength(255)
                    .HasColumnName("product_release_status");

                entity.Property(e => e.ProductShortDesc)
                    .HasMaxLength(255)
                    .HasColumnName("product_short_desc");

                entity.Property(e => e.ProductType)
                    .HasMaxLength(50)
                    .HasColumnName("product_type");

                entity.Property(e => e.ProductTypeCode)
                    .HasMaxLength(50)
                    .HasColumnName("product_type_code");

                entity.Property(e => e.ProductTypeDescription)
                    .HasMaxLength(255)
                    .HasColumnName("product_type_description");

                entity.Property(e => e.ProductTypeText)
                    .HasMaxLength(255)
                    .HasColumnName("product_type_text");

                entity.Property(e => e.ServiceEligible)
                    .HasMaxLength(50)
                    .HasColumnName("service_eligible");

                entity.Property(e => e.Uom)
                    .HasMaxLength(50)
                    .HasColumnName("uom");

                entity.Property(e => e.UsHts)
                    .HasMaxLength(50)
                    .HasColumnName("us_hts");

                entity.Property(e => e.ZCcats)
                    .HasMaxLength(50)
                    .HasColumnName("z_ccats");

                entity.Property(e => e.ZEuEccn)
                    .HasMaxLength(50)
                    .HasColumnName("z_eu_eccn");

                entity.Property(e => e.ZMCcats)
                    .HasMaxLength(50)
                    .HasColumnName("z_m_ccats");

                entity.Property(e => e.ZNlHts)
                    .HasMaxLength(50)
                    .HasColumnName("z_nl_hts");

                entity.Property(e => e.ZUsEccn)
                    .HasMaxLength(50)
                    .HasColumnName("z_us_eccn");
            });

            modelBuilder.Entity<LampProductMasterBak>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lamp_product_master_bak", "bak");

                entity.Property(e => e.Dimensions)
                    .HasMaxLength(50)
                    .HasColumnName("dimensions");

                entity.Property(e => e.EolDate)
                    .HasColumnType("date")
                    .HasColumnName("eol_date");

                entity.Property(e => e.EolIndicator)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("eol_indicator");

                entity.Property(e => e.EosDate)
                    .HasColumnType("date")
                    .HasColumnName("eos_date");

                entity.Property(e => e.EosIndicator)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("eos_indicator");

                entity.Property(e => e.GrossWeight)
                    .HasMaxLength(50)
                    .HasColumnName("gross_weight");

                entity.Property(e => e.Height)
                    .HasMaxLength(50)
                    .HasColumnName("height");

                entity.Property(e => e.Length)
                    .HasMaxLength(50)
                    .HasColumnName("length");

                entity.Property(e => e.MaterialProductFamily)
                    .HasMaxLength(150)
                    .HasColumnName("material_product_family");

                entity.Property(e => e.MaterialType)
                    .HasMaxLength(150)
                    .HasColumnName("material_type");

                entity.Property(e => e.MaterialTypeDescription)
                    .HasMaxLength(150)
                    .HasColumnName("material_type_description");

                entity.Property(e => e.NetWeight)
                    .HasMaxLength(50)
                    .HasColumnName("net_weight");

                entity.Property(e => e.OverLengthPartNumber)
                    .HasMaxLength(50)
                    .HasColumnName("over_length_part_number");

                entity.Property(e => e.ProductCreatedDate)
                    .HasColumnType("date")
                    .HasColumnName("product_created_date");

                entity.Property(e => e.ProductDescription)
                    .HasMaxLength(250)
                    .HasColumnName("product_description");

                entity.Property(e => e.ProductId)
                    .HasMaxLength(150)
                    .HasColumnName("product_id");

                entity.Property(e => e.ProductReleaseStatus)
                    .HasMaxLength(50)
                    .HasColumnName("product_release_status");

                entity.Property(e => e.Uom)
                    .HasMaxLength(50)
                    .HasColumnName("uom");

                entity.Property(e => e.UsHts)
                    .HasMaxLength(50)
                    .HasColumnName("us_hts");

                entity.Property(e => e.Width)
                    .HasMaxLength(50)
                    .HasColumnName("width");

                entity.Property(e => e.ZCcats)
                    .HasMaxLength(50)
                    .HasColumnName("z_ccats");

                entity.Property(e => e.ZEuEccn)
                    .HasMaxLength(50)
                    .HasColumnName("z_eu_eccn");

                entity.Property(e => e.ZMCcats)
                    .HasMaxLength(10)
                    .HasColumnName("z_m_ccats");

                entity.Property(e => e.ZNlHts)
                    .HasMaxLength(10)
                    .HasColumnName("z_nl_hts");

                entity.Property(e => e.ZUsEccn)
                    .HasMaxLength(50)
                    .HasColumnName("z_us_eccn");
            });

            modelBuilder.Entity<LampProfileLog>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lamp_profile_log");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("created_date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.IgnoredCnt).HasColumnName("ignored_cnt");

                entity.Property(e => e.Notes)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("notes");

                entity.Property(e => e.ProfileNewCnt).HasColumnName("profile_new_cnt");

                entity.Property(e => e.ProfileUpdatedCnt).HasColumnName("profile_updated_cnt");

                entity.Property(e => e.TotIncrCustCnt).HasColumnName("tot_incr_cust_cnt");

                entity.Property(e => e.TotProfileProcessedCnt).HasColumnName("tot_profile_processed_cnt");
            });

            modelBuilder.Entity<LampProfileLog20181107>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lamp_profile_log_20181107", "bak");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("created_date");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.IgnoredCnt).HasColumnName("ignored_cnt");

                entity.Property(e => e.Notes)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("notes");

                entity.Property(e => e.ProfileNewCnt).HasColumnName("profile_new_cnt");

                entity.Property(e => e.ProfileUpdatedCnt).HasColumnName("profile_updated_cnt");

                entity.Property(e => e.TotIncrCustCnt).HasColumnName("tot_incr_cust_cnt");

                entity.Property(e => e.TotProfileProcessedCnt).HasColumnName("tot_profile_processed_cnt");
            });

            modelBuilder.Entity<LampReport>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lamp_report");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("created_date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Description)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("description");

                entity.Property(e => e.DisplaySeq).HasColumnName("display_seq");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Note)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("note");

                entity.Property(e => e.Report)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("report");

                entity.Property(e => e.ReportGroup)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("report_group");

                entity.Property(e => e.ReportLink)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("report_link");

                entity.Property(e => e.ReportType)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("report_type");

                entity.Property(e => e.Status)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("status");
            });

            modelBuilder.Entity<LampRma>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lamp_rma");

                entity.HasIndex(e => e.ImportId, "lamp_rma_ndx1");

                entity.HasIndex(e => e.DefectSerialNo, "lamp_rma_ndx2");

                entity.HasIndex(e => e.ReplaceSerialNo, "lamp_rma_ndx3");

                entity.Property(e => e.AssociatedContactCity)
                    .HasMaxLength(250)
                    .HasColumnName("associated_contact_city");

                entity.Property(e => e.AssociatedContactCountry)
                    .HasMaxLength(250)
                    .HasColumnName("associated_contact_country");

                entity.Property(e => e.AssociatedContactCountryCode)
                    .HasMaxLength(250)
                    .HasColumnName("associated_contact_country_code");

                entity.Property(e => e.AssociatedContactKey)
                    .HasMaxLength(250)
                    .HasColumnName("associated_contact_key");

                entity.Property(e => e.AssociatedContactName)
                    .HasMaxLength(250)
                    .HasColumnName("associated_contact_name");

                entity.Property(e => e.AssociatedContactPostalCode)
                    .HasMaxLength(250)
                    .HasColumnName("associated_contact_postal_code");

                entity.Property(e => e.AssociatedContactRegion)
                    .HasMaxLength(250)
                    .HasColumnName("associated_contact_region");

                entity.Property(e => e.AssociatedContactStreet1)
                    .HasMaxLength(250)
                    .HasColumnName("associated_contact_street1");

                entity.Property(e => e.AssociatedContactStreet2)
                    .HasMaxLength(250)
                    .HasColumnName("associated_contact_street2");

                entity.Property(e => e.AssociatedContactStreet3)
                    .HasMaxLength(250)
                    .HasColumnName("associated_contact_street3");

                entity.Property(e => e.AssociatedContactStreet4)
                    .HasMaxLength(250)
                    .HasColumnName("associated_contact_street4");

                entity.Property(e => e.BilltoPartyKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_party_key");

                entity.Property(e => e.ComplaintsNo)
                    .HasMaxLength(50)
                    .HasColumnName("complaints_no");

                entity.Property(e => e.Coo)
                    .HasMaxLength(250)
                    .HasColumnName("coo");

                entity.Property(e => e.CustomsDeclCreateDt)
                    .HasMaxLength(250)
                    .HasColumnName("customs_decl_create_dt");

                entity.Property(e => e.CustomsDeclarationNo)
                    .HasMaxLength(250)
                    .HasColumnName("customs_declaration_no");

                entity.Property(e => e.CustomsValuation)
                    .HasMaxLength(250)
                    .HasColumnName("customs_valuation");

                entity.Property(e => e.DefectProductId)
                    .HasMaxLength(250)
                    .HasColumnName("defect_product_id");

                entity.Property(e => e.DefectProductIdEccnKey)
                    .HasMaxLength(250)
                    .HasColumnName("defect_product_id_eccn_key");

                entity.Property(e => e.DefectProductIdHtsKey)
                    .HasMaxLength(250)
                    .HasColumnName("defect_product_id_hts_key");

                entity.Property(e => e.DefectProductIdKey)
                    .HasMaxLength(250)
                    .HasColumnName("defect_product_id_key");

                entity.Property(e => e.DefectProductIdOverLengthPartNumKey)
                    .HasMaxLength(250)
                    .HasColumnName("defect_product_id_over_length_part_num_key");

                entity.Property(e => e.DefectSerialNo)
                    .HasMaxLength(50)
                    .HasColumnName("defect_serial_no");

                entity.Property(e => e.DeliveryCreateDate)
                    .HasColumnType("date")
                    .HasColumnName("delivery_create_date");

                entity.Property(e => e.DeliveryNumber)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_number");

                entity.Property(e => e.EndCustomerCity)
                    .HasMaxLength(250)
                    .HasColumnName("end_customer_city");

                entity.Property(e => e.EndCustomerCountry)
                    .HasMaxLength(250)
                    .HasColumnName("end_customer_country");

                entity.Property(e => e.EndCustomerCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("end_customer_country_code");

                entity.Property(e => e.EndCustomerKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_customer_key");

                entity.Property(e => e.EndCustomerName)
                    .HasMaxLength(250)
                    .HasColumnName("end_customer_name");

                entity.Property(e => e.EndCustomerPostalCode)
                    .HasMaxLength(250)
                    .HasColumnName("end_customer_postal_code");

                entity.Property(e => e.EndCustomerRegion)
                    .HasMaxLength(250)
                    .HasColumnName("end_customer_region");

                entity.Property(e => e.EndCustomerStreet1)
                    .HasMaxLength(250)
                    .HasColumnName("end_customer_street1");

                entity.Property(e => e.EndCustomerStreet2)
                    .HasMaxLength(250)
                    .HasColumnName("end_customer_street2");

                entity.Property(e => e.EndCustomerStreet3)
                    .HasMaxLength(250)
                    .HasColumnName("end_customer_street3");

                entity.Property(e => e.EndCustomerStreet4)
                    .HasMaxLength(250)
                    .HasColumnName("end_customer_street4");

                entity.Property(e => e.ExporterAddr)
                    .HasMaxLength(250)
                    .HasColumnName("exporter_addr");

                entity.Property(e => e.ExporterAddr1)
                    .HasMaxLength(250)
                    .HasColumnName("exporter_addr1");

                entity.Property(e => e.ExporterAddr2)
                    .HasMaxLength(250)
                    .HasColumnName("exporter_addr2");

                entity.Property(e => e.ExporterCity)
                    .HasMaxLength(250)
                    .HasColumnName("exporter_city");

                entity.Property(e => e.ExporterCountry)
                    .HasMaxLength(250)
                    .HasColumnName("exporter_country");

                entity.Property(e => e.ExporterKey)
                    .HasMaxLength(250)
                    .HasColumnName("exporter_key");

                entity.Property(e => e.ExtLicence)
                    .HasMaxLength(250)
                    .HasColumnName("ext_licence");

                entity.Property(e => e.GoodsSupplier)
                    .HasMaxLength(250)
                    .HasColumnName("goods_supplier");

                entity.Property(e => e.GoodsSupplierKey)
                    .HasMaxLength(250)
                    .HasColumnName("goods_supplier_key");

                entity.Property(e => e.GtsBillto)
                    .HasMaxLength(250)
                    .HasColumnName("gts_billto");

                entity.Property(e => e.GtsBilltoAddr)
                    .HasMaxLength(250)
                    .HasColumnName("gts_billto_addr");

                entity.Property(e => e.GtsBilltoAddr1)
                    .HasMaxLength(250)
                    .HasColumnName("gts_billto_addr1");

                entity.Property(e => e.GtsBilltoAddr2)
                    .HasMaxLength(250)
                    .HasColumnName("gts_billto_addr2");

                entity.Property(e => e.GtsBilltoCity)
                    .HasMaxLength(250)
                    .HasColumnName("gts_billto_city");

                entity.Property(e => e.GtsBilltoCountry)
                    .HasMaxLength(250)
                    .HasColumnName("gts_billto_country");

                entity.Property(e => e.GtsShipto)
                    .HasMaxLength(250)
                    .HasColumnName("gts_shipto");

                entity.Property(e => e.GtsShiptoAddr)
                    .HasMaxLength(250)
                    .HasColumnName("gts_shipto_addr");

                entity.Property(e => e.GtsShiptoAddr1)
                    .HasMaxLength(250)
                    .HasColumnName("gts_shipto_addr1");

                entity.Property(e => e.GtsShiptoAddr2)
                    .HasMaxLength(250)
                    .HasColumnName("gts_shipto_addr2");

                entity.Property(e => e.GtsShiptoCity)
                    .HasMaxLength(250)
                    .HasColumnName("gts_shipto_city");

                entity.Property(e => e.GtsShiptoCountry)
                    .HasMaxLength(250)
                    .HasColumnName("gts_shipto_country");

                entity.Property(e => e.HeaderStatus)
                    .HasMaxLength(50)
                    .HasColumnName("header_status");

                entity.Property(e => e.ImportDate)
                    .HasColumnType("datetime")
                    .HasColumnName("import_date");

                entity.Property(e => e.ImportId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("import_id");

                entity.Property(e => e.ImportStatus)
                    .HasMaxLength(255)
                    .HasColumnName("import_status");

                entity.Property(e => e.InstalledAtBasStreet1)
                    .HasMaxLength(250)
                    .HasColumnName("installed_at_bas_street1");

                entity.Property(e => e.InstalledAtBasStreet2)
                    .HasMaxLength(250)
                    .HasColumnName("installed_at_bas_street2");

                entity.Property(e => e.InstalledAtBasStreet3)
                    .HasMaxLength(250)
                    .HasColumnName("installed_at_bas_street3");

                entity.Property(e => e.InstalledAtBasStreet4)
                    .HasMaxLength(250)
                    .HasColumnName("installed_at_bas_street4");

                entity.Property(e => e.InstalledAtCity)
                    .HasMaxLength(250)
                    .HasColumnName("installed_at_city");

                entity.Property(e => e.InstalledAtCountry)
                    .HasMaxLength(250)
                    .HasColumnName("installed_at_country");

                entity.Property(e => e.InstalledAtCountryCode)
                    .HasMaxLength(250)
                    .HasColumnName("installed_at_country_code");

                entity.Property(e => e.InstalledAtKey)
                    .HasMaxLength(250)
                    .HasColumnName("installed_at_key");

                entity.Property(e => e.InstalledAtName)
                    .HasMaxLength(250)
                    .HasColumnName("installed_at_name");

                entity.Property(e => e.InstalledAtPostalCode)
                    .HasMaxLength(250)
                    .HasColumnName("installed_at_postal_code");

                entity.Property(e => e.InstalledAtRegion)
                    .HasMaxLength(250)
                    .HasColumnName("installed_at_region");

                entity.Property(e => e.ItemCreateDate)
                    .HasColumnType("date")
                    .HasColumnName("item_create_date");

                entity.Property(e => e.ItemStatus)
                    .HasMaxLength(255)
                    .HasColumnName("item_status");

                entity.Property(e => e.LegalRegulation)
                    .HasMaxLength(250)
                    .HasColumnName("legal_regulation");

                entity.Property(e => e.LicenseAppliedDate)
                    .HasColumnType("date")
                    .HasColumnName("license_applied_date");

                entity.Property(e => e.LicenseNumber)
                    .HasMaxLength(250)
                    .HasColumnName("license_number");

                entity.Property(e => e.LicenseType)
                    .HasMaxLength(250)
                    .HasColumnName("license_type");

                entity.Property(e => e.LicenseValidFrom)
                    .HasColumnType("date")
                    .HasColumnName("license_valid_from");

                entity.Property(e => e.LicenseValidTo)
                    .HasColumnType("date")
                    .HasColumnName("license_valid_to");

                entity.Property(e => e.PlantKey)
                    .HasMaxLength(50)
                    .HasColumnName("plant_key");

                entity.Property(e => e.PlantText)
                    .HasMaxLength(250)
                    .HasColumnName("plant_text");

                entity.Property(e => e.ReplaceProductId)
                    .HasMaxLength(250)
                    .HasColumnName("replace_product_id");

                entity.Property(e => e.ReplaceProductIdEccnKey)
                    .HasMaxLength(250)
                    .HasColumnName("replace_product_id_eccn_key");

                entity.Property(e => e.ReplaceProductIdHtsKey)
                    .HasMaxLength(250)
                    .HasColumnName("replace_product_id_hts_key");

                entity.Property(e => e.ReplaceProductIdKey)
                    .HasMaxLength(250)
                    .HasColumnName("replace_product_id_key");

                entity.Property(e => e.ReplaceProductIdOverLengthPartNumKey)
                    .HasMaxLength(250)
                    .HasColumnName("replace_product_id_over_length_part_num_key");

                entity.Property(e => e.ReplaceSerialNo)
                    .HasMaxLength(50)
                    .HasColumnName("replace_serial_no");

                entity.Property(e => e.RmaCreateDate)
                    .HasColumnType("date")
                    .HasColumnName("rma_create_date");

                entity.Property(e => e.RmaItemNumber).HasColumnName("rma_item_number");

                entity.Property(e => e.RmaItemType)
                    .HasMaxLength(250)
                    .HasColumnName("rma_item_type");

                entity.Property(e => e.RmaItemTypeKey)
                    .HasMaxLength(250)
                    .HasColumnName("rma_item_type_key");

                entity.Property(e => e.ServiceReqNo)
                    .HasMaxLength(250)
                    .HasColumnName("service_req_no");

                entity.Property(e => e.ShipDate)
                    .HasColumnType("date")
                    .HasColumnName("ship_date");

                entity.Property(e => e.ShipToSiteKey)
                    .HasMaxLength(250)
                    .HasColumnName("ship_to_site_key");

                entity.Property(e => e.ShiptoAddr1)
                    .HasMaxLength(250)
                    .HasColumnName("shipto_addr1");

                entity.Property(e => e.ShiptoAddr2)
                    .HasMaxLength(250)
                    .HasColumnName("shipto_addr2");

                entity.Property(e => e.ShiptoCity)
                    .HasMaxLength(250)
                    .HasColumnName("shipto_city");

                entity.Property(e => e.ShiptoPartyKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_party_key");

                entity.Property(e => e.ShiptoSiteCountryCode)
                    .HasMaxLength(250)
                    .HasColumnName("shipto_site_country_code");

                entity.Property(e => e.ShiptoSiteName)
                    .HasMaxLength(250)
                    .HasColumnName("shipto_site_name");

                entity.Property(e => e.ShiptoSitePostalCode)
                    .HasMaxLength(250)
                    .HasColumnName("shipto_site_postal_code");

                entity.Property(e => e.ShiptoSiteRegion)
                    .HasMaxLength(250)
                    .HasColumnName("shipto_site_region");

                entity.Property(e => e.ShiptoSiteRegionKey)
                    .HasMaxLength(250)
                    .HasColumnName("shipto_site_region_key");

                entity.Property(e => e.StorageLocationKey)
                    .HasMaxLength(50)
                    .HasColumnName("storage_location_key");

                entity.Property(e => e.StorageLocationText)
                    .HasMaxLength(250)
                    .HasColumnName("storage_location_text");

                entity.Property(e => e.TrackingNo)
                    .HasMaxLength(250)
                    .HasColumnName("tracking_no");

                entity.Property(e => e.ValuationType)
                    .HasMaxLength(250)
                    .HasColumnName("valuation_type");

                entity.Property(e => e.Vendor)
                    .HasMaxLength(250)
                    .HasColumnName("vendor");

                entity.Property(e => e.VendorKey)
                    .HasMaxLength(250)
                    .HasColumnName("vendor_key");
            });

            modelBuilder.Entity<LampRmaStg>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lamp_rma_stg", "stg");

                entity.Property(e => e.AssociatedContactCity)
                    .HasMaxLength(250)
                    .HasColumnName("associated_contact_city");

                entity.Property(e => e.AssociatedContactCountry)
                    .HasMaxLength(250)
                    .HasColumnName("associated_contact_country");

                entity.Property(e => e.AssociatedContactCountryCode)
                    .HasMaxLength(250)
                    .HasColumnName("associated_contact_country_code");

                entity.Property(e => e.AssociatedContactKey)
                    .HasMaxLength(250)
                    .HasColumnName("associated_contact_key");

                entity.Property(e => e.AssociatedContactName)
                    .HasMaxLength(250)
                    .HasColumnName("associated_contact_name");

                entity.Property(e => e.AssociatedContactPostalCode)
                    .HasMaxLength(250)
                    .HasColumnName("associated_contact_postal_code");

                entity.Property(e => e.AssociatedContactRegion)
                    .HasMaxLength(250)
                    .HasColumnName("associated_contact_region");

                entity.Property(e => e.AssociatedContactStreet1)
                    .HasMaxLength(250)
                    .HasColumnName("associated_contact_street1");

                entity.Property(e => e.AssociatedContactStreet2)
                    .HasMaxLength(250)
                    .HasColumnName("associated_contact_street2");

                entity.Property(e => e.AssociatedContactStreet3)
                    .HasMaxLength(250)
                    .HasColumnName("associated_contact_street3");

                entity.Property(e => e.AssociatedContactStreet4)
                    .HasMaxLength(250)
                    .HasColumnName("associated_contact_street4");

                entity.Property(e => e.BilltoPartyKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_party_key");

                entity.Property(e => e.ComplaintsNo)
                    .HasMaxLength(50)
                    .HasColumnName("complaints_no");

                entity.Property(e => e.Coo)
                    .HasMaxLength(250)
                    .HasColumnName("coo");

                entity.Property(e => e.CustomsDeclCreateDt)
                    .HasMaxLength(250)
                    .HasColumnName("customs_decl_create_dt");

                entity.Property(e => e.CustomsDeclarationNo)
                    .HasMaxLength(250)
                    .HasColumnName("customs_declaration_no");

                entity.Property(e => e.CustomsValuation)
                    .HasMaxLength(250)
                    .HasColumnName("customs_valuation");

                entity.Property(e => e.DefectProductId)
                    .HasMaxLength(250)
                    .HasColumnName("defect_product_id");

                entity.Property(e => e.DefectProductIdEccnKey)
                    .HasMaxLength(250)
                    .HasColumnName("defect_product_id_eccn_key");

                entity.Property(e => e.DefectProductIdHtsKey)
                    .HasMaxLength(250)
                    .HasColumnName("defect_product_id_hts_key");

                entity.Property(e => e.DefectProductIdKey)
                    .HasMaxLength(250)
                    .HasColumnName("defect_product_id_key");

                entity.Property(e => e.DefectProductIdOverLengthPartNumKey)
                    .HasMaxLength(250)
                    .HasColumnName("defect_product_id_over_length_part_num_key");

                entity.Property(e => e.DefectSerialNo)
                    .HasMaxLength(50)
                    .HasColumnName("defect_serial_no");

                entity.Property(e => e.DeliveryCreateDate)
                    .HasColumnType("date")
                    .HasColumnName("delivery_create_date");

                entity.Property(e => e.DeliveryNumber)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_number");

                entity.Property(e => e.EndCustomerCity)
                    .HasMaxLength(250)
                    .HasColumnName("end_customer_city");

                entity.Property(e => e.EndCustomerCountry)
                    .HasMaxLength(250)
                    .HasColumnName("end_customer_country");

                entity.Property(e => e.EndCustomerCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("end_customer_country_code");

                entity.Property(e => e.EndCustomerKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_customer_key");

                entity.Property(e => e.EndCustomerName)
                    .HasMaxLength(250)
                    .HasColumnName("end_customer_name");

                entity.Property(e => e.EndCustomerPostalCode)
                    .HasMaxLength(250)
                    .HasColumnName("end_customer_postal_code");

                entity.Property(e => e.EndCustomerRegion)
                    .HasMaxLength(250)
                    .HasColumnName("end_customer_region");

                entity.Property(e => e.EndCustomerStreet1)
                    .HasMaxLength(250)
                    .HasColumnName("end_customer_street1");

                entity.Property(e => e.EndCustomerStreet2)
                    .HasMaxLength(250)
                    .HasColumnName("end_customer_street2");

                entity.Property(e => e.EndCustomerStreet3)
                    .HasMaxLength(250)
                    .HasColumnName("end_customer_street3");

                entity.Property(e => e.EndCustomerStreet4)
                    .HasMaxLength(250)
                    .HasColumnName("end_customer_street4");

                entity.Property(e => e.ExporterAddr)
                    .HasMaxLength(250)
                    .HasColumnName("exporter_addr");

                entity.Property(e => e.ExporterAddr1)
                    .HasMaxLength(250)
                    .HasColumnName("exporter_addr1");

                entity.Property(e => e.ExporterAddr2)
                    .HasMaxLength(250)
                    .HasColumnName("exporter_addr2");

                entity.Property(e => e.ExporterCity)
                    .HasMaxLength(250)
                    .HasColumnName("exporter_city");

                entity.Property(e => e.ExporterCountry)
                    .HasMaxLength(250)
                    .HasColumnName("exporter_country");

                entity.Property(e => e.ExporterKey)
                    .HasMaxLength(250)
                    .HasColumnName("exporter_key");

                entity.Property(e => e.ExtLicence)
                    .HasMaxLength(250)
                    .HasColumnName("ext_licence");

                entity.Property(e => e.GoodsSupplier)
                    .HasMaxLength(250)
                    .HasColumnName("goods_supplier");

                entity.Property(e => e.GoodsSupplierKey)
                    .HasMaxLength(250)
                    .HasColumnName("goods_supplier_key");

                entity.Property(e => e.GtsBillto)
                    .HasMaxLength(250)
                    .HasColumnName("gts_billto");

                entity.Property(e => e.GtsBilltoAddr)
                    .HasMaxLength(250)
                    .HasColumnName("gts_billto_addr");

                entity.Property(e => e.GtsBilltoAddr1)
                    .HasMaxLength(250)
                    .HasColumnName("gts_billto_addr1");

                entity.Property(e => e.GtsBilltoAddr2)
                    .HasMaxLength(250)
                    .HasColumnName("gts_billto_addr2");

                entity.Property(e => e.GtsBilltoCity)
                    .HasMaxLength(250)
                    .HasColumnName("gts_billto_city");

                entity.Property(e => e.GtsBilltoCountry)
                    .HasMaxLength(250)
                    .HasColumnName("gts_billto_country");

                entity.Property(e => e.GtsShipto)
                    .HasMaxLength(250)
                    .HasColumnName("gts_shipto");

                entity.Property(e => e.GtsShiptoAddr)
                    .HasMaxLength(250)
                    .HasColumnName("gts_shipto_addr");

                entity.Property(e => e.GtsShiptoAddr1)
                    .HasMaxLength(250)
                    .HasColumnName("gts_shipto_addr1");

                entity.Property(e => e.GtsShiptoAddr2)
                    .HasMaxLength(250)
                    .HasColumnName("gts_shipto_addr2");

                entity.Property(e => e.GtsShiptoCity)
                    .HasMaxLength(250)
                    .HasColumnName("gts_shipto_city");

                entity.Property(e => e.GtsShiptoCountry)
                    .HasMaxLength(250)
                    .HasColumnName("gts_shipto_country");

                entity.Property(e => e.HeaderStatus)
                    .HasMaxLength(50)
                    .HasColumnName("header_status");

                entity.Property(e => e.ImportDate)
                    .HasColumnType("datetime")
                    .HasColumnName("import_date");

                entity.Property(e => e.ImportId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("import_id");

                entity.Property(e => e.ImportStatus)
                    .HasMaxLength(255)
                    .HasColumnName("import_status");

                entity.Property(e => e.InstalledAtBasStreet1)
                    .HasMaxLength(250)
                    .HasColumnName("installed_at_bas_street1");

                entity.Property(e => e.InstalledAtBasStreet2)
                    .HasMaxLength(250)
                    .HasColumnName("installed_at_bas_street2");

                entity.Property(e => e.InstalledAtBasStreet3)
                    .HasMaxLength(250)
                    .HasColumnName("installed_at_bas_street3");

                entity.Property(e => e.InstalledAtBasStreet4)
                    .HasMaxLength(250)
                    .HasColumnName("installed_at_bas_street4");

                entity.Property(e => e.InstalledAtCity)
                    .HasMaxLength(250)
                    .HasColumnName("installed_at_city");

                entity.Property(e => e.InstalledAtCountry)
                    .HasMaxLength(250)
                    .HasColumnName("installed_at_country");

                entity.Property(e => e.InstalledAtCountryCode)
                    .HasMaxLength(250)
                    .HasColumnName("installed_at_country_code");

                entity.Property(e => e.InstalledAtKey)
                    .HasMaxLength(250)
                    .HasColumnName("installed_at_key");

                entity.Property(e => e.InstalledAtName)
                    .HasMaxLength(250)
                    .HasColumnName("installed_at_name");

                entity.Property(e => e.InstalledAtPostalCode)
                    .HasMaxLength(250)
                    .HasColumnName("installed_at_postal_code");

                entity.Property(e => e.InstalledAtRegion)
                    .HasMaxLength(250)
                    .HasColumnName("installed_at_region");

                entity.Property(e => e.ItemCreateDate)
                    .HasColumnType("date")
                    .HasColumnName("item_create_date");

                entity.Property(e => e.ItemStatus)
                    .HasMaxLength(255)
                    .HasColumnName("item_status");

                entity.Property(e => e.LegalRegulation)
                    .HasMaxLength(250)
                    .HasColumnName("legal_regulation");

                entity.Property(e => e.LicenseAppliedDate)
                    .HasColumnType("date")
                    .HasColumnName("license_applied_date");

                entity.Property(e => e.LicenseNumber)
                    .HasMaxLength(250)
                    .HasColumnName("license_number");

                entity.Property(e => e.LicenseType)
                    .HasMaxLength(250)
                    .HasColumnName("license_type");

                entity.Property(e => e.LicenseValidFrom)
                    .HasColumnType("date")
                    .HasColumnName("license_valid_from");

                entity.Property(e => e.LicenseValidTo)
                    .HasColumnType("date")
                    .HasColumnName("license_valid_to");

                entity.Property(e => e.PlantKey)
                    .HasMaxLength(50)
                    .HasColumnName("plant_key");

                entity.Property(e => e.PlantText)
                    .HasMaxLength(250)
                    .HasColumnName("plant_text");

                entity.Property(e => e.ReplaceProductId)
                    .HasMaxLength(250)
                    .HasColumnName("replace_product_id");

                entity.Property(e => e.ReplaceProductIdEccnKey)
                    .HasMaxLength(250)
                    .HasColumnName("replace_product_id_eccn_key");

                entity.Property(e => e.ReplaceProductIdHtsKey)
                    .HasMaxLength(250)
                    .HasColumnName("replace_product_id_hts_key");

                entity.Property(e => e.ReplaceProductIdKey)
                    .HasMaxLength(250)
                    .HasColumnName("replace_product_id_key");

                entity.Property(e => e.ReplaceProductIdOverLengthPartNumKey)
                    .HasMaxLength(250)
                    .HasColumnName("replace_product_id_over_length_part_num_key");

                entity.Property(e => e.ReplaceSerialNo)
                    .HasMaxLength(50)
                    .HasColumnName("replace_serial_no");

                entity.Property(e => e.RmaCreateDate)
                    .HasColumnType("date")
                    .HasColumnName("rma_create_date");

                entity.Property(e => e.RmaItemNumber).HasColumnName("rma_item_number");

                entity.Property(e => e.RmaItemType)
                    .HasMaxLength(250)
                    .HasColumnName("rma_item_type");

                entity.Property(e => e.RmaItemTypeKey)
                    .HasMaxLength(250)
                    .HasColumnName("rma_item_type_key");

                entity.Property(e => e.ServiceReqNo)
                    .HasMaxLength(250)
                    .HasColumnName("service_req_no");

                entity.Property(e => e.ShipDate)
                    .HasColumnType("date")
                    .HasColumnName("ship_date");

                entity.Property(e => e.ShipToSiteKey)
                    .HasMaxLength(250)
                    .HasColumnName("ship_to_site_key");

                entity.Property(e => e.ShiptoAddr1)
                    .HasMaxLength(250)
                    .HasColumnName("shipto_addr1");

                entity.Property(e => e.ShiptoAddr2)
                    .HasMaxLength(250)
                    .HasColumnName("shipto_addr2");

                entity.Property(e => e.ShiptoCity)
                    .HasMaxLength(250)
                    .HasColumnName("shipto_city");

                entity.Property(e => e.ShiptoPartyKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_party_key");

                entity.Property(e => e.ShiptoSiteCountryCode)
                    .HasMaxLength(250)
                    .HasColumnName("shipto_site_country_code");

                entity.Property(e => e.ShiptoSiteName)
                    .HasMaxLength(250)
                    .HasColumnName("shipto_site_name");

                entity.Property(e => e.ShiptoSitePostalCode)
                    .HasMaxLength(250)
                    .HasColumnName("shipto_site_postal_code");

                entity.Property(e => e.ShiptoSiteRegion)
                    .HasMaxLength(250)
                    .HasColumnName("shipto_site_region");

                entity.Property(e => e.ShiptoSiteRegionKey)
                    .HasMaxLength(250)
                    .HasColumnName("shipto_site_region_key");

                entity.Property(e => e.StorageLocationKey)
                    .HasMaxLength(50)
                    .HasColumnName("storage_location_key");

                entity.Property(e => e.StorageLocationText)
                    .HasMaxLength(250)
                    .HasColumnName("storage_location_text");

                entity.Property(e => e.TrackingNo)
                    .HasMaxLength(250)
                    .HasColumnName("tracking_no");

                entity.Property(e => e.ValuationType)
                    .HasMaxLength(250)
                    .HasColumnName("valuation_type");

                entity.Property(e => e.Vendor)
                    .HasMaxLength(250)
                    .HasColumnName("vendor");

                entity.Property(e => e.VendorKey)
                    .HasMaxLength(250)
                    .HasColumnName("vendor_key");
            });

            modelBuilder.Entity<LampRole>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lamp_role");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("created_date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Description)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("description");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Note)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("note");

                entity.Property(e => e.Role)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("role");

                entity.Property(e => e.RoleType)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("role_type ");

                entity.Property(e => e.Status)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("status");
            });

            modelBuilder.Entity<LampServiceContract>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lamp_service_contract");

                entity.HasIndex(e => e.SerialNumber, "lamp_svc_contract_ndx2");

                entity.HasIndex(e => new { e.SerialNumber, e.MaterialKey }, "lamp_svc_contract_ndx3");

                entity.HasIndex(e => e.ExportedFlag, "lamp_svc_contract_ndx4");

                entity.HasIndex(e => e.ContractNumber, "lamp_svc_contract_ndx5");

                entity.Property(e => e.BilltoCity)
                    .HasMaxLength(255)
                    .HasColumnName("billto_city");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.ContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("contract_creation_date");

                entity.Property(e => e.ContractItemNo).HasColumnName("contract_item_no");

                entity.Property(e => e.ContractLineItemStatus)
                    .HasMaxLength(50)
                    .HasColumnName("contract_line_item_status");

                entity.Property(e => e.ContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("contract_number");

                entity.Property(e => e.ContractStatus)
                    .HasMaxLength(250)
                    .HasColumnName("contract_status");

                entity.Property(e => e.ContractType)
                    .HasMaxLength(250)
                    .HasColumnName("contract_type");

                entity.Property(e => e.Currency)
                    .HasMaxLength(50)
                    .HasColumnName("currency");

                entity.Property(e => e.DiscountDoNoUse).HasColumnName("discount_do_no_use");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("end_cust_country_name");

                entity.Property(e => e.EndCustDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_district");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.ExportedFlag)
                    .HasMaxLength(255)
                    .HasColumnName("exported_flag");

                entity.Property(e => e.ExtendedListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("extended_list_price");

                entity.Property(e => e.IObjectId)
                    .HasMaxLength(50)
                    .HasColumnName("i_object_id");

                entity.Property(e => e.ImportDate)
                    .HasColumnType("datetime")
                    .HasColumnName("import_date");

                entity.Property(e => e.ImportId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("import_id");

                entity.Property(e => e.InstalledAtCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("installed_at_country_code");

                entity.Property(e => e.InstalledAtCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("installed_at_country_name");

                entity.Property(e => e.InstalledAtDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("installed_at_district");

                entity.Property(e => e.InstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("installed_at_key");

                entity.Property(e => e.InstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("installed_at_name");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialEccn)
                    .HasMaxLength(50)
                    .HasColumnName("material_eccn");

                entity.Property(e => e.MaterialHts)
                    .HasMaxLength(50)
                    .HasColumnName("material_hts");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("material_key");

                entity.Property(e => e.NetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_value");

                entity.Property(e => e.PayerCity)
                    .HasMaxLength(255)
                    .HasColumnName("payer_city");

                entity.Property(e => e.PayerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("payer_country");

                entity.Property(e => e.PayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("payer_key");

                entity.Property(e => e.PayerName)
                    .HasMaxLength(255)
                    .HasColumnName("payer_name");

                entity.Property(e => e.ProductFamily)
                    .HasMaxLength(255)
                    .HasColumnName("product_family");

                entity.Property(e => e.ProductLine)
                    .HasMaxLength(255)
                    .HasColumnName("product_line");

                entity.Property(e => e.SalesOrderAlpha)
                    .HasMaxLength(50)
                    .HasColumnName("sales_order_alpha");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SerialNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number_orig");

                entity.Property(e => e.ServiceEndDate)
                    .HasColumnType("date")
                    .HasColumnName("service_end_date");

                entity.Property(e => e.ServiceMaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("service_material_desc");

                entity.Property(e => e.ServiceMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("service_material_key");

                entity.Property(e => e.ServiceMaterialProductLine)
                    .HasMaxLength(255)
                    .HasColumnName("service_material_product_line");

                entity.Property(e => e.ServiceStartDate)
                    .HasColumnType("date")
                    .HasColumnName("service_start_date");
            });

            modelBuilder.Entity<LampServiceContractStg>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lamp_service_contract_stg", "stg");

                entity.Property(e => e.BilltoCity)
                    .HasMaxLength(255)
                    .HasColumnName("billto_city");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.ContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("contract_creation_date");

                entity.Property(e => e.ContractItemNo).HasColumnName("contract_item_no");

                entity.Property(e => e.ContractLineItemStatus)
                    .HasMaxLength(50)
                    .HasColumnName("contract_line_item_status");

                entity.Property(e => e.ContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("contract_number");

                entity.Property(e => e.ContractStatus)
                    .HasMaxLength(250)
                    .HasColumnName("contract_status");

                entity.Property(e => e.ContractType)
                    .HasMaxLength(250)
                    .HasColumnName("contract_type");

                entity.Property(e => e.Currency)
                    .HasMaxLength(50)
                    .HasColumnName("currency");

                entity.Property(e => e.DiscountDoNoUse).HasColumnName("discount_do_no_use");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("end_cust_country_name");

                entity.Property(e => e.EndCustDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_district");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.ExportedFlag)
                    .HasMaxLength(255)
                    .HasColumnName("exported_flag");

                entity.Property(e => e.ExtendedListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("extended_list_price");

                entity.Property(e => e.IObjectId)
                    .HasMaxLength(50)
                    .HasColumnName("i_object_id");

                entity.Property(e => e.ImportDate)
                    .HasColumnType("datetime")
                    .HasColumnName("import_date");

                entity.Property(e => e.ImportId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("import_id");

                entity.Property(e => e.InstalledAtCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("installed_at_country_code");

                entity.Property(e => e.InstalledAtCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("installed_at_country_name");

                entity.Property(e => e.InstalledAtDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("installed_at_district");

                entity.Property(e => e.InstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("installed_at_key");

                entity.Property(e => e.InstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("installed_at_name");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialEccn)
                    .HasMaxLength(50)
                    .HasColumnName("material_eccn");

                entity.Property(e => e.MaterialHts)
                    .HasMaxLength(50)
                    .HasColumnName("material_hts");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("material_key");

                entity.Property(e => e.NetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_value");

                entity.Property(e => e.PayerCity)
                    .HasMaxLength(255)
                    .HasColumnName("payer_city");

                entity.Property(e => e.PayerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("payer_country");

                entity.Property(e => e.PayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("payer_key");

                entity.Property(e => e.PayerName)
                    .HasMaxLength(255)
                    .HasColumnName("payer_name");

                entity.Property(e => e.ProductFamily)
                    .HasMaxLength(255)
                    .HasColumnName("product_family");

                entity.Property(e => e.ProductLine)
                    .HasMaxLength(255)
                    .HasColumnName("product_line");

                entity.Property(e => e.SalesOrderAlpha)
                    .HasMaxLength(50)
                    .HasColumnName("sales_order_alpha");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SerialNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number_orig");

                entity.Property(e => e.ServiceEndDate)
                    .HasColumnType("date")
                    .HasColumnName("service_end_date");

                entity.Property(e => e.ServiceMaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("service_material_desc");

                entity.Property(e => e.ServiceMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("service_material_key");

                entity.Property(e => e.ServiceMaterialProductLine)
                    .HasMaxLength(255)
                    .HasColumnName("service_material_product_line");

                entity.Property(e => e.ServiceStartDate)
                    .HasColumnType("date")
                    .HasColumnName("service_start_date");
            });

            modelBuilder.Entity<LampShipmentLine>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lamp_shipment_line");

                entity.HasIndex(e => e.ImportId, "lamp_shipment_ln_ndx1");

                entity.HasIndex(e => e.SerialNumber, "lamp_shipment_ln_ndx2");

                entity.HasIndex(e => new { e.SoNumber, e.SerialNumber }, "lamp_shipment_ln_ndx3");

                entity.Property(e => e.BilltoPartyCity)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_city");

                entity.Property(e => e.BilltoPartyCountry)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_country");

                entity.Property(e => e.BilltoPartyKey)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_key");

                entity.Property(e => e.BilltoPartyName)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_name");

                entity.Property(e => e.BilltoPartyStreet1)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_street1");

                entity.Property(e => e.BilltoPartyStreet2)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_street2");

                entity.Property(e => e.BilltoPartyStreet3)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_street3");

                entity.Property(e => e.BilltoPartyStreet4)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_street4");

                entity.Property(e => e.BilltoPartyStreet5)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_street5");

                entity.Property(e => e.CustomerGroup)
                    .IsUnicode(false)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DeliveryDate)
                    .HasColumnType("date")
                    .HasColumnName("delivery_date");

                entity.Property(e => e.DeliveryItem).HasColumnName("delivery_item");

                entity.Property(e => e.DeliveryNumber)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_number");

                entity.Property(e => e.DeliveryType)
                    .IsUnicode(false)
                    .HasColumnName("delivery_type");

                entity.Property(e => e.EndUserCity)
                    .IsUnicode(false)
                    .HasColumnName("end_user_city");

                entity.Property(e => e.EndUserCountry)
                    .IsUnicode(false)
                    .HasColumnName("end_user_country");

                entity.Property(e => e.EndUserKey)
                    .IsUnicode(false)
                    .HasColumnName("end_user_key");

                entity.Property(e => e.EndUserName)
                    .IsUnicode(false)
                    .HasColumnName("end_user_name");

                entity.Property(e => e.EndUserStreet1)
                    .IsUnicode(false)
                    .HasColumnName("end_user_street1");

                entity.Property(e => e.EndUserStreet2)
                    .IsUnicode(false)
                    .HasColumnName("end_user_street2");

                entity.Property(e => e.EndUserStreet3)
                    .IsUnicode(false)
                    .HasColumnName("end_user_street3");

                entity.Property(e => e.EndUserStreet4)
                    .IsUnicode(false)
                    .HasColumnName("end_user_street4");

                entity.Property(e => e.EndUserStreet5)
                    .IsUnicode(false)
                    .HasColumnName("end_user_street5");

                entity.Property(e => e.ImportDate)
                    .HasColumnType("datetime")
                    .HasColumnName("import_date");

                entity.Property(e => e.ImportId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("import_id");

                entity.Property(e => e.ImportStatus)
                    .HasMaxLength(255)
                    .HasColumnName("import_status");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.Material)
                    .IsUnicode(false)
                    .HasColumnName("material");

                entity.Property(e => e.MaterialEccn)
                    .IsUnicode(false)
                    .HasColumnName("material_eccn");

                entity.Property(e => e.MaterialHts)
                    .IsUnicode(false)
                    .HasColumnName("material_hts");

                entity.Property(e => e.MaterialOfferingType)
                    .IsUnicode(false)
                    .HasColumnName("material_offering_type");

                entity.Property(e => e.MaterialType)
                    .IsUnicode(false)
                    .HasColumnName("material_type");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PlantKey)
                    .IsUnicode(false)
                    .HasColumnName("plant_key");

                entity.Property(e => e.PlantName)
                    .IsUnicode(false)
                    .HasColumnName("plant_name");

                entity.Property(e => e.PoType)
                    .IsUnicode(false)
                    .HasColumnName("po_type");

                entity.Property(e => e.Qty)
                    .HasColumnType("decimal(10, 0)")
                    .HasColumnName("qty");

                entity.Property(e => e.SalesOrgKey)
                    .IsUnicode(false)
                    .HasColumnName("sales_org_key");

                entity.Property(e => e.SalesOrgName)
                    .IsUnicode(false)
                    .HasColumnName("sales_org_name");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("serial_number");

                entity.Property(e => e.ShiptoCity)
                    .IsUnicode(false)
                    .HasColumnName("shipto_city");

                entity.Property(e => e.ShiptoCountry)
                    .IsUnicode(false)
                    .HasColumnName("shipto_country");

                entity.Property(e => e.ShiptoCustomer)
                    .IsUnicode(false)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .IsUnicode(false)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShiptoStreet1)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street1");

                entity.Property(e => e.ShiptoStreet2)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street2");

                entity.Property(e => e.ShiptoStreet3)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street3");

                entity.Property(e => e.ShiptoStreet4)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street4");

                entity.Property(e => e.ShiptoStreet5)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street5");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoType)
                    .IsUnicode(false)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoCity)
                    .IsUnicode(false)
                    .HasColumnName("soldto_city");

                entity.Property(e => e.SoldtoCountry)
                    .IsUnicode(false)
                    .HasColumnName("soldto_country");

                entity.Property(e => e.SoldtoKey)
                    .IsUnicode(false)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .IsUnicode(false)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SoldtoStreet1)
                    .IsUnicode(false)
                    .HasColumnName("soldto_street1");

                entity.Property(e => e.SoldtoStreet2)
                    .IsUnicode(false)
                    .HasColumnName("soldto_street2");

                entity.Property(e => e.SoldtoStreet3)
                    .IsUnicode(false)
                    .HasColumnName("soldto_street3");

                entity.Property(e => e.SoldtoStreet4)
                    .IsUnicode(false)
                    .HasColumnName("soldto_street4");

                entity.Property(e => e.SoldtoStreet5)
                    .IsUnicode(false)
                    .HasColumnName("soldto_street5");

                entity.Property(e => e.TotNetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("tot_net_price");
            });

            modelBuilder.Entity<LampShipmentLineBak>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lamp_shipment_line_bak", "bak");

                entity.Property(e => e.BilltoPartyCity)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_city");

                entity.Property(e => e.BilltoPartyCountry)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_country");

                entity.Property(e => e.BilltoPartyKey)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_key");

                entity.Property(e => e.BilltoPartyName)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_name");

                entity.Property(e => e.BilltoPartyStreet1)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_street1");

                entity.Property(e => e.BilltoPartyStreet2)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_street2");

                entity.Property(e => e.BilltoPartyStreet3)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_street3");

                entity.Property(e => e.BilltoPartyStreet4)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_street4");

                entity.Property(e => e.BilltoPartyStreet5)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_street5");

                entity.Property(e => e.CustomerGroup)
                    .IsUnicode(false)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DeliveryDate)
                    .HasColumnType("date")
                    .HasColumnName("delivery_date");

                entity.Property(e => e.DeliveryItem).HasColumnName("delivery_item");

                entity.Property(e => e.DeliveryNumber)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_number");

                entity.Property(e => e.DeliveryType)
                    .IsUnicode(false)
                    .HasColumnName("delivery_type");

                entity.Property(e => e.EndUserCity)
                    .IsUnicode(false)
                    .HasColumnName("end_user_city");

                entity.Property(e => e.EndUserCountry)
                    .IsUnicode(false)
                    .HasColumnName("end_user_country");

                entity.Property(e => e.EndUserKey)
                    .IsUnicode(false)
                    .HasColumnName("end_user_key");

                entity.Property(e => e.EndUserName)
                    .IsUnicode(false)
                    .HasColumnName("end_user_name");

                entity.Property(e => e.EndUserStreet1)
                    .IsUnicode(false)
                    .HasColumnName("end_user_street1");

                entity.Property(e => e.EndUserStreet2)
                    .IsUnicode(false)
                    .HasColumnName("end_user_street2");

                entity.Property(e => e.EndUserStreet3)
                    .IsUnicode(false)
                    .HasColumnName("end_user_street3");

                entity.Property(e => e.EndUserStreet4)
                    .IsUnicode(false)
                    .HasColumnName("end_user_street4");

                entity.Property(e => e.EndUserStreet5)
                    .IsUnicode(false)
                    .HasColumnName("end_user_street5");

                entity.Property(e => e.ImportDate)
                    .HasColumnType("datetime")
                    .HasColumnName("import_date");

                entity.Property(e => e.ImportId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("import_id");

                entity.Property(e => e.ImportStatus)
                    .HasMaxLength(255)
                    .HasColumnName("import_status");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.Material)
                    .IsUnicode(false)
                    .HasColumnName("material");

                entity.Property(e => e.MaterialEccn)
                    .IsUnicode(false)
                    .HasColumnName("material_eccn");

                entity.Property(e => e.MaterialHts)
                    .IsUnicode(false)
                    .HasColumnName("material_hts");

                entity.Property(e => e.MaterialOfferingType)
                    .IsUnicode(false)
                    .HasColumnName("material_offering_type");

                entity.Property(e => e.MaterialType)
                    .IsUnicode(false)
                    .HasColumnName("material_type");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PlantKey)
                    .IsUnicode(false)
                    .HasColumnName("plant_key");

                entity.Property(e => e.PlantName)
                    .IsUnicode(false)
                    .HasColumnName("plant_name");

                entity.Property(e => e.PoType)
                    .IsUnicode(false)
                    .HasColumnName("po_type");

                entity.Property(e => e.Qty)
                    .HasColumnType("decimal(10, 0)")
                    .HasColumnName("qty");

                entity.Property(e => e.SalesOrgKey)
                    .IsUnicode(false)
                    .HasColumnName("sales_org_key");

                entity.Property(e => e.SalesOrgName)
                    .IsUnicode(false)
                    .HasColumnName("sales_org_name");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("serial_number");

                entity.Property(e => e.ShiptoCity)
                    .IsUnicode(false)
                    .HasColumnName("shipto_city");

                entity.Property(e => e.ShiptoCountry)
                    .IsUnicode(false)
                    .HasColumnName("shipto_country");

                entity.Property(e => e.ShiptoCustomer)
                    .IsUnicode(false)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .IsUnicode(false)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShiptoStreet1)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street1");

                entity.Property(e => e.ShiptoStreet2)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street2");

                entity.Property(e => e.ShiptoStreet3)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street3");

                entity.Property(e => e.ShiptoStreet4)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street4");

                entity.Property(e => e.ShiptoStreet5)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street5");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoType)
                    .IsUnicode(false)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoCity)
                    .IsUnicode(false)
                    .HasColumnName("soldto_city");

                entity.Property(e => e.SoldtoCountry)
                    .IsUnicode(false)
                    .HasColumnName("soldto_country");

                entity.Property(e => e.SoldtoKey)
                    .IsUnicode(false)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .IsUnicode(false)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SoldtoStreet1)
                    .IsUnicode(false)
                    .HasColumnName("soldto_street1");

                entity.Property(e => e.SoldtoStreet2)
                    .IsUnicode(false)
                    .HasColumnName("soldto_street2");

                entity.Property(e => e.SoldtoStreet3)
                    .IsUnicode(false)
                    .HasColumnName("soldto_street3");

                entity.Property(e => e.SoldtoStreet4)
                    .IsUnicode(false)
                    .HasColumnName("soldto_street4");

                entity.Property(e => e.SoldtoStreet5)
                    .IsUnicode(false)
                    .HasColumnName("soldto_street5");

                entity.Property(e => e.TotNetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("tot_net_price");
            });

            modelBuilder.Entity<LampSvcValidation>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lamp_svc_validation");

                entity.HasIndex(e => new { e.SerialNumber, e.MaterialKey }, "lamp_svc_validation_ndx2");

                entity.HasIndex(e => e.ContractNumber, "lamp_svc_validation_ndx3");

                entity.Property(e => e.BilltoCity)
                    .HasMaxLength(255)
                    .HasColumnName("billto_city");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.ContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("contract_creation_date");

                entity.Property(e => e.ContractItemNo).HasColumnName("contract_item_no");

                entity.Property(e => e.ContractLineItemStatus)
                    .HasMaxLength(50)
                    .HasColumnName("contract_line_item_status");

                entity.Property(e => e.ContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("contract_number");

                entity.Property(e => e.ContractStatus)
                    .HasMaxLength(250)
                    .HasColumnName("contract_status");

                entity.Property(e => e.ContractType)
                    .HasMaxLength(250)
                    .HasColumnName("contract_type");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("created_date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Currency)
                    .HasMaxLength(50)
                    .HasColumnName("currency");

                entity.Property(e => e.DiscountDoNoUse)
                    .HasMaxLength(50)
                    .HasColumnName("discount_do_no_use");

                entity.Property(e => e.EndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_city");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("end_cust_country_name");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.ExportedFlag)
                    .HasMaxLength(50)
                    .HasColumnName("exported_flag");

                entity.Property(e => e.ExtendedListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("extended_list_price");

                entity.Property(e => e.IObjectId)
                    .HasMaxLength(50)
                    .HasColumnName("i_object_id");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.InstalledAtCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("installed_at_country_code");

                entity.Property(e => e.InstalledAtCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("installed_at_country_name");

                entity.Property(e => e.InstalledAtDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("installed_at_district");

                entity.Property(e => e.InstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("installed_at_key");

                entity.Property(e => e.InstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("installed_at_name");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialEccn)
                    .HasMaxLength(50)
                    .HasColumnName("material_eccn");

                entity.Property(e => e.MaterialHts)
                    .HasMaxLength(50)
                    .HasColumnName("material_hts");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("material_key");

                entity.Property(e => e.NetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_value");

                entity.Property(e => e.PayerCity)
                    .HasMaxLength(255)
                    .HasColumnName("payer_city");

                entity.Property(e => e.PayerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("payer_country");

                entity.Property(e => e.PayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("payer_key");

                entity.Property(e => e.PayerName)
                    .HasMaxLength(255)
                    .HasColumnName("payer_name");

                entity.Property(e => e.ProductFamily)
                    .HasMaxLength(255)
                    .HasColumnName("product_family");

                entity.Property(e => e.ProductLine)
                    .HasMaxLength(255)
                    .HasColumnName("product_line");

                entity.Property(e => e.SalesOrderAlpha)
                    .HasMaxLength(50)
                    .HasColumnName("sales_order_alpha");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SerialNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number_orig");

                entity.Property(e => e.ServiceEndDate)
                    .HasColumnType("date")
                    .HasColumnName("service_end_date");

                entity.Property(e => e.ServiceMaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("service_material_desc");

                entity.Property(e => e.ServiceMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("service_material_key");

                entity.Property(e => e.ServiceMaterialProductLine)
                    .HasMaxLength(255)
                    .HasColumnName("service_material_product_line");

                entity.Property(e => e.ServiceStartDate)
                    .HasColumnType("date")
                    .HasColumnName("service_start_date");

                entity.Property(e => e.SourceImportId).HasColumnName("source_import_id");
            });

            modelBuilder.Entity<LampSvcValidation1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lamp_svc_validation", "dev");

                entity.Property(e => e.BilltoCity)
                    .HasMaxLength(255)
                    .HasColumnName("billto_city");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.ContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("contract_creation_date");

                entity.Property(e => e.ContractItemNo).HasColumnName("contract_item_no");

                entity.Property(e => e.ContractLineItemStatus)
                    .HasMaxLength(50)
                    .HasColumnName("contract_line_item_status");

                entity.Property(e => e.ContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("contract_number");

                entity.Property(e => e.ContractStatus)
                    .HasMaxLength(250)
                    .HasColumnName("contract_status");

                entity.Property(e => e.ContractType)
                    .HasMaxLength(250)
                    .HasColumnName("contract_type");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("created_date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Currency)
                    .HasMaxLength(50)
                    .HasColumnName("currency");

                entity.Property(e => e.DiscountDoNoUse)
                    .HasMaxLength(50)
                    .HasColumnName("discount_do_no_use");

                entity.Property(e => e.EndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_city");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("end_cust_country_name");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.ExportedFlag)
                    .HasMaxLength(50)
                    .HasColumnName("exported_flag");

                entity.Property(e => e.ExtendedListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("extended_list_price");

                entity.Property(e => e.IObjectId)
                    .HasMaxLength(50)
                    .HasColumnName("i_object_id");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.InstalledAtCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("installed_at_country_code");

                entity.Property(e => e.InstalledAtCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("installed_at_country_name");

                entity.Property(e => e.InstalledAtDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("installed_at_district");

                entity.Property(e => e.InstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("installed_at_key");

                entity.Property(e => e.InstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("installed_at_name");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialEccn)
                    .HasMaxLength(50)
                    .HasColumnName("material_eccn");

                entity.Property(e => e.MaterialHts)
                    .HasMaxLength(50)
                    .HasColumnName("material_hts");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("material_key");

                entity.Property(e => e.NetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_value");

                entity.Property(e => e.PayerCity)
                    .HasMaxLength(255)
                    .HasColumnName("payer_city");

                entity.Property(e => e.PayerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("payer_country");

                entity.Property(e => e.PayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("payer_key");

                entity.Property(e => e.PayerName)
                    .HasMaxLength(255)
                    .HasColumnName("payer_name");

                entity.Property(e => e.ProductFamily)
                    .HasMaxLength(255)
                    .HasColumnName("product_family");

                entity.Property(e => e.ProductLine)
                    .HasMaxLength(255)
                    .HasColumnName("product_line");

                entity.Property(e => e.SalesOrderAlpha)
                    .HasMaxLength(50)
                    .HasColumnName("sales_order_alpha");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SerialNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number_orig");

                entity.Property(e => e.ServiceEndDate)
                    .HasColumnType("date")
                    .HasColumnName("service_end_date");

                entity.Property(e => e.ServiceMaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("service_material_desc");

                entity.Property(e => e.ServiceMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("service_material_key");

                entity.Property(e => e.ServiceMaterialProductLine)
                    .HasMaxLength(255)
                    .HasColumnName("service_material_product_line");

                entity.Property(e => e.ServiceStartDate)
                    .HasColumnType("date")
                    .HasColumnName("service_start_date");

                entity.Property(e => e.SourceImportId).HasColumnName("source_import_id");
            });

            modelBuilder.Entity<LampSvcValidation20190130>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lamp_svc_validation_20190130", "bak");

                entity.Property(e => e.BilltoCity)
                    .HasMaxLength(255)
                    .HasColumnName("billto_city");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.ContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("contract_creation_date");

                entity.Property(e => e.ContractItemNo).HasColumnName("contract_item_no");

                entity.Property(e => e.ContractLineItemStatus)
                    .HasMaxLength(50)
                    .HasColumnName("contract_line_item_status");

                entity.Property(e => e.ContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("contract_number");

                entity.Property(e => e.ContractStatus)
                    .HasMaxLength(250)
                    .HasColumnName("contract_status");

                entity.Property(e => e.ContractType)
                    .HasMaxLength(250)
                    .HasColumnName("contract_type");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("created_date");

                entity.Property(e => e.Currency)
                    .HasMaxLength(50)
                    .HasColumnName("currency");

                entity.Property(e => e.DiscountDoNoUse)
                    .HasMaxLength(50)
                    .HasColumnName("discount_do_no_use");

                entity.Property(e => e.EndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_city");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("end_cust_country_name");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.ExportedFlag)
                    .HasMaxLength(50)
                    .HasColumnName("exported_flag");

                entity.Property(e => e.ExtendedListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("extended_list_price");

                entity.Property(e => e.IObjectId)
                    .HasMaxLength(50)
                    .HasColumnName("i_object_id");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.InstalledAtCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("installed_at_country_code");

                entity.Property(e => e.InstalledAtCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("installed_at_country_name");

                entity.Property(e => e.InstalledAtDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("installed_at_district");

                entity.Property(e => e.InstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("installed_at_key");

                entity.Property(e => e.InstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("installed_at_name");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialEccn)
                    .HasMaxLength(50)
                    .HasColumnName("material_eccn");

                entity.Property(e => e.MaterialHts)
                    .HasMaxLength(50)
                    .HasColumnName("material_hts");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("material_key");

                entity.Property(e => e.NetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_value");

                entity.Property(e => e.PayerCity)
                    .HasMaxLength(255)
                    .HasColumnName("payer_city");

                entity.Property(e => e.PayerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("payer_country");

                entity.Property(e => e.PayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("payer_key");

                entity.Property(e => e.PayerName)
                    .HasMaxLength(255)
                    .HasColumnName("payer_name");

                entity.Property(e => e.ProductFamily)
                    .HasMaxLength(255)
                    .HasColumnName("product_family");

                entity.Property(e => e.ProductLine)
                    .HasMaxLength(255)
                    .HasColumnName("product_line");

                entity.Property(e => e.SalesOrderAlpha)
                    .HasMaxLength(50)
                    .HasColumnName("sales_order_alpha");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SerialNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number_orig");

                entity.Property(e => e.ServiceEndDate)
                    .HasColumnType("date")
                    .HasColumnName("service_end_date");

                entity.Property(e => e.ServiceMaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("service_material_desc");

                entity.Property(e => e.ServiceMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("service_material_key");

                entity.Property(e => e.ServiceMaterialProductLine)
                    .HasMaxLength(255)
                    .HasColumnName("service_material_product_line");

                entity.Property(e => e.ServiceStartDate)
                    .HasColumnType("date")
                    .HasColumnName("service_start_date");

                entity.Property(e => e.SourceImportId).HasColumnName("source_import_id");
            });

            modelBuilder.Entity<LampSvcValidationBak>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lamp_svc_validation_bak", "bak");

                entity.Property(e => e.BilltoCity)
                    .HasMaxLength(255)
                    .HasColumnName("billto_city");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.ContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("contract_creation_date");

                entity.Property(e => e.ContractItemNo).HasColumnName("contract_item_no");

                entity.Property(e => e.ContractLineItemStatus)
                    .HasMaxLength(50)
                    .HasColumnName("contract_line_item_status");

                entity.Property(e => e.ContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("contract_number");

                entity.Property(e => e.ContractStatus)
                    .HasMaxLength(250)
                    .HasColumnName("contract_status");

                entity.Property(e => e.ContractType)
                    .HasMaxLength(250)
                    .HasColumnName("contract_type");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("created_date");

                entity.Property(e => e.Currency)
                    .HasMaxLength(50)
                    .HasColumnName("currency");

                entity.Property(e => e.DiscountDoNoUse)
                    .HasMaxLength(50)
                    .HasColumnName("discount_do_no_use");

                entity.Property(e => e.EndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_city");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("end_cust_country_name");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.ExportedFlag)
                    .HasMaxLength(50)
                    .HasColumnName("exported_flag");

                entity.Property(e => e.ExtendedListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("extended_list_price");

                entity.Property(e => e.IObjectId)
                    .HasMaxLength(50)
                    .HasColumnName("i_object_id");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.InstalledAtCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("installed_at_country_code");

                entity.Property(e => e.InstalledAtCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("installed_at_country_name");

                entity.Property(e => e.InstalledAtDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("installed_at_district");

                entity.Property(e => e.InstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("installed_at_key");

                entity.Property(e => e.InstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("installed_at_name");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialEccn)
                    .HasMaxLength(50)
                    .HasColumnName("material_eccn");

                entity.Property(e => e.MaterialHts)
                    .HasMaxLength(50)
                    .HasColumnName("material_hts");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("material_key");

                entity.Property(e => e.NetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_value");

                entity.Property(e => e.PayerCity)
                    .HasMaxLength(255)
                    .HasColumnName("payer_city");

                entity.Property(e => e.PayerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("payer_country");

                entity.Property(e => e.PayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("payer_key");

                entity.Property(e => e.PayerName)
                    .HasMaxLength(255)
                    .HasColumnName("payer_name");

                entity.Property(e => e.ProductFamily)
                    .HasMaxLength(255)
                    .HasColumnName("product_family");

                entity.Property(e => e.ProductLine)
                    .HasMaxLength(255)
                    .HasColumnName("product_line");

                entity.Property(e => e.SalesOrderAlpha)
                    .HasMaxLength(50)
                    .HasColumnName("sales_order_alpha");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SerialNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number_orig");

                entity.Property(e => e.ServiceEndDate)
                    .HasColumnType("date")
                    .HasColumnName("service_end_date");

                entity.Property(e => e.ServiceMaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("service_material_desc");

                entity.Property(e => e.ServiceMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("service_material_key");

                entity.Property(e => e.ServiceMaterialProductLine)
                    .HasMaxLength(255)
                    .HasColumnName("service_material_product_line");

                entity.Property(e => e.ServiceStartDate)
                    .HasColumnType("date")
                    .HasColumnName("service_start_date");

                entity.Property(e => e.SourceImportId).HasColumnName("source_import_id");
            });

            modelBuilder.Entity<LampTcCountry>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lamp_tc_country");

                entity.HasIndex(e => e.CountryCode, "lamp_tc_country_code");

                entity.Property(e => e.ConsUndertakingRequired).HasMaxLength(10);

                entity.Property(e => e.CountryCode).HasMaxLength(10);

                entity.Property(e => e.CountryName).HasMaxLength(255);

                entity.Property(e => e.Embargoed).HasMaxLength(10);

                entity.Property(e => e.HighRisk).HasMaxLength(10);

                entity.Property(e => e.JuniperWatchList).HasMaxLength(10);

                entity.Property(e => e.LowRisk).HasMaxLength(10);

                entity.Property(e => e.MidRisk).HasMaxLength(10);

                entity.Property(e => e.NetherlandsBrokerNotif).HasMaxLength(10);

                entity.Property(e => e.NoGlobalLicForMilitaryEu)
                    .HasMaxLength(10)
                    .HasColumnName("NoGlobalLicForMilitaryEU");

                entity.Property(e => e.UsnonSupp3)
                    .HasMaxLength(10)
                    .HasColumnName("USNonSupp3");
            });

            modelBuilder.Entity<LampTcCountryChart>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lamp_tc_country_chart");

                entity.HasIndex(e => e.CountryCode, "lamp_tc_country_chart_cc");

                entity.Property(e => e.AusDecoLicenseEligibleCty)
                    .HasMaxLength(255)
                    .HasColumnName("AUS_DECO_LICENSE_Eligible_CTY");

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Country_Code");

                entity.Property(e => e.CountryCode1)
                    .HasMaxLength(255)
                    .HasColumnName("COUNTRY_CODE1");

                entity.Property(e => e.CountryName)
                    .HasMaxLength(255)
                    .HasColumnName("Country_Name");

                entity.Property(e => e.CtyBelongsRegion)
                    .HasMaxLength(255)
                    .HasColumnName("_CTY_belongs_REGION");

                entity.Property(e => e.DutchBrokeringNotificationCty)
                    .HasMaxLength(255)
                    .HasColumnName("DUTCH_BROKERING_Notification_CTY");

                entity.Property(e => e.DutchExpHighRiskCty)
                    .HasMaxLength(255)
                    .HasColumnName("DUTCH_EXP_HIGH_RISK_CTY");

                entity.Property(e => e.DutchExpLiscenseCty)
                    .HasMaxLength(255)
                    .HasColumnName("DUTCH_EXP_LISCENSE_CTY");

                entity.Property(e => e.DutchExpLowRiskCty)
                    .HasMaxLength(255)
                    .HasColumnName("DUTCH_EXP_LOW_RISK_CTY");

                entity.Property(e => e.DutchExpMedRiskCty)
                    .HasMaxLength(255)
                    .HasColumnName("DUTCH_EXP_MED_RISK_CTY");

                entity.Property(e => e.DutchExpRisk)
                    .HasMaxLength(50)
                    .HasColumnName("DUTCH_EXP_RISK");

                entity.Property(e => e.DutchIndividualExpLicense)
                    .HasMaxLength(255)
                    .HasColumnName("DUTCH_Individual_EXP_LICENSE");

                entity.Property(e => e.DutchTempExpLicense)
                    .HasMaxLength(255)
                    .HasColumnName("DUTCH_TEMP_EXP_LICENSE");

                entity.Property(e => e.Eu001CtyEligibleExp)
                    .HasMaxLength(255)
                    .HasColumnName("EU001_CTY_Eligible_EXP");

                entity.Property(e => e.F14).HasMaxLength(255);

                entity.Property(e => e.HkAip)
                    .HasMaxLength(255)
                    .HasColumnName("HK_AIP");

                entity.Property(e => e.JnDualUseGoodsExpLicenseCty)
                    .HasMaxLength(255)
                    .HasColumnName("JN_DUAL_USE_GOODS_EXP_LICENSE_CTY");

                entity.Property(e => e.MlLawsProhibitedCty)
                    .HasMaxLength(255)
                    .HasColumnName("_ML_LAWS_PROHIBITED_CTY");

                entity.Property(e => e.NewZealand)
                    .HasMaxLength(255)
                    .HasColumnName("New_Zealand");

                entity.Property(e => e.NlExportRestriction)
                    .HasMaxLength(50)
                    .HasColumnName("nl_export_restriction");

                entity.Property(e => e.SnStsPermitApprovedCty)
                    .HasMaxLength(255)
                    .HasColumnName("SN_STS_PERMIT_APPROVED_CTY");

                entity.Property(e => e.SuppGroup)
                    .HasMaxLength(255)
                    .HasColumnName("Supp_Group");

                entity.Property(e => e.UkCryptoeilLicenseEligibleCty)
                    .HasMaxLength(255)
                    .HasColumnName("UK_CRYPTOEIL_LICENSE_Eligible_CTY");

                entity.Property(e => e.UkOgelEligibleCty)
                    .HasMaxLength(255)
                    .HasColumnName("UK_OGEL_Eligible_CTY");

                entity.Property(e => e.UsArmsEmbargoCtyD)
                    .HasMaxLength(255)
                    .HasColumnName("US_ARMS_EMBARGO_CTY-D");

                entity.Property(e => e.UsEarCheAndBioGrpD)
                    .HasMaxLength(255)
                    .HasColumnName("US_EAR_CHE_and_BIO_GRP-D");

                entity.Property(e => e.UsEarCtyGrpB)
                    .HasMaxLength(255)
                    .HasColumnName("US_EAR_CTY_GRP-B");

                entity.Property(e => e.UsEarCtyGrpD)
                    .HasMaxLength(255)
                    .HasColumnName("US_EAR_CTY_GRP-D");

                entity.Property(e => e.UsEarCtyGrpE)
                    .HasMaxLength(255)
                    .HasColumnName("US_EAR_CTY_GRP-E");

                entity.Property(e => e.UsEarMissTechGrpD)
                    .HasMaxLength(255)
                    .HasColumnName("US_EAR_MISS_TECH_GRP-D");

                entity.Property(e => e.UsEarNatSecGrpD)
                    .HasMaxLength(255)
                    .HasColumnName("US_EAR_NAT_SEC_GRP-D");

                entity.Property(e => e.UsEarNuclearGrpD)
                    .HasMaxLength(255)
                    .HasColumnName("US_EAR_NUCLEAR_GRP-D");

                entity.Property(e => e.UsEarWassenaarCtyA)
                    .HasMaxLength(255)
                    .HasColumnName("US_EAR_Wassenaar_CTY-A");

                entity.Property(e => e.UsElaEligibleCty)
                    .HasMaxLength(255)
                    .HasColumnName("US_ELA-ELIGIBLE_CTY");

                entity.Property(e => e.Watchlist)
                    .HasMaxLength(50)
                    .HasColumnName("watchlist");
            });

            modelBuilder.Entity<LampTcCountryChartBak>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lamp_tc_country_chart_bak", "bak");

                entity.Property(e => e.AusDecoLicenseEligibleCty)
                    .HasMaxLength(255)
                    .HasColumnName("AUS_DECO_LICENSE_Eligible_CTY");

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("Country_Code");

                entity.Property(e => e.CountryCode1)
                    .HasMaxLength(255)
                    .HasColumnName("COUNTRY_CODE1");

                entity.Property(e => e.CountryName)
                    .HasMaxLength(255)
                    .HasColumnName("Country_Name");

                entity.Property(e => e.CtyBelongsRegion)
                    .HasMaxLength(255)
                    .HasColumnName("_CTY_belongs_REGION");

                entity.Property(e => e.DutchBrokeringNotificationCty)
                    .HasMaxLength(255)
                    .HasColumnName("DUTCH_BROKERING_Notification_CTY");

                entity.Property(e => e.DutchExpHighRiskCty)
                    .HasMaxLength(255)
                    .HasColumnName("DUTCH_EXP_HIGH_RISK_CTY");

                entity.Property(e => e.DutchExpLiscenseCty)
                    .HasMaxLength(255)
                    .HasColumnName("DUTCH_EXP_LISCENSE_CTY");

                entity.Property(e => e.DutchExpLowRiskCty)
                    .HasMaxLength(255)
                    .HasColumnName("DUTCH_EXP_LOW_RISK_CTY");

                entity.Property(e => e.DutchExpMedRiskCty)
                    .HasMaxLength(255)
                    .HasColumnName("DUTCH_EXP_MED_RISK_CTY");

                entity.Property(e => e.DutchIndividualExpLicense)
                    .HasMaxLength(255)
                    .HasColumnName("DUTCH_Individual_EXP_LICENSE");

                entity.Property(e => e.DutchTempExpLicense)
                    .HasMaxLength(255)
                    .HasColumnName("DUTCH_TEMP_EXP_LICENSE");

                entity.Property(e => e.Eu001CtyEligibleExp)
                    .HasMaxLength(255)
                    .HasColumnName("EU001_CTY_Eligible_EXP");

                entity.Property(e => e.F14).HasMaxLength(255);

                entity.Property(e => e.HkAip)
                    .HasMaxLength(255)
                    .HasColumnName("HK_AIP");

                entity.Property(e => e.JnDualUseGoodsExpLicenseCty)
                    .HasMaxLength(255)
                    .HasColumnName("JN_DUAL_USE_GOODS_EXP_LICENSE_CTY");

                entity.Property(e => e.MlLawsProhibitedCty)
                    .HasMaxLength(255)
                    .HasColumnName("_ML_LAWS_PROHIBITED_CTY");

                entity.Property(e => e.NewZealand)
                    .HasMaxLength(255)
                    .HasColumnName("New_Zealand");

                entity.Property(e => e.SnStsPermitApprovedCty)
                    .HasMaxLength(255)
                    .HasColumnName("SN_STS_PERMIT_APPROVED_CTY");

                entity.Property(e => e.SuppGroup)
                    .HasMaxLength(255)
                    .HasColumnName("Supp_Group");

                entity.Property(e => e.UkCryptoeilLicenseEligibleCty)
                    .HasMaxLength(255)
                    .HasColumnName("UK_CRYPTOEIL_LICENSE_Eligible_CTY");

                entity.Property(e => e.UkOgelEligibleCty)
                    .HasMaxLength(255)
                    .HasColumnName("UK_OGEL_Eligible_CTY");

                entity.Property(e => e.UsArmsEmbargoCtyD)
                    .HasMaxLength(255)
                    .HasColumnName("US_ARMS_EMBARGO_CTY-D");

                entity.Property(e => e.UsEarCheAndBioGrpD)
                    .HasMaxLength(255)
                    .HasColumnName("US_EAR_CHE_and_BIO_GRP-D");

                entity.Property(e => e.UsEarCtyGrpB)
                    .HasMaxLength(255)
                    .HasColumnName("US_EAR_CTY_GRP-B");

                entity.Property(e => e.UsEarCtyGrpD)
                    .HasMaxLength(255)
                    .HasColumnName("US_EAR_CTY_GRP-D");

                entity.Property(e => e.UsEarCtyGrpE)
                    .HasMaxLength(255)
                    .HasColumnName("US_EAR_CTY_GRP-E");

                entity.Property(e => e.UsEarMissTechGrpD)
                    .HasMaxLength(255)
                    .HasColumnName("US_EAR_MISS_TECH_GRP-D");

                entity.Property(e => e.UsEarNatSecGrpD)
                    .HasMaxLength(255)
                    .HasColumnName("US_EAR_NAT_SEC_GRP-D");

                entity.Property(e => e.UsEarNuclearGrpD)
                    .HasMaxLength(255)
                    .HasColumnName("US_EAR_NUCLEAR_GRP-D");

                entity.Property(e => e.UsEarWassenaarCtyA)
                    .HasMaxLength(255)
                    .HasColumnName("US_EAR_Wassenaar_CTY-A");

                entity.Property(e => e.UsElaEligibleCty)
                    .HasMaxLength(255)
                    .HasColumnName("US_ELA-ELIGIBLE_CTY");
            });

            modelBuilder.Entity<LampUser>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("lamp_user");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("created_date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Department)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("department");

                entity.Property(e => e.EndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("end_date");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("first_name");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.LastName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("last_name");

                entity.Property(e => e.Note)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("note");

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("start_date");

                entity.Property(e => e.Status)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("status");

                entity.Property(e => e.Userid)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("userid");
            });

            modelBuilder.Entity<List>(entity =>
            {
                entity.ToTable("List", "HangFire");

                entity.HasIndex(e => e.ExpireAt, "IX_HangFire_List_ExpireAt");

                entity.HasIndex(e => e.Key, "IX_HangFire_List_Key");

                entity.Property(e => e.ExpireAt).HasColumnType("datetime");

                entity.Property(e => e.Key).HasMaxLength(100);
            });

            modelBuilder.Entity<Log>(entity =>
            {
                entity.ToTable("Log");

                entity.Property(e => e.Application).HasMaxLength(50);

                entity.Property(e => e.Level).HasMaxLength(50);

                entity.Property(e => e.Logged).HasColumnType("datetime");

                entity.Property(e => e.Logger).HasMaxLength(250);
            });

            modelBuilder.Entity<MaterialsCounterfeit>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("materials_counterfeit", "wp");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("Material_Key");

                entity.Property(e => e.UnitListPrice).HasColumnName("Unit_List_Price");
            });

            modelBuilder.Entity<MaterialsFinalMedian>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("materials_final_median", "wp");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("material_key");

                entity.Property(e => e.MeanPrice).HasColumnName("mean_price");
            });

            modelBuilder.Entity<MedianTest>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("median_test", "wp");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Material)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("material");

                entity.Property(e => e.Price).HasColumnName("price");
            });

            modelBuilder.Entity<MspAcct>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("msp_acct", "dsf");

                entity.Property(e => e.AccountName)
                    .HasMaxLength(255)
                    .HasColumnName("account_name");

                entity.Property(e => e.Attribute1)
                    .HasMaxLength(255)
                    .HasColumnName("attribute1");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("created_date");

                entity.Property(e => e.SapId)
                    .HasMaxLength(50)
                    .HasColumnName("sap_id");

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .HasColumnName("status");
            });

            modelBuilder.Entity<NameEmailVal>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("name_email_val", "dev");

                entity.Property(e => e.EMailAddress)
                    .HasMaxLength(255)
                    .HasColumnName("E Mail Address");

                entity.Property(e => e.Name).HasMaxLength(255);
            });

            modelBuilder.Entity<NewDomesticReseller>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("new_domestic_reseller", "wp");

                entity.Property(e => e.ResellerCountryName)
                    .HasMaxLength(400)
                    .IsUnicode(false)
                    .HasColumnName("reseller_country_name");

                entity.Property(e => e.ResellerName).HasColumnName("reseller_name");
            });

            modelBuilder.Entity<NodeabilisimRpt>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("nodeabilisim_rpt", "rep");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("am_country_name");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("billto_district");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.BilltoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("billto_postal_code");

                entity.Property(e => e.BilltoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("billto_region");

                entity.Property(e => e.BilltoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street1");

                entity.Property(e => e.BilltoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street2");

                entity.Property(e => e.BilltoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street3");

                entity.Property(e => e.BilltoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street4");

                entity.Property(e => e.BilltoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("billto_street5");

                entity.Property(e => e.BksAccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("bks_account_manager");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .HasColumnName("claim_status");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("created_date");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(100)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_item");

                entity.Property(e => e.DistiCity)
                    .HasMaxLength(255)
                    .HasColumnName("disti_city");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_country_name");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(50)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("disti_postal_code");

                entity.Property(e => e.DistiRegion)
                    .HasMaxLength(255)
                    .HasColumnName("disti_region");

                entity.Property(e => e.DistiStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street1");

                entity.Property(e => e.DistiStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street2");

                entity.Property(e => e.DistiStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street3");

                entity.Property(e => e.DistiStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("disti_street4");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(250)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.EndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_city");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_postal_code");

                entity.Property(e => e.EndCustRegion)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_region");

                entity.Property(e => e.EndCustStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street1");

                entity.Property(e => e.EndCustStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street2");

                entity.Property(e => e.EndCustStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street3");

                entity.Property(e => e.EndCustStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_street4");

                entity.Property(e => e.EndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("end_cust_theater");

                entity.Property(e => e.EndUserStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("end_user_street5");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(150)
                    .HasColumnName("material_key");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("po_type");

                entity.Property(e => e.ProcessedFlag)
                    .HasMaxLength(50)
                    .HasColumnName("processed_flag");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("quote_id");

                entity.Property(e => e.ReportedQty).HasColumnName("reported_qty");

                entity.Property(e => e.ResellerCity)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_city");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_postal_code");

                entity.Property(e => e.ResellerStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street1");

                entity.Property(e => e.ResellerStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street2");

                entity.Property(e => e.ResellerStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street3");

                entity.Property(e => e.ResellerStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_street4");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.RmaNumber)
                    .HasMaxLength(50)
                    .HasColumnName("rma_number");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SerialNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number_orig");

                entity.Property(e => e.ShiptoCity)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_city");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_country_name");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShiptoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_postal_code");

                entity.Property(e => e.ShiptoRegion)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_region");

                entity.Property(e => e.ShiptoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street1");

                entity.Property(e => e.ShiptoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street2");

                entity.Property(e => e.ShiptoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street3");

                entity.Property(e => e.ShiptoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street4");

                entity.Property(e => e.ShiptoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("shipto_street5");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("so_number_orig");

                entity.Property(e => e.SoType)
                    .HasMaxLength(250)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoCity)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_city");

                entity.Property(e => e.SoldtoCountryCode)
                    .HasMaxLength(10)
                    .HasColumnName("soldto_country_code");

                entity.Property(e => e.SoldtoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_country_name");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SoldtoPostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_postal_code");

                entity.Property(e => e.SoldtoStreet1)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street1");

                entity.Property(e => e.SoldtoStreet2)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street2");

                entity.Property(e => e.SoldtoStreet3)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street3");

                entity.Property(e => e.SoldtoStreet4)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street4");

                entity.Property(e => e.SoldtoStreet5)
                    .HasMaxLength(255)
                    .HasColumnName("soldto_street5");

                entity.Property(e => e.SourceImportId).HasColumnName("source_import_id");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(50)
                    .HasColumnName("source_transaction");

                entity.Property(e => e.SvcBilltoCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("svc_billto_country_code");

                entity.Property(e => e.SvcBilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_billto_key");

                entity.Property(e => e.SvcBilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_billto_name");

                entity.Property(e => e.SvcContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_creation_date");

                entity.Property(e => e.SvcContractLineStatus)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_line_status");

                entity.Property(e => e.SvcContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_number");

                entity.Property(e => e.SvcContractStatus)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_status");

                entity.Property(e => e.SvcContractType)
                    .HasMaxLength(250)
                    .HasColumnName("svc_contract_type");

                entity.Property(e => e.SvcCurrency)
                    .HasMaxLength(50)
                    .HasColumnName("svc_currency");

                entity.Property(e => e.SvcEligibleFlag)
                    .HasMaxLength(50)
                    .HasColumnName("svc_eligible_flag");

                entity.Property(e => e.SvcEndCustCity)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_city");

                entity.Property(e => e.SvcEndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_country_code");

                entity.Property(e => e.SvcEndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_country_name");

                entity.Property(e => e.SvcEndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_key");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_name");

                entity.Property(e => e.SvcEndCustTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_end_cust_theater");

                entity.Property(e => e.SvcEndDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_end_date");

                entity.Property(e => e.SvcInstalledAtCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_country_code");

                entity.Property(e => e.SvcInstalledAtCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("svc_installed_at_country_name");

                entity.Property(e => e.SvcInstalledAtDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_district");

                entity.Property(e => e.SvcInstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_installed_at_key");

                entity.Property(e => e.SvcInstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_installed_at_name");

                entity.Property(e => e.SvcListValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_list_value");

                entity.Property(e => e.SvcMaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_desc");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcNetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("svc_net_value");

                entity.Property(e => e.SvcPayerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_country");

                entity.Property(e => e.SvcPayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_payer_key");

                entity.Property(e => e.SvcPayerName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_payer_name");

                entity.Property(e => e.SvcSalesOrder)
                    .HasMaxLength(50)
                    .HasColumnName("svc_sales_order");

                entity.Property(e => e.SvcStartDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_start_date");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(250)
                    .HasColumnName("transaction_type");
            });

            modelBuilder.Entity<NsAlteryxSample>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ns_alteryx_sample");

                entity.Property(e => e.BirthDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Birth Date");

                entity.Property(e => e.Country)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Email).HasMaxLength(35);

                entity.Property(e => e.First).HasMaxLength(12);

                entity.Property(e => e.Gender)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Last).HasMaxLength(19);

                entity.Property(e => e.Prefix)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.RegistrationDateTime)
                    .HasColumnType("datetime")
                    .HasColumnName("Registration Date/Time");

                entity.Property(e => e.UserId).HasColumnName("UserID");
            });

            modelBuilder.Entity<NsAlteryxSample2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ns_alteryx_sample2");

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("COUNTRY_CODE");

                entity.Property(e => e.CountryGrp)
                    .HasMaxLength(50)
                    .HasColumnName("COUNTRY_GRP");

                entity.Property(e => e.CountryName).HasColumnName("COUNTRY_NAME");

                entity.Property(e => e.EeaFlag)
                    .HasMaxLength(50)
                    .HasColumnName("EEA_FLAG");

                entity.Property(e => e.IsoCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("ISO_COUNTRY_CODE");

                entity.Property(e => e.Latitude).HasColumnName("LATITUDE");

                entity.Property(e => e.Longitude).HasColumnName("LONGITUDE");

                entity.Property(e => e.NoSeq).HasColumnName("NO_SEQ");

                entity.Property(e => e.Theater)
                    .HasMaxLength(50)
                    .HasColumnName("THEATER");
            });

            modelBuilder.Entity<NsAvgDiscPerCountry>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ns_AvgDiscPerCountry", "bak");

                entity.Property(e => e.DiscPerc).HasColumnName("disc_perc");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(500)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.TotListAmt).HasColumnName("tot_list_amt");

                entity.Property(e => e.TotNetAmt).HasColumnName("tot_net_amt");
            });

            modelBuilder.Entity<NsAvgDiscPerCountry1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ns_AvgDiscPerCountry", "dev");

                entity.Property(e => e.DiscPerc).HasColumnName("disc_perc");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(500)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.TotListAmt).HasColumnName("tot_list_amt");

                entity.Property(e => e.TotNetAmt).HasColumnName("tot_net_amt");
            });

            modelBuilder.Entity<NsFixLp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ns_fix_lp", "dev");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.NewListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("new_list_price");

                entity.Property(e => e.NewNetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("new_net_price");

                entity.Property(e => e.ProductId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("product_id");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("serial_number");

                entity.Property(e => e.Status)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("status");
            });

            modelBuilder.Entity<NsKpi01>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ns_kpi_01", "dev");

                entity.Property(e => e.EntityCountry)
                    .HasMaxLength(250)
                    .HasColumnName("entity_country");

                entity.Property(e => e.EntityCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("entity_country_code");

                entity.Property(e => e.EntityKey)
                    .HasMaxLength(9)
                    .HasColumnName("entity_key");

                entity.Property(e => e.EntityName)
                    .HasMaxLength(500)
                    .HasColumnName("entity_name");

                entity.Property(e => e.EntityTheater)
                    .HasMaxLength(250)
                    .HasColumnName("entity_theater");

                entity.Property(e => e.EntityType)
                    .HasMaxLength(100)
                    .HasColumnName("entity_type");

                entity.Property(e => e.NsFlag)
                    .HasMaxLength(200)
                    .HasColumnName("ns_flag");
            });

            modelBuilder.Entity<NsLookup>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ns_lookup");

                entity.Property(e => e.Attribute1)
                    .HasMaxLength(500)
                    .HasColumnName("attribute_1");

                entity.Property(e => e.Attribute2)
                    .HasMaxLength(500)
                    .HasColumnName("attribute_2");

                entity.Property(e => e.Attribute3)
                    .HasMaxLength(500)
                    .HasColumnName("attribute_3");

                entity.Property(e => e.Attribute4)
                    .HasMaxLength(800)
                    .HasColumnName("attribute_4");

                entity.Property(e => e.Attribute5).HasColumnName("attribute_5");

                entity.Property(e => e.Attribute6).HasColumnName("attribute_6");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("date")
                    .HasColumnName("created_date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Key1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("key_1");

                entity.Property(e => e.Key2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("key_2");

                entity.Property(e => e.Key3)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("key_3");

                entity.Property(e => e.Status)
                    .HasMaxLength(10)
                    .HasColumnName("status")
                    .HasDefaultValueSql("('ACTIVE')");
            });

            modelBuilder.Entity<NsPartnerAddinfo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ns_partner_addinfo", "dev");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountry)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("am_country");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.ContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("contract_creation_date");

                entity.Property(e => e.ContractEndStartDate)
                    .HasColumnType("date")
                    .HasColumnName("contract_end_start_date");

                entity.Property(e => e.ContractItemNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_item_no");

                entity.Property(e => e.ContractLineItemStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_line_item_status");

                entity.Property(e => e.ContractLineStartDate)
                    .HasColumnType("date")
                    .HasColumnName("contract_line_start_date");

                entity.Property(e => e.ContractNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_number");

                entity.Property(e => e.ContractStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_status");

                entity.Property(e => e.ContractType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_type");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DedupId).HasColumnName("dedup_id");

                entity.Property(e => e.DeliveryDate)
                    .HasColumnType("date")
                    .HasColumnName("delivery_date");

                entity.Property(e => e.DeliveryNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("delivery_number");

                entity.Property(e => e.DistiCountry)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("disti_country");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.EcAddress)
                    .IsUnicode(false)
                    .HasColumnName("ec_address");

                entity.Property(e => e.EcCountry)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ec_country");

                entity.Property(e => e.EcCountryCode)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("ec_country_code");

                entity.Property(e => e.EcCustomer)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("ec_customer");

                entity.Property(e => e.EcGblGroupCompare)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("ec_gbl_group_compare");

                entity.Property(e => e.EcGblJaroScore).HasColumnName("ec_gbl_jaro_score");

                entity.Property(e => e.EcLatitude).HasColumnName("ec_latitude");

                entity.Property(e => e.EcLongitude).HasColumnName("ec_longitude");

                entity.Property(e => e.EcSvcJaroScore).HasColumnName("ec_svc_jaro_score");

                entity.Property(e => e.EcSvcSenzingScore).HasColumnName("ec_svc_senzing_score");

                entity.Property(e => e.EcTheater)
                    .HasMaxLength(250)
                    .HasColumnName("ec_theater");

                entity.Property(e => e.EntityExceptionFlag)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("entity_exception_flag");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ItemNumber).HasColumnName("item_number");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaxGblScore).HasColumnName("max_gbl_score");

                entity.Property(e => e.MspScore).HasColumnName("msp_score");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PartnerLevelKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("partner_level_key");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("po_type");

                entity.Property(e => e.PosEc)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec");

                entity.Property(e => e.PosEcCity)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec_city");

                entity.Property(e => e.PosEcCountry)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec_country");

                entity.Property(e => e.PosEcCountryCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec_country_code");

                entity.Property(e => e.PosEcPostalcode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec_postalcode");

                entity.Property(e => e.PosEcRegion)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec_region");

                entity.Property(e => e.PosEcStreet1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec_street1");

                entity.Property(e => e.PosEcStreet2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec_street2");

                entity.Property(e => e.PosEcStreet3)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec_street3");

                entity.Property(e => e.PosEcStreet4)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec_street4");

                entity.Property(e => e.ProductId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("product_id");

                entity.Property(e => e.ResEcJaroScore).HasColumnName("res_ec_jaro_score");

                entity.Property(e => e.ResEcSenzingScore).HasColumnName("res_ec_senzing_score");

                entity.Property(e => e.ResGblGroupCompare)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("res_gbl_group_compare");

                entity.Property(e => e.ResGblJaroScore).HasColumnName("res_gbl_jaro_score");

                entity.Property(e => e.ResSvcJaroScore).HasColumnName("res_svc_jaro_score");

                entity.Property(e => e.ResSvcSenzingScore).HasColumnName("res_svc_senzing_score");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.SameEndCustFlag)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("same_end_cust_flag");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("serial_number");

                entity.Property(e => e.ShiptoCountry)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_country");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoDistrict)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_district");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShiptoPostalCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_postal_code");

                entity.Property(e => e.ShiptoRegion)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_region");

                entity.Property(e => e.ShiptoStreet1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street1");

                entity.Property(e => e.ShiptoStreet2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street2");

                entity.Property(e => e.ShiptoStreet3)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street3");

                entity.Property(e => e.ShiptoStreet4)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street4");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("so_type");

                entity.Property(e => e.SvcCountry)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("svc_country");

                entity.Property(e => e.SvcCountryCode)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("svc_country_code");

                entity.Property(e => e.SvcCustomer)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("svc_customer");

                entity.Property(e => e.SvcGblGroupCompare)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("svc_gbl_group_compare");

                entity.Property(e => e.SvcGblJaroScore).HasColumnName("svc_gbl_jaro_score");

                entity.Property(e => e.SvcLatitude).HasColumnName("svc_latitude");

                entity.Property(e => e.SvcLongitude).HasColumnName("svc_longitude");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_theater");

                entity.Property(e => e.TransactionItem)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("transaction_item");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Transaction_type");
            });

            modelBuilder.Entity<NsPartnerAddinfo1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ns_partner_addinfo1", "dev");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountry)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("am_country");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.ContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("contract_creation_date");

                entity.Property(e => e.ContractEndStartDate)
                    .HasColumnType("date")
                    .HasColumnName("contract_end_start_date");

                entity.Property(e => e.ContractItemNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_item_no");

                entity.Property(e => e.ContractLineItemStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_line_item_status");

                entity.Property(e => e.ContractLineStartDate)
                    .HasColumnType("date")
                    .HasColumnName("contract_line_start_date");

                entity.Property(e => e.ContractNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_number");

                entity.Property(e => e.ContractStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_status");

                entity.Property(e => e.ContractType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_type");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DedupId).HasColumnName("dedup_id");

                entity.Property(e => e.DeliveryDate)
                    .HasColumnType("date")
                    .HasColumnName("delivery_date");

                entity.Property(e => e.DeliveryNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("delivery_number");

                entity.Property(e => e.DistiCountry)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("disti_country");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.EcAddress)
                    .IsUnicode(false)
                    .HasColumnName("ec_address");

                entity.Property(e => e.EcCountry)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ec_country");

                entity.Property(e => e.EcCountryCode)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("ec_country_code");

                entity.Property(e => e.EcCustomer)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("ec_customer");

                entity.Property(e => e.EcGblGroupCompare)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("ec_gbl_group_compare");

                entity.Property(e => e.EcGblJaroScore).HasColumnName("ec_gbl_jaro_score");

                entity.Property(e => e.EcLatitude).HasColumnName("ec_latitude");

                entity.Property(e => e.EcLongitude).HasColumnName("ec_longitude");

                entity.Property(e => e.EcSvcJaroScore).HasColumnName("ec_svc_jaro_score");

                entity.Property(e => e.EcSvcSenzingScore).HasColumnName("ec_svc_senzing_score");

                entity.Property(e => e.EcTheater)
                    .HasMaxLength(250)
                    .HasColumnName("ec_theater");

                entity.Property(e => e.EntityExceptionFlag)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("entity_exception_flag");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ItemNumber).HasColumnName("item_number");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaxGblScore).HasColumnName("max_gbl_score");

                entity.Property(e => e.MspScore).HasColumnName("msp_score");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PartnerLevelKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("partner_level_key");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("po_type");

                entity.Property(e => e.PosEc)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec");

                entity.Property(e => e.PosEcCity)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec_city");

                entity.Property(e => e.PosEcCountry)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec_country");

                entity.Property(e => e.PosEcCountryCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec_country_code");

                entity.Property(e => e.PosEcPostalcode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec_postalcode");

                entity.Property(e => e.PosEcRegion)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec_region");

                entity.Property(e => e.PosEcStreet1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec_street1");

                entity.Property(e => e.PosEcStreet2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec_street2");

                entity.Property(e => e.PosEcStreet3)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec_street3");

                entity.Property(e => e.PosEcStreet4)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec_street4");

                entity.Property(e => e.ProductId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("product_id");

                entity.Property(e => e.ResEcJaroScore).HasColumnName("res_ec_jaro_score");

                entity.Property(e => e.ResEcSenzingScore).HasColumnName("res_ec_senzing_score");

                entity.Property(e => e.ResGblGroupCompare)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("res_gbl_group_compare");

                entity.Property(e => e.ResGblJaroScore).HasColumnName("res_gbl_jaro_score");

                entity.Property(e => e.ResSvcJaroScore).HasColumnName("res_svc_jaro_score");

                entity.Property(e => e.ResSvcSenzingScore).HasColumnName("res_svc_senzing_score");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.SameEndCustFlag)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("same_end_cust_flag");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("serial_number");

                entity.Property(e => e.ShiptoCountry)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_country");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoDistrict)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_district");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShiptoPostalCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_postal_code");

                entity.Property(e => e.ShiptoRegion)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_region");

                entity.Property(e => e.ShiptoStreet1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street1");

                entity.Property(e => e.ShiptoStreet2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street2");

                entity.Property(e => e.ShiptoStreet3)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street3");

                entity.Property(e => e.ShiptoStreet4)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street4");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("so_type");

                entity.Property(e => e.SvcCountry)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("svc_country");

                entity.Property(e => e.SvcCountryCode)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("svc_country_code");

                entity.Property(e => e.SvcCustomer)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("svc_customer");

                entity.Property(e => e.SvcEcKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_ec_key");

                entity.Property(e => e.SvcEcName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_ec_name");

                entity.Property(e => e.SvcGblGroupCompare)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("svc_gbl_group_compare");

                entity.Property(e => e.SvcGblJaroScore).HasColumnName("svc_gbl_jaro_score");

                entity.Property(e => e.SvcLatitude).HasColumnName("svc_latitude");

                entity.Property(e => e.SvcLongitude).HasColumnName("svc_longitude");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_theater");

                entity.Property(e => e.TransactionItem)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("transaction_item");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Transaction_type");
            });

            modelBuilder.Entity<NsPartnerAddinfo2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ns_partner_addinfo2", "dev");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AmCountry)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("am_country");

                entity.Property(e => e.AmCountryCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("am_country_code");

                entity.Property(e => e.AmTheater)
                    .HasMaxLength(250)
                    .HasColumnName("am_theater");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.ContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("contract_creation_date");

                entity.Property(e => e.ContractEndStartDate)
                    .HasColumnType("date")
                    .HasColumnName("contract_end_start_date");

                entity.Property(e => e.ContractItemNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_item_no");

                entity.Property(e => e.ContractLineItemStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_line_item_status");

                entity.Property(e => e.ContractLineStartDate)
                    .HasColumnType("date")
                    .HasColumnName("contract_line_start_date");

                entity.Property(e => e.ContractNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_number");

                entity.Property(e => e.ContractStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_status");

                entity.Property(e => e.ContractType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contract_type");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DedupId).HasColumnName("dedup_id");

                entity.Property(e => e.DeliveryDate)
                    .HasColumnType("date")
                    .HasColumnName("delivery_date");

                entity.Property(e => e.DeliveryNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("delivery_number");

                entity.Property(e => e.DistiCountry)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("disti_country");

                entity.Property(e => e.DistiCountryCode)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("disti_country_code");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiTheater)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("disti_theater");

                entity.Property(e => e.DiversionType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("diversion_type");

                entity.Property(e => e.EcAddress)
                    .IsUnicode(false)
                    .HasColumnName("ec_address");

                entity.Property(e => e.EcCountry)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ec_country");

                entity.Property(e => e.EcCountryCode)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("ec_country_code");

                entity.Property(e => e.EcCustomer)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("ec_customer");

                entity.Property(e => e.EcGblGroupCompare)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("ec_gbl_group_compare");

                entity.Property(e => e.EcGblJaroScore).HasColumnName("ec_gbl_jaro_score");

                entity.Property(e => e.EcLatitude).HasColumnName("ec_latitude");

                entity.Property(e => e.EcLongitude).HasColumnName("ec_longitude");

                entity.Property(e => e.EcSvcJaroScore).HasColumnName("ec_svc_jaro_score");

                entity.Property(e => e.EcSvcSenzingScore).HasColumnName("ec_svc_senzing_score");

                entity.Property(e => e.EcTheater)
                    .HasMaxLength(250)
                    .HasColumnName("ec_theater");

                entity.Property(e => e.EntityExceptionFlag)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("entity_exception_flag");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ItemNumber).HasColumnName("item_number");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.MaxGblScore).HasColumnName("max_gbl_score");

                entity.Property(e => e.MspScore).HasColumnName("msp_score");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PartnerLevelKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("partner_level_key");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("po_type");

                entity.Property(e => e.PosEc)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec");

                entity.Property(e => e.PosEcCity)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec_city");

                entity.Property(e => e.PosEcCountry)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec_country");

                entity.Property(e => e.PosEcCountryCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec_country_code");

                entity.Property(e => e.PosEcPostalcode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec_postalcode");

                entity.Property(e => e.PosEcRegion)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec_region");

                entity.Property(e => e.PosEcStreet1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec_street1");

                entity.Property(e => e.PosEcStreet2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec_street2");

                entity.Property(e => e.PosEcStreet3)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec_street3");

                entity.Property(e => e.PosEcStreet4)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ec_street4");

                entity.Property(e => e.ProductId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("product_id");

                entity.Property(e => e.ResEcJaroScore).HasColumnName("res_ec_jaro_score");

                entity.Property(e => e.ResEcSenzingScore).HasColumnName("res_ec_senzing_score");

                entity.Property(e => e.ResGblGroupCompare)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("res_gbl_group_compare");

                entity.Property(e => e.ResGblJaroScore).HasColumnName("res_gbl_jaro_score");

                entity.Property(e => e.ResSvcJaroScore).HasColumnName("res_svc_jaro_score");

                entity.Property(e => e.ResSvcSenzingScore).HasColumnName("res_svc_senzing_score");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.SameEndCustFlag)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("same_end_cust_flag");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("serial_number");

                entity.Property(e => e.ShiptoCountry)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_country");

                entity.Property(e => e.ShiptoCountryCode)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("shipto_country_code");

                entity.Property(e => e.ShiptoCustomer)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoDistrict)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_district");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShiptoPostalCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_postal_code");

                entity.Property(e => e.ShiptoRegion)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_region");

                entity.Property(e => e.ShiptoStreet1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street1");

                entity.Property(e => e.ShiptoStreet2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street2");

                entity.Property(e => e.ShiptoStreet3)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street3");

                entity.Property(e => e.ShiptoStreet4)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street4");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("so_type");

                entity.Property(e => e.SvcAddress)
                    .HasMaxLength(4000)
                    .HasColumnName("svc_address");

                entity.Property(e => e.SvcCountry)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("svc_country");

                entity.Property(e => e.SvcCountryCode)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("svc_country_code");

                entity.Property(e => e.SvcCustName)
                    .HasMaxLength(2000)
                    .HasColumnName("svc_cust_name");

                entity.Property(e => e.SvcCustomer)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("svc_customer");

                entity.Property(e => e.SvcEcKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_ec_key");

                entity.Property(e => e.SvcEcName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_ec_name");

                entity.Property(e => e.SvcGblGroupCompare)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("svc_gbl_group_compare");

                entity.Property(e => e.SvcGblJaroScore).HasColumnName("svc_gbl_jaro_score");

                entity.Property(e => e.SvcLatitude).HasColumnName("svc_latitude");

                entity.Property(e => e.SvcLongitude).HasColumnName("svc_longitude");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_theater");

                entity.Property(e => e.TransactionItem)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("transaction_item");

                entity.Property(e => e.TransactionNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("transaction_number");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Transaction_type");
            });

            modelBuilder.Entity<NsPos2018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ns_pos_2018", "dev");

                entity.HasIndex(e => e.Reseller1LongText, "ns_pos_20181");

                entity.Property(e => e.BillToPartyBasDistrictKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___BAS__District__Key_");

                entity.Property(e => e.BillToPartyBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___BAS__Postal_Code__Key_");

                entity.Property(e => e.BillToPartyBasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party___BAS___Street_2__Key_");

                entity.Property(e => e.BillToPartyBasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party___BAS___Street_3__Key_");

                entity.Property(e => e.BillToPartyBasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party___BAS___Street_4__Key_");

                entity.Property(e => e.BillToPartyBasStreetKey)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party___BAS__Street__Key_");

                entity.Property(e => e.BillToPartyCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___Country__Key_");

                entity.Property(e => e.BillToPartyCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___Country__Text_");

                entity.Property(e => e.BillToPartyKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___Key");

                entity.Property(e => e.BillToPartyLongText)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party___Long_Text");

                entity.Property(e => e.BillToPartyRegionKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___Region__Key_");

                entity.Property(e => e.ChannelPartnerKey)
                    .HasMaxLength(50)
                    .HasColumnName("Channel_Partner___Key");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(50)
                    .HasColumnName("CI_Status");

                entity.Property(e => e.ClaimAmountInUsd)
                    .HasMaxLength(50)
                    .HasColumnName("Claim_Amount_in_USD");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(50)
                    .HasColumnName("Claim_Status");

                entity.Property(e => e.DistributorBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Distributor___BAS__Postal_Code__Key_");

                entity.Property(e => e.DistributorBasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Distributor___BAS___Street_2__Key_");

                entity.Property(e => e.DistributorBasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Distributor___BAS___Street_3__Key_");

                entity.Property(e => e.DistributorBasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Distributor___BAS___Street_4__Key_");

                entity.Property(e => e.DistributorBasStreetKey)
                    .HasMaxLength(250)
                    .HasColumnName("Distributor___BAS__Street__Key_");

                entity.Property(e => e.DistributorCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("Distributor___Country__Key_");

                entity.Property(e => e.DistributorCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Distributor___Country__Text_");

                entity.Property(e => e.DistributorDistrictKey)
                    .HasMaxLength(50)
                    .HasColumnName("Distributor___District__Key_");

                entity.Property(e => e.DistributorKey)
                    .HasMaxLength(50)
                    .HasColumnName("Distributor___Key");

                entity.Property(e => e.DistributorLongText)
                    .HasMaxLength(250)
                    .HasColumnName("Distributor___Long_Text");

                entity.Property(e => e.DistributorRegionKey)
                    .HasMaxLength(50)
                    .HasColumnName("Distributor___Region__Key_");

                entity.Property(e => e.DistributorSalesOrPdisslsonKey)
                    .HasMaxLength(50)
                    .HasColumnName("Distributor_Sales_Or__PDISSLSON____Key");

                entity.Property(e => e.DocumentOrderNumbe)
                    .HasMaxLength(50)
                    .HasColumnName("Document_Order_numbe");

                entity.Property(e => e.EndCustomerBasDistrictKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___BAS__District__Key_");

                entity.Property(e => e.EndCustomerBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___BAS__Postal_Code__Key_");

                entity.Property(e => e.EndCustomerBasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___BAS___Street_2__Key_");

                entity.Property(e => e.EndCustomerBasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___BAS___Street_3__Key_");

                entity.Property(e => e.EndCustomerBasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___BAS___Street_4__Key_");

                entity.Property(e => e.EndCustomerBasStreetKey)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___BAS__Street__Key_");

                entity.Property(e => e.EndCustomerCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Country__Key_");

                entity.Property(e => e.EndCustomerCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Country__Text_");

                entity.Property(e => e.EndCustomerKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Key");

                entity.Property(e => e.EndCustomerLongText)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___Long_Text");

                entity.Property(e => e.EndCustomerPoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer_PO_Number");

                entity.Property(e => e.EndCustomerRegionKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Region__Key_");

                entity.Property(e => e.ItemCreatedDate)
                    .HasMaxLength(50)
                    .HasColumnName("Item_Created_Date");

                entity.Property(e => e.ItemNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Item_Number");

                entity.Property(e => e.JuniperPosValue)
                    .HasMaxLength(50)
                    .HasColumnName("Juniper_POS_Value");

                entity.Property(e => e.JuniperProductSeri)
                    .HasMaxLength(50)
                    .HasColumnName("Juniper_Product_Seri");

                entity.Property(e => e.Material).HasMaxLength(50);

                entity.Property(e => e.MaterialEccnKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___ECCN__Key_");

                entity.Property(e => e.MaterialHtsKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___HTS__Key_");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___Key");

                entity.Property(e => e.MaterialMaterialTypeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___Material_type__Key_");

                entity.Property(e => e.MaterialMaterialTypeText)
                    .HasMaxLength(50)
                    .HasColumnName("Material___Material_type__Text_");

                entity.Property(e => e.MaterialProductCategoryText)
                    .HasMaxLength(50)
                    .HasColumnName("Material___Product_Category__Text_");

                entity.Property(e => e.ReportedQuantity)
                    .HasMaxLength(50)
                    .HasColumnName("Reported_Quantity");

                entity.Property(e => e.ResaleShipDate)
                    .HasMaxLength(50)
                    .HasColumnName("Resale_ship_date");

                entity.Property(e => e.Reseller1BasDistrictKey)
                    .HasMaxLength(50)
                    .HasColumnName("Reseller_1___BAS__District__Key_");

                entity.Property(e => e.Reseller1BasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Reseller_1___BAS__Postal_Code__Key_");

                entity.Property(e => e.Reseller1BasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Reseller_1___BAS___Street_2__Key_");

                entity.Property(e => e.Reseller1BasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Reseller_1___BAS___Street_3__Key_");

                entity.Property(e => e.Reseller1BasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Reseller_1___BAS___Street_4__Key_");

                entity.Property(e => e.Reseller1BasStreetKey)
                    .HasMaxLength(250)
                    .HasColumnName("Reseller_1___BAS__Street__Key_");

                entity.Property(e => e.Reseller1CountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("Reseller_1___Country__Key_");

                entity.Property(e => e.Reseller1CountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Reseller_1___Country__Text_");

                entity.Property(e => e.Reseller1Key)
                    .HasMaxLength(50)
                    .HasColumnName("Reseller_1___Key");

                entity.Property(e => e.Reseller1LongText)
                    .HasMaxLength(250)
                    .HasColumnName("Reseller_1___Long_Text");

                entity.Property(e => e.ResellerPoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Reseller_PO_Number");

                entity.Property(e => e.SalesOrderNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Sales_Order_Number");

                entity.Property(e => e.SdContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("SD_Contract_Number");

                entity.Property(e => e.TransactionDate)
                    .HasMaxLength(50)
                    .HasColumnName("Transaction_Date");

                entity.Property(e => e.TransactionQuantity)
                    .HasMaxLength(50)
                    .HasColumnName("Transaction_Quantity");

                entity.Property(e => e.TransmissionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Transmission_Number");
            });

            modelBuilder.Entity<NsPsCust>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ns_ps_cust", "dev");

                entity.Property(e => e.CustName)
                    .HasMaxLength(255)
                    .HasColumnName("cust_name");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.PublicSector).HasMaxLength(10);
            });

            modelBuilder.Entity<NsShipmentLines2018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ns_shipment_lines_2018", "dev");

                entity.HasIndex(e => e.SoNumber, "ns_shipment_lines1");

                entity.Property(e => e.BillToPartyCity)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party_City");

                entity.Property(e => e.BillToPartyCountry)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party_Country");

                entity.Property(e => e.BillToPartyKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party_Key");

                entity.Property(e => e.BillToPartyName)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party_Name");

                entity.Property(e => e.BillToPartyStreet1)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party_Street1");

                entity.Property(e => e.BillToPartyStreet2)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party_Street2");

                entity.Property(e => e.BillToPartyStreet3)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party_Street3");

                entity.Property(e => e.BillToPartyStreet4)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party_Street4");

                entity.Property(e => e.BillToPartyStreet5)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party_Street5");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(50)
                    .HasColumnName("Customer_Group");

                entity.Property(e => e.DeliveryDate)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Date");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Item");

                entity.Property(e => e.DeliveryNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Number");

                entity.Property(e => e.DeliveryType)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Type");

                entity.Property(e => e.Eccn)
                    .HasMaxLength(50)
                    .HasColumnName("ECCN");

                entity.Property(e => e.EndUserCity)
                    .HasMaxLength(50)
                    .HasColumnName("End_User_City");

                entity.Property(e => e.EndUserCountry)
                    .HasMaxLength(50)
                    .HasColumnName("End_User_Country");

                entity.Property(e => e.EndUserKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_User_Key");

                entity.Property(e => e.EndUserName)
                    .HasMaxLength(250)
                    .HasColumnName("End_User_Name");

                entity.Property(e => e.EndUserStreet1)
                    .HasMaxLength(250)
                    .HasColumnName("End_User_Street1");

                entity.Property(e => e.EndUserStreet2)
                    .HasMaxLength(250)
                    .HasColumnName("End_User_Street2");

                entity.Property(e => e.EndUserStreet3)
                    .HasMaxLength(250)
                    .HasColumnName("End_User_Street3");

                entity.Property(e => e.EndUserStreet4)
                    .HasMaxLength(250)
                    .HasColumnName("End_User_Street4");

                entity.Property(e => e.EndUserStreet5)
                    .HasMaxLength(250)
                    .HasColumnName("End_User_Street5");

                entity.Property(e => e.Hts)
                    .HasMaxLength(50)
                    .HasColumnName("HTS");

                entity.Property(e => e.ListPrice)
                    .HasMaxLength(50)
                    .HasColumnName("List_Price");

                entity.Property(e => e.Material).HasMaxLength(50);

                entity.Property(e => e.MaterialOfferingType)
                    .HasMaxLength(50)
                    .HasColumnName("Material_Offering_Type");

                entity.Property(e => e.MaterialType)
                    .HasMaxLength(50)
                    .HasColumnName("Material_Type");

                entity.Property(e => e.NetValue)
                    .HasMaxLength(50)
                    .HasColumnName("Net_Value");

                entity.Property(e => e.PlantKey)
                    .HasMaxLength(50)
                    .HasColumnName("Plant_Key");

                entity.Property(e => e.PlantName)
                    .HasMaxLength(250)
                    .HasColumnName("Plant_Name");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("PO_Type");

                entity.Property(e => e.Quantity).HasMaxLength(50);

                entity.Property(e => e.SalesOrgKey)
                    .HasMaxLength(50)
                    .HasColumnName("Sales_Org_Key");

                entity.Property(e => e.SalesOrgName)
                    .HasMaxLength(250)
                    .HasColumnName("Sales_Org_Name");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Serial_Number");

                entity.Property(e => e.ShipToCity)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_City");

                entity.Property(e => e.ShipToCountry)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_Country");

                entity.Property(e => e.ShipToCustomer)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Customer");

                entity.Property(e => e.ShipToKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_Key");

                entity.Property(e => e.ShipToStreet1)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Street1");

                entity.Property(e => e.ShipToStreet2)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Street2");

                entity.Property(e => e.ShipToStreet3)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Street3");

                entity.Property(e => e.ShipToStreet4)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Street4");

                entity.Property(e => e.ShipToStreet5)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Street5");

                entity.Property(e => e.SoDate)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Date");

                entity.Property(e => e.SoItem)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Number");

                entity.Property(e => e.SoType)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Type");

                entity.Property(e => e.SoldToCity)
                    .HasMaxLength(50)
                    .HasColumnName("Sold_To_City");

                entity.Property(e => e.SoldToCountry)
                    .HasMaxLength(50)
                    .HasColumnName("Sold_To_Country");

                entity.Property(e => e.SoldToKey)
                    .HasMaxLength(50)
                    .HasColumnName("Sold_To_Key");

                entity.Property(e => e.SoldToName)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Name");

                entity.Property(e => e.SoldToStreet1)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Street1");

                entity.Property(e => e.SoldToStreet2)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Street2");

                entity.Property(e => e.SoldToStreet3)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Street3");

                entity.Property(e => e.SoldToStreet4)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Street4");

                entity.Property(e => e.SoldToStreet5)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Street5");
            });

            modelBuilder.Entity<NsSoResellerAm2018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ns_so_reseller_am_2018", "dev");

                entity.HasIndex(e => e.OrderIdKey, "ns_so_reseller_am");

                entity.HasIndex(e => e.ResellerLongText, "ns_so_reseller_am2");

                entity.Property(e => e.EmployeeResponsibleCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("Employee_Responsible___Country__Key_");

                entity.Property(e => e.EmployeeResponsibleLongText)
                    .HasMaxLength(150)
                    .HasColumnName("Employee_Responsible___Long_Text");

                entity.Property(e => e.EndCustomerGsaFlagText)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___GSA_Flag__Text_");

                entity.Property(e => e.EndCustomerPartnerLevelText)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Partner_Level__Text_");

                entity.Property(e => e.OrderIdKey)
                    .HasMaxLength(50)
                    .HasColumnName("Order_ID___Key");

                entity.Property(e => e.ResellerBasDistrictText)
                    .HasMaxLength(50)
                    .HasColumnName("Reseller___BAS__District__Text_");

                entity.Property(e => e.ResellerCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("Reseller___Country__Key_");

                entity.Property(e => e.ResellerGsaFlagText)
                    .HasMaxLength(50)
                    .HasColumnName("Reseller___GSA_Flag__Text_");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("Reseller___Key");

                entity.Property(e => e.ResellerLongText)
                    .HasMaxLength(250)
                    .HasColumnName("Reseller___Long_Text");

                entity.Property(e => e.ResellerPartnerLevelKey)
                    .HasMaxLength(50)
                    .HasColumnName("Reseller___Partner_Level__Key_");

                entity.Property(e => e.SoldToPartyGsaFlagText)
                    .HasMaxLength(50)
                    .HasColumnName("Sold_To_Party___GSA_Flag__Text_");

                entity.Property(e => e.TransactionCreatedKey)
                    .HasMaxLength(50)
                    .HasColumnName("Transaction_Created___Key");
            });

            modelBuilder.Entity<NsTest>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ns_test", "dev");

                entity.Property(e => e.IsBit).HasColumnName("isBit");

                entity.Property(e => e.IsBoolean).HasColumnName("isBoolean");
            });

            modelBuilder.Entity<NsTmp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ns_tmp", "dev");

                entity.Property(e => e.ProductId)
                    .HasMaxLength(50)
                    .HasColumnName("product_id");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");
            });

            modelBuilder.Entity<PartnerAnalyzer>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("partner_analyzer_s", "dev");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(255)
                    .HasColumnName("channel_model");

                entity.Property(e => e.DiscountForDivertedProducts).HasColumnName("% Discount for Diverted Products");

                entity.Property(e => e.Diversion).HasColumnName("Diversion %");

                entity.Property(e => e.GreyMarketLossBasedOnStandardDiscountOf37).HasColumnName("GreyMarket % Loss Based on Standard Discount of 37%");

                entity.Property(e => e.GreyMarketLossBasedOnStandardDiscountOf371).HasColumnName("GreyMarket $ Loss Based on Standard Discount of 37%");

                entity.Property(e => e.ListPriceOfFlaggedDivertedProducts).HasColumnName("$ List Price of Flagged Diverted Products");

                entity.Property(e => e.NumberOfLinesSnsWithCountryMismatches).HasColumnName("Number of Lines (SNs) with Country Mismatches");

                entity.Property(e => e.NumberOfLinesWithServiceAttached).HasColumnName("Number of Lines with Service Attached");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("Reseller Country ");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("Reseller Name");

                entity.Property(e => e.ServiceAttach).HasColumnName("Service Attach %");

                entity.Property(e => e.TotalNumberOfLinesReportedInJan2016May2017).HasColumnName("Total Number of Lines Reported in Jan 2016 -  May 2017 ");

                entity.Property(e => e.ValueOfAllProductsSold).HasColumnName("$ Value of All Products Sold");

                entity.Property(e => e.ValueOfFlaggedDivertedProducts).HasColumnName("$ Value of Flagged Diverted Products");

                entity.Property(e => e.ValueOfProductsWithServiceAttached).HasColumnName("$ Value of Products with Service Attached");
            });

            modelBuilder.Entity<PartnerAnalyzerDVw>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("partner_analyzer_d_vw", "dev");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("channel_model");

                entity.Property(e => e.DeliveryDate)
                    .HasColumnType("datetime")
                    .HasColumnName("delivery_date");

                entity.Property(e => e.DeliveryNumber)
                    .HasMaxLength(255)
                    .HasColumnName("delivery_number");

                entity.Property(e => e.EcCountry)
                    .HasMaxLength(255)
                    .HasColumnName("ec_country");

                entity.Property(e => e.EcCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("ec_country_code");

                entity.Property(e => e.EcCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("ec_customer");

                entity.Property(e => e.EcLatitude).HasColumnName("ec_latitude");

                entity.Property(e => e.EcLongitude).HasColumnName("ec_longitude");

                entity.Property(e => e.EcTheater)
                    .HasMaxLength(250)
                    .HasColumnName("ec_theater");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ListPrice).HasColumnName("list_price");

                entity.Property(e => e.NetPrice).HasColumnName("net_price");

                entity.Property(e => e.ProductId)
                    .HasMaxLength(255)
                    .HasColumnName("product_id");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(255)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(255)
                    .HasColumnName("so_number");

                entity.Property(e => e.SvcCountry)
                    .HasMaxLength(250)
                    .HasColumnName("svc_country");

                entity.Property(e => e.SvcCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("svc_country_code");

                entity.Property(e => e.SvcCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("svc_customer");

                entity.Property(e => e.SvcLatitude).HasColumnName("svc_latitude");

                entity.Property(e => e.SvcLongitude).HasColumnName("svc_longitude");

                entity.Property(e => e.SvcTheater)
                    .HasMaxLength(250)
                    .HasColumnName("svc_theater");
            });

            modelBuilder.Entity<PartnerAnalyzerDestOrig>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("partner_analyzer_dest_orig", "dev");

                entity.Property(e => e.Cnt).HasColumnName("cnt");

                entity.Property(e => e.Cntry)
                    .HasMaxLength(255)
                    .HasColumnName("cntry");

                entity.Property(e => e.DestinationCntry)
                    .HasMaxLength(250)
                    .HasColumnName("destination_cntry");

                entity.Property(e => e.Latitude).HasColumnName("latitude");

                entity.Property(e => e.Longitude).HasColumnName("longitude");

                entity.Property(e => e.PathId)
                    .HasMaxLength(506)
                    .HasColumnName("path_id");

                entity.Property(e => e.PathType)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("path_type");
            });

            modelBuilder.Entity<PartnerAnalyzerDestOrig1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("partner_analyzer_dest_orig1", "dev");

                entity.Property(e => e.Cnt).HasColumnName("cnt");

                entity.Property(e => e.Cntry)
                    .HasMaxLength(255)
                    .HasColumnName("cntry");

                entity.Property(e => e.DestinationCntry)
                    .HasMaxLength(250)
                    .HasColumnName("destination_cntry");

                entity.Property(e => e.Latitude).HasColumnName("latitude");

                entity.Property(e => e.Longitude).HasColumnName("longitude");

                entity.Property(e => e.PathId)
                    .HasMaxLength(506)
                    .HasColumnName("path_id");

                entity.Property(e => e.PathType)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("path_type");
            });

            modelBuilder.Entity<PartnerAnalyzerDistiDrsp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("partner_analyzer_disti_drsp", "dev");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(255)
                    .HasColumnName("Customer_Group");

                entity.Property(e => e.DeliveryDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Delivery_Date");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(255)
                    .HasColumnName("Delivery_Item");

                entity.Property(e => e.DeliveryNumber)
                    .HasMaxLength(255)
                    .HasColumnName("Delivery_Number");

                entity.Property(e => e.DeliveryType)
                    .HasMaxLength(255)
                    .HasColumnName("Delivery_Type");

                entity.Property(e => e.EndCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("End Customer");

                entity.Property(e => e.EndCustomerCountrySales)
                    .HasMaxLength(255)
                    .HasColumnName("End Customer Country Sales");

                entity.Property(e => e.EndCustomerCountryServices)
                    .HasMaxLength(255)
                    .HasColumnName("End Customer Country Services");

                entity.Property(e => e.EndCustomerSales)
                    .HasMaxLength(255)
                    .HasColumnName("End Customer Sales");

                entity.Property(e => e.EndCustomerServices)
                    .HasMaxLength(255)
                    .HasColumnName("End Customer Services");

                entity.Property(e => e.EndUserKey)
                    .HasMaxLength(255)
                    .HasColumnName("End_User_Key");

                entity.Property(e => e.EuCountryMismatch).HasColumnName("EU Country Mismatch");

                entity.Property(e => e.F10).HasMaxLength(255);

                entity.Property(e => e.IvarCountry)
                    .HasMaxLength(255)
                    .HasColumnName("IVAR Country");

                entity.Property(e => e.IvarName)
                    .HasMaxLength(255)
                    .HasColumnName("IVAR Name");

                entity.Property(e => e.ListPrice).HasColumnName("List_Price");

                entity.Property(e => e.NetValue).HasColumnName("Net_Value");

                entity.Property(e => e.PoType)
                    .HasMaxLength(255)
                    .HasColumnName("PO_Type");

                entity.Property(e => e.ProductId)
                    .HasMaxLength(255)
                    .HasColumnName("Product ID");

                entity.Property(e => e.ProductSerialNumberSales)
                    .HasMaxLength(255)
                    .HasColumnName("Product Serial Number Sales");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(255)
                    .HasColumnName("Reseller_Key");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(255)
                    .HasColumnName("Serial Number");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(255)
                    .HasColumnName("SO_Number");

                entity.Property(e => e.SoType)
                    .HasMaxLength(255)
                    .HasColumnName("SO_Type");

                entity.Property(e => e.SoldToCountry)
                    .HasMaxLength(255)
                    .HasColumnName("Sold_To_Country");

                entity.Property(e => e.SoldToKey)
                    .HasMaxLength(255)
                    .HasColumnName("Sold_To_Key");

                entity.Property(e => e.SoldToName)
                    .HasMaxLength(255)
                    .HasColumnName("Sold_To_Name");
            });

            modelBuilder.Entity<PartnerAnalyzerDistiStck>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("partner_analyzer_disti_stck", "dev");

                entity.Property(e => e.BillToPartyBasPostalCodeKey)
                    .HasMaxLength(255)
                    .HasColumnName("Bill-To Party - BAS: Postal Code (Key)");

                entity.Property(e => e.BillToPartyBasStreet2Key)
                    .HasMaxLength(255)
                    .HasColumnName("Bill-To Party - BAS:  Street 2 (Key)");

                entity.Property(e => e.BillToPartyBasStreet3Key)
                    .HasMaxLength(255)
                    .HasColumnName("Bill-To Party - BAS:  Street 3 (Key)");

                entity.Property(e => e.BillToPartyBasStreet4Key)
                    .HasMaxLength(255)
                    .HasColumnName("Bill-To Party - BAS:  Street 4 (Key)");

                entity.Property(e => e.BillToPartyBasStreetKey)
                    .HasMaxLength(255)
                    .HasColumnName("Bill-To Party - BAS: Street (Key)");

                entity.Property(e => e.BillToPartyRegionKey)
                    .HasMaxLength(255)
                    .HasColumnName("Bill-To Party - Region (Key)");

                entity.Property(e => e.ChannelPartnerKey)
                    .HasMaxLength(255)
                    .HasColumnName("Channel Partner - Key");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .HasColumnName("CI Status");

                entity.Property(e => e.ClaimAmount).HasColumnName("Claim Amount");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .HasColumnName("Claim Status");

                entity.Property(e => e.ContractCreationDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Contract Creation Date");

                entity.Property(e => e.ContractItemNo)
                    .HasMaxLength(255)
                    .HasColumnName("Contract item No");

                entity.Property(e => e.ContractLineItemStatusDescription)
                    .HasMaxLength(255)
                    .HasColumnName("Contract Line Item Status Description");

                entity.Property(e => e.ContractNumber)
                    .HasMaxLength(255)
                    .HasColumnName("Contract Number");

                entity.Property(e => e.ContractStatusText)
                    .HasMaxLength(255)
                    .HasColumnName("Contract Status - Text");

                entity.Property(e => e.Currency).HasMaxLength(255);

                entity.Property(e => e.DiscountBySvcECAvgDiscountByCountry).HasColumnName("% DiscountBySvcE#C_Avg Discount by Country");

                entity.Property(e => e.DiscountDoNotUse)
                    .HasMaxLength(255)
                    .HasColumnName("Discount - Do Not Use");

                entity.Property(e => e.DiscountGiven).HasColumnName("% Discount Given");

                entity.Property(e => e.DiscountGiven1).HasColumnName("Discount Given $");

                entity.Property(e => e.DiscountShouldHaveBasedOnAvgDscntByCty).HasColumnName("Discount Should Have_(Based on Avg Dscnt by Cty");

                entity.Property(e => e.DiscountShouldHaveBasedOnStD37).HasColumnName("Discount Should Have _(Based on St'd 37%)");

                entity.Property(e => e.DistributorBasPostalCodeKey)
                    .HasMaxLength(255)
                    .HasColumnName("Distributor - BAS: Postal Code (Key)");

                entity.Property(e => e.DistributorBasStreet2Key)
                    .HasMaxLength(255)
                    .HasColumnName("Distributor - BAS:  Street 2 (Key)");

                entity.Property(e => e.DistributorBasStreet3Key)
                    .HasMaxLength(255)
                    .HasColumnName("Distributor - BAS:  Street 3 (Key)");

                entity.Property(e => e.DistributorBasStreet4Key)
                    .HasMaxLength(255)
                    .HasColumnName("Distributor - BAS:  Street 4 (Key)");

                entity.Property(e => e.DistributorBasStreetKey)
                    .HasMaxLength(255)
                    .HasColumnName("Distributor - BAS: Street (Key)");

                entity.Property(e => e.DistributorCountryText)
                    .HasMaxLength(255)
                    .HasColumnName("Distributor - Country (Text)");

                entity.Property(e => e.DistributorDistrictKey)
                    .HasMaxLength(255)
                    .HasColumnName("Distributor - District (Key)");

                entity.Property(e => e.DistributorKey).HasColumnName("Distributor - Key");

                entity.Property(e => e.DistributorLongText)
                    .HasMaxLength(255)
                    .HasColumnName("Distributor - Long Text");

                entity.Property(e => e.DistributorRegionKey)
                    .HasMaxLength(255)
                    .HasColumnName("Distributor - Region (Key)");

                entity.Property(e => e.DistributorSalesOrPdisslsonKey)
                    .HasMaxLength(255)
                    .HasColumnName("Distributor Sales Or (PDISSLSON) - Key");

                entity.Property(e => e.DocumentOrderNumbe)
                    .HasMaxLength(255)
                    .HasColumnName("Document Order numbe");

                entity.Property(e => e.EndCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("End Customer");

                entity.Property(e => e.EndCustomerBasPostalCodeKey)
                    .HasMaxLength(255)
                    .HasColumnName("End Customer - BAS: Postal Code (Key)");

                entity.Property(e => e.EndCustomerBasStreet2Key)
                    .HasMaxLength(255)
                    .HasColumnName("End Customer - BAS:  Street 2 (Key)");

                entity.Property(e => e.EndCustomerBasStreet3Key)
                    .HasMaxLength(255)
                    .HasColumnName("End Customer - BAS:  Street 3 (Key)");

                entity.Property(e => e.EndCustomerBasStreet4Key)
                    .HasMaxLength(255)
                    .HasColumnName("End Customer - BAS:  Street 4 (Key)");

                entity.Property(e => e.EndCustomerBasStreetKey)
                    .HasMaxLength(255)
                    .HasColumnName("End Customer - BAS: Street (Key)");

                entity.Property(e => e.EndCustomerCountryPos)
                    .HasMaxLength(255)
                    .HasColumnName("End Customer Country - POS");

                entity.Property(e => e.EndCustomerCountryServices)
                    .HasMaxLength(255)
                    .HasColumnName("End Customer Country - Services");

                entity.Property(e => e.EndCustomerKey)
                    .HasMaxLength(255)
                    .HasColumnName("End Customer - Key");

                entity.Property(e => e.EndCustomerPoNumber)
                    .HasMaxLength(255)
                    .HasColumnName("End Customer PO Number");

                entity.Property(e => e.EndCustomerPos)
                    .HasMaxLength(255)
                    .HasColumnName("End Customer - POS");

                entity.Property(e => e.EndCustomerRegionKey)
                    .HasMaxLength(255)
                    .HasColumnName("End Customer - Region (Key)");

                entity.Property(e => e.EndCustomerServices)
                    .HasMaxLength(255)
                    .HasColumnName("End Customer - Services");

                entity.Property(e => e.ExtendedListPriceDoNotUse)
                    .HasMaxLength(255)
                    .HasColumnName("Extended List Price - Do Not Use");

                entity.Property(e => e.IObjectId)
                    .HasMaxLength(255)
                    .HasColumnName("I Object ID");

                entity.Property(e => e.InstalledAtBasDistrictText)
                    .HasMaxLength(255)
                    .HasColumnName("Installed At - BAS: District (Text)");

                entity.Property(e => e.InstalledAtCountryKey)
                    .HasMaxLength(255)
                    .HasColumnName("Installed At Country - Key");

                entity.Property(e => e.InstalledAtKey)
                    .HasMaxLength(255)
                    .HasColumnName("Installed At - Key");

                entity.Property(e => e.InstalledAtLongText)
                    .HasMaxLength(255)
                    .HasColumnName("Installed At - Long Text");

                entity.Property(e => e.ItemNumber).HasColumnName("Item Number");

                entity.Property(e => e.JuniperPosValue).HasColumnName("Juniper POS Value");

                entity.Property(e => e.Material).HasMaxLength(255);

                entity.Property(e => e.MaterialMaterialTypeKey)
                    .HasMaxLength(255)
                    .HasColumnName("Material - Material type (Key)");

                entity.Property(e => e.MaterialMaterialTypeText)
                    .HasMaxLength(255)
                    .HasColumnName("Material - Material type (Text)");

                entity.Property(e => e.MaterialProductCategoryText)
                    .HasMaxLength(255)
                    .HasColumnName("Material - Product Category (Text)");

                entity.Property(e => e.MaterialText)
                    .HasMaxLength(255)
                    .HasColumnName("Material - Text");

                entity.Property(e => e.NetValue)
                    .HasMaxLength(255)
                    .HasColumnName("Net Value");

                entity.Property(e => e.NetValueOfTheSo).HasColumnName("NetValue of the SO");

                entity.Property(e => e.PayerBasDistrictKey)
                    .HasMaxLength(255)
                    .HasColumnName("Payer - BAS: District (Key)");

                entity.Property(e => e.PayerCountryText)
                    .HasMaxLength(255)
                    .HasColumnName("Payer - Country (Text)");

                entity.Property(e => e.PayerKey)
                    .HasMaxLength(255)
                    .HasColumnName("Payer - Key");

                entity.Property(e => e.PayerLongText)
                    .HasMaxLength(255)
                    .HasColumnName("Payer - Long Text");

                entity.Property(e => e.PosBillToPartyBasDistrictKey)
                    .HasMaxLength(255)
                    .HasColumnName("POS_Bill-To Party - BAS: District (Key)");

                entity.Property(e => e.PosBillToPartyCountryText)
                    .HasMaxLength(255)
                    .HasColumnName("POS_Bill-To Party - Country (Text)");

                entity.Property(e => e.PosBillToPartyKey)
                    .HasMaxLength(255)
                    .HasColumnName("POS_Bill-To Party - Key");

                entity.Property(e => e.PosBillToPartyLongText)
                    .HasMaxLength(255)
                    .HasColumnName("POS_Bill-To Party - Long Text");

                entity.Property(e => e.PosEndCustomerBasDistrictKey)
                    .HasMaxLength(255)
                    .HasColumnName("POS_End Customer - BAS: District (Key)");

                entity.Property(e => e.PosEndCustomerCountryKey)
                    .HasMaxLength(255)
                    .HasColumnName("POS_End Customer - Country (Key)");

                entity.Property(e => e.PosMaterialEccnKey)
                    .HasMaxLength(255)
                    .HasColumnName("POS_Material - ECCN (Key)");

                entity.Property(e => e.PosMaterialHtsKey)
                    .HasMaxLength(255)
                    .HasColumnName("POS_Material - HTS (Key)");

                entity.Property(e => e.ProductFamily)
                    .HasMaxLength(255)
                    .HasColumnName("Product Family");

                entity.Property(e => e.ProductIdPos)
                    .HasMaxLength(255)
                    .HasColumnName("Product ID - POS");

                entity.Property(e => e.ProductIdServices)
                    .HasMaxLength(255)
                    .HasColumnName("Product ID - Services");

                entity.Property(e => e.ProductLine)
                    .HasMaxLength(255)
                    .HasColumnName("Product Line");

                entity.Property(e => e.ProductSnPos)
                    .HasMaxLength(255)
                    .HasColumnName("Product SN -  POS");

                entity.Property(e => e.ReportedQuantity).HasColumnName("Reported Quantity");

                entity.Property(e => e.ResaleShipDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Resale ship date");

                entity.Property(e => e.Reseller1BasDistrictKey)
                    .HasMaxLength(255)
                    .HasColumnName("Reseller 1 - BAS: District (Key)");

                entity.Property(e => e.Reseller1BasPostalCodeKey)
                    .HasMaxLength(255)
                    .HasColumnName("Reseller 1 - BAS: Postal Code (Key)");

                entity.Property(e => e.Reseller1BasStreet2Key)
                    .HasMaxLength(255)
                    .HasColumnName("Reseller 1 - BAS:  Street 2 (Key)");

                entity.Property(e => e.Reseller1BasStreet3Key)
                    .HasMaxLength(255)
                    .HasColumnName("Reseller 1 - BAS:  Street 3 (Key)");

                entity.Property(e => e.Reseller1BasStreet4Key)
                    .HasColumnType("datetime")
                    .HasColumnName("Reseller 1 - BAS:  Street 4 (Key)");

                entity.Property(e => e.Reseller1BasStreetKey)
                    .HasMaxLength(255)
                    .HasColumnName("Reseller 1 - BAS: Street (Key)");

                entity.Property(e => e.Reseller1Key).HasColumnName("Reseller 1 - Key");

                entity.Property(e => e.ResellerCountryPos)
                    .HasMaxLength(255)
                    .HasColumnName("Reseller Country - POS");

                entity.Property(e => e.ResellerNamePos)
                    .HasMaxLength(255)
                    .HasColumnName("Reseller Name - POS");

                entity.Property(e => e.ResellerPoNumber)
                    .HasMaxLength(255)
                    .HasColumnName("Reseller PO Number");

                entity.Property(e => e.SaleDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Sale Date");

                entity.Property(e => e.SalesOrderAlpha)
                    .HasMaxLength(255)
                    .HasColumnName("Sales Order-ALPHA");

                entity.Property(e => e.SalesOrderNumber)
                    .HasMaxLength(255)
                    .HasColumnName("Sales Order Number");

                entity.Property(e => e.SdContractNumber)
                    .HasMaxLength(255)
                    .HasColumnName("SD Contract Number");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(255)
                    .HasColumnName("Serial Number");

                entity.Property(e => e.ServiceContractType)
                    .HasMaxLength(255)
                    .HasColumnName("Service Contract Type");

                entity.Property(e => e.ServiceEndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Service End date");

                entity.Property(e => e.ServiceMaterial)
                    .HasMaxLength(255)
                    .HasColumnName("Service Material");

                entity.Property(e => e.ServiceMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("Service Material - Key");

                entity.Property(e => e.ServiceMaterialProductLineText)
                    .HasMaxLength(255)
                    .HasColumnName("Service Material - Product Line (Text)");

                entity.Property(e => e.ServiceStartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Service Start Date");

                entity.Property(e => e.SvcmrgBillToPartyBasDistrictKey)
                    .HasMaxLength(255)
                    .HasColumnName("SVCMrg_Bill-To Party - BAS: District (Key)");

                entity.Property(e => e.SvcmrgBillToPartyCountryText)
                    .HasMaxLength(255)
                    .HasColumnName("SVCMrg_Bill-To Party - Country (Text)");

                entity.Property(e => e.SvcmrgBillToPartyKey)
                    .HasMaxLength(255)
                    .HasColumnName("SVCMrg_Bill-To Party - Key");

                entity.Property(e => e.SvcmrgBillToPartyLongText)
                    .HasMaxLength(255)
                    .HasColumnName("SVCMrg_Bill-To Party - Long Text");

                entity.Property(e => e.SvcmrgEndCustomerBasDistrictKey)
                    .HasMaxLength(255)
                    .HasColumnName("SVCMrg_End Customer - BAS: District (Key)");

                entity.Property(e => e.SvcmrgMaterialEccnKey)
                    .HasMaxLength(255)
                    .HasColumnName("SVCMrg_Material - ECCN (Key)");

                entity.Property(e => e.SvcmrgMaterialHtsKey)
                    .HasMaxLength(255)
                    .HasColumnName("SVCMrg_Material - HTS (Key)");

                entity.Property(e => e.TransactionDate)
                    .HasMaxLength(255)
                    .HasColumnName("Transaction Date");

                entity.Property(e => e.TransactionQuantity).HasColumnName("Transaction Quantity");

                entity.Property(e => e.TransmissionNumber)
                    .HasMaxLength(255)
                    .HasColumnName("Transmission Number");

                entity.Property(e => e._2016ListPrice).HasColumnName("2016 List Price");
            });

            modelBuilder.Entity<PartnerAnalyzerDvarDrsp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("partner_analyzer_dvar_drsp", "dev");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(255)
                    .HasColumnName("Customer_Group");

                entity.Property(e => e.DeliveryDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Delivery_Date");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(255)
                    .HasColumnName("Delivery_Item");

                entity.Property(e => e.DeliveryNumber)
                    .HasMaxLength(255)
                    .HasColumnName("Delivery_Number");

                entity.Property(e => e.DeliveryType)
                    .HasMaxLength(255)
                    .HasColumnName("Delivery_Type");

                entity.Property(e => e.DvarName)
                    .HasMaxLength(255)
                    .HasColumnName("DVAR Name");

                entity.Property(e => e.EcCountryMismatch).HasColumnName("EC Country Mismatch");

                entity.Property(e => e.EndCustomer)
                    .HasMaxLength(255)
                    .HasColumnName("End Customer");

                entity.Property(e => e.EndCustomerCountrySales)
                    .HasMaxLength(255)
                    .HasColumnName("End Customer Country Sales");

                entity.Property(e => e.EndCustomerCountryServices)
                    .HasMaxLength(255)
                    .HasColumnName("End Customer Country Services");

                entity.Property(e => e.EndCustomerSales)
                    .HasMaxLength(255)
                    .HasColumnName("End Customer Sales");

                entity.Property(e => e.EndCustomerServices)
                    .HasMaxLength(255)
                    .HasColumnName("End Customer Services");

                entity.Property(e => e.EndUserKey)
                    .HasMaxLength(255)
                    .HasColumnName("End_User_Key");

                entity.Property(e => e.F16).HasMaxLength(255);

                entity.Property(e => e.F21).HasMaxLength(255);

                entity.Property(e => e.ListPrice).HasColumnName("List_Price");

                entity.Property(e => e.NetPrice).HasColumnName("net_price");

                entity.Property(e => e.NetValue).HasColumnName("Net_Value");

                entity.Property(e => e.PoType)
                    .HasMaxLength(255)
                    .HasColumnName("PO_Type");

                entity.Property(e => e.ProductId)
                    .HasMaxLength(255)
                    .HasColumnName("Product ID");

                entity.Property(e => e.ProductSerialNumber)
                    .HasMaxLength(255)
                    .HasColumnName("Product Serial Number");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("Reseller_Country");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(255)
                    .HasColumnName("Reseller_Key");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(255)
                    .HasColumnName("Serial_Number");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(255)
                    .HasColumnName("SO_Number");

                entity.Property(e => e.SoType)
                    .HasMaxLength(255)
                    .HasColumnName("SO_Type");

                entity.Property(e => e.SoldToCountry)
                    .HasMaxLength(255)
                    .HasColumnName("Sold_To_Country");

                entity.Property(e => e.SoldToKey)
                    .HasMaxLength(255)
                    .HasColumnName("Sold_To_Key");

                entity.Property(e => e.SoldToName)
                    .HasMaxLength(255)
                    .HasColumnName("Sold_To_Name");
            });

            modelBuilder.Entity<PartnerAnalyzerOrigDest>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("partner_analyzer_orig_dest", "dev");

                entity.Property(e => e.Cnt).HasColumnName("cnt");

                entity.Property(e => e.Cntry)
                    .HasMaxLength(255)
                    .HasColumnName("cntry");

                entity.Property(e => e.Latitude).HasColumnName("latitude");

                entity.Property(e => e.Longitude).HasColumnName("longitude");

                entity.Property(e => e.OriginCntry)
                    .HasMaxLength(255)
                    .HasColumnName("origin_cntry");

                entity.Property(e => e.PathId)
                    .HasMaxLength(506)
                    .HasColumnName("path_id");

                entity.Property(e => e.PathType)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("path_type");
            });

            modelBuilder.Entity<PartnerAnalyzerOrigDest1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("partner_analyzer_orig_dest1", "dev");

                entity.Property(e => e.Cnt).HasColumnName("cnt");

                entity.Property(e => e.Cntry)
                    .HasMaxLength(255)
                    .HasColumnName("cntry");

                entity.Property(e => e.Latitude).HasColumnName("latitude");

                entity.Property(e => e.Longitude).HasColumnName("longitude");

                entity.Property(e => e.OriginCntry)
                    .HasMaxLength(255)
                    .HasColumnName("origin_cntry");

                entity.Property(e => e.PathId)
                    .HasMaxLength(506)
                    .HasColumnName("path_id");

                entity.Property(e => e.PathType)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("path_type");
            });

            modelBuilder.Entity<PartnerAnalyzerSVw>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("partner_analyzer_s_vw", "dev");

                entity.Property(e => e.AmtProductsSold).HasColumnName("amt_products_sold");

                entity.Property(e => e.AmtProductsWithSvc).HasColumnName("amt_products_with_svc");

                entity.Property(e => e.ChannelModel)
                    .HasMaxLength(255)
                    .HasColumnName("channel_model");

                entity.Property(e => e.DiscDivertedPerc).HasColumnName("disc_diverted_perc");

                entity.Property(e => e.DiversionPerc).HasColumnName("diversion_perc");

                entity.Property(e => e.ListAmtDiverted).HasColumnName("list_amt_diverted");

                entity.Property(e => e.MarginLossAmt).HasColumnName("margin_loss_amt");

                entity.Property(e => e.MarginLossPerc).HasColumnName("margin_loss_perc");

                entity.Property(e => e.NetAmtDiverted).HasColumnName("net_amt_diverted");

                entity.Property(e => e.NumLinesCntryMismatch).HasColumnName("num_lines_cntry_mismatch");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_country_name");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerTheater)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_theater");

                entity.Property(e => e.ServiceAttachPerc).HasColumnName("service_attach_perc");

                entity.Property(e => e.TotLinesBooked).HasColumnName("tot_lines_booked");

                entity.Property(e => e.TotLinesWithSvc).HasColumnName("tot_lines_with_svc");
            });

            modelBuilder.Entity<PartnerOnboardingEffVw>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("partner_onboarding_eff_vw");

                entity.Property(e => e.Country)
                    .HasMaxLength(100)
                    .HasColumnName("country");

                entity.Property(e => e.DaysDiff).HasColumnName("days_diff");

                entity.Property(e => e.NobDerived)
                    .HasMaxLength(50)
                    .HasColumnName("nob_derived");

                entity.Property(e => e.Theatre)
                    .HasMaxLength(10)
                    .HasColumnName("theatre");

                entity.Property(e => e.ThirdpartyCreatedDate)
                    .HasColumnType("date")
                    .HasColumnName("thirdparty_created_date");

                entity.Property(e => e.ThirdpartyId).HasColumnName("thirdparty_id");

                entity.Property(e => e.ThirdpartyName)
                    .HasMaxLength(100)
                    .HasColumnName("thirdparty_name");

                entity.Property(e => e.TrnxEndDate)
                    .HasColumnType("date")
                    .HasColumnName("trnx_end_date");

                entity.Property(e => e.TrnxName)
                    .HasMaxLength(30)
                    .HasColumnName("trnx_name");

                entity.Property(e => e.TrnxStartDate)
                    .HasColumnType("date")
                    .HasColumnName("trnx_start_date");
            });

            modelBuilder.Entity<PartnerOnboardingTwb>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("partner_onboarding_twb");

                entity.HasIndex(e => e.ThirdpartyId, "partner_onboarding_ndx1");

                entity.HasIndex(e => e.ThirdpartyName, "partner_onboarding_ndx2");

                entity.Property(e => e.CaseNumber)
                    .HasMaxLength(30)
                    .HasColumnName("case_number");

                entity.Property(e => e.CaseReason)
                    .HasMaxLength(100)
                    .HasColumnName("case_reason");

                entity.Property(e => e.Classification)
                    .HasMaxLength(50)
                    .HasColumnName("classification");

                entity.Property(e => e.ClassificationDate)
                    .HasColumnType("date")
                    .HasColumnName("classification_date");

                entity.Property(e => e.CompleteDate)
                    .HasColumnType("date")
                    .HasColumnName("complete_date");

                entity.Property(e => e.Country)
                    .HasMaxLength(100)
                    .HasColumnName("country");

                entity.Property(e => e.DueDate)
                    .HasColumnType("date")
                    .HasColumnName("due_date");

                entity.Property(e => e.LatestApprovedDate)
                    .HasColumnType("date")
                    .HasColumnName("latest_approved_date");

                entity.Property(e => e.LatestServiceCompleteDate)
                    .HasColumnType("date")
                    .HasColumnName("latest_service_complete_date");

                entity.Property(e => e.Natureofbusiness)
                    .HasMaxLength(100)
                    .HasColumnName("natureofbusiness");

                entity.Property(e => e.NobDerived)
                    .HasMaxLength(50)
                    .HasColumnName("nob_derived");

                entity.Property(e => e.OrderDate)
                    .HasColumnType("date")
                    .HasColumnName("order_date");

                entity.Property(e => e.Reason)
                    .HasMaxLength(100)
                    .HasColumnName("reason");

                entity.Property(e => e.ServiceName)
                    .HasMaxLength(50)
                    .HasColumnName("service_name");

                entity.Property(e => e.ServiceNameStandardized)
                    .HasMaxLength(30)
                    .HasColumnName("service_name_standardized");

                entity.Property(e => e.ServiceStatus)
                    .HasMaxLength(50)
                    .HasColumnName("service_status");

                entity.Property(e => e.Theatre)
                    .HasMaxLength(10)
                    .HasColumnName("theatre");

                entity.Property(e => e.ThirdpartyCreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("thirdparty_created_by");

                entity.Property(e => e.ThirdpartyCreatedDate)
                    .HasColumnType("date")
                    .HasColumnName("thirdparty_created_date");

                entity.Property(e => e.ThirdpartyId).HasColumnName("thirdparty_id");

                entity.Property(e => e.ThirdpartyName)
                    .HasMaxLength(100)
                    .HasColumnName("thirdparty_name");

                entity.Property(e => e.ThirdpartyType)
                    .HasMaxLength(50)
                    .HasColumnName("thirdparty_type");
            });

            modelBuilder.Entity<PartnerOnboardingTwbBak>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("partner_onboarding_twb_bak", "bak");

                entity.Property(e => e.CaseNumber)
                    .HasMaxLength(30)
                    .HasColumnName("case_number");

                entity.Property(e => e.CaseReason)
                    .HasMaxLength(100)
                    .HasColumnName("case_reason");

                entity.Property(e => e.Classification)
                    .HasMaxLength(50)
                    .HasColumnName("classification");

                entity.Property(e => e.ClassificationDate)
                    .HasColumnType("date")
                    .HasColumnName("classification_date");

                entity.Property(e => e.CompleteDate)
                    .HasColumnType("date")
                    .HasColumnName("complete_date");

                entity.Property(e => e.Country)
                    .HasMaxLength(100)
                    .HasColumnName("country");

                entity.Property(e => e.DueDate)
                    .HasColumnType("date")
                    .HasColumnName("due_date");

                entity.Property(e => e.LatestApprovedDate)
                    .HasColumnType("date")
                    .HasColumnName("latest_approved_date");

                entity.Property(e => e.LatestServiceCompleteDate)
                    .HasColumnType("date")
                    .HasColumnName("latest_service_complete_date");

                entity.Property(e => e.Natureofbusiness)
                    .HasMaxLength(100)
                    .HasColumnName("natureofbusiness");

                entity.Property(e => e.NobDerived)
                    .HasMaxLength(50)
                    .HasColumnName("nob_derived");

                entity.Property(e => e.OrderDate)
                    .HasColumnType("date")
                    .HasColumnName("order_date");

                entity.Property(e => e.Reason)
                    .HasMaxLength(100)
                    .HasColumnName("reason");

                entity.Property(e => e.ServiceName)
                    .HasMaxLength(50)
                    .HasColumnName("service_name");

                entity.Property(e => e.ServiceNameStandardized)
                    .HasMaxLength(30)
                    .HasColumnName("service_name_standardized");

                entity.Property(e => e.ServiceStatus)
                    .HasMaxLength(50)
                    .HasColumnName("service_status");

                entity.Property(e => e.Theatre)
                    .HasMaxLength(10)
                    .HasColumnName("theatre");

                entity.Property(e => e.ThirdpartyCreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("thirdparty_created_by");

                entity.Property(e => e.ThirdpartyCreatedDate)
                    .HasColumnType("date")
                    .HasColumnName("thirdparty_created_date");

                entity.Property(e => e.ThirdpartyId).HasColumnName("thirdparty_id");

                entity.Property(e => e.ThirdpartyName)
                    .HasMaxLength(100)
                    .HasColumnName("thirdparty_name");

                entity.Property(e => e.ThirdpartyType)
                    .HasMaxLength(50)
                    .HasColumnName("thirdparty_type");
            });

            modelBuilder.Entity<PartnerOnboardingVw>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("partner_onboarding_vw");

                entity.Property(e => e.CaseNumber)
                    .HasMaxLength(30)
                    .HasColumnName("case_number");

                entity.Property(e => e.CaseReason)
                    .HasMaxLength(100)
                    .HasColumnName("case_reason");

                entity.Property(e => e.Classification)
                    .HasMaxLength(50)
                    .HasColumnName("classification");

                entity.Property(e => e.ClassificationDate)
                    .HasColumnType("date")
                    .HasColumnName("classification_date");

                entity.Property(e => e.CompleteDate)
                    .HasColumnType("date")
                    .HasColumnName("complete_date");

                entity.Property(e => e.Country)
                    .HasMaxLength(100)
                    .HasColumnName("country");

                entity.Property(e => e.DueDate)
                    .HasColumnType("date")
                    .HasColumnName("due_date");

                entity.Property(e => e.LatestApprovedDate)
                    .HasColumnType("date")
                    .HasColumnName("latest_approved_date");

                entity.Property(e => e.LatestServiceCompleteDate)
                    .HasColumnType("date")
                    .HasColumnName("latest_service_complete_date");

                entity.Property(e => e.Natureofbusiness)
                    .HasMaxLength(100)
                    .HasColumnName("natureofbusiness");

                entity.Property(e => e.NobDerived)
                    .HasMaxLength(50)
                    .HasColumnName("nob_derived");

                entity.Property(e => e.OrderDate)
                    .HasColumnType("date")
                    .HasColumnName("order_date");

                entity.Property(e => e.Reason)
                    .HasMaxLength(100)
                    .HasColumnName("reason");

                entity.Property(e => e.ServiceName)
                    .HasMaxLength(50)
                    .HasColumnName("service_name");

                entity.Property(e => e.ServiceNameStandardized)
                    .HasMaxLength(30)
                    .HasColumnName("service_name_standardized");

                entity.Property(e => e.ServiceStatus)
                    .HasMaxLength(50)
                    .HasColumnName("service_status");

                entity.Property(e => e.Theatre)
                    .HasMaxLength(10)
                    .HasColumnName("theatre");

                entity.Property(e => e.ThirdpartyCreatedBy)
                    .HasMaxLength(50)
                    .HasColumnName("thirdparty_created_by");

                entity.Property(e => e.ThirdpartyCreatedDate)
                    .HasColumnType("date")
                    .HasColumnName("thirdparty_created_date");

                entity.Property(e => e.ThirdpartyId).HasColumnName("thirdparty_id");

                entity.Property(e => e.ThirdpartyName)
                    .HasMaxLength(100)
                    .HasColumnName("thirdparty_name");

                entity.Property(e => e.ThirdpartyType)
                    .HasMaxLength(50)
                    .HasColumnName("thirdparty_type");
            });

            modelBuilder.Entity<PkTemp>(entity =>
            {
                entity.ToTable("pk_temp");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CarDescription)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("CAR_DESCRIPTION");

                entity.Property(e => e.Color)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("COLOR");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("date")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.Feature)
                    .IsUnicode(false)
                    .HasColumnName("FEATURE");

                entity.Property(e => e.FuelType)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("FUEL_TYPE");

                entity.Property(e => e.Make)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("MAKE");

                entity.Property(e => e.Mileage)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("MILEAGE");

                entity.Property(e => e.Model)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("MODEL");

                entity.Property(e => e.Photos)
                    .IsUnicode(false)
                    .HasColumnName("PHOTOS");

                entity.Property(e => e.Price).HasColumnName("PRICE");

                entity.Property(e => e.StockNo)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("STOCK_NO");

                entity.Property(e => e.TransmissionType)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("TRANSMISSION_TYPE");

                entity.Property(e => e.VehicelOverview)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("VEHICEL_OVERVIEW");

                entity.Property(e => e.Vin)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("VIN");

                entity.Property(e => e.Year)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("YEAR");
            });

            modelBuilder.Entity<PlantsTest>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("plants_test", "dev");

                entity.Property(e => e.PlantCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("plant_code");

                entity.Property(e => e.PlantCountryCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("plant_country_code");

                entity.Property(e => e.PlantCountryName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("plant_country_name");

                entity.Property(e => e.PlantText)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("plant_text");
            });

            modelBuilder.Entity<Po>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("pos");

                entity.HasIndex(e => e.ItemNumber, "pos_ndx1");

                entity.Property(e => e.BilltoPartyCountry)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_country");

                entity.Property(e => e.BilltoPartyDistrict)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_district");

                entity.Property(e => e.BilltoPartyKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_key");

                entity.Property(e => e.BilltoPartyName)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_name");

                entity.Property(e => e.BilltoPartyPostalCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_postal_code");

                entity.Property(e => e.BilltoPartyRegion)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_region");

                entity.Property(e => e.BilltoPartyStreet1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_street1");

                entity.Property(e => e.BilltoPartyStreet2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_street2");

                entity.Property(e => e.BilltoPartyStreet3)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_street3");

                entity.Property(e => e.BilltoPartyStreet4)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_street4");

                entity.Property(e => e.ChannelPartnerKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("channel_partner_key");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("claim_status");

                entity.Property(e => e.DistiCountry)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_country");

                entity.Property(e => e.DistiDistrict)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_district");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiPostalCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_postal_code");

                entity.Property(e => e.DistiRegion)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_region");

                entity.Property(e => e.DistiSales)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_sales");

                entity.Property(e => e.DistiStreet1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_street1");

                entity.Property(e => e.DistiStreet2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_street2");

                entity.Property(e => e.DistiStreet3)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_street3");

                entity.Property(e => e.DistiStreet4)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_street4");

                entity.Property(e => e.DocOrderNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("doc_order_number");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustDistrict)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_district");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustPoNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_po_number");

                entity.Property(e => e.EndCustPostalCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_postal_code");

                entity.Property(e => e.EndCustRegion)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_region");

                entity.Property(e => e.EndCustStreet1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_street1");

                entity.Property(e => e.EndCustStreet2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_street2");

                entity.Property(e => e.EndCustStreet3)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_street3");

                entity.Property(e => e.EndCustStreet4)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_street4");

                entity.Property(e => e.ImportDate)
                    .HasColumnType("datetime")
                    .HasColumnName("import_date");

                entity.Property(e => e.ImportId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("import_id");

                entity.Property(e => e.ImportStatus)
                    .HasMaxLength(255)
                    .HasColumnName("import_status");

                entity.Property(e => e.ItemCreatedDate)
                    .HasColumnType("date")
                    .HasColumnName("item_created_date");

                entity.Property(e => e.ItemNumber).HasColumnName("item_number");

                entity.Property(e => e.Material)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material");

                entity.Property(e => e.MaterialEccn)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material_eccn");

                entity.Property(e => e.MaterialHts)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material_hts");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material_key");

                entity.Property(e => e.MaterialProductCat)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material_product_cat");

                entity.Property(e => e.MaterialType)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material_type");

                entity.Property(e => e.MaterialTypeKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material_type_key");

                entity.Property(e => e.ReportedQty)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reported_qty");

                entity.Property(e => e.ResaleShipDate)
                    .HasColumnType("date")
                    .HasColumnName("resale_ship_date");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerDistrict)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_district");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerPoNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_po_number");

                entity.Property(e => e.ResellerPostalCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_postal_code");

                entity.Property(e => e.ResellerStreet1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_street1");

                entity.Property(e => e.ResellerStreet2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_street2");

                entity.Property(e => e.ResellerStreet3)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_street3");

                entity.Property(e => e.ResellerStreet4)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_street4");

                entity.Property(e => e.SdContractNumber)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("sd_contract_number");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("so_number");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionQty)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("transaction_qty");

                entity.Property(e => e.TransmissionNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("transmission_number");
            });

            modelBuilder.Entity<PosApr2018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("pos_apr2018", "dsf");

                entity.Property(e => e.BillToPartyBasDistrictKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___BAS__District__Key_");

                entity.Property(e => e.BillToPartyBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___BAS__Postal_Code__Key_");

                entity.Property(e => e.BillToPartyBasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party___BAS___Street_2__Key_");

                entity.Property(e => e.BillToPartyBasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party___BAS___Street_3__Key_");

                entity.Property(e => e.BillToPartyBasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party___BAS___Street_4__Key_");

                entity.Property(e => e.BillToPartyBasStreetKey)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party___BAS__Street__Key_");

                entity.Property(e => e.BillToPartyCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___Country__Text_");

                entity.Property(e => e.BillToPartyKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___Key");

                entity.Property(e => e.BillToPartyLongText)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party___Long_Text");

                entity.Property(e => e.BillToPartyRegionKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___Region__Key_");

                entity.Property(e => e.ChannelPartnerKey)
                    .HasMaxLength(50)
                    .HasColumnName("Channel_Partner___Key");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(50)
                    .HasColumnName("CI_Status");

                entity.Property(e => e.ClaimAmountInUsd)
                    .HasMaxLength(50)
                    .HasColumnName("Claim_Amount_in_USD");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(50)
                    .HasColumnName("Claim_Status");

                entity.Property(e => e.DistributorBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Distributor___BAS__Postal_Code__Key_");

                entity.Property(e => e.DistributorBasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Distributor___BAS___Street_2__Key_");

                entity.Property(e => e.DistributorBasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Distributor___BAS___Street_3__Key_");

                entity.Property(e => e.DistributorBasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Distributor___BAS___Street_4__Key_");

                entity.Property(e => e.DistributorBasStreetKey)
                    .HasMaxLength(250)
                    .HasColumnName("Distributor___BAS__Street__Key_");

                entity.Property(e => e.DistributorCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Distributor___Country__Text_");

                entity.Property(e => e.DistributorDistrictKey)
                    .HasMaxLength(50)
                    .HasColumnName("Distributor___District__Key_");

                entity.Property(e => e.DistributorKey)
                    .HasMaxLength(50)
                    .HasColumnName("Distributor___Key");

                entity.Property(e => e.DistributorLongText)
                    .HasMaxLength(250)
                    .HasColumnName("Distributor___Long_Text");

                entity.Property(e => e.DistributorRegionKey)
                    .HasMaxLength(50)
                    .HasColumnName("Distributor___Region__Key_");

                entity.Property(e => e.DistributorSalesOrPdisslsonKey)
                    .HasMaxLength(50)
                    .HasColumnName("Distributor_Sales_Or__PDISSLSON____Key");

                entity.Property(e => e.DocumentOrderNumbe)
                    .HasMaxLength(50)
                    .HasColumnName("Document_Order_numbe");

                entity.Property(e => e.EndCustomerBasDistrictKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___BAS__District__Key_");

                entity.Property(e => e.EndCustomerBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___BAS__Postal_Code__Key_");

                entity.Property(e => e.EndCustomerBasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___BAS___Street_2__Key_");

                entity.Property(e => e.EndCustomerBasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___BAS___Street_3__Key_");

                entity.Property(e => e.EndCustomerBasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___BAS___Street_4__Key_");

                entity.Property(e => e.EndCustomerBasStreetKey)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___BAS__Street__Key_");

                entity.Property(e => e.EndCustomerCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Country__Key_");

                entity.Property(e => e.EndCustomerCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Country__Text_");

                entity.Property(e => e.EndCustomerKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Key");

                entity.Property(e => e.EndCustomerLongText)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___Long_Text");

                entity.Property(e => e.EndCustomerPoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer_PO_Number");

                entity.Property(e => e.EndCustomerRegionKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Region__Key_");

                entity.Property(e => e.ItemCreatedDate)
                    .HasMaxLength(50)
                    .HasColumnName("Item_Created_Date");

                entity.Property(e => e.ItemNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Item_Number");

                entity.Property(e => e.JuniperPosValue)
                    .HasMaxLength(50)
                    .HasColumnName("Juniper_POS_Value");

                entity.Property(e => e.JuniperProductSeri)
                    .HasMaxLength(50)
                    .HasColumnName("Juniper_Product_Seri");

                entity.Property(e => e.ListPriceRtcmFormattedValue)
                    .HasMaxLength(50)
                    .HasColumnName("List_Price_RTCM_Formatted_Value");

                entity.Property(e => e.Material).HasMaxLength(50);

                entity.Property(e => e.MaterialEccnKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___ECCN__Key_");

                entity.Property(e => e.MaterialHtsKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___HTS__Key_");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___Key");

                entity.Property(e => e.MaterialMaterialTypeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___Material_type__Key_");

                entity.Property(e => e.MaterialMaterialTypeText)
                    .HasMaxLength(50)
                    .HasColumnName("Material___Material_type__Text_");

                entity.Property(e => e.MaterialProductCategoryText)
                    .HasMaxLength(50)
                    .HasColumnName("Material___Product_Category__Text_");

                entity.Property(e => e.NetValue)
                    .HasMaxLength(50)
                    .HasColumnName("Net_Value");

                entity.Property(e => e.ReportedQuantity)
                    .HasMaxLength(50)
                    .HasColumnName("Reported_Quantity");

                entity.Property(e => e.ResaleShipDate)
                    .HasMaxLength(50)
                    .HasColumnName("Resale_ship_date");

                entity.Property(e => e.Reseller1BasDistrictKey)
                    .HasMaxLength(50)
                    .HasColumnName("Reseller_1___BAS__District__Key_");

                entity.Property(e => e.Reseller1BasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Reseller_1___BAS__Postal_Code__Key_");

                entity.Property(e => e.Reseller1BasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Reseller_1___BAS___Street_2__Key_");

                entity.Property(e => e.Reseller1BasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Reseller_1___BAS___Street_3__Key_");

                entity.Property(e => e.Reseller1BasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Reseller_1___BAS___Street_4__Key_");

                entity.Property(e => e.Reseller1BasStreetKey)
                    .HasMaxLength(250)
                    .HasColumnName("Reseller_1___BAS__Street__Key_");

                entity.Property(e => e.Reseller1CountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Reseller_1___Country__Text_");

                entity.Property(e => e.Reseller1Key)
                    .HasMaxLength(50)
                    .HasColumnName("Reseller_1___Key");

                entity.Property(e => e.Reseller1LongText)
                    .HasMaxLength(250)
                    .HasColumnName("Reseller_1___Long_Text");

                entity.Property(e => e.ResellerPoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Reseller_PO_Number");

                entity.Property(e => e.SalesOrderNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Sales_Order_Number");

                entity.Property(e => e.SdContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("SD_Contract_Number");

                entity.Property(e => e.TransactionDate)
                    .HasMaxLength(50)
                    .HasColumnName("Transaction_Date");

                entity.Property(e => e.TransactionQuantity)
                    .HasMaxLength(50)
                    .HasColumnName("Transaction_Quantity");

                entity.Property(e => e.TransmissionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Transmission_Number");
            });

            modelBuilder.Entity<PosDomesticDiversion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("POS_DOMESTIC_DIVERSION", "wp");

                entity.Property(e => e.PosChannelPartnerKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_channel_partner_key");

                entity.Property(e => e.PosCiStatus)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_ci_status");

                entity.Property(e => e.PosClaimAmt)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_claim_amt");

                entity.Property(e => e.PosClaimStatus)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_claim_status");

                entity.Property(e => e.PosDistiCountry)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_disti_country");

                entity.Property(e => e.PosDistiKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_disti_key");

                entity.Property(e => e.PosDistiName)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_disti_name");

                entity.Property(e => e.PosDistiSales)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_disti_sales");

                entity.Property(e => e.PosDocOrderNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_doc_order_number");

                entity.Property(e => e.PosEc)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("POS_EC");

                entity.Property(e => e.PosEndCustCountry)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_end_cust_country");

                entity.Property(e => e.PosEndCustCountryCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_end_cust_country_code");

                entity.Property(e => e.PosEndCustKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_end_cust_key");

                entity.Property(e => e.PosEndCustName)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_end_cust_name");

                entity.Property(e => e.PosItemCreatedDate)
                    .HasColumnType("date")
                    .HasColumnName("pos_item_created_date");

                entity.Property(e => e.PosItemNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_item_number");

                entity.Property(e => e.PosJnprPosValue)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_jnpr_pos_value");

                entity.Property(e => e.PosMaterial)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_material");

                entity.Property(e => e.PosMaterialKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_material_key");

                entity.Property(e => e.PosMaterialProductCat)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_material_product_cat");

                entity.Property(e => e.PosMaterialType)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_material_type");

                entity.Property(e => e.PosMaterialTypeKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_material_type_key");

                entity.Property(e => e.PosReportedQty)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_reported_qty");

                entity.Property(e => e.PosResellerCountry)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_reseller_country");

                entity.Property(e => e.PosResellerKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_reseller_key");

                entity.Property(e => e.PosResellerName)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_reseller_name");

                entity.Property(e => e.PosSdContractNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_sd_contract_number");

                entity.Property(e => e.PosSerialNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("pos_serial_number");

                entity.Property(e => e.PosSoNumber)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("pos_so_number");

                entity.Property(e => e.PosTransactionQty)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_transaction_qty");

                entity.Property(e => e.PosTransmissionNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("pos_transmission_number");

                entity.Property(e => e.Score).HasColumnName("SCORE");

                entity.Property(e => e.SvcContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_contract_creation_date");

                entity.Property(e => e.SvcContractItemNo).HasColumnName("svc_contract_item_no");

                entity.Property(e => e.SvcContractLineItemStatus).HasColumnName("svc_contract_line_item_status");

                entity.Property(e => e.SvcContractNumber).HasColumnName("svc_contract_number");

                entity.Property(e => e.SvcContractStatus).HasColumnName("svc_contract_status");

                entity.Property(e => e.SvcContractType).HasColumnName("svc_contract_type");

                entity.Property(e => e.SvcEc).HasColumnName("SVC_EC");

                entity.Property(e => e.SvcEndCustCountryCode).HasColumnName("svc_end_cust_country_code");

                entity.Property(e => e.SvcEndCustKey).HasColumnName("svc_end_cust_key");

                entity.Property(e => e.SvcEndCustName).HasColumnName("svc_end_cust_name");

                entity.Property(e => e.SvcMaterial)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("svc_material");

                entity.Property(e => e.SvcMaterialEccn).HasColumnName("svc_material_eccn");

                entity.Property(e => e.SvcMaterialHts).HasColumnName("svc_material_hts");

                entity.Property(e => e.SvcMaterialKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("svc_material_key");

                entity.Property(e => e.SvcProductFamily).HasColumnName("svc_product_family");

                entity.Property(e => e.SvcProductLine).HasColumnName("svc_product_line");

                entity.Property(e => e.SvcSalesOrderAlpha).HasColumnName("svc_sales_order_alpha");

                entity.Property(e => e.SvcSerialNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("svc_serial_number");

                entity.Property(e => e.SvcServiceEndDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_service_end_date");

                entity.Property(e => e.SvcServiceMaterial).HasColumnName("svc_service_material");

                entity.Property(e => e.SvcServiceMaterialKey).HasColumnName("svc_service_material_key");

                entity.Property(e => e.SvcServiceMaterialProductLine).HasColumnName("svc_service_material_product_line");

                entity.Property(e => e.SvcServiceStartDate)
                    .HasColumnType("date")
                    .HasColumnName("svc_service_start_date");
            });

            modelBuilder.Entity<PosFeb2018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("pos_feb2018", "dsf");

                entity.Property(e => e.BillToPartyBasDistrictKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___BAS__District__Key_");

                entity.Property(e => e.BillToPartyBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___BAS__Postal_Code__Key_");

                entity.Property(e => e.BillToPartyBasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party___BAS___Street_2__Key_");

                entity.Property(e => e.BillToPartyBasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party___BAS___Street_3__Key_");

                entity.Property(e => e.BillToPartyBasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party___BAS___Street_4__Key_");

                entity.Property(e => e.BillToPartyBasStreetKey)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party___BAS__Street__Key_");

                entity.Property(e => e.BillToPartyCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___Country__Text_");

                entity.Property(e => e.BillToPartyKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___Key");

                entity.Property(e => e.BillToPartyLongText)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party___Long_Text");

                entity.Property(e => e.BillToPartyRegionKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___Region__Key_");

                entity.Property(e => e.ChannelPartnerKey)
                    .HasMaxLength(50)
                    .HasColumnName("Channel_Partner___Key");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(50)
                    .HasColumnName("CI_Status");

                entity.Property(e => e.ClaimAmountInUsd)
                    .HasMaxLength(50)
                    .HasColumnName("Claim_Amount_in_USD");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(50)
                    .HasColumnName("Claim_Status");

                entity.Property(e => e.DistributorBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Distributor___BAS__Postal_Code__Key_");

                entity.Property(e => e.DistributorBasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Distributor___BAS___Street_2__Key_");

                entity.Property(e => e.DistributorBasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Distributor___BAS___Street_3__Key_");

                entity.Property(e => e.DistributorBasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Distributor___BAS___Street_4__Key_");

                entity.Property(e => e.DistributorBasStreetKey)
                    .HasMaxLength(250)
                    .HasColumnName("Distributor___BAS__Street__Key_");

                entity.Property(e => e.DistributorCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Distributor___Country__Text_");

                entity.Property(e => e.DistributorDistrictKey)
                    .HasMaxLength(50)
                    .HasColumnName("Distributor___District__Key_");

                entity.Property(e => e.DistributorKey)
                    .HasMaxLength(50)
                    .HasColumnName("Distributor___Key");

                entity.Property(e => e.DistributorLongText)
                    .HasMaxLength(250)
                    .HasColumnName("Distributor___Long_Text");

                entity.Property(e => e.DistributorRegionKey)
                    .HasMaxLength(50)
                    .HasColumnName("Distributor___Region__Key_");

                entity.Property(e => e.DistributorSalesOrPdisslsonKey)
                    .HasMaxLength(50)
                    .HasColumnName("Distributor_Sales_Or__PDISSLSON____Key");

                entity.Property(e => e.DocumentOrderNumbe)
                    .HasMaxLength(50)
                    .HasColumnName("Document_Order_numbe");

                entity.Property(e => e.EndCustomerBasDistrictKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___BAS__District__Key_");

                entity.Property(e => e.EndCustomerBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___BAS__Postal_Code__Key_");

                entity.Property(e => e.EndCustomerBasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___BAS___Street_2__Key_");

                entity.Property(e => e.EndCustomerBasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___BAS___Street_3__Key_");

                entity.Property(e => e.EndCustomerBasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___BAS___Street_4__Key_");

                entity.Property(e => e.EndCustomerBasStreetKey)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___BAS__Street__Key_");

                entity.Property(e => e.EndCustomerCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Country__Key_");

                entity.Property(e => e.EndCustomerCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Country__Text_");

                entity.Property(e => e.EndCustomerKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Key");

                entity.Property(e => e.EndCustomerLongText)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___Long_Text");

                entity.Property(e => e.EndCustomerPoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer_PO_Number");

                entity.Property(e => e.EndCustomerRegionKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Region__Key_");

                entity.Property(e => e.ItemCreatedDate)
                    .HasMaxLength(50)
                    .HasColumnName("Item_Created_Date");

                entity.Property(e => e.ItemNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Item_Number");

                entity.Property(e => e.JuniperPosValue)
                    .HasMaxLength(50)
                    .HasColumnName("Juniper_POS_Value");

                entity.Property(e => e.JuniperProductSeri)
                    .HasMaxLength(50)
                    .HasColumnName("Juniper_Product_Seri");

                entity.Property(e => e.ListPriceRtcmFormattedValue)
                    .HasMaxLength(50)
                    .HasColumnName("List_Price_RTCM_Formatted_Value");

                entity.Property(e => e.Material).HasMaxLength(50);

                entity.Property(e => e.MaterialEccnKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___ECCN__Key_");

                entity.Property(e => e.MaterialHtsKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___HTS__Key_");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___Key");

                entity.Property(e => e.MaterialMaterialTypeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___Material_type__Key_");

                entity.Property(e => e.MaterialMaterialTypeText)
                    .HasMaxLength(50)
                    .HasColumnName("Material___Material_type__Text_");

                entity.Property(e => e.MaterialProductCategoryText)
                    .HasMaxLength(50)
                    .HasColumnName("Material___Product_Category__Text_");

                entity.Property(e => e.NetValue)
                    .HasMaxLength(50)
                    .HasColumnName("Net_Value");

                entity.Property(e => e.ReportedQuantity)
                    .HasMaxLength(50)
                    .HasColumnName("Reported_Quantity");

                entity.Property(e => e.ResaleShipDate)
                    .HasMaxLength(50)
                    .HasColumnName("Resale_ship_date");

                entity.Property(e => e.Reseller1BasDistrictKey)
                    .HasMaxLength(50)
                    .HasColumnName("Reseller_1___BAS__District__Key_");

                entity.Property(e => e.Reseller1BasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Reseller_1___BAS__Postal_Code__Key_");

                entity.Property(e => e.Reseller1BasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Reseller_1___BAS___Street_2__Key_");

                entity.Property(e => e.Reseller1BasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Reseller_1___BAS___Street_3__Key_");

                entity.Property(e => e.Reseller1BasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Reseller_1___BAS___Street_4__Key_");

                entity.Property(e => e.Reseller1BasStreetKey)
                    .HasMaxLength(250)
                    .HasColumnName("Reseller_1___BAS__Street__Key_");

                entity.Property(e => e.Reseller1CountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Reseller_1___Country__Text_");

                entity.Property(e => e.Reseller1Key)
                    .HasMaxLength(50)
                    .HasColumnName("Reseller_1___Key");

                entity.Property(e => e.Reseller1LongText)
                    .HasMaxLength(250)
                    .HasColumnName("Reseller_1___Long_Text");

                entity.Property(e => e.ResellerPoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Reseller_PO_Number");

                entity.Property(e => e.SalesOrderNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Sales_Order_Number");

                entity.Property(e => e.SdContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("SD_Contract_Number");

                entity.Property(e => e.TransactionDate)
                    .HasMaxLength(50)
                    .HasColumnName("Transaction_Date");

                entity.Property(e => e.TransactionQuantity)
                    .HasMaxLength(50)
                    .HasColumnName("Transaction_Quantity");

                entity.Property(e => e.TransmissionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Transmission_Number");
            });

            modelBuilder.Entity<PosJan2018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("pos_jan2018", "dsf");

                entity.Property(e => e.BillToPartyBasDistrictKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___BAS__District__Key_");

                entity.Property(e => e.BillToPartyBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___BAS__Postal_Code__Key_");

                entity.Property(e => e.BillToPartyBasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party___BAS___Street_2__Key_");

                entity.Property(e => e.BillToPartyBasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party___BAS___Street_3__Key_");

                entity.Property(e => e.BillToPartyBasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party___BAS___Street_4__Key_");

                entity.Property(e => e.BillToPartyBasStreetKey)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party___BAS__Street__Key_");

                entity.Property(e => e.BillToPartyCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___Country__Text_");

                entity.Property(e => e.BillToPartyKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___Key");

                entity.Property(e => e.BillToPartyLongText)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party___Long_Text");

                entity.Property(e => e.BillToPartyRegionKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___Region__Key_");

                entity.Property(e => e.ChannelPartnerKey)
                    .HasMaxLength(50)
                    .HasColumnName("Channel_Partner___Key");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(50)
                    .HasColumnName("CI_Status");

                entity.Property(e => e.ClaimAmountInUsd)
                    .HasMaxLength(50)
                    .HasColumnName("Claim_Amount_in_USD");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(50)
                    .HasColumnName("Claim_Status");

                entity.Property(e => e.DistributorBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Distributor___BAS__Postal_Code__Key_");

                entity.Property(e => e.DistributorBasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Distributor___BAS___Street_2__Key_");

                entity.Property(e => e.DistributorBasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Distributor___BAS___Street_3__Key_");

                entity.Property(e => e.DistributorBasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Distributor___BAS___Street_4__Key_");

                entity.Property(e => e.DistributorBasStreetKey)
                    .HasMaxLength(250)
                    .HasColumnName("Distributor___BAS__Street__Key_");

                entity.Property(e => e.DistributorCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Distributor___Country__Text_");

                entity.Property(e => e.DistributorDistrictKey)
                    .HasMaxLength(50)
                    .HasColumnName("Distributor___District__Key_");

                entity.Property(e => e.DistributorKey)
                    .HasMaxLength(50)
                    .HasColumnName("Distributor___Key");

                entity.Property(e => e.DistributorLongText)
                    .HasMaxLength(250)
                    .HasColumnName("Distributor___Long_Text");

                entity.Property(e => e.DistributorRegionKey)
                    .HasMaxLength(50)
                    .HasColumnName("Distributor___Region__Key_");

                entity.Property(e => e.DistributorSalesOrPdisslsonKey)
                    .HasMaxLength(50)
                    .HasColumnName("Distributor_Sales_Or__PDISSLSON____Key");

                entity.Property(e => e.DocumentOrderNumbe)
                    .HasMaxLength(50)
                    .HasColumnName("Document_Order_numbe");

                entity.Property(e => e.EndCustomerBasDistrictKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___BAS__District__Key_");

                entity.Property(e => e.EndCustomerBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___BAS__Postal_Code__Key_");

                entity.Property(e => e.EndCustomerBasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___BAS___Street_2__Key_");

                entity.Property(e => e.EndCustomerBasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___BAS___Street_3__Key_");

                entity.Property(e => e.EndCustomerBasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___BAS___Street_4__Key_");

                entity.Property(e => e.EndCustomerBasStreetKey)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___BAS__Street__Key_");

                entity.Property(e => e.EndCustomerCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Country__Key_");

                entity.Property(e => e.EndCustomerCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Country__Text_");

                entity.Property(e => e.EndCustomerKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Key");

                entity.Property(e => e.EndCustomerLongText)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___Long_Text");

                entity.Property(e => e.EndCustomerPoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer_PO_Number");

                entity.Property(e => e.EndCustomerRegionKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Region__Key_");

                entity.Property(e => e.ItemCreatedDate)
                    .HasMaxLength(50)
                    .HasColumnName("Item_Created_Date");

                entity.Property(e => e.ItemNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Item_Number");

                entity.Property(e => e.JuniperPosValue)
                    .HasMaxLength(50)
                    .HasColumnName("Juniper_POS_Value");

                entity.Property(e => e.JuniperProductSeri)
                    .HasMaxLength(50)
                    .HasColumnName("Juniper_Product_Seri");

                entity.Property(e => e.ListPriceRtcmFormattedValue)
                    .HasMaxLength(50)
                    .HasColumnName("List_Price_RTCM_Formatted_Value");

                entity.Property(e => e.Material).HasMaxLength(50);

                entity.Property(e => e.MaterialEccnKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___ECCN__Key_");

                entity.Property(e => e.MaterialHtsKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___HTS__Key_");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___Key");

                entity.Property(e => e.MaterialMaterialTypeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___Material_type__Key_");

                entity.Property(e => e.MaterialMaterialTypeText)
                    .HasMaxLength(50)
                    .HasColumnName("Material___Material_type__Text_");

                entity.Property(e => e.MaterialProductCategoryText)
                    .HasMaxLength(50)
                    .HasColumnName("Material___Product_Category__Text_");

                entity.Property(e => e.NetValue)
                    .HasMaxLength(50)
                    .HasColumnName("Net_Value");

                entity.Property(e => e.ReportedQuantity)
                    .HasMaxLength(50)
                    .HasColumnName("Reported_Quantity");

                entity.Property(e => e.ResaleShipDate)
                    .HasMaxLength(50)
                    .HasColumnName("Resale_ship_date");

                entity.Property(e => e.Reseller1BasDistrictKey)
                    .HasMaxLength(50)
                    .HasColumnName("Reseller_1___BAS__District__Key_");

                entity.Property(e => e.Reseller1BasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Reseller_1___BAS__Postal_Code__Key_");

                entity.Property(e => e.Reseller1BasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Reseller_1___BAS___Street_2__Key_");

                entity.Property(e => e.Reseller1BasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Reseller_1___BAS___Street_3__Key_");

                entity.Property(e => e.Reseller1BasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Reseller_1___BAS___Street_4__Key_");

                entity.Property(e => e.Reseller1BasStreetKey)
                    .HasMaxLength(250)
                    .HasColumnName("Reseller_1___BAS__Street__Key_");

                entity.Property(e => e.Reseller1CountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Reseller_1___Country__Text_");

                entity.Property(e => e.Reseller1Key)
                    .HasMaxLength(50)
                    .HasColumnName("Reseller_1___Key");

                entity.Property(e => e.Reseller1LongText)
                    .HasMaxLength(250)
                    .HasColumnName("Reseller_1___Long_Text");

                entity.Property(e => e.ResellerPoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Reseller_PO_Number");

                entity.Property(e => e.SalesOrderNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Sales_Order_Number");

                entity.Property(e => e.SdContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("SD_Contract_Number");

                entity.Property(e => e.TransactionDate)
                    .HasMaxLength(50)
                    .HasColumnName("Transaction_Date");

                entity.Property(e => e.TransactionQuantity)
                    .HasMaxLength(50)
                    .HasColumnName("Transaction_Quantity");

                entity.Property(e => e.TransmissionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Transmission_Number");
            });

            modelBuilder.Entity<PosJunOct2018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("pos_JunOct2018", "dsf");

                entity.Property(e => e.BillToPartyBasDistrictKey)
                    .HasMaxLength(500)
                    .HasColumnName("Bill_To_Party___BAS__District__Key_");

                entity.Property(e => e.BillToPartyBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___BAS__Postal_Code__Key_");

                entity.Property(e => e.BillToPartyBasStreet2Key)
                    .HasMaxLength(500)
                    .HasColumnName("Bill_To_Party___BAS___Street_2__Key_");

                entity.Property(e => e.BillToPartyBasStreet3Key)
                    .HasMaxLength(500)
                    .HasColumnName("Bill_To_Party___BAS___Street_3__Key_");

                entity.Property(e => e.BillToPartyBasStreet4Key)
                    .HasMaxLength(500)
                    .HasColumnName("Bill_To_Party___BAS___Street_4__Key_");

                entity.Property(e => e.BillToPartyBasStreetKey)
                    .HasMaxLength(500)
                    .HasColumnName("Bill_To_Party___BAS__Street__Key_");

                entity.Property(e => e.BillToPartyCountryText)
                    .HasMaxLength(500)
                    .HasColumnName("Bill_To_Party___Country__Text_");

                entity.Property(e => e.BillToPartyKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___Key");

                entity.Property(e => e.BillToPartyLongText)
                    .HasMaxLength(500)
                    .HasColumnName("Bill_To_Party___Long_Text");

                entity.Property(e => e.BillToPartyRegionKey)
                    .HasMaxLength(500)
                    .HasColumnName("Bill_To_Party___Region__Key_");

                entity.Property(e => e.ChannelPartnerKey)
                    .HasMaxLength(50)
                    .HasColumnName("Channel_Partner___Key");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(50)
                    .HasColumnName("CI_Status");

                entity.Property(e => e.ClaimAmountInUsd)
                    .HasMaxLength(50)
                    .HasColumnName("Claim_Amount_in_USD");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(50)
                    .HasColumnName("Claim_Status");

                entity.Property(e => e.DistributorBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Distributor___BAS__Postal_Code__Key_");

                entity.Property(e => e.DistributorBasStreet2Key)
                    .HasMaxLength(500)
                    .HasColumnName("Distributor___BAS___Street_2__Key_");

                entity.Property(e => e.DistributorBasStreet3Key)
                    .HasMaxLength(500)
                    .HasColumnName("Distributor___BAS___Street_3__Key_");

                entity.Property(e => e.DistributorBasStreet4Key)
                    .HasMaxLength(500)
                    .HasColumnName("Distributor___BAS___Street_4__Key_");

                entity.Property(e => e.DistributorBasStreetKey)
                    .HasMaxLength(500)
                    .HasColumnName("Distributor___BAS__Street__Key_");

                entity.Property(e => e.DistributorCountryText)
                    .HasMaxLength(500)
                    .HasColumnName("Distributor___Country__Text_");

                entity.Property(e => e.DistributorDistrictKey)
                    .HasMaxLength(500)
                    .HasColumnName("Distributor___District__Key_");

                entity.Property(e => e.DistributorKey)
                    .HasMaxLength(50)
                    .HasColumnName("Distributor___Key");

                entity.Property(e => e.DistributorLongText)
                    .HasMaxLength(500)
                    .HasColumnName("Distributor___Long_Text");

                entity.Property(e => e.DistributorRegionKey)
                    .HasMaxLength(500)
                    .HasColumnName("Distributor___Region__Key_");

                entity.Property(e => e.DistributorSalesOrPdisslsonKey)
                    .HasMaxLength(50)
                    .HasColumnName("Distributor_Sales_Or__PDISSLSON____Key");

                entity.Property(e => e.DocumentOrderNumbe)
                    .HasMaxLength(50)
                    .HasColumnName("Document_Order_numbe");

                entity.Property(e => e.EndCustomerBasDistrictKey)
                    .HasMaxLength(500)
                    .HasColumnName("End_Customer___BAS__District__Key_");

                entity.Property(e => e.EndCustomerBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___BAS__Postal_Code__Key_");

                entity.Property(e => e.EndCustomerBasStreet2Key)
                    .HasMaxLength(500)
                    .HasColumnName("End_Customer___BAS___Street_2__Key_");

                entity.Property(e => e.EndCustomerBasStreet3Key)
                    .HasMaxLength(500)
                    .HasColumnName("End_Customer___BAS___Street_3__Key_");

                entity.Property(e => e.EndCustomerBasStreet4Key)
                    .HasMaxLength(500)
                    .HasColumnName("End_Customer___BAS___Street_4__Key_");

                entity.Property(e => e.EndCustomerBasStreetKey)
                    .HasMaxLength(500)
                    .HasColumnName("End_Customer___BAS__Street__Key_");

                entity.Property(e => e.EndCustomerCountryKey)
                    .HasMaxLength(500)
                    .HasColumnName("End_Customer___Country__Key_");

                entity.Property(e => e.EndCustomerCountryText)
                    .HasMaxLength(500)
                    .HasColumnName("End_Customer___Country__Text_");

                entity.Property(e => e.EndCustomerKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Key");

                entity.Property(e => e.EndCustomerLongText)
                    .HasMaxLength(500)
                    .HasColumnName("End_Customer___Long_Text");

                entity.Property(e => e.EndCustomerPoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer_PO_Number");

                entity.Property(e => e.EndCustomerRegionKey)
                    .HasMaxLength(500)
                    .HasColumnName("End_Customer___Region__Key_");

                entity.Property(e => e.ItemCreatedDate)
                    .HasMaxLength(50)
                    .HasColumnName("Item_Created_Date");

                entity.Property(e => e.ItemNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Item_Number");

                entity.Property(e => e.JuniperPosValue)
                    .HasMaxLength(50)
                    .HasColumnName("Juniper_POS_Value");

                entity.Property(e => e.JuniperProductSeri)
                    .HasMaxLength(50)
                    .HasColumnName("Juniper_Product_Seri");

                entity.Property(e => e.ListPriceRtcmFormattedValue)
                    .HasMaxLength(50)
                    .HasColumnName("List_Price_RTCM_Formatted_Value");

                entity.Property(e => e.Material).HasMaxLength(50);

                entity.Property(e => e.MaterialEccnKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___ECCN__Key_");

                entity.Property(e => e.MaterialHtsKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___HTS__Key_");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___Key");

                entity.Property(e => e.MaterialMaterialTypeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___Material_type__Key_");

                entity.Property(e => e.MaterialMaterialTypeText)
                    .HasMaxLength(50)
                    .HasColumnName("Material___Material_type__Text_");

                entity.Property(e => e.MaterialProductCategoryText)
                    .HasMaxLength(50)
                    .HasColumnName("Material___Product_Category__Text_");

                entity.Property(e => e.NetValue)
                    .HasMaxLength(50)
                    .HasColumnName("Net_Value");

                entity.Property(e => e.ReportedQuantity)
                    .HasMaxLength(50)
                    .HasColumnName("Reported_Quantity");

                entity.Property(e => e.ResaleShipDate)
                    .HasMaxLength(50)
                    .HasColumnName("Resale_ship_date");

                entity.Property(e => e.Reseller1BasDistrictKey)
                    .HasMaxLength(500)
                    .HasColumnName("Reseller_1___BAS__District__Key_");

                entity.Property(e => e.Reseller1BasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Reseller_1___BAS__Postal_Code__Key_");

                entity.Property(e => e.Reseller1BasStreet2Key)
                    .HasMaxLength(500)
                    .HasColumnName("Reseller_1___BAS___Street_2__Key_");

                entity.Property(e => e.Reseller1BasStreet3Key)
                    .HasMaxLength(500)
                    .HasColumnName("Reseller_1___BAS___Street_3__Key_");

                entity.Property(e => e.Reseller1BasStreet4Key)
                    .HasMaxLength(500)
                    .HasColumnName("Reseller_1___BAS___Street_4__Key_");

                entity.Property(e => e.Reseller1BasStreetKey)
                    .HasMaxLength(500)
                    .HasColumnName("Reseller_1___BAS__Street__Key_");

                entity.Property(e => e.Reseller1CountryText)
                    .HasMaxLength(500)
                    .HasColumnName("Reseller_1___Country__Text_");

                entity.Property(e => e.Reseller1Key)
                    .HasMaxLength(50)
                    .HasColumnName("Reseller_1___Key");

                entity.Property(e => e.Reseller1LongText)
                    .HasMaxLength(500)
                    .HasColumnName("Reseller_1___Long_Text");

                entity.Property(e => e.ResellerPoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Reseller_PO_Number");

                entity.Property(e => e.SalesOrderNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Sales_Order_Number");

                entity.Property(e => e.SdContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("SD_Contract_Number");

                entity.Property(e => e.TransactionDate)
                    .HasMaxLength(50)
                    .HasColumnName("Transaction_Date");

                entity.Property(e => e.TransactionQuantity)
                    .HasMaxLength(50)
                    .HasColumnName("Transaction_Quantity");

                entity.Property(e => e.TransmissionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Transmission_Number");
            });

            modelBuilder.Entity<PosMar2018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("pos_mar2018", "dsf");

                entity.Property(e => e.BillToPartyBasDistrictKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___BAS__District__Key_");

                entity.Property(e => e.BillToPartyBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___BAS__Postal_Code__Key_");

                entity.Property(e => e.BillToPartyBasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party___BAS___Street_2__Key_");

                entity.Property(e => e.BillToPartyBasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party___BAS___Street_3__Key_");

                entity.Property(e => e.BillToPartyBasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party___BAS___Street_4__Key_");

                entity.Property(e => e.BillToPartyBasStreetKey)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party___BAS__Street__Key_");

                entity.Property(e => e.BillToPartyCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___Country__Text_");

                entity.Property(e => e.BillToPartyKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___Key");

                entity.Property(e => e.BillToPartyLongText)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party___Long_Text");

                entity.Property(e => e.BillToPartyRegionKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___Region__Key_");

                entity.Property(e => e.ChannelPartnerKey)
                    .HasMaxLength(50)
                    .HasColumnName("Channel_Partner___Key");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(50)
                    .HasColumnName("CI_Status");

                entity.Property(e => e.ClaimAmountInUsd)
                    .HasMaxLength(50)
                    .HasColumnName("Claim_Amount_in_USD");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(50)
                    .HasColumnName("Claim_Status");

                entity.Property(e => e.DistributorBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Distributor___BAS__Postal_Code__Key_");

                entity.Property(e => e.DistributorBasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Distributor___BAS___Street_2__Key_");

                entity.Property(e => e.DistributorBasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Distributor___BAS___Street_3__Key_");

                entity.Property(e => e.DistributorBasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Distributor___BAS___Street_4__Key_");

                entity.Property(e => e.DistributorBasStreetKey)
                    .HasMaxLength(250)
                    .HasColumnName("Distributor___BAS__Street__Key_");

                entity.Property(e => e.DistributorCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Distributor___Country__Text_");

                entity.Property(e => e.DistributorDistrictKey)
                    .HasMaxLength(50)
                    .HasColumnName("Distributor___District__Key_");

                entity.Property(e => e.DistributorKey)
                    .HasMaxLength(50)
                    .HasColumnName("Distributor___Key");

                entity.Property(e => e.DistributorLongText)
                    .HasMaxLength(250)
                    .HasColumnName("Distributor___Long_Text");

                entity.Property(e => e.DistributorRegionKey)
                    .HasMaxLength(50)
                    .HasColumnName("Distributor___Region__Key_");

                entity.Property(e => e.DistributorSalesOrPdisslsonKey)
                    .HasMaxLength(50)
                    .HasColumnName("Distributor_Sales_Or__PDISSLSON____Key");

                entity.Property(e => e.DocumentOrderNumbe)
                    .HasMaxLength(50)
                    .HasColumnName("Document_Order_numbe");

                entity.Property(e => e.EndCustomerBasDistrictKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___BAS__District__Key_");

                entity.Property(e => e.EndCustomerBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___BAS__Postal_Code__Key_");

                entity.Property(e => e.EndCustomerBasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___BAS___Street_2__Key_");

                entity.Property(e => e.EndCustomerBasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___BAS___Street_3__Key_");

                entity.Property(e => e.EndCustomerBasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___BAS___Street_4__Key_");

                entity.Property(e => e.EndCustomerBasStreetKey)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___BAS__Street__Key_");

                entity.Property(e => e.EndCustomerCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Country__Key_");

                entity.Property(e => e.EndCustomerCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Country__Text_");

                entity.Property(e => e.EndCustomerKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Key");

                entity.Property(e => e.EndCustomerLongText)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___Long_Text");

                entity.Property(e => e.EndCustomerPoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer_PO_Number");

                entity.Property(e => e.EndCustomerRegionKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Region__Key_");

                entity.Property(e => e.ItemCreatedDate)
                    .HasMaxLength(50)
                    .HasColumnName("Item_Created_Date");

                entity.Property(e => e.ItemNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Item_Number");

                entity.Property(e => e.JuniperPosValue)
                    .HasMaxLength(50)
                    .HasColumnName("Juniper_POS_Value");

                entity.Property(e => e.JuniperProductSeri)
                    .HasMaxLength(50)
                    .HasColumnName("Juniper_Product_Seri");

                entity.Property(e => e.ListPriceRtcmFormattedValue)
                    .HasMaxLength(50)
                    .HasColumnName("List_Price_RTCM_Formatted_Value");

                entity.Property(e => e.Material).HasMaxLength(50);

                entity.Property(e => e.MaterialEccnKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___ECCN__Key_");

                entity.Property(e => e.MaterialHtsKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___HTS__Key_");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___Key");

                entity.Property(e => e.MaterialMaterialTypeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___Material_type__Key_");

                entity.Property(e => e.MaterialMaterialTypeText)
                    .HasMaxLength(50)
                    .HasColumnName("Material___Material_type__Text_");

                entity.Property(e => e.MaterialProductCategoryText)
                    .HasMaxLength(50)
                    .HasColumnName("Material___Product_Category__Text_");

                entity.Property(e => e.NetValue)
                    .HasMaxLength(50)
                    .HasColumnName("Net_Value");

                entity.Property(e => e.ReportedQuantity)
                    .HasMaxLength(50)
                    .HasColumnName("Reported_Quantity");

                entity.Property(e => e.ResaleShipDate)
                    .HasMaxLength(50)
                    .HasColumnName("Resale_ship_date");

                entity.Property(e => e.Reseller1BasDistrictKey)
                    .HasMaxLength(50)
                    .HasColumnName("Reseller_1___BAS__District__Key_");

                entity.Property(e => e.Reseller1BasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Reseller_1___BAS__Postal_Code__Key_");

                entity.Property(e => e.Reseller1BasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Reseller_1___BAS___Street_2__Key_");

                entity.Property(e => e.Reseller1BasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Reseller_1___BAS___Street_3__Key_");

                entity.Property(e => e.Reseller1BasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Reseller_1___BAS___Street_4__Key_");

                entity.Property(e => e.Reseller1BasStreetKey)
                    .HasMaxLength(250)
                    .HasColumnName("Reseller_1___BAS__Street__Key_");

                entity.Property(e => e.Reseller1CountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Reseller_1___Country__Text_");

                entity.Property(e => e.Reseller1Key)
                    .HasMaxLength(50)
                    .HasColumnName("Reseller_1___Key");

                entity.Property(e => e.Reseller1LongText)
                    .HasMaxLength(250)
                    .HasColumnName("Reseller_1___Long_Text");

                entity.Property(e => e.ResellerPoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Reseller_PO_Number");

                entity.Property(e => e.SalesOrderNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Sales_Order_Number");

                entity.Property(e => e.SdContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("SD_Contract_Number");

                entity.Property(e => e.TransactionDate)
                    .HasMaxLength(50)
                    .HasColumnName("Transaction_Date");

                entity.Property(e => e.TransactionQuantity)
                    .HasMaxLength(50)
                    .HasColumnName("Transaction_Quantity");

                entity.Property(e => e.TransmissionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Transmission_Number");
            });

            modelBuilder.Entity<PosMay2018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("pos_may2018", "dsf");

                entity.Property(e => e.BillToPartyBasDistrictKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___BAS__District__Key_");

                entity.Property(e => e.BillToPartyBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___BAS__Postal_Code__Key_");

                entity.Property(e => e.BillToPartyBasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party___BAS___Street_2__Key_");

                entity.Property(e => e.BillToPartyBasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party___BAS___Street_3__Key_");

                entity.Property(e => e.BillToPartyBasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party___BAS___Street_4__Key_");

                entity.Property(e => e.BillToPartyBasStreetKey)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party___BAS__Street__Key_");

                entity.Property(e => e.BillToPartyCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___Country__Text_");

                entity.Property(e => e.BillToPartyKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___Key");

                entity.Property(e => e.BillToPartyLongText)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party___Long_Text");

                entity.Property(e => e.BillToPartyRegionKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___Region__Key_");

                entity.Property(e => e.ChannelPartnerKey)
                    .HasMaxLength(50)
                    .HasColumnName("Channel_Partner___Key");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(50)
                    .HasColumnName("CI_Status");

                entity.Property(e => e.ClaimAmountInUsd)
                    .HasMaxLength(50)
                    .HasColumnName("Claim_Amount_in_USD");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(50)
                    .HasColumnName("Claim_Status");

                entity.Property(e => e.DistributorBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Distributor___BAS__Postal_Code__Key_");

                entity.Property(e => e.DistributorBasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Distributor___BAS___Street_2__Key_");

                entity.Property(e => e.DistributorBasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Distributor___BAS___Street_3__Key_");

                entity.Property(e => e.DistributorBasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Distributor___BAS___Street_4__Key_");

                entity.Property(e => e.DistributorBasStreetKey)
                    .HasMaxLength(250)
                    .HasColumnName("Distributor___BAS__Street__Key_");

                entity.Property(e => e.DistributorCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Distributor___Country__Text_");

                entity.Property(e => e.DistributorDistrictKey)
                    .HasMaxLength(50)
                    .HasColumnName("Distributor___District__Key_");

                entity.Property(e => e.DistributorKey)
                    .HasMaxLength(50)
                    .HasColumnName("Distributor___Key");

                entity.Property(e => e.DistributorLongText)
                    .HasMaxLength(250)
                    .HasColumnName("Distributor___Long_Text");

                entity.Property(e => e.DistributorRegionKey)
                    .HasMaxLength(50)
                    .HasColumnName("Distributor___Region__Key_");

                entity.Property(e => e.DistributorSalesOrPdisslsonKey)
                    .HasMaxLength(50)
                    .HasColumnName("Distributor_Sales_Or__PDISSLSON____Key");

                entity.Property(e => e.DocumentOrderNumbe)
                    .HasMaxLength(50)
                    .HasColumnName("Document_Order_numbe");

                entity.Property(e => e.EndCustomerBasDistrictKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___BAS__District__Key_");

                entity.Property(e => e.EndCustomerBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___BAS__Postal_Code__Key_");

                entity.Property(e => e.EndCustomerBasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___BAS___Street_2__Key_");

                entity.Property(e => e.EndCustomerBasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___BAS___Street_3__Key_");

                entity.Property(e => e.EndCustomerBasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___BAS___Street_4__Key_");

                entity.Property(e => e.EndCustomerBasStreetKey)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___BAS__Street__Key_");

                entity.Property(e => e.EndCustomerCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Country__Key_");

                entity.Property(e => e.EndCustomerCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Country__Text_");

                entity.Property(e => e.EndCustomerKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Key");

                entity.Property(e => e.EndCustomerLongText)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___Long_Text");

                entity.Property(e => e.EndCustomerPoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer_PO_Number");

                entity.Property(e => e.EndCustomerRegionKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Region__Key_");

                entity.Property(e => e.ItemCreatedDate)
                    .HasMaxLength(50)
                    .HasColumnName("Item_Created_Date");

                entity.Property(e => e.ItemNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Item_Number");

                entity.Property(e => e.JuniperPosValue)
                    .HasMaxLength(50)
                    .HasColumnName("Juniper_POS_Value");

                entity.Property(e => e.JuniperProductSeri)
                    .HasMaxLength(50)
                    .HasColumnName("Juniper_Product_Seri");

                entity.Property(e => e.ListPriceRtcmFormattedValue)
                    .HasMaxLength(50)
                    .HasColumnName("List_Price_RTCM_Formatted_Value");

                entity.Property(e => e.Material).HasMaxLength(50);

                entity.Property(e => e.MaterialEccnKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___ECCN__Key_");

                entity.Property(e => e.MaterialHtsKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___HTS__Key_");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___Key");

                entity.Property(e => e.MaterialMaterialTypeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___Material_type__Key_");

                entity.Property(e => e.MaterialMaterialTypeText)
                    .HasMaxLength(50)
                    .HasColumnName("Material___Material_type__Text_");

                entity.Property(e => e.MaterialProductCategoryText)
                    .HasMaxLength(50)
                    .HasColumnName("Material___Product_Category__Text_");

                entity.Property(e => e.NetValue)
                    .HasMaxLength(50)
                    .HasColumnName("Net_Value");

                entity.Property(e => e.ReportedQuantity)
                    .HasMaxLength(50)
                    .HasColumnName("Reported_Quantity");

                entity.Property(e => e.ResaleShipDate)
                    .HasMaxLength(50)
                    .HasColumnName("Resale_ship_date");

                entity.Property(e => e.Reseller1BasDistrictKey)
                    .HasMaxLength(50)
                    .HasColumnName("Reseller_1___BAS__District__Key_");

                entity.Property(e => e.Reseller1BasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Reseller_1___BAS__Postal_Code__Key_");

                entity.Property(e => e.Reseller1BasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Reseller_1___BAS___Street_2__Key_");

                entity.Property(e => e.Reseller1BasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Reseller_1___BAS___Street_3__Key_");

                entity.Property(e => e.Reseller1BasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Reseller_1___BAS___Street_4__Key_");

                entity.Property(e => e.Reseller1BasStreetKey)
                    .HasMaxLength(250)
                    .HasColumnName("Reseller_1___BAS__Street__Key_");

                entity.Property(e => e.Reseller1CountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Reseller_1___Country__Text_");

                entity.Property(e => e.Reseller1Key)
                    .HasMaxLength(50)
                    .HasColumnName("Reseller_1___Key");

                entity.Property(e => e.Reseller1LongText)
                    .HasMaxLength(250)
                    .HasColumnName("Reseller_1___Long_Text");

                entity.Property(e => e.ResellerPoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Reseller_PO_Number");

                entity.Property(e => e.SalesOrderNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Sales_Order_Number");

                entity.Property(e => e.SdContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("SD_Contract_Number");

                entity.Property(e => e.TransactionDate)
                    .HasMaxLength(50)
                    .HasColumnName("Transaction_Date");

                entity.Property(e => e.TransactionQuantity)
                    .HasMaxLength(50)
                    .HasColumnName("Transaction_Quantity");

                entity.Property(e => e.TransmissionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Transmission_Number");
            });

            modelBuilder.Entity<PosMetaVw>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("pos_meta_vw");

                entity.Property(e => e.BilltoPartyCountry)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_country");

                entity.Property(e => e.BilltoPartyDistrict)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_district");

                entity.Property(e => e.BilltoPartyKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_key");

                entity.Property(e => e.BilltoPartyName)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_name");

                entity.Property(e => e.BilltoPartyPostalCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_postal_code");

                entity.Property(e => e.BilltoPartyRegion)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_region");

                entity.Property(e => e.BilltoPartyStreet1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_street1");

                entity.Property(e => e.BilltoPartyStreet2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_street2");

                entity.Property(e => e.BilltoPartyStreet3)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_street3");

                entity.Property(e => e.BilltoPartyStreet4)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_street4");

                entity.Property(e => e.ChannelPartnerKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("channel_partner_key");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("claim_status");

                entity.Property(e => e.DedeupId).HasColumnName("dedeup_id");

                entity.Property(e => e.DistiCountry)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_country");

                entity.Property(e => e.DistiDistrict)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_district");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiPostalCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_postal_code");

                entity.Property(e => e.DistiRegion)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_region");

                entity.Property(e => e.DistiSales)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_sales");

                entity.Property(e => e.DistiStreet1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_street1");

                entity.Property(e => e.DistiStreet2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_street2");

                entity.Property(e => e.DistiStreet3)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_street3");

                entity.Property(e => e.DistiStreet4)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_street4");

                entity.Property(e => e.DocOrderNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("doc_order_number");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustDistrict)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_district");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustPoNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_po_number");

                entity.Property(e => e.EndCustPostalCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_postal_code");

                entity.Property(e => e.EndCustRegion)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_region");

                entity.Property(e => e.EndCustStreet1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_street1");

                entity.Property(e => e.EndCustStreet2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_street2");

                entity.Property(e => e.EndCustStreet3)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_street3");

                entity.Property(e => e.EndCustStreet4)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_street4");

                entity.Property(e => e.ImportDate)
                    .HasColumnType("datetime")
                    .HasColumnName("import_date");

                entity.Property(e => e.ImportId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("import_id");

                entity.Property(e => e.ImportStatus)
                    .HasMaxLength(255)
                    .HasColumnName("import_status");

                entity.Property(e => e.ItemCreatedDate)
                    .HasColumnType("date")
                    .HasColumnName("item_created_date");

                entity.Property(e => e.ItemNumber).HasColumnName("item_number");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.Material)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material");

                entity.Property(e => e.MaterialEccn)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material_eccn");

                entity.Property(e => e.MaterialHts)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material_hts");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material_key");

                entity.Property(e => e.MaterialProductCat)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material_product_cat");

                entity.Property(e => e.MaterialType)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material_type");

                entity.Property(e => e.MaterialTypeKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material_type_key");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.NpSerialNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("np_serial_number");

                entity.Property(e => e.ReportedQty)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reported_qty");

                entity.Property(e => e.ResaleShipDate)
                    .HasColumnType("date")
                    .HasColumnName("resale_ship_date");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerDistrict)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_district");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerPoNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_po_number");

                entity.Property(e => e.ResellerPostalCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_postal_code");

                entity.Property(e => e.ResellerStreet1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_street1");

                entity.Property(e => e.ResellerStreet2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_street2");

                entity.Property(e => e.ResellerStreet3)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_street3");

                entity.Property(e => e.ResellerStreet4)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_street4");

                entity.Property(e => e.SdContractNumber)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("sd_contract_number");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("so_number");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionQty)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("transaction_qty");

                entity.Property(e => e.TransmissionNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("transmission_number");
            });

            modelBuilder.Entity<PosMetaVw1>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("pos_meta_vw", "dev");

                entity.Property(e => e.BilltoPartyCountry)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_country");

                entity.Property(e => e.BilltoPartyDistrict)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_district");

                entity.Property(e => e.BilltoPartyKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_key");

                entity.Property(e => e.BilltoPartyName)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_name");

                entity.Property(e => e.BilltoPartyPostalCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_postal_code");

                entity.Property(e => e.BilltoPartyRegion)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_region");

                entity.Property(e => e.BilltoPartyStreet1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_street1");

                entity.Property(e => e.BilltoPartyStreet2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_street2");

                entity.Property(e => e.BilltoPartyStreet3)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_street3");

                entity.Property(e => e.BilltoPartyStreet4)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_street4");

                entity.Property(e => e.ChannelPartnerKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("channel_partner_key");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("claim_status");

                entity.Property(e => e.DistiCountry)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_country");

                entity.Property(e => e.DistiDistrict)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_district");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiPostalCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_postal_code");

                entity.Property(e => e.DistiRegion)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_region");

                entity.Property(e => e.DistiSales)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_sales");

                entity.Property(e => e.DistiStreet1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_street1");

                entity.Property(e => e.DistiStreet2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_street2");

                entity.Property(e => e.DistiStreet3)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_street3");

                entity.Property(e => e.DistiStreet4)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_street4");

                entity.Property(e => e.DocOrderNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("doc_order_number");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustDistrict)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_district");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustPoNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_po_number");

                entity.Property(e => e.EndCustPostalCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_postal_code");

                entity.Property(e => e.EndCustRegion)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_region");

                entity.Property(e => e.EndCustStreet1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_street1");

                entity.Property(e => e.EndCustStreet2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_street2");

                entity.Property(e => e.EndCustStreet3)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_street3");

                entity.Property(e => e.EndCustStreet4)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_street4");

                entity.Property(e => e.Exported)
                    .HasMaxLength(25)
                    .HasColumnName("exported");

                entity.Property(e => e.ImportDate)
                    .HasColumnType("datetime")
                    .HasColumnName("import_date");

                entity.Property(e => e.ImportId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("import_id");

                entity.Property(e => e.ItemCreatedDate)
                    .HasColumnType("date")
                    .HasColumnName("item_created_date");

                entity.Property(e => e.ItemNumber).HasColumnName("item_number");

                entity.Property(e => e.Material)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material");

                entity.Property(e => e.MaterialEccn)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material_eccn");

                entity.Property(e => e.MaterialHts)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material_hts");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material_key");

                entity.Property(e => e.MaterialProductCat)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material_product_cat");

                entity.Property(e => e.MaterialType)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material_type");

                entity.Property(e => e.MaterialTypeKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material_type_key");

                entity.Property(e => e.ReportedQty)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reported_qty");

                entity.Property(e => e.ResaleShipDate)
                    .HasColumnType("date")
                    .HasColumnName("resale_ship_date");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerDistrict)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_district");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerPoNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_po_number");

                entity.Property(e => e.ResellerPostalCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_postal_code");

                entity.Property(e => e.ResellerStreet1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_street1");

                entity.Property(e => e.ResellerStreet2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_street2");

                entity.Property(e => e.ResellerStreet3)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_street3");

                entity.Property(e => e.ResellerStreet4)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_street4");

                entity.Property(e => e.SdContractNumber)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("sd_contract_number");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("so_number");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionQty)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("transaction_qty");

                entity.Property(e => e.TransmissionNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("transmission_number");
            });

            modelBuilder.Entity<PosMetum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("pos_meta", "dev");

                entity.Property(e => e.BilltoPartyCountry)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_country");

                entity.Property(e => e.BilltoPartyDistrict)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_district");

                entity.Property(e => e.BilltoPartyKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_key");

                entity.Property(e => e.BilltoPartyName)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_name");

                entity.Property(e => e.BilltoPartyPostalCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_postal_code");

                entity.Property(e => e.BilltoPartyRegion)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_region");

                entity.Property(e => e.BilltoPartyStreet1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_street1");

                entity.Property(e => e.BilltoPartyStreet2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_street2");

                entity.Property(e => e.BilltoPartyStreet3)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_street3");

                entity.Property(e => e.BilltoPartyStreet4)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_street4");

                entity.Property(e => e.ChannelPartnerKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("channel_partner_key");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("claim_status");

                entity.Property(e => e.DistiCountry)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_country");

                entity.Property(e => e.DistiDistrict)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_district");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiPostalCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_postal_code");

                entity.Property(e => e.DistiRegion)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_region");

                entity.Property(e => e.DistiSales)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_sales");

                entity.Property(e => e.DistiStreet1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_street1");

                entity.Property(e => e.DistiStreet2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_street2");

                entity.Property(e => e.DistiStreet3)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_street3");

                entity.Property(e => e.DistiStreet4)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_street4");

                entity.Property(e => e.DocOrderNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("doc_order_number");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustDistrict)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_district");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustPoNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_po_number");

                entity.Property(e => e.EndCustPostalCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_postal_code");

                entity.Property(e => e.EndCustRegion)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_region");

                entity.Property(e => e.EndCustStreet1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_street1");

                entity.Property(e => e.EndCustStreet2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_street2");

                entity.Property(e => e.EndCustStreet3)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_street3");

                entity.Property(e => e.EndCustStreet4)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_street4");

                entity.Property(e => e.Exported)
                    .HasMaxLength(25)
                    .HasColumnName("exported");

                entity.Property(e => e.ImportDate)
                    .HasColumnType("datetime")
                    .HasColumnName("import_date");

                entity.Property(e => e.ImportId).HasColumnName("import_id");

                entity.Property(e => e.ItemCreatedDate)
                    .HasColumnType("date")
                    .HasColumnName("item_created_date");

                entity.Property(e => e.ItemNumber).HasColumnName("item_number");

                entity.Property(e => e.Material)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material");

                entity.Property(e => e.MaterialEccn)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material_eccn");

                entity.Property(e => e.MaterialHts)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material_hts");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material_key");

                entity.Property(e => e.MaterialProductCat)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material_product_cat");

                entity.Property(e => e.MaterialType)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material_type");

                entity.Property(e => e.MaterialTypeKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material_type_key");

                entity.Property(e => e.ReportedQty)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reported_qty");

                entity.Property(e => e.ResaleShipDate)
                    .HasColumnType("date")
                    .HasColumnName("resale_ship_date");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerDistrict)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_district");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerPoNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_po_number");

                entity.Property(e => e.ResellerPostalCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_postal_code");

                entity.Property(e => e.ResellerStreet1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_street1");

                entity.Property(e => e.ResellerStreet2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_street2");

                entity.Property(e => e.ResellerStreet3)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_street3");

                entity.Property(e => e.ResellerStreet4)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_street4");

                entity.Property(e => e.SdContractNumber)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("sd_contract_number");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("so_number");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionQty)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("transaction_qty");

                entity.Property(e => e.TransmissionNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("transmission_number");
            });

            modelBuilder.Entity<PosNewListPrice2016>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("POS_NewListPrice_2016", "dsf");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(50)
                    .HasColumnName("ACCOUNT_MANAGER");

                entity.Property(e => e.ClaimAmount)
                    .HasMaxLength(50)
                    .HasColumnName("CLAIM_AMOUNT");

                entity.Property(e => e.FinalNetValue)
                    .HasMaxLength(50)
                    .HasColumnName("FINAL_NET_VALUE");

                entity.Property(e => e.ListPrice)
                    .HasMaxLength(50)
                    .HasColumnName("LIST_PRICE");

                entity.Property(e => e.PosId).HasColumnName("POS_ID");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("SERIAL_NUMBER");

                entity.Property(e => e.SoNetvalue)
                    .HasMaxLength(50)
                    .HasColumnName("SO_NETVALUE");
            });

            modelBuilder.Entity<PosNewListPrice2017>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("POS_NewListPrice_2017", "dsf");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(50)
                    .HasColumnName("ACCOUNT_MANAGER");

                entity.Property(e => e.ClaimAmount)
                    .HasMaxLength(50)
                    .HasColumnName("CLAIM_AMOUNT");

                entity.Property(e => e.FinalNetValue)
                    .HasMaxLength(50)
                    .HasColumnName("FINAL_NET_VALUE");

                entity.Property(e => e.ListPrice)
                    .HasMaxLength(50)
                    .HasColumnName("LIST_PRICE");

                entity.Property(e => e.PosId).HasColumnName("POS_ID");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("SERIAL_NUMBER");

                entity.Property(e => e.SoNetvalue)
                    .HasMaxLength(50)
                    .HasColumnName("SO_NETVALUE");
            });

            modelBuilder.Entity<PosNewprice>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("pos_newprice");

                entity.HasIndex(e => e.PosId, "pos_newprice_ndx1");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(50)
                    .HasColumnName("account_manager");

                entity.Property(e => e.ClaimAmt)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("claim_amt");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PosId).HasColumnName("pos_id");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.TotNetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("tot_net_price");
            });

            modelBuilder.Entity<PosNewpriceMetaVw>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("pos_newprice_meta_vw");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(50)
                    .HasColumnName("account_manager");

                entity.Property(e => e.ClaimAmt)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("claim_amt");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PosId).HasColumnName("pos_id");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.TotNetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("tot_net_price");
            });

            modelBuilder.Entity<PosSepdec2018a>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("pos_sepdec2018a", "dsf");

                entity.Property(e => e.BillToPartyBasDistrictKey)
                    .HasMaxLength(150)
                    .HasColumnName("Bill_To_Party___BAS__District__Key_");

                entity.Property(e => e.BillToPartyBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___BAS__Postal_Code__Key_");

                entity.Property(e => e.BillToPartyBasStreet2Key)
                    .HasMaxLength(150)
                    .HasColumnName("Bill_To_Party___BAS___Street_2__Key_");

                entity.Property(e => e.BillToPartyBasStreet3Key)
                    .HasMaxLength(150)
                    .HasColumnName("Bill_To_Party___BAS___Street_3__Key_");

                entity.Property(e => e.BillToPartyBasStreet4Key)
                    .HasMaxLength(150)
                    .HasColumnName("Bill_To_Party___BAS___Street_4__Key_");

                entity.Property(e => e.BillToPartyBasStreetKey)
                    .HasMaxLength(150)
                    .HasColumnName("Bill_To_Party___BAS__Street__Key_");

                entity.Property(e => e.BillToPartyCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___Country__Text_");

                entity.Property(e => e.BillToPartyKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___Key");

                entity.Property(e => e.BillToPartyLongText)
                    .HasMaxLength(150)
                    .HasColumnName("Bill_To_Party___Long_Text");

                entity.Property(e => e.BillToPartyRegionKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___Region__Key_");

                entity.Property(e => e.ChannelPartnerKey)
                    .HasMaxLength(50)
                    .HasColumnName("Channel_Partner___Key");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(50)
                    .HasColumnName("CI_Status");

                entity.Property(e => e.ClaimAmountInUsd)
                    .HasMaxLength(50)
                    .HasColumnName("Claim_Amount_in_USD");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(50)
                    .HasColumnName("Claim_Status");

                entity.Property(e => e.DistributorBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Distributor___BAS__Postal_Code__Key_");

                entity.Property(e => e.DistributorBasStreet2Key)
                    .HasMaxLength(150)
                    .HasColumnName("Distributor___BAS___Street_2__Key_");

                entity.Property(e => e.DistributorBasStreet3Key)
                    .HasMaxLength(150)
                    .HasColumnName("Distributor___BAS___Street_3__Key_");

                entity.Property(e => e.DistributorBasStreet4Key)
                    .HasMaxLength(150)
                    .HasColumnName("Distributor___BAS___Street_4__Key_");

                entity.Property(e => e.DistributorBasStreetKey)
                    .HasMaxLength(150)
                    .HasColumnName("Distributor___BAS__Street__Key_");

                entity.Property(e => e.DistributorCountryText)
                    .HasMaxLength(150)
                    .HasColumnName("Distributor___Country__Text_");

                entity.Property(e => e.DistributorDistrictKey)
                    .HasMaxLength(50)
                    .HasColumnName("Distributor___District__Key_");

                entity.Property(e => e.DistributorKey)
                    .HasMaxLength(50)
                    .HasColumnName("Distributor___Key");

                entity.Property(e => e.DistributorLongText)
                    .HasMaxLength(150)
                    .HasColumnName("Distributor___Long_Text");

                entity.Property(e => e.DistributorRegionKey)
                    .HasMaxLength(50)
                    .HasColumnName("Distributor___Region__Key_");

                entity.Property(e => e.DistributorSalesOrPdisslsonKey)
                    .HasMaxLength(50)
                    .HasColumnName("Distributor_Sales_Or__PDISSLSON____Key");

                entity.Property(e => e.DocumentOrderNumbe)
                    .HasMaxLength(50)
                    .HasColumnName("Document_Order_numbe");

                entity.Property(e => e.EndCustomerBasDistrictKey)
                    .HasMaxLength(150)
                    .HasColumnName("End_Customer___BAS__District__Key_");

                entity.Property(e => e.EndCustomerBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___BAS__Postal_Code__Key_");

                entity.Property(e => e.EndCustomerBasStreet2Key)
                    .HasMaxLength(150)
                    .HasColumnName("End_Customer___BAS___Street_2__Key_");

                entity.Property(e => e.EndCustomerBasStreet3Key)
                    .HasMaxLength(150)
                    .HasColumnName("End_Customer___BAS___Street_3__Key_");

                entity.Property(e => e.EndCustomerBasStreet4Key)
                    .HasMaxLength(150)
                    .HasColumnName("End_Customer___BAS___Street_4__Key_");

                entity.Property(e => e.EndCustomerBasStreetKey)
                    .HasMaxLength(150)
                    .HasColumnName("End_Customer___BAS__Street__Key_");

                entity.Property(e => e.EndCustomerCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Country__Key_");

                entity.Property(e => e.EndCustomerCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Country__Text_");

                entity.Property(e => e.EndCustomerKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Key");

                entity.Property(e => e.EndCustomerLongText)
                    .HasMaxLength(150)
                    .HasColumnName("End_Customer___Long_Text");

                entity.Property(e => e.EndCustomerPoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer_PO_Number");

                entity.Property(e => e.EndCustomerRegionKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Region__Key_");

                entity.Property(e => e.ItemCreatedDate)
                    .HasMaxLength(50)
                    .HasColumnName("Item_Created_Date");

                entity.Property(e => e.ItemNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Item_Number");

                entity.Property(e => e.JuniperPosValue)
                    .HasMaxLength(50)
                    .HasColumnName("Juniper_POS_Value");

                entity.Property(e => e.JuniperProductSeri)
                    .HasMaxLength(50)
                    .HasColumnName("Juniper_Product_Seri");

                entity.Property(e => e.ListPriceRtcmFormattedValue)
                    .HasMaxLength(50)
                    .HasColumnName("List_Price_RTCM_Formatted_Value");

                entity.Property(e => e.Material).HasMaxLength(50);

                entity.Property(e => e.MaterialEccnKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___ECCN__Key_");

                entity.Property(e => e.MaterialHtsKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___HTS__Key_");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___Key");

                entity.Property(e => e.MaterialMaterialTypeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___Material_type__Key_");

                entity.Property(e => e.MaterialMaterialTypeText)
                    .HasMaxLength(50)
                    .HasColumnName("Material___Material_type__Text_");

                entity.Property(e => e.MaterialProductCategoryText)
                    .HasMaxLength(50)
                    .HasColumnName("Material___Product_Category__Text_");

                entity.Property(e => e.NetValue)
                    .HasMaxLength(50)
                    .HasColumnName("Net_Value");

                entity.Property(e => e.ReportedQuantity)
                    .HasMaxLength(50)
                    .HasColumnName("Reported_Quantity");

                entity.Property(e => e.ResaleShipDate)
                    .HasMaxLength(50)
                    .HasColumnName("Resale_ship_date");

                entity.Property(e => e.Reseller1BasDistrictKey)
                    .HasMaxLength(150)
                    .HasColumnName("Reseller_1___BAS__District__Key_");

                entity.Property(e => e.Reseller1BasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Reseller_1___BAS__Postal_Code__Key_");

                entity.Property(e => e.Reseller1BasStreet2Key)
                    .HasMaxLength(150)
                    .HasColumnName("Reseller_1___BAS___Street_2__Key_");

                entity.Property(e => e.Reseller1BasStreet3Key)
                    .HasMaxLength(150)
                    .HasColumnName("Reseller_1___BAS___Street_3__Key_");

                entity.Property(e => e.Reseller1BasStreet4Key)
                    .HasMaxLength(150)
                    .HasColumnName("Reseller_1___BAS___Street_4__Key_");

                entity.Property(e => e.Reseller1BasStreetKey)
                    .HasMaxLength(150)
                    .HasColumnName("Reseller_1___BAS__Street__Key_");

                entity.Property(e => e.Reseller1CountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Reseller_1___Country__Text_");

                entity.Property(e => e.Reseller1Key)
                    .HasMaxLength(50)
                    .HasColumnName("Reseller_1___Key");

                entity.Property(e => e.Reseller1LongText)
                    .HasMaxLength(150)
                    .HasColumnName("Reseller_1___Long_Text");

                entity.Property(e => e.ResellerPoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Reseller_PO_Number");

                entity.Property(e => e.SalesOrderNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Sales_Order_Number");

                entity.Property(e => e.SdContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("SD_Contract_Number");

                entity.Property(e => e.TransactionDate)
                    .HasMaxLength(50)
                    .HasColumnName("Transaction_Date");

                entity.Property(e => e.TransactionQuantity)
                    .HasMaxLength(50)
                    .HasColumnName("Transaction_Quantity");

                entity.Property(e => e.TransmissionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Transmission_Number");
            });

            modelBuilder.Entity<ProductClassification>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PRODUCT_CLASSIFICATION", "dev");

                entity.Property(e => e.ProductDescription).HasColumnName("Product_Description");

                entity.Property(e => e.ProductFamily).HasColumnName("Product_Family");

                entity.Property(e => e.ProductId).HasColumnName("Product_ID");

                entity.Property(e => e.UsHts).HasColumnName("US_HTS");

                entity.Property(e => e.ZCcats).HasColumnName("Z_CCATS");

                entity.Property(e => e.ZEuEccn).HasColumnName("Z_EU_ECCN");

                entity.Property(e => e.ZUsEccn).HasColumnName("Z_US_ECCN");
            });

            modelBuilder.Entity<ProductClassification08072019>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Product_Classification08072019", "dsf");

                entity.Property(e => e.EolDate)
                    .IsUnicode(false)
                    .HasColumnName("EOL_Date");

                entity.Property(e => e.EolIndicator)
                    .IsUnicode(false)
                    .HasColumnName("EOL_Indicator");

                entity.Property(e => e.EosDate)
                    .IsUnicode(false)
                    .HasColumnName("EOS_Date");

                entity.Property(e => e.EosIndicator)
                    .IsUnicode(false)
                    .HasColumnName("EOS_Indicator");

                entity.Property(e => e.HsnCode)
                    .IsUnicode(false)
                    .HasColumnName("HSN_CODE");

                entity.Property(e => e.HsnDescription)
                    .IsUnicode(false)
                    .HasColumnName("HSN_DESCRIPTION");

                entity.Property(e => e.LongDescription)
                    .IsUnicode(false)
                    .HasColumnName("Long_Description");

                entity.Property(e => e.MaterialProductTypeKey)
                    .IsUnicode(false)
                    .HasColumnName("Material___Product_Type__Key_");

                entity.Property(e => e.MaterialTypeCode)
                    .IsUnicode(false)
                    .HasColumnName("Material_Type_Code");

                entity.Property(e => e.MaterialTypeDescription)
                    .IsUnicode(false)
                    .HasColumnName("Material_Type_Description");

                entity.Property(e => e.MaterialTypeMediumText)
                    .IsUnicode(false)
                    .HasColumnName("Material_type___Medium_Text");

                entity.Property(e => e.OverLengthPartNumber)
                    .IsUnicode(false)
                    .HasColumnName("Over_Length_Part_Number");

                entity.Property(e => e.ProductCategory)
                    .IsUnicode(false)
                    .HasColumnName("Product_Category");

                entity.Property(e => e.ProductCreatedDate)
                    .IsUnicode(false)
                    .HasColumnName("Product_Created_Date");

                entity.Property(e => e.ProductFamily)
                    .IsUnicode(false)
                    .HasColumnName("Product_Family");

                entity.Property(e => e.ProductId)
                    .IsUnicode(false)
                    .HasColumnName("Product_ID");

                entity.Property(e => e.ProductLine)
                    .IsUnicode(false)
                    .HasColumnName("Product_Line");

                entity.Property(e => e.ProductReleaseStatus)
                    .IsUnicode(false)
                    .HasColumnName("Product_Release_Status");

                entity.Property(e => e.ShortDescription)
                    .IsUnicode(false)
                    .HasColumnName("Short_Description");

                entity.Property(e => e.Uom)
                    .IsUnicode(false)
                    .HasColumnName("UOM");

                entity.Property(e => e.UsHts)
                    .IsUnicode(false)
                    .HasColumnName("US_HTS");

                entity.Property(e => e.ZCcats)
                    .IsUnicode(false)
                    .HasColumnName("Z_CCATS");

                entity.Property(e => e.ZEuEccn)
                    .IsUnicode(false)
                    .HasColumnName("Z_EU_ECCN");

                entity.Property(e => e.ZUsEccn)
                    .IsUnicode(false)
                    .HasColumnName("Z_US_ECCN");
            });

            modelBuilder.Entity<ProductClassification080720191>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Product-Classification08072019", "dsf");

                entity.Property(e => e.EolDate)
                    .HasMaxLength(50)
                    .HasColumnName("EOL_Date");

                entity.Property(e => e.EolIndicator)
                    .HasMaxLength(50)
                    .HasColumnName("EOL_Indicator");

                entity.Property(e => e.EosDate)
                    .HasMaxLength(50)
                    .HasColumnName("EOS_Date");

                entity.Property(e => e.EosIndicator)
                    .HasMaxLength(50)
                    .HasColumnName("EOS_Indicator");

                entity.Property(e => e.HsnCode).HasColumnName("HSN_CODE");

                entity.Property(e => e.HsnDescription)
                    .HasMaxLength(100)
                    .HasColumnName("HSN_DESCRIPTION");

                entity.Property(e => e.LongDescription)
                    .HasMaxLength(150)
                    .HasColumnName("Long_Description");

                entity.Property(e => e.MaterialProductTypeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___Product_Type__Key_");

                entity.Property(e => e.MaterialTypeCode)
                    .HasMaxLength(50)
                    .HasColumnName("Material_Type_Code");

                entity.Property(e => e.MaterialTypeDescription)
                    .HasMaxLength(50)
                    .HasColumnName("Material_Type_Description");

                entity.Property(e => e.MaterialTypeMediumText)
                    .HasMaxLength(50)
                    .HasColumnName("Material_type___Medium_Text");

                entity.Property(e => e.OverLengthPartNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Over_Length_Part_Number");

                entity.Property(e => e.ProductCategory)
                    .HasMaxLength(50)
                    .HasColumnName("Product_Category");

                entity.Property(e => e.ProductCreatedDate).HasColumnName("Product_Created_Date");

                entity.Property(e => e.ProductFamily)
                    .HasMaxLength(50)
                    .HasColumnName("Product_Family");

                entity.Property(e => e.ProductId)
                    .HasMaxLength(50)
                    .HasColumnName("Product_ID");

                entity.Property(e => e.ProductLine)
                    .HasMaxLength(50)
                    .HasColumnName("Product_Line");

                entity.Property(e => e.ProductReleaseStatus)
                    .HasMaxLength(50)
                    .HasColumnName("Product_Release_Status");

                entity.Property(e => e.ShortDescription)
                    .HasMaxLength(50)
                    .HasColumnName("Short_Description");

                entity.Property(e => e.Uom)
                    .HasMaxLength(50)
                    .HasColumnName("UOM");

                entity.Property(e => e.UsHts)
                    .HasMaxLength(50)
                    .HasColumnName("US_HTS");

                entity.Property(e => e.ZCcats)
                    .HasMaxLength(50)
                    .HasColumnName("Z_CCATS");

                entity.Property(e => e.ZEuEccn)
                    .HasMaxLength(50)
                    .HasColumnName("Z_EU_ECCN");

                entity.Property(e => e.ZUsEccn)
                    .HasMaxLength(50)
                    .HasColumnName("Z_US_ECCN");
            });

            modelBuilder.Entity<ProductClassification1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("product_classification", "dsf");

                entity.Property(e => e.ProductDescription)
                    .HasMaxLength(50)
                    .HasColumnName("Product_Description");

                entity.Property(e => e.ProductFamily)
                    .HasMaxLength(50)
                    .HasColumnName("Product_Family");

                entity.Property(e => e.ProductId)
                    .HasMaxLength(50)
                    .HasColumnName("Product_ID");

                entity.Property(e => e.UsHts)
                    .HasMaxLength(50)
                    .HasColumnName("US_HTS");

                entity.Property(e => e.ZCcats)
                    .HasMaxLength(50)
                    .HasColumnName("Z_CCATS");

                entity.Property(e => e.ZEuEccn)
                    .HasMaxLength(50)
                    .HasColumnName("Z_EU_ECCN");

                entity.Property(e => e.ZUsEccn)
                    .HasMaxLength(50)
                    .HasColumnName("Z_US_ECCN");
            });

            modelBuilder.Entity<ProductClassification10032019>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PRODUCT_CLASSIFICATION_10032019", "dsf");

                entity.Property(e => e.ProductFamily).HasColumnName("Product_Family");

                entity.Property(e => e.ProductId).HasColumnName("Product_ID");

                entity.Property(e => e.ShortDescription).HasColumnName("Short_Description");

                entity.Property(e => e.UsHts).HasColumnName("US_HTS");

                entity.Property(e => e.ZCcats).HasColumnName("Z_CCATS");

                entity.Property(e => e.ZEuEccn).HasColumnName("Z_EU_ECCN");

                entity.Property(e => e.ZUsEccn).HasColumnName("Z_US_ECCN");
            });

            modelBuilder.Entity<ProductHardware>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("product_hardware", "dsf");

                entity.Property(e => e.MaterialGroup)
                    .HasMaxLength(50)
                    .HasColumnName("MATERIAL_GROUP");

                entity.Property(e => e.ProductNumber)
                    .HasMaxLength(250)
                    .HasColumnName("PRODUCT_NUMBER");
            });

            modelBuilder.Entity<ProductListPrice>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("product_list_price");

                entity.HasIndex(e => e.Material, "product_list_price_ndx");

                entity.Property(e => e.CondRecordNo).HasColumnName("cond_record_no");

                entity.Property(e => e.ConditionScaleQty)
                    .HasMaxLength(50)
                    .HasColumnName("condition_scale_qty");

                entity.Property(e => e.ConditionType)
                    .HasMaxLength(50)
                    .HasColumnName("condition_type");

                entity.Property(e => e.ConditionUnitUom)
                    .HasMaxLength(50)
                    .HasColumnName("condition_unit_UOM");

                entity.Property(e => e.ConditionValue)
                    .HasMaxLength(50)
                    .HasColumnName("condition_value");

                entity.Property(e => e.DeletionIndicator)
                    .HasMaxLength(50)
                    .HasColumnName("deletion_indicator");

                entity.Property(e => e.LowerLimit).HasColumnName("lower_limit");

                entity.Property(e => e.Material)
                    .HasMaxLength(100)
                    .HasColumnName("material");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(250)
                    .HasColumnName("material_desc");

                entity.Property(e => e.Price).HasColumnName("price");

                entity.Property(e => e.PriceScales)
                    .HasMaxLength(50)
                    .HasColumnName("price_scales");

                entity.Property(e => e.PriceUnitQty).HasColumnName("price_unit_qty");

                entity.Property(e => e.ScalingLineNo)
                    .HasMaxLength(50)
                    .HasColumnName("scaling_line_no");

                entity.Property(e => e.Unit)
                    .HasMaxLength(50)
                    .HasColumnName("unit");

                entity.Property(e => e.UpperLimit).HasColumnName("upper_limit");

                entity.Property(e => e.ValidFrom)
                    .HasColumnType("date")
                    .HasColumnName("valid_from");

                entity.Property(e => e.ValidTo)
                    .HasColumnType("date")
                    .HasColumnName("valid_to");
            });

            modelBuilder.Entity<ProductListPrice012918>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("product_list_price_012918", "dsf");

                entity.Property(e => e.CondRecordNo).HasColumnName("cond_record_no");

                entity.Property(e => e.ConditionScaleQty)
                    .HasMaxLength(50)
                    .HasColumnName("condition_scale_qty");

                entity.Property(e => e.ConditionType)
                    .HasMaxLength(50)
                    .HasColumnName("condition_type");

                entity.Property(e => e.ConditionUnitUom)
                    .HasMaxLength(50)
                    .HasColumnName("condition_unit_UOM");

                entity.Property(e => e.ConditionValue)
                    .HasMaxLength(50)
                    .HasColumnName("condition_value");

                entity.Property(e => e.DeletionIndicator)
                    .HasMaxLength(50)
                    .HasColumnName("deletion_indicator");

                entity.Property(e => e.LowerLimit).HasColumnName("lower_limit");

                entity.Property(e => e.Material)
                    .HasMaxLength(100)
                    .HasColumnName("material");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(250)
                    .HasColumnName("material_desc");

                entity.Property(e => e.Price).HasColumnName("price");

                entity.Property(e => e.PriceScales)
                    .HasMaxLength(50)
                    .HasColumnName("price_scales");

                entity.Property(e => e.PriceUnitQty).HasColumnName("price_unit_qty");

                entity.Property(e => e.ScalingLineNo)
                    .HasMaxLength(50)
                    .HasColumnName("scaling_line_no");

                entity.Property(e => e.Unit)
                    .HasMaxLength(50)
                    .HasColumnName("unit");

                entity.Property(e => e.UpperLimit).HasColumnName("upper_limit");

                entity.Property(e => e.ValidFrom)
                    .HasColumnType("date")
                    .HasColumnName("valid_from");

                entity.Property(e => e.ValidTo)
                    .HasColumnType("date")
                    .HasColumnName("valid_to");
            });

            modelBuilder.Entity<ProductMaster>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("product_master", "dsf");

                entity.Property(e => e.Dimensions).HasMaxLength(50);

                entity.Property(e => e.EolDate)
                    .HasMaxLength(50)
                    .HasColumnName("EOL_Date");

                entity.Property(e => e.EolIndicator)
                    .HasMaxLength(50)
                    .HasColumnName("EOL_Indicator");

                entity.Property(e => e.EosDate)
                    .HasMaxLength(50)
                    .HasColumnName("EOS_Date");

                entity.Property(e => e.EosIndicator)
                    .HasMaxLength(50)
                    .HasColumnName("EOS_Indicator");

                entity.Property(e => e.GrossWeight)
                    .HasMaxLength(50)
                    .HasColumnName("Gross_Weight");

                entity.Property(e => e.Height).HasMaxLength(50);

                entity.Property(e => e.Length).HasMaxLength(50);

                entity.Property(e => e.MaterialProductFamilyText)
                    .HasMaxLength(150)
                    .HasColumnName("Material___Product_Family__Text_");

                entity.Property(e => e.MaterialType)
                    .HasMaxLength(150)
                    .HasColumnName("Material_Type");

                entity.Property(e => e.MaterialTypeDescription)
                    .HasMaxLength(150)
                    .HasColumnName("Material_Type_Description");

                entity.Property(e => e.NetWeight)
                    .HasMaxLength(50)
                    .HasColumnName("Net_Weight");

                entity.Property(e => e.OverLengthPartNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Over_Length_Part_Number");

                entity.Property(e => e.ProductCreatedDate)
                    .HasMaxLength(50)
                    .HasColumnName("Product_Created_Date");

                entity.Property(e => e.ProductDescription)
                    .HasMaxLength(250)
                    .HasColumnName("Product_Description");

                entity.Property(e => e.ProductId)
                    .HasMaxLength(150)
                    .HasColumnName("Product_ID");

                entity.Property(e => e.ProductReleaseStatus)
                    .HasMaxLength(50)
                    .HasColumnName("Product_Release_Status");

                entity.Property(e => e.Uom)
                    .HasMaxLength(50)
                    .HasColumnName("UOM");

                entity.Property(e => e.UsHts)
                    .HasMaxLength(50)
                    .HasColumnName("US_HTS");

                entity.Property(e => e.Width).HasMaxLength(50);

                entity.Property(e => e.ZCcats)
                    .HasMaxLength(50)
                    .HasColumnName("Z_CCATS");

                entity.Property(e => e.ZEuEccn)
                    .HasMaxLength(50)
                    .HasColumnName("Z_EU_ECCN");

                entity.Property(e => e.ZMCcats)
                    .HasMaxLength(10)
                    .HasColumnName("Z_M_CCATS");

                entity.Property(e => e.ZNlHts)
                    .HasMaxLength(10)
                    .HasColumnName("Z_NL_HTS");

                entity.Property(e => e.ZUsEccn)
                    .HasMaxLength(50)
                    .HasColumnName("Z_US_ECCN");
            });

            modelBuilder.Entity<ProductMaster082318>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("product_master_082318", "dsf");

                entity.Property(e => e.Dimensions).HasMaxLength(255);

                entity.Property(e => e.EolDate)
                    .HasMaxLength(255)
                    .HasColumnName("EOL_Date");

                entity.Property(e => e.EolIndicator)
                    .HasMaxLength(255)
                    .HasColumnName("EOL_Indicator");

                entity.Property(e => e.EosDate)
                    .HasMaxLength(255)
                    .HasColumnName("EOS_Date");

                entity.Property(e => e.EosIndicator)
                    .HasMaxLength(255)
                    .HasColumnName("EOS_Indicator");

                entity.Property(e => e.GrossWeight)
                    .HasMaxLength(255)
                    .HasColumnName("Gross Weight");

                entity.Property(e => e.Height).HasMaxLength(255);

                entity.Property(e => e.HsnCode)
                    .HasMaxLength(255)
                    .HasColumnName("HSN_CODE");

                entity.Property(e => e.HsnDescription)
                    .HasMaxLength(255)
                    .HasColumnName("HSN_DESCRIPTION");

                entity.Property(e => e.Length).HasMaxLength(255);

                entity.Property(e => e.LongDescription)
                    .HasMaxLength(255)
                    .HasColumnName("Long Description");

                entity.Property(e => e.MaterialProductTypeKey)
                    .HasMaxLength(255)
                    .HasColumnName("Material - Product Type (Key)");

                entity.Property(e => e.MaterialServiceEligibleText)
                    .HasMaxLength(255)
                    .HasColumnName("Material - Service Eligible (Text)");

                entity.Property(e => e.MaterialTypeCode)
                    .HasMaxLength(255)
                    .HasColumnName("Material Type Code");

                entity.Property(e => e.MaterialTypeDescription)
                    .HasMaxLength(255)
                    .HasColumnName("Material Type Description");

                entity.Property(e => e.MaterialTypeMediumText)
                    .HasMaxLength(255)
                    .HasColumnName("Material type - Medium Text");

                entity.Property(e => e.NetWeight)
                    .HasMaxLength(255)
                    .HasColumnName("Net Weight");

                entity.Property(e => e.OverLengthPartNumber)
                    .HasMaxLength(255)
                    .HasColumnName("Over Length Part Number");

                entity.Property(e => e.ProductCategory)
                    .HasMaxLength(255)
                    .HasColumnName("Product Category");

                entity.Property(e => e.ProductCreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Product Created Date");

                entity.Property(e => e.ProductFamily)
                    .HasMaxLength(255)
                    .HasColumnName("Product Family");

                entity.Property(e => e.ProductId)
                    .HasMaxLength(255)
                    .HasColumnName("Product ID");

                entity.Property(e => e.ProductLine)
                    .HasMaxLength(255)
                    .HasColumnName("Product Line");

                entity.Property(e => e.ProductReleaseStatus)
                    .HasMaxLength(255)
                    .HasColumnName("Product Release Status");

                entity.Property(e => e.ShortDescription)
                    .HasMaxLength(255)
                    .HasColumnName("Short Description");

                entity.Property(e => e.Uom)
                    .HasMaxLength(255)
                    .HasColumnName("UOM");

                entity.Property(e => e.UsHts)
                    .HasMaxLength(255)
                    .HasColumnName("US_HTS");

                entity.Property(e => e.Width).HasMaxLength(255);

                entity.Property(e => e.ZCcats)
                    .HasMaxLength(255)
                    .HasColumnName("Z_CCATS");

                entity.Property(e => e.ZEuEccn)
                    .HasMaxLength(255)
                    .HasColumnName("Z_EU_ECCN");

                entity.Property(e => e.ZMCcats)
                    .HasMaxLength(255)
                    .HasColumnName("Z_M_CCATS");

                entity.Property(e => e.ZNlHts)
                    .HasMaxLength(255)
                    .HasColumnName("Z_NL_HTS");

                entity.Property(e => e.ZUsEccn)
                    .HasMaxLength(255)
                    .HasColumnName("Z_US_ECCN");
            });

            modelBuilder.Entity<ProductMasterMetaVw>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("product_master_meta_vw");

                entity.Property(e => e.EolDate)
                    .HasColumnType("date")
                    .HasColumnName("eol_date");

                entity.Property(e => e.EolIndicator)
                    .HasMaxLength(10)
                    .HasColumnName("eol_indicator");

                entity.Property(e => e.EosDate)
                    .HasColumnType("date")
                    .HasColumnName("eos_date");

                entity.Property(e => e.EosIndicator)
                    .HasMaxLength(10)
                    .HasColumnName("eos_indicator");

                entity.Property(e => e.HsnCode)
                    .HasMaxLength(50)
                    .HasColumnName("hsn_code");

                entity.Property(e => e.HsnDescription)
                    .HasMaxLength(255)
                    .HasColumnName("hsn_description");

                entity.Property(e => e.OverLengthPartNumber)
                    .HasMaxLength(255)
                    .HasColumnName("over_length_part_number");

                entity.Property(e => e.ProdDimensions)
                    .HasMaxLength(50)
                    .HasColumnName("prod_dimensions");

                entity.Property(e => e.ProdGrossWeight)
                    .HasMaxLength(50)
                    .HasColumnName("prod_gross_weight");

                entity.Property(e => e.ProdHeight)
                    .HasMaxLength(50)
                    .HasColumnName("prod_height");

                entity.Property(e => e.ProdLength)
                    .HasMaxLength(50)
                    .HasColumnName("prod_length");

                entity.Property(e => e.ProdNetWeight)
                    .HasMaxLength(50)
                    .HasColumnName("prod_net_weight");

                entity.Property(e => e.ProdWidth)
                    .HasMaxLength(50)
                    .HasColumnName("prod_width");

                entity.Property(e => e.ProductCategory)
                    .HasMaxLength(255)
                    .HasColumnName("product_category");

                entity.Property(e => e.ProductCreatedDate)
                    .HasColumnType("date")
                    .HasColumnName("product_created_date");

                entity.Property(e => e.ProductFamily)
                    .HasMaxLength(255)
                    .HasColumnName("product_family");

                entity.Property(e => e.ProductId)
                    .HasMaxLength(50)
                    .HasColumnName("product_id");

                entity.Property(e => e.ProductLine)
                    .HasMaxLength(255)
                    .HasColumnName("product_line");

                entity.Property(e => e.ProductLongDesc)
                    .HasMaxLength(255)
                    .HasColumnName("product_long_desc");

                entity.Property(e => e.ProductReleaseStatus)
                    .HasMaxLength(255)
                    .HasColumnName("product_release_status");

                entity.Property(e => e.ProductShortDesc)
                    .HasMaxLength(255)
                    .HasColumnName("product_short_desc");

                entity.Property(e => e.ProductType)
                    .HasMaxLength(50)
                    .HasColumnName("product_type");

                entity.Property(e => e.ProductTypeCode)
                    .HasMaxLength(50)
                    .HasColumnName("product_type_code");

                entity.Property(e => e.ProductTypeDescription)
                    .HasMaxLength(255)
                    .HasColumnName("product_type_description");

                entity.Property(e => e.ProductTypeText)
                    .HasMaxLength(255)
                    .HasColumnName("product_type_text");

                entity.Property(e => e.ServiceEligible)
                    .HasMaxLength(50)
                    .HasColumnName("service_eligible");

                entity.Property(e => e.Uom)
                    .HasMaxLength(50)
                    .HasColumnName("uom");

                entity.Property(e => e.UsHts)
                    .HasMaxLength(50)
                    .HasColumnName("us_hts");

                entity.Property(e => e.ZCcats)
                    .HasMaxLength(50)
                    .HasColumnName("z_ccats");

                entity.Property(e => e.ZEuEccn)
                    .HasMaxLength(50)
                    .HasColumnName("z_eu_eccn");

                entity.Property(e => e.ZMCcats)
                    .HasMaxLength(50)
                    .HasColumnName("z_m_ccats");

                entity.Property(e => e.ZNlHts)
                    .HasMaxLength(50)
                    .HasColumnName("z_nl_hts");

                entity.Property(e => e.ZUsEccn)
                    .HasMaxLength(50)
                    .HasColumnName("z_us_eccn");
            });

            modelBuilder.Entity<Productclassificationdelete>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("productclassificationdelete");

                entity.Property(e => e.EolDate)
                    .IsUnicode(false)
                    .HasColumnName("eol_date");

                entity.Property(e => e.EolIndicator)
                    .IsUnicode(false)
                    .HasColumnName("eol_indicator");

                entity.Property(e => e.EosDate)
                    .IsUnicode(false)
                    .HasColumnName("eos_date");

                entity.Property(e => e.EosIndicator)
                    .IsUnicode(false)
                    .HasColumnName("eos_indicator");

                entity.Property(e => e.GrossWeight)
                    .IsUnicode(false)
                    .HasColumnName("gross_weight");

                entity.Property(e => e.Height)
                    .IsUnicode(false)
                    .HasColumnName("height");

                entity.Property(e => e.HsnCode)
                    .IsUnicode(false)
                    .HasColumnName("hsn_code");

                entity.Property(e => e.HsnDescription)
                    .IsUnicode(false)
                    .HasColumnName("hsn_description");

                entity.Property(e => e.Length)
                    .IsUnicode(false)
                    .HasColumnName("length");

                entity.Property(e => e.LongDescription)
                    .IsUnicode(false)
                    .HasColumnName("long_description");

                entity.Property(e => e.MaterialProductTypeKey)
                    .IsUnicode(false)
                    .HasColumnName("material_-_product_type_key");

                entity.Property(e => e.MaterialTypeCode)
                    .IsUnicode(false)
                    .HasColumnName("material_type_code");

                entity.Property(e => e.MaterialTypeDescription)
                    .IsUnicode(false)
                    .HasColumnName("material_type_description");

                entity.Property(e => e.MaterialTypeMediumText)
                    .IsUnicode(false)
                    .HasColumnName("material_type_-_medium_text");

                entity.Property(e => e.NetWeight)
                    .IsUnicode(false)
                    .HasColumnName("net_weight");

                entity.Property(e => e.OverLengthPartNumber)
                    .IsUnicode(false)
                    .HasColumnName("over_length_part_number");

                entity.Property(e => e.ProductCategory)
                    .IsUnicode(false)
                    .HasColumnName("product_category");

                entity.Property(e => e.ProductCreatedDate)
                    .IsUnicode(false)
                    .HasColumnName("product_created_date");

                entity.Property(e => e.ProductFamily)
                    .IsUnicode(false)
                    .HasColumnName("product_family");

                entity.Property(e => e.ProductId)
                    .IsUnicode(false)
                    .HasColumnName("product_id");

                entity.Property(e => e.ProductLine)
                    .IsUnicode(false)
                    .HasColumnName("product_line");

                entity.Property(e => e.ProductReleaseStatus)
                    .IsUnicode(false)
                    .HasColumnName("product_release_status");

                entity.Property(e => e.ShortDescription)
                    .IsUnicode(false)
                    .HasColumnName("short_description");

                entity.Property(e => e.Uom)
                    .IsUnicode(false)
                    .HasColumnName("uom");

                entity.Property(e => e.UsHts).HasColumnName("us_hts");

                entity.Property(e => e.Width)
                    .IsUnicode(false)
                    .HasColumnName("width");

                entity.Property(e => e.ZCcats)
                    .IsUnicode(false)
                    .HasColumnName("z_ccats");

                entity.Property(e => e.ZEuEccn)
                    .IsUnicode(false)
                    .HasColumnName("z_eu_eccn");

                entity.Property(e => e.ZUsEccn)
                    .IsUnicode(false)
                    .HasColumnName("z_us_eccn");
            });

            modelBuilder.Entity<ProfileLegacy>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("profile_legacy");

                entity.Property(e => e.AccountName)
                    .HasMaxLength(250)
                    .HasColumnName("account_name");

                entity.Property(e => e.AddressLine1)
                    .HasMaxLength(250)
                    .HasColumnName("address_line_1");

                entity.Property(e => e.AddressLine2)
                    .HasMaxLength(250)
                    .HasColumnName("address_line_2");

                entity.Property(e => e.AddressLine3)
                    .HasMaxLength(250)
                    .HasColumnName("address_line_3");

                entity.Property(e => e.AddressLine4)
                    .HasMaxLength(250)
                    .HasColumnName("address_line_4");

                entity.Property(e => e.City)
                    .HasMaxLength(50)
                    .HasColumnName("city");

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("country_code");

                entity.Property(e => e.CountryName)
                    .HasMaxLength(250)
                    .HasColumnName("country_name");

                entity.Property(e => e.DiversionNotrisk)
                    .HasMaxLength(20)
                    .HasColumnName("diversion_notrisk");

                entity.Property(e => e.DiversionRisk)
                    .HasMaxLength(20)
                    .HasColumnName("diversion_risk");

                entity.Property(e => e.Elr)
                    .HasMaxLength(20)
                    .HasColumnName("elr");

                entity.Property(e => e.EpciConcern)
                    .HasMaxLength(20)
                    .HasColumnName("epci_concern");

                entity.Property(e => e.EpciEucr)
                    .HasMaxLength(20)
                    .HasColumnName("epci_eucr");

                entity.Property(e => e.EpciExemptEuca)
                    .HasMaxLength(20)
                    .HasColumnName("epci_exempt_euca");

                entity.Property(e => e.EpciExemptEucnr)
                    .HasMaxLength(20)
                    .HasColumnName("epci_exempt_eucnr");

                entity.Property(e => e.GovEndUse)
                    .HasMaxLength(20)
                    .HasColumnName("gov_end_use");

                entity.Property(e => e.GovExempt)
                    .HasMaxLength(20)
                    .HasColumnName("gov_exempt");

                entity.Property(e => e.GtsId)
                    .HasMaxLength(50)
                    .HasColumnName("gts_id");

                entity.Property(e => e.NotProfiledNonriskyCnty)
                    .HasMaxLength(20)
                    .HasColumnName("not_profiled_nonrisky_cnty");

                entity.Property(e => e.NotProfiledRiskyCnty)
                    .HasMaxLength(20)
                    .HasColumnName("not_profiled_risky_cnty");

                entity.Property(e => e.Ns3Gov)
                    .HasMaxLength(20)
                    .HasColumnName("ns3_gov");

                entity.Property(e => e.PostalCode)
                    .HasMaxLength(50)
                    .HasColumnName("postal_code");

                entity.Property(e => e.PotentialEmbargo)
                    .HasMaxLength(20)
                    .HasColumnName("potential_embargo");

                entity.Property(e => e.ProfileDate)
                    .HasColumnType("datetime")
                    .HasColumnName("profile_date");

                entity.Property(e => e.ProfiledCommercialSelltoGov)
                    .HasMaxLength(20)
                    .HasColumnName("profiled_commercial_sellto_gov");

                entity.Property(e => e.ProfiledGovRelated)
                    .HasMaxLength(20)
                    .HasColumnName("profiled_gov_related");

                entity.Property(e => e.ProfiledNogovNosoe)
                    .HasMaxLength(20)
                    .HasColumnName("profiled_nogov_nosoe");

                entity.Property(e => e.S3Gov)
                    .HasMaxLength(20)
                    .HasColumnName("s3_gov");

                entity.Property(e => e.ServiceProvider)
                    .HasMaxLength(20)
                    .HasColumnName("service_provider");

                entity.Property(e => e.State)
                    .HasMaxLength(50)
                    .HasColumnName("state");

                entity.Property(e => e.SystemIntegrator)
                    .HasMaxLength(20)
                    .HasColumnName("system_integrator");

                entity.Property(e => e.TradingEntity)
                    .HasMaxLength(20)
                    .HasColumnName("trading_entity");
            });

            modelBuilder.Entity<ProfileTmpTable>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("profile_tmp_table", "dev");

                entity.Property(e => e.Bpid)
                    .HasMaxLength(50)
                    .HasColumnName("bpid");

                entity.Property(e => e.City)
                    .HasMaxLength(255)
                    .HasColumnName("city");

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(20)
                    .HasColumnName("country_code");

                entity.Property(e => e.IsCityChanged).HasColumnName("isCityChanged");

                entity.Property(e => e.IsCountryChanged).HasColumnName("isCountryChanged");

                entity.Property(e => e.IsNameChanged).HasColumnName("isNameChanged");

                entity.Property(e => e.IsStreetChanged).HasColumnName("isStreetChanged");

                entity.Property(e => e.NameConc)
                    .HasMaxLength(500)
                    .HasColumnName("name_conc");

                entity.Property(e => e.StreetConc)
                    .HasMaxLength(1000)
                    .HasColumnName("street_conc");

                entity.Property(e => e.TrnxChanged)
                    .HasMaxLength(24)
                    .IsUnicode(false)
                    .HasColumnName("trnx_changed");

                entity.Property(e => e.TrnxType)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("trnx_type");
            });

            modelBuilder.Entity<Profiled2014>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("profiled_2014", "dsf");

                entity.Property(e => e.AccountName)
                    .HasMaxLength(1500)
                    .IsUnicode(false)
                    .HasColumnName("account_name");

                entity.Property(e => e.AddressLine1)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("address_line_1");

                entity.Property(e => e.AddressLine2)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("address_line_2");

                entity.Property(e => e.AddressLine3)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("address_line_3");

                entity.Property(e => e.AddressLine4)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("address_line_4");

                entity.Property(e => e.City)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("city");

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("country_code");

                entity.Property(e => e.DiversionNotRisk)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Diversion_notRisk");

                entity.Property(e => e.DiversionRisk)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Diversion_Risk");

                entity.Property(e => e.Elr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("elr");

                entity.Property(e => e.EpciConcern)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EPCI_Concern");

                entity.Property(e => e.EpciEucr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("epci_eucr");

                entity.Property(e => e.EpciExemptEuca)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("epci_exempt_euca");

                entity.Property(e => e.EpciExemptEucnr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("epci_exempt_eucnr");

                entity.Property(e => e.GovEndUse)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("gov_end_use");

                entity.Property(e => e.GovExempt)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("gov_exempt");

                entity.Property(e => e.GtsId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("gts_id");

                entity.Property(e => e.NotProfiledNonriskyCnty)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("not_profiled_nonrisky_cnty");

                entity.Property(e => e.NotProfiledRiskyCnty)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("not_profiled_risky_cnty");

                entity.Property(e => e.Ns3Gov)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ns3_gov");

                entity.Property(e => e.PostalCode)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("POSTAL_CODE");

                entity.Property(e => e.PotentialEmbargo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Potential_Embargo");

                entity.Property(e => e.ProfileDate)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("profile_date");

                entity.Property(e => e.ProfiledCommercialSelltoGov)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("profiled_commercial_sellto_gov");

                entity.Property(e => e.ProfiledGovRelated)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("profiled_gov_related");

                entity.Property(e => e.ProfiledNogovNosoe)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("profiled_nogov_nosoe");

                entity.Property(e => e.S3Gov)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("s3_gov");

                entity.Property(e => e.ServiceProvider)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Service_Provider");

                entity.Property(e => e.State)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("state");

                entity.Property(e => e.SystemIntegrator)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName(" System_Integrator");

                entity.Property(e => e.TradingEntity)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Trading_Entity");
            });

            modelBuilder.Entity<Profiled2015a>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("profiled_2015a", "dsf");

                entity.Property(e => e.AccountName)
                    .HasMaxLength(255)
                    .HasColumnName("account_name");

                entity.Property(e => e.AddressLine1)
                    .HasMaxLength(255)
                    .HasColumnName("address_line_1");

                entity.Property(e => e.AddressLine2)
                    .HasMaxLength(255)
                    .HasColumnName("address_line_2");

                entity.Property(e => e.AddressLine3)
                    .HasMaxLength(255)
                    .HasColumnName("address_line_3");

                entity.Property(e => e.AddressLine4)
                    .HasMaxLength(255)
                    .HasColumnName("address_line_4");

                entity.Property(e => e.City)
                    .HasMaxLength(255)
                    .HasColumnName("city");

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("country_code");

                entity.Property(e => e.CrmUcmid)
                    .HasMaxLength(255)
                    .HasColumnName("CRM_UCMID");

                entity.Property(e => e.DiversionNotRisk)
                    .HasMaxLength(255)
                    .HasColumnName("Diversion_notRisk");

                entity.Property(e => e.DiversionRisk)
                    .HasMaxLength(255)
                    .HasColumnName("Diversion_Risk");

                entity.Property(e => e.Elr)
                    .HasMaxLength(255)
                    .HasColumnName("elr");

                entity.Property(e => e.EpciConcern)
                    .HasMaxLength(255)
                    .HasColumnName("EPCI_Concern");

                entity.Property(e => e.EpciEucr)
                    .HasMaxLength(255)
                    .HasColumnName("epci_eucr");

                entity.Property(e => e.EpciExemptEuca)
                    .HasMaxLength(255)
                    .HasColumnName("epci_exempt_euca");

                entity.Property(e => e.EpciExemptEucnr)
                    .HasMaxLength(255)
                    .HasColumnName("epci_exempt_eucnr");

                entity.Property(e => e.FileName)
                    .HasMaxLength(255)
                    .HasColumnName("file_name");

                entity.Property(e => e.GovEndUse)
                    .HasMaxLength(255)
                    .HasColumnName("gov_end_use");

                entity.Property(e => e.GovExempt)
                    .HasMaxLength(255)
                    .HasColumnName("gov_exempt");

                entity.Property(e => e.GtsId).HasColumnName("gts_id");

                entity.Property(e => e.NotProfiledNonriskyCnty)
                    .HasMaxLength(255)
                    .HasColumnName("not_profiled_nonrisky_cnty");

                entity.Property(e => e.NotProfiledRiskyCnty)
                    .HasMaxLength(255)
                    .HasColumnName("not_profiled_risky_cnty");

                entity.Property(e => e.Ns3Gov)
                    .HasMaxLength(255)
                    .HasColumnName("ns3_gov");

                entity.Property(e => e.PostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("POSTAL_CODE");

                entity.Property(e => e.PotentialEmbargo)
                    .HasMaxLength(255)
                    .HasColumnName("Potential_Embargo");

                entity.Property(e => e.ProfileDate)
                    .HasColumnType("datetime")
                    .HasColumnName("profile_date");

                entity.Property(e => e.ProfiledCommercialSelltoGov)
                    .HasMaxLength(255)
                    .HasColumnName("profiled_commercial_sellto_gov");

                entity.Property(e => e.ProfiledGovRelated)
                    .HasMaxLength(255)
                    .HasColumnName("profiled_gov_related");

                entity.Property(e => e.ProfiledNogovNosoe)
                    .HasMaxLength(255)
                    .HasColumnName("profiled_nogov_nosoe");

                entity.Property(e => e.S3Gov)
                    .HasMaxLength(255)
                    .HasColumnName("s3_gov");

                entity.Property(e => e.ServiceProvider)
                    .HasMaxLength(255)
                    .HasColumnName("Service_Provider");

                entity.Property(e => e.State)
                    .HasMaxLength(255)
                    .HasColumnName("state");

                entity.Property(e => e.SystemIntegrator)
                    .HasMaxLength(255)
                    .HasColumnName(" System_Integrator");

                entity.Property(e => e.TradingEntity)
                    .HasMaxLength(255)
                    .HasColumnName("Trading_Entity");
            });

            modelBuilder.Entity<Profiled2015a2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("profiled_2015a2", "dsf");

                entity.Property(e => e.AccountName)
                    .HasMaxLength(1500)
                    .IsUnicode(false)
                    .HasColumnName("account_name");

                entity.Property(e => e.AddressLine1)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("address_line_1");

                entity.Property(e => e.AddressLine2)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("address_line_2");

                entity.Property(e => e.AddressLine3)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("address_line_3");

                entity.Property(e => e.AddressLine4)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("address_line_4");

                entity.Property(e => e.City)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("city");

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("country_code");

                entity.Property(e => e.DiversionNotRisk)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Diversion_notRisk");

                entity.Property(e => e.DiversionRisk)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Diversion_Risk");

                entity.Property(e => e.Elr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("elr");

                entity.Property(e => e.EpciConcern)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EPCI_Concern");

                entity.Property(e => e.EpciEucr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("epci_eucr");

                entity.Property(e => e.EpciExemptEuca)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("epci_exempt_euca");

                entity.Property(e => e.EpciExemptEucnr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("epci_exempt_eucnr");

                entity.Property(e => e.GovEndUse)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("gov_end_use");

                entity.Property(e => e.GovExempt)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("gov_exempt");

                entity.Property(e => e.GtsId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("gts_id");

                entity.Property(e => e.NotProfiledNonriskyCnty)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("not_profiled_nonrisky_cnty");

                entity.Property(e => e.NotProfiledRiskyCnty)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("not_profiled_risky_cnty");

                entity.Property(e => e.Ns3Gov)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ns3_gov");

                entity.Property(e => e.PostalCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("POSTAL_CODE");

                entity.Property(e => e.PotentialEmbargo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Potential_Embargo");

                entity.Property(e => e.ProfileDate)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("profile_date");

                entity.Property(e => e.ProfiledCommercialSelltoGov)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("profiled_commercial_sellto_gov");

                entity.Property(e => e.ProfiledGovRelated)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("profiled_gov_related");

                entity.Property(e => e.ProfiledNogovNosoe)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("profiled_nogov_nosoe");

                entity.Property(e => e.S3Gov)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("s3_gov");

                entity.Property(e => e.ServiceProvider)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Service_Provider");

                entity.Property(e => e.State)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("state");

                entity.Property(e => e.SystemIntegrator)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName(" System_Integrator");

                entity.Property(e => e.TradingEntity)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Trading_Entity");
            });

            modelBuilder.Entity<Profiled2015aa>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("profiled_2015aa", "dsf");

                entity.Property(e => e.AccountName)
                    .HasMaxLength(250)
                    .HasColumnName("account_name");

                entity.Property(e => e.AddressLine1)
                    .HasMaxLength(250)
                    .HasColumnName("address_line_1");

                entity.Property(e => e.AddressLine2)
                    .HasMaxLength(250)
                    .HasColumnName("address_line_2");

                entity.Property(e => e.AddressLine3)
                    .HasMaxLength(250)
                    .HasColumnName("address_line_3");

                entity.Property(e => e.AddressLine4)
                    .HasMaxLength(250)
                    .HasColumnName("address_line_4");

                entity.Property(e => e.City)
                    .HasMaxLength(50)
                    .HasColumnName("city");

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("country_code");

                entity.Property(e => e.CrmUcmid)
                    .HasMaxLength(50)
                    .HasColumnName("CRM_UCMID");

                entity.Property(e => e.DiversionNotRisk)
                    .HasMaxLength(50)
                    .HasColumnName("Diversion_notRisk");

                entity.Property(e => e.DiversionRisk)
                    .HasMaxLength(50)
                    .HasColumnName("Diversion_Risk");

                entity.Property(e => e.Elr)
                    .HasMaxLength(50)
                    .HasColumnName("elr");

                entity.Property(e => e.EpciConcern)
                    .HasMaxLength(50)
                    .HasColumnName("EPCI_Concern");

                entity.Property(e => e.EpciEucr)
                    .HasMaxLength(50)
                    .HasColumnName("epci_eucr");

                entity.Property(e => e.EpciExemptEuca)
                    .HasMaxLength(50)
                    .HasColumnName("epci_exempt_euca");

                entity.Property(e => e.EpciExemptEucnr)
                    .HasMaxLength(50)
                    .HasColumnName("epci_exempt_eucnr");

                entity.Property(e => e.FileName)
                    .HasMaxLength(250)
                    .HasColumnName("file_name");

                entity.Property(e => e.GovEndUse)
                    .HasMaxLength(50)
                    .HasColumnName("gov_end_use");

                entity.Property(e => e.GovExempt)
                    .HasMaxLength(50)
                    .HasColumnName("gov_exempt");

                entity.Property(e => e.GtsId)
                    .HasMaxLength(50)
                    .HasColumnName("gts_id");

                entity.Property(e => e.NotProfiledNonriskyCnty)
                    .HasMaxLength(50)
                    .HasColumnName("not_profiled_nonrisky_cnty");

                entity.Property(e => e.NotProfiledRiskyCnty)
                    .HasMaxLength(50)
                    .HasColumnName("not_profiled_risky_cnty");

                entity.Property(e => e.Ns3Gov)
                    .HasMaxLength(50)
                    .HasColumnName("ns3_gov");

                entity.Property(e => e.PostalCode)
                    .HasMaxLength(50)
                    .HasColumnName("POSTAL_CODE");

                entity.Property(e => e.PotentialEmbargo)
                    .HasMaxLength(50)
                    .HasColumnName("Potential_Embargo");

                entity.Property(e => e.ProfileDate)
                    .HasMaxLength(50)
                    .HasColumnName("profile_date");

                entity.Property(e => e.ProfiledCommercialSelltoGov)
                    .HasMaxLength(50)
                    .HasColumnName("profiled_commercial_sellto_gov");

                entity.Property(e => e.ProfiledGovRelated)
                    .HasMaxLength(50)
                    .HasColumnName("profiled_gov_related");

                entity.Property(e => e.ProfiledNogovNosoe)
                    .HasMaxLength(50)
                    .HasColumnName("profiled_nogov_nosoe");

                entity.Property(e => e.S3Gov)
                    .HasMaxLength(50)
                    .HasColumnName("s3_gov");

                entity.Property(e => e.ServiceProvider)
                    .HasMaxLength(50)
                    .HasColumnName("Service_Provider");

                entity.Property(e => e.State)
                    .HasMaxLength(50)
                    .HasColumnName("state");

                entity.Property(e => e.SystemIntegrator)
                    .HasMaxLength(50)
                    .HasColumnName("System_Integrator");

                entity.Property(e => e.TradingEntity)
                    .HasMaxLength(50)
                    .HasColumnName("Trading_Entity");
            });

            modelBuilder.Entity<Profiled2015b>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("profiled_2015b", "dsf");

                entity.Property(e => e.AccountName)
                    .HasMaxLength(255)
                    .HasColumnName("account_name");

                entity.Property(e => e.AddressLine1)
                    .HasMaxLength(255)
                    .HasColumnName("address_line_1");

                entity.Property(e => e.AddressLine2)
                    .HasMaxLength(255)
                    .HasColumnName("address_line_2");

                entity.Property(e => e.AddressLine3)
                    .HasMaxLength(255)
                    .HasColumnName("address_line_3");

                entity.Property(e => e.AddressLine4)
                    .HasMaxLength(255)
                    .HasColumnName("address_line_4");

                entity.Property(e => e.City)
                    .HasMaxLength(255)
                    .HasColumnName("city");

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("country_code");

                entity.Property(e => e.Created).HasMaxLength(255);

                entity.Property(e => e.CrmUcmid)
                    .HasMaxLength(255)
                    .HasColumnName("CRM_UCMID");

                entity.Property(e => e.DiversionNotRisk)
                    .HasMaxLength(255)
                    .HasColumnName("Diversion_notRisk");

                entity.Property(e => e.DiversionRisk)
                    .HasMaxLength(255)
                    .HasColumnName("Diversion_Risk");

                entity.Property(e => e.Elr)
                    .HasMaxLength(255)
                    .HasColumnName("elr");

                entity.Property(e => e.EpciConcern)
                    .HasMaxLength(255)
                    .HasColumnName("EPCI_Concern");

                entity.Property(e => e.EpciEucr)
                    .HasMaxLength(255)
                    .HasColumnName("epci_eucr");

                entity.Property(e => e.EpciExemptEuca)
                    .HasMaxLength(255)
                    .HasColumnName("epci_exempt_euca");

                entity.Property(e => e.EpciExemptEucnr)
                    .HasMaxLength(255)
                    .HasColumnName("epci_exempt_eucnr");

                entity.Property(e => e.FileName)
                    .HasMaxLength(255)
                    .HasColumnName("file_name");

                entity.Property(e => e.GovEndUse)
                    .HasMaxLength(255)
                    .HasColumnName("gov_end_use");

                entity.Property(e => e.GovExempt)
                    .HasMaxLength(255)
                    .HasColumnName("gov_exempt");

                entity.Property(e => e.GtsId).HasColumnName("gts_id");

                entity.Property(e => e.NotProfiledNonriskyCnty)
                    .HasMaxLength(255)
                    .HasColumnName("not_profiled_nonrisky_cnty");

                entity.Property(e => e.NotProfiledRiskyCnty)
                    .HasMaxLength(255)
                    .HasColumnName("not_profiled_risky_cnty");

                entity.Property(e => e.Ns3Gov)
                    .HasMaxLength(255)
                    .HasColumnName("ns3_gov");

                entity.Property(e => e.PostalCode).HasColumnName("POSTAL_CODE");

                entity.Property(e => e.PotentialEmbargo)
                    .HasMaxLength(255)
                    .HasColumnName("Potential_Embargo");

                entity.Property(e => e.ProfileDate)
                    .HasColumnType("datetime")
                    .HasColumnName("profile_date");

                entity.Property(e => e.ProfiledCommercialSelltoGov)
                    .HasMaxLength(255)
                    .HasColumnName("profiled_commercial_sellto_gov");

                entity.Property(e => e.ProfiledGovRelated)
                    .HasMaxLength(255)
                    .HasColumnName("profiled_gov_related");

                entity.Property(e => e.ProfiledNogovNosoe)
                    .HasMaxLength(255)
                    .HasColumnName("profiled_nogov_nosoe");

                entity.Property(e => e.S3Gov)
                    .HasMaxLength(255)
                    .HasColumnName("s3_gov");

                entity.Property(e => e.ServiceProvider)
                    .HasMaxLength(255)
                    .HasColumnName("Service_Provider");

                entity.Property(e => e.State)
                    .HasMaxLength(255)
                    .HasColumnName("state");

                entity.Property(e => e.SystemIntegrator)
                    .HasMaxLength(255)
                    .HasColumnName(" System_Integrator");

                entity.Property(e => e.TradingEntity)
                    .HasMaxLength(255)
                    .HasColumnName("Trading_Entity");
            });

            modelBuilder.Entity<Profiled2015b2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("profiled_2015b2", "dsf");

                entity.Property(e => e.AccountName)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("account_name");

                entity.Property(e => e.AddressLine1)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("address_line_1");

                entity.Property(e => e.AddressLine2)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("address_line_2");

                entity.Property(e => e.AddressLine3)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("address_line_3");

                entity.Property(e => e.AddressLine4)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("address_line_4");

                entity.Property(e => e.City)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("city");

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("country_code");

                entity.Property(e => e.DiversionNotRisk)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Diversion_notRisk");

                entity.Property(e => e.DiversionRisk)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Diversion_Risk");

                entity.Property(e => e.Elr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("elr");

                entity.Property(e => e.EpciConcern)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EPCI_Concern");

                entity.Property(e => e.EpciEucr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("epci_eucr");

                entity.Property(e => e.EpciExemptEuca)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("epci_exempt_euca");

                entity.Property(e => e.EpciExemptEucnr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("epci_exempt_eucnr");

                entity.Property(e => e.GovEndUse)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("gov_end_use");

                entity.Property(e => e.GovExempt)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("gov_exempt");

                entity.Property(e => e.GtsId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("gts_id");

                entity.Property(e => e.NotProfiledNonriskyCnty)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("not_profiled_nonrisky_cnty");

                entity.Property(e => e.NotProfiledRiskyCnty)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("not_profiled_risky_cnty");

                entity.Property(e => e.Ns3Gov)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ns3_gov");

                entity.Property(e => e.PostalCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("POSTAL_CODE");

                entity.Property(e => e.PotentialEmbargo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Potential_Embargo");

                entity.Property(e => e.ProfileDate)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("profile_date");

                entity.Property(e => e.ProfiledCommercialSelltoGov)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("profiled_commercial_sellto_gov");

                entity.Property(e => e.ProfiledGovRelated)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("profiled_gov_related");

                entity.Property(e => e.ProfiledNogovNosoe)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("profiled_nogov_nosoe");

                entity.Property(e => e.S3Gov)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("s3_gov");

                entity.Property(e => e.ServiceProvider)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Service_Provider");

                entity.Property(e => e.State)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("state");

                entity.Property(e => e.SystemIntegrator)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName(" System_Integrator");

                entity.Property(e => e.TradingEntity)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Trading_Entity");
            });

            modelBuilder.Entity<Profiled2015c>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("profiled_2015c", "dsf");

                entity.Property(e => e.AccountName)
                    .HasMaxLength(1500)
                    .IsUnicode(false)
                    .HasColumnName("account_name");

                entity.Property(e => e.AddressLine1)
                    .HasMaxLength(1500)
                    .IsUnicode(false)
                    .HasColumnName("address_line_1");

                entity.Property(e => e.AddressLine2)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("address_line_2");

                entity.Property(e => e.AddressLine3)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("address_line_3");

                entity.Property(e => e.AddressLine4)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("address_line_4");

                entity.Property(e => e.City)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("city");

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("country_code");

                entity.Property(e => e.DiversionNotRisk)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Diversion_notRisk");

                entity.Property(e => e.DiversionRisk)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Diversion_Risk");

                entity.Property(e => e.Elr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("elr");

                entity.Property(e => e.EpciConcern)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EPCI_Concern");

                entity.Property(e => e.EpciEucr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("epci_eucr");

                entity.Property(e => e.EpciExemptEuca)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("epci_exempt_euca");

                entity.Property(e => e.EpciExemptEucnr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("epci_exempt_eucnr");

                entity.Property(e => e.GovEndUse)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("gov_end_use");

                entity.Property(e => e.GovExempt)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("gov_exempt");

                entity.Property(e => e.GtsId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("gts_id");

                entity.Property(e => e.NotProfiledNonriskyCnty)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("not_profiled_nonrisky_cnty");

                entity.Property(e => e.NotProfiledRiskyCnty)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("not_profiled_risky_cnty");

                entity.Property(e => e.Ns3Gov)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ns3_gov");

                entity.Property(e => e.PostalCode)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("POSTAL_CODE");

                entity.Property(e => e.PotentialEmbargo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Potential_Embargo");

                entity.Property(e => e.ProfileDate)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("profile_date");

                entity.Property(e => e.ProfiledCommercialSelltoGov)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("profiled_commercial_sellto_gov");

                entity.Property(e => e.ProfiledGovRelated)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("profiled_gov_related");

                entity.Property(e => e.ProfiledNogovNosoe)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("profiled_nogov_nosoe");

                entity.Property(e => e.S3Gov)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("s3_gov");

                entity.Property(e => e.ServiceProvider)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Service_Provider");

                entity.Property(e => e.State)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("state");

                entity.Property(e => e.SystemIntegrator)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName(" System_Integrator");

                entity.Property(e => e.TradingEntity)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Trading_Entity");
            });

            modelBuilder.Entity<Profiled2016>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("profiled_2016", "dsf");

                entity.Property(e => e.AccountName)
                    .HasMaxLength(1500)
                    .IsUnicode(false)
                    .HasColumnName("account_name");

                entity.Property(e => e.AddressLine1)
                    .HasMaxLength(1500)
                    .IsUnicode(false)
                    .HasColumnName("address_line_1");

                entity.Property(e => e.AddressLine2)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("address_line_2");

                entity.Property(e => e.AddressLine3)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("address_line_3");

                entity.Property(e => e.AddressLine4)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("address_line_4");

                entity.Property(e => e.City)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("city");

                entity.Property(e => e.Column100)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 100");

                entity.Property(e => e.Column101)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 101");

                entity.Property(e => e.Column102)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 102");

                entity.Property(e => e.Column103)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 103");

                entity.Property(e => e.Column104)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 104");

                entity.Property(e => e.Column105)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 105");

                entity.Property(e => e.Column106)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 106");

                entity.Property(e => e.Column107)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 107");

                entity.Property(e => e.Column108)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 108");

                entity.Property(e => e.Column109)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 109");

                entity.Property(e => e.Column110)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 110");

                entity.Property(e => e.Column111)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 111");

                entity.Property(e => e.Column112)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 112");

                entity.Property(e => e.Column113)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 113");

                entity.Property(e => e.Column114)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 114");

                entity.Property(e => e.Column115)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 115");

                entity.Property(e => e.Column116)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 116");

                entity.Property(e => e.Column117)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 117");

                entity.Property(e => e.Column118)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 118");

                entity.Property(e => e.Column119)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 119");

                entity.Property(e => e.Column120)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 120");

                entity.Property(e => e.Column121)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 121");

                entity.Property(e => e.Column122)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 122");

                entity.Property(e => e.Column123)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 123");

                entity.Property(e => e.Column124)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 124");

                entity.Property(e => e.Column125)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 125");

                entity.Property(e => e.Column126)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 126");

                entity.Property(e => e.Column127)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 127");

                entity.Property(e => e.Column128)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 128");

                entity.Property(e => e.Column129)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 129");

                entity.Property(e => e.Column130)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 130");

                entity.Property(e => e.Column131)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 131");

                entity.Property(e => e.Column132)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 132");

                entity.Property(e => e.Column133)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 133");

                entity.Property(e => e.Column134)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 134");

                entity.Property(e => e.Column135)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 135");

                entity.Property(e => e.Column136)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 136");

                entity.Property(e => e.Column137)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 137");

                entity.Property(e => e.Column138)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 138");

                entity.Property(e => e.Column139)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 139");

                entity.Property(e => e.Column140)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 140");

                entity.Property(e => e.Column141)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 141");

                entity.Property(e => e.Column142)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 142");

                entity.Property(e => e.Column143)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 143");

                entity.Property(e => e.Column144)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 144");

                entity.Property(e => e.Column145)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 145");

                entity.Property(e => e.Column146)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 146");

                entity.Property(e => e.Column147)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 147");

                entity.Property(e => e.Column148)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 148");

                entity.Property(e => e.Column149)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 149");

                entity.Property(e => e.Column150)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 150");

                entity.Property(e => e.Column151)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 151");

                entity.Property(e => e.Column152)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 152");

                entity.Property(e => e.Column153)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 153");

                entity.Property(e => e.Column154)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 154");

                entity.Property(e => e.Column155)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 155");

                entity.Property(e => e.Column156)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 156");

                entity.Property(e => e.Column157)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 157");

                entity.Property(e => e.Column158)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 158");

                entity.Property(e => e.Column159)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 159");

                entity.Property(e => e.Column160)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 160");

                entity.Property(e => e.Column161)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 161");

                entity.Property(e => e.Column162)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 162");

                entity.Property(e => e.Column163)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 163");

                entity.Property(e => e.Column164)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 164");

                entity.Property(e => e.Column165)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 165");

                entity.Property(e => e.Column166)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 166");

                entity.Property(e => e.Column167)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 167");

                entity.Property(e => e.Column168)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 168");

                entity.Property(e => e.Column169)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 169");

                entity.Property(e => e.Column170)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 170");

                entity.Property(e => e.Column171)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 171");

                entity.Property(e => e.Column172)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 172");

                entity.Property(e => e.Column173)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 173");

                entity.Property(e => e.Column174)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 174");

                entity.Property(e => e.Column175)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 175");

                entity.Property(e => e.Column176)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 176");

                entity.Property(e => e.Column177)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 177");

                entity.Property(e => e.Column178)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 178");

                entity.Property(e => e.Column179)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 179");

                entity.Property(e => e.Column180)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 180");

                entity.Property(e => e.Column181)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 181");

                entity.Property(e => e.Column182)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 182");

                entity.Property(e => e.Column183)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 183");

                entity.Property(e => e.Column184)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 184");

                entity.Property(e => e.Column185)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 185");

                entity.Property(e => e.Column186)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 186");

                entity.Property(e => e.Column187)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 187");

                entity.Property(e => e.Column188)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 188");

                entity.Property(e => e.Column189)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 189");

                entity.Property(e => e.Column190)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 190");

                entity.Property(e => e.Column191)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 191");

                entity.Property(e => e.Column192)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 192");

                entity.Property(e => e.Column193)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 193");

                entity.Property(e => e.Column194)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 194");

                entity.Property(e => e.Column195)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 195");

                entity.Property(e => e.Column196)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 196");

                entity.Property(e => e.Column197)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 197");

                entity.Property(e => e.Column198)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 198");

                entity.Property(e => e.Column199)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 199");

                entity.Property(e => e.Column200)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 200");

                entity.Property(e => e.Column201)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 201");

                entity.Property(e => e.Column202)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 202");

                entity.Property(e => e.Column203)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 203");

                entity.Property(e => e.Column204)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 204");

                entity.Property(e => e.Column205)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 205");

                entity.Property(e => e.Column206)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 206");

                entity.Property(e => e.Column207)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 207");

                entity.Property(e => e.Column208)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 208");

                entity.Property(e => e.Column209)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 209");

                entity.Property(e => e.Column210)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 210");

                entity.Property(e => e.Column211)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 211");

                entity.Property(e => e.Column212)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 212");

                entity.Property(e => e.Column213)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 213");

                entity.Property(e => e.Column214)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 214");

                entity.Property(e => e.Column215)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 215");

                entity.Property(e => e.Column216)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 216");

                entity.Property(e => e.Column217)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 217");

                entity.Property(e => e.Column218)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 218");

                entity.Property(e => e.Column219)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 219");

                entity.Property(e => e.Column220)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 220");

                entity.Property(e => e.Column221)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 221");

                entity.Property(e => e.Column222)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 222");

                entity.Property(e => e.Column223)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 223");

                entity.Property(e => e.Column224)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 224");

                entity.Property(e => e.Column225)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 225");

                entity.Property(e => e.Column226)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 226");

                entity.Property(e => e.Column227)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 227");

                entity.Property(e => e.Column228)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 228");

                entity.Property(e => e.Column229)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 229");

                entity.Property(e => e.Column230)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 230");

                entity.Property(e => e.Column231)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 231");

                entity.Property(e => e.Column232)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 232");

                entity.Property(e => e.Column233)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 233");

                entity.Property(e => e.Column234)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 234");

                entity.Property(e => e.Column235)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 235");

                entity.Property(e => e.Column236)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 236");

                entity.Property(e => e.Column237)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 237");

                entity.Property(e => e.Column238)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 238");

                entity.Property(e => e.Column239)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 239");

                entity.Property(e => e.Column240)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 240");

                entity.Property(e => e.Column241)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 241");

                entity.Property(e => e.Column242)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 242");

                entity.Property(e => e.Column243)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 243");

                entity.Property(e => e.Column244)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 244");

                entity.Property(e => e.Column245)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 245");

                entity.Property(e => e.Column246)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 246");

                entity.Property(e => e.Column247)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 247");

                entity.Property(e => e.Column248)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 248");

                entity.Property(e => e.Column249)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 249");

                entity.Property(e => e.Column250)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 250");

                entity.Property(e => e.Column251)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 251");

                entity.Property(e => e.Column252)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 252");

                entity.Property(e => e.Column253)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 253");

                entity.Property(e => e.Column254)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 254");

                entity.Property(e => e.Column255)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 255");

                entity.Property(e => e.Column256)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 256");

                entity.Property(e => e.Column257)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 257");

                entity.Property(e => e.Column258)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 258");

                entity.Property(e => e.Column259)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 259");

                entity.Property(e => e.Column260)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 260");

                entity.Property(e => e.Column261)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 261");

                entity.Property(e => e.Column262)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 262");

                entity.Property(e => e.Column263)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 263");

                entity.Property(e => e.Column264)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 264");

                entity.Property(e => e.Column265)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 265");

                entity.Property(e => e.Column266)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 266");

                entity.Property(e => e.Column267)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 267");

                entity.Property(e => e.Column268)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 268");

                entity.Property(e => e.Column269)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 269");

                entity.Property(e => e.Column270)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 270");

                entity.Property(e => e.Column271)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 271");

                entity.Property(e => e.Column272)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 272");

                entity.Property(e => e.Column273)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 273");

                entity.Property(e => e.Column274)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 274");

                entity.Property(e => e.Column275)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 275");

                entity.Property(e => e.Column276)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 276");

                entity.Property(e => e.Column277)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 277");

                entity.Property(e => e.Column278)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 278");

                entity.Property(e => e.Column279)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 279");

                entity.Property(e => e.Column280)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 280");

                entity.Property(e => e.Column281)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 281");

                entity.Property(e => e.Column282)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 282");

                entity.Property(e => e.Column283)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 283");

                entity.Property(e => e.Column284)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 284");

                entity.Property(e => e.Column285)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 285");

                entity.Property(e => e.Column286)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 286");

                entity.Property(e => e.Column287)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 287");

                entity.Property(e => e.Column288)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 288");

                entity.Property(e => e.Column289)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 289");

                entity.Property(e => e.Column290)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 290");

                entity.Property(e => e.Column291)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 291");

                entity.Property(e => e.Column292)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 292");

                entity.Property(e => e.Column293)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 293");

                entity.Property(e => e.Column294)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 294");

                entity.Property(e => e.Column295)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 295");

                entity.Property(e => e.Column296)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 296");

                entity.Property(e => e.Column297)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 297");

                entity.Property(e => e.Column298)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 298");

                entity.Property(e => e.Column299)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 299");

                entity.Property(e => e.Column300)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 300");

                entity.Property(e => e.Column301)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 301");

                entity.Property(e => e.Column302)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 302");

                entity.Property(e => e.Column303)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 303");

                entity.Property(e => e.Column304)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 304");

                entity.Property(e => e.Column305)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 305");

                entity.Property(e => e.Column306)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 306");

                entity.Property(e => e.Column307)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 307");

                entity.Property(e => e.Column308)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 308");

                entity.Property(e => e.Column309)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 309");

                entity.Property(e => e.Column31)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 31");

                entity.Property(e => e.Column310)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 310");

                entity.Property(e => e.Column311)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 311");

                entity.Property(e => e.Column312)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 312");

                entity.Property(e => e.Column313)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 313");

                entity.Property(e => e.Column314)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 314");

                entity.Property(e => e.Column315)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 315");

                entity.Property(e => e.Column316)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 316");

                entity.Property(e => e.Column317)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 317");

                entity.Property(e => e.Column318)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 318");

                entity.Property(e => e.Column319)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 319");

                entity.Property(e => e.Column32)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 32");

                entity.Property(e => e.Column320)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 320");

                entity.Property(e => e.Column321)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 321");

                entity.Property(e => e.Column322)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 322");

                entity.Property(e => e.Column323)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 323");

                entity.Property(e => e.Column324)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 324");

                entity.Property(e => e.Column325)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 325");

                entity.Property(e => e.Column326)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 326");

                entity.Property(e => e.Column327)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 327");

                entity.Property(e => e.Column328)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 328");

                entity.Property(e => e.Column329)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 329");

                entity.Property(e => e.Column33)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 33");

                entity.Property(e => e.Column330)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 330");

                entity.Property(e => e.Column331)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 331");

                entity.Property(e => e.Column332)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 332");

                entity.Property(e => e.Column333)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 333");

                entity.Property(e => e.Column334)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 334");

                entity.Property(e => e.Column335)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 335");

                entity.Property(e => e.Column336)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 336");

                entity.Property(e => e.Column337)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 337");

                entity.Property(e => e.Column338)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 338");

                entity.Property(e => e.Column339)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 339");

                entity.Property(e => e.Column34)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 34");

                entity.Property(e => e.Column340)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 340");

                entity.Property(e => e.Column341)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 341");

                entity.Property(e => e.Column342)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 342");

                entity.Property(e => e.Column343)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 343");

                entity.Property(e => e.Column344)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 344");

                entity.Property(e => e.Column345)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 345");

                entity.Property(e => e.Column346)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 346");

                entity.Property(e => e.Column347)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 347");

                entity.Property(e => e.Column348)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 348");

                entity.Property(e => e.Column349)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 349");

                entity.Property(e => e.Column35)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 35");

                entity.Property(e => e.Column350)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 350");

                entity.Property(e => e.Column351)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 351");

                entity.Property(e => e.Column352)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 352");

                entity.Property(e => e.Column353)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 353");

                entity.Property(e => e.Column354)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 354");

                entity.Property(e => e.Column355)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 355");

                entity.Property(e => e.Column356)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 356");

                entity.Property(e => e.Column357)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 357");

                entity.Property(e => e.Column358)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 358");

                entity.Property(e => e.Column359)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 359");

                entity.Property(e => e.Column36)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 36");

                entity.Property(e => e.Column360)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 360");

                entity.Property(e => e.Column361)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 361");

                entity.Property(e => e.Column362)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 362");

                entity.Property(e => e.Column363)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 363");

                entity.Property(e => e.Column364)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 364");

                entity.Property(e => e.Column365)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 365");

                entity.Property(e => e.Column366)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 366");

                entity.Property(e => e.Column367)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 367");

                entity.Property(e => e.Column368)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 368");

                entity.Property(e => e.Column369)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 369");

                entity.Property(e => e.Column37)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 37");

                entity.Property(e => e.Column370)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 370");

                entity.Property(e => e.Column371)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 371");

                entity.Property(e => e.Column372)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 372");

                entity.Property(e => e.Column373)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 373");

                entity.Property(e => e.Column374)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 374");

                entity.Property(e => e.Column375)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 375");

                entity.Property(e => e.Column376)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 376");

                entity.Property(e => e.Column377)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 377");

                entity.Property(e => e.Column378)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 378");

                entity.Property(e => e.Column379)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 379");

                entity.Property(e => e.Column38)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 38");

                entity.Property(e => e.Column380)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 380");

                entity.Property(e => e.Column381)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 381");

                entity.Property(e => e.Column382)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 382");

                entity.Property(e => e.Column383)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 383");

                entity.Property(e => e.Column384)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 384");

                entity.Property(e => e.Column385)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 385");

                entity.Property(e => e.Column386)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 386");

                entity.Property(e => e.Column387)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 387");

                entity.Property(e => e.Column388)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 388");

                entity.Property(e => e.Column389)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 389");

                entity.Property(e => e.Column39)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 39");

                entity.Property(e => e.Column390)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 390");

                entity.Property(e => e.Column391)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 391");

                entity.Property(e => e.Column392)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 392");

                entity.Property(e => e.Column393)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 393");

                entity.Property(e => e.Column394)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 394");

                entity.Property(e => e.Column395)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 395");

                entity.Property(e => e.Column396)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 396");

                entity.Property(e => e.Column397)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 397");

                entity.Property(e => e.Column398)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 398");

                entity.Property(e => e.Column399)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 399");

                entity.Property(e => e.Column40)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 40");

                entity.Property(e => e.Column400)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 400");

                entity.Property(e => e.Column401)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 401");

                entity.Property(e => e.Column402)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 402");

                entity.Property(e => e.Column403)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 403");

                entity.Property(e => e.Column404)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 404");

                entity.Property(e => e.Column405)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 405");

                entity.Property(e => e.Column406)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 406");

                entity.Property(e => e.Column407)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 407");

                entity.Property(e => e.Column408)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 408");

                entity.Property(e => e.Column409)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 409");

                entity.Property(e => e.Column41)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 41");

                entity.Property(e => e.Column410)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 410");

                entity.Property(e => e.Column411)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 411");

                entity.Property(e => e.Column412)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 412");

                entity.Property(e => e.Column413)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 413");

                entity.Property(e => e.Column414)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 414");

                entity.Property(e => e.Column415)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 415");

                entity.Property(e => e.Column416)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 416");

                entity.Property(e => e.Column417)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 417");

                entity.Property(e => e.Column418)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 418");

                entity.Property(e => e.Column419)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 419");

                entity.Property(e => e.Column42)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 42");

                entity.Property(e => e.Column420)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 420");

                entity.Property(e => e.Column421)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 421");

                entity.Property(e => e.Column422)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 422");

                entity.Property(e => e.Column423)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 423");

                entity.Property(e => e.Column424)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 424");

                entity.Property(e => e.Column425)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 425");

                entity.Property(e => e.Column426)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 426");

                entity.Property(e => e.Column427)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 427");

                entity.Property(e => e.Column428)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 428");

                entity.Property(e => e.Column429)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 429");

                entity.Property(e => e.Column43)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 43");

                entity.Property(e => e.Column430)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 430");

                entity.Property(e => e.Column431)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 431");

                entity.Property(e => e.Column432)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 432");

                entity.Property(e => e.Column433)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 433");

                entity.Property(e => e.Column434)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 434");

                entity.Property(e => e.Column435)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 435");

                entity.Property(e => e.Column436)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 436");

                entity.Property(e => e.Column437)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 437");

                entity.Property(e => e.Column438)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 438");

                entity.Property(e => e.Column439)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 439");

                entity.Property(e => e.Column44)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 44");

                entity.Property(e => e.Column440)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 440");

                entity.Property(e => e.Column441)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 441");

                entity.Property(e => e.Column442)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 442");

                entity.Property(e => e.Column443)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 443");

                entity.Property(e => e.Column444)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 444");

                entity.Property(e => e.Column445)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 445");

                entity.Property(e => e.Column446)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 446");

                entity.Property(e => e.Column447)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 447");

                entity.Property(e => e.Column448)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 448");

                entity.Property(e => e.Column449)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 449");

                entity.Property(e => e.Column45)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 45");

                entity.Property(e => e.Column450)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 450");

                entity.Property(e => e.Column451)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 451");

                entity.Property(e => e.Column452)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 452");

                entity.Property(e => e.Column453)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 453");

                entity.Property(e => e.Column454)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 454");

                entity.Property(e => e.Column455)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 455");

                entity.Property(e => e.Column456)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 456");

                entity.Property(e => e.Column457)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 457");

                entity.Property(e => e.Column458)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 458");

                entity.Property(e => e.Column459)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 459");

                entity.Property(e => e.Column46)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 46");

                entity.Property(e => e.Column460)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 460");

                entity.Property(e => e.Column461)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 461");

                entity.Property(e => e.Column462)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 462");

                entity.Property(e => e.Column463)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 463");

                entity.Property(e => e.Column464)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 464");

                entity.Property(e => e.Column465)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 465");

                entity.Property(e => e.Column466)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 466");

                entity.Property(e => e.Column467)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 467");

                entity.Property(e => e.Column468)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 468");

                entity.Property(e => e.Column469)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 469");

                entity.Property(e => e.Column47)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 47");

                entity.Property(e => e.Column470)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 470");

                entity.Property(e => e.Column471)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 471");

                entity.Property(e => e.Column472)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 472");

                entity.Property(e => e.Column473)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 473");

                entity.Property(e => e.Column474)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 474");

                entity.Property(e => e.Column475)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 475");

                entity.Property(e => e.Column476)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 476");

                entity.Property(e => e.Column477)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 477");

                entity.Property(e => e.Column478)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 478");

                entity.Property(e => e.Column479)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 479");

                entity.Property(e => e.Column48)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 48");

                entity.Property(e => e.Column480)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 480");

                entity.Property(e => e.Column481)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 481");

                entity.Property(e => e.Column482)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 482");

                entity.Property(e => e.Column483)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 483");

                entity.Property(e => e.Column484)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 484");

                entity.Property(e => e.Column485)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 485");

                entity.Property(e => e.Column486)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 486");

                entity.Property(e => e.Column487)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 487");

                entity.Property(e => e.Column488)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 488");

                entity.Property(e => e.Column489)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 489");

                entity.Property(e => e.Column49)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 49");

                entity.Property(e => e.Column490)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 490");

                entity.Property(e => e.Column491)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 491");

                entity.Property(e => e.Column492)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 492");

                entity.Property(e => e.Column493)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 493");

                entity.Property(e => e.Column494)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 494");

                entity.Property(e => e.Column495)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 495");

                entity.Property(e => e.Column496)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 496");

                entity.Property(e => e.Column497)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 497");

                entity.Property(e => e.Column498)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 498");

                entity.Property(e => e.Column499)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 499");

                entity.Property(e => e.Column50)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 50");

                entity.Property(e => e.Column500)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 500");

                entity.Property(e => e.Column501)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 501");

                entity.Property(e => e.Column502)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 502");

                entity.Property(e => e.Column503)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 503");

                entity.Property(e => e.Column504)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 504");

                entity.Property(e => e.Column505)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 505");

                entity.Property(e => e.Column506)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 506");

                entity.Property(e => e.Column507)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 507");

                entity.Property(e => e.Column508)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 508");

                entity.Property(e => e.Column509)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 509");

                entity.Property(e => e.Column51)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 51");

                entity.Property(e => e.Column510)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 510");

                entity.Property(e => e.Column511)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 511");

                entity.Property(e => e.Column512)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 512");

                entity.Property(e => e.Column513)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 513");

                entity.Property(e => e.Column514)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 514");

                entity.Property(e => e.Column515)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 515");

                entity.Property(e => e.Column516)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 516");

                entity.Property(e => e.Column517)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 517");

                entity.Property(e => e.Column518)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 518");

                entity.Property(e => e.Column519)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 519");

                entity.Property(e => e.Column52)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 52");

                entity.Property(e => e.Column520)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 520");

                entity.Property(e => e.Column521)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 521");

                entity.Property(e => e.Column522)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 522");

                entity.Property(e => e.Column523)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 523");

                entity.Property(e => e.Column524)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 524");

                entity.Property(e => e.Column525)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 525");

                entity.Property(e => e.Column526)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 526");

                entity.Property(e => e.Column527)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 527");

                entity.Property(e => e.Column528)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 528");

                entity.Property(e => e.Column529)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 529");

                entity.Property(e => e.Column53)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 53");

                entity.Property(e => e.Column530)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 530");

                entity.Property(e => e.Column531)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 531");

                entity.Property(e => e.Column532)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 532");

                entity.Property(e => e.Column533)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 533");

                entity.Property(e => e.Column534)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 534");

                entity.Property(e => e.Column535)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 535");

                entity.Property(e => e.Column536)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 536");

                entity.Property(e => e.Column537)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 537");

                entity.Property(e => e.Column538)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 538");

                entity.Property(e => e.Column539)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 539");

                entity.Property(e => e.Column54)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 54");

                entity.Property(e => e.Column540)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 540");

                entity.Property(e => e.Column541)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 541");

                entity.Property(e => e.Column542)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 542");

                entity.Property(e => e.Column543)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 543");

                entity.Property(e => e.Column544)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 544");

                entity.Property(e => e.Column545)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 545");

                entity.Property(e => e.Column546)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 546");

                entity.Property(e => e.Column547)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 547");

                entity.Property(e => e.Column548)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 548");

                entity.Property(e => e.Column549)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 549");

                entity.Property(e => e.Column55)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 55");

                entity.Property(e => e.Column550)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 550");

                entity.Property(e => e.Column551)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 551");

                entity.Property(e => e.Column552)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 552");

                entity.Property(e => e.Column553)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 553");

                entity.Property(e => e.Column554)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 554");

                entity.Property(e => e.Column555)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 555");

                entity.Property(e => e.Column556)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 556");

                entity.Property(e => e.Column557)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 557");

                entity.Property(e => e.Column558)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 558");

                entity.Property(e => e.Column559)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 559");

                entity.Property(e => e.Column56)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 56");

                entity.Property(e => e.Column560)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 560");

                entity.Property(e => e.Column561)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 561");

                entity.Property(e => e.Column562)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 562");

                entity.Property(e => e.Column563)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 563");

                entity.Property(e => e.Column564)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 564");

                entity.Property(e => e.Column565)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 565");

                entity.Property(e => e.Column566)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 566");

                entity.Property(e => e.Column567)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 567");

                entity.Property(e => e.Column568)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 568");

                entity.Property(e => e.Column569)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 569");

                entity.Property(e => e.Column57)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 57");

                entity.Property(e => e.Column570)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 570");

                entity.Property(e => e.Column571)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 571");

                entity.Property(e => e.Column572)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 572");

                entity.Property(e => e.Column573)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 573");

                entity.Property(e => e.Column574)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 574");

                entity.Property(e => e.Column575)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 575");

                entity.Property(e => e.Column576)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 576");

                entity.Property(e => e.Column577)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 577");

                entity.Property(e => e.Column578)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 578");

                entity.Property(e => e.Column579)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 579");

                entity.Property(e => e.Column58)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 58");

                entity.Property(e => e.Column580)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 580");

                entity.Property(e => e.Column581)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 581");

                entity.Property(e => e.Column582)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 582");

                entity.Property(e => e.Column583)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 583");

                entity.Property(e => e.Column584)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 584");

                entity.Property(e => e.Column585)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 585");

                entity.Property(e => e.Column586)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 586");

                entity.Property(e => e.Column587)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 587");

                entity.Property(e => e.Column588)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 588");

                entity.Property(e => e.Column589)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 589");

                entity.Property(e => e.Column59)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 59");

                entity.Property(e => e.Column590)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 590");

                entity.Property(e => e.Column591)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 591");

                entity.Property(e => e.Column592)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 592");

                entity.Property(e => e.Column593)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 593");

                entity.Property(e => e.Column594)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 594");

                entity.Property(e => e.Column595)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 595");

                entity.Property(e => e.Column596)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 596");

                entity.Property(e => e.Column597)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 597");

                entity.Property(e => e.Column598)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 598");

                entity.Property(e => e.Column599)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 599");

                entity.Property(e => e.Column60)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 60");

                entity.Property(e => e.Column600)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 600");

                entity.Property(e => e.Column601)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 601");

                entity.Property(e => e.Column602)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 602");

                entity.Property(e => e.Column603)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 603");

                entity.Property(e => e.Column604)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 604");

                entity.Property(e => e.Column605)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 605");

                entity.Property(e => e.Column606)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 606");

                entity.Property(e => e.Column607)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 607");

                entity.Property(e => e.Column608)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 608");

                entity.Property(e => e.Column609)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 609");

                entity.Property(e => e.Column61)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 61");

                entity.Property(e => e.Column610)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 610");

                entity.Property(e => e.Column611)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 611");

                entity.Property(e => e.Column612)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 612");

                entity.Property(e => e.Column613)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 613");

                entity.Property(e => e.Column614)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 614");

                entity.Property(e => e.Column615)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 615");

                entity.Property(e => e.Column616)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 616");

                entity.Property(e => e.Column617)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 617");

                entity.Property(e => e.Column618)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 618");

                entity.Property(e => e.Column619)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 619");

                entity.Property(e => e.Column62)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 62");

                entity.Property(e => e.Column620)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 620");

                entity.Property(e => e.Column621)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 621");

                entity.Property(e => e.Column622)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 622");

                entity.Property(e => e.Column623)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 623");

                entity.Property(e => e.Column624)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 624");

                entity.Property(e => e.Column625)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 625");

                entity.Property(e => e.Column626)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 626");

                entity.Property(e => e.Column627)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 627");

                entity.Property(e => e.Column628)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 628");

                entity.Property(e => e.Column629)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 629");

                entity.Property(e => e.Column63)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 63");

                entity.Property(e => e.Column630)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 630");

                entity.Property(e => e.Column631)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 631");

                entity.Property(e => e.Column632)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 632");

                entity.Property(e => e.Column633)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 633");

                entity.Property(e => e.Column634)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 634");

                entity.Property(e => e.Column635)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 635");

                entity.Property(e => e.Column636)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 636");

                entity.Property(e => e.Column637)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 637");

                entity.Property(e => e.Column638)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 638");

                entity.Property(e => e.Column639)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 639");

                entity.Property(e => e.Column64)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 64");

                entity.Property(e => e.Column640)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 640");

                entity.Property(e => e.Column641)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 641");

                entity.Property(e => e.Column642)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 642");

                entity.Property(e => e.Column643)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 643");

                entity.Property(e => e.Column644)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 644");

                entity.Property(e => e.Column645)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 645");

                entity.Property(e => e.Column646)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 646");

                entity.Property(e => e.Column647)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 647");

                entity.Property(e => e.Column648)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 648");

                entity.Property(e => e.Column649)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 649");

                entity.Property(e => e.Column65)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 65");

                entity.Property(e => e.Column650)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 650");

                entity.Property(e => e.Column651)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 651");

                entity.Property(e => e.Column652)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 652");

                entity.Property(e => e.Column653)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 653");

                entity.Property(e => e.Column654)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 654");

                entity.Property(e => e.Column655)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 655");

                entity.Property(e => e.Column656)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 656");

                entity.Property(e => e.Column657)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 657");

                entity.Property(e => e.Column658)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 658");

                entity.Property(e => e.Column659)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 659");

                entity.Property(e => e.Column66)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 66");

                entity.Property(e => e.Column660)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 660");

                entity.Property(e => e.Column661)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 661");

                entity.Property(e => e.Column662)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 662");

                entity.Property(e => e.Column663)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 663");

                entity.Property(e => e.Column664)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 664");

                entity.Property(e => e.Column665)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 665");

                entity.Property(e => e.Column666)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 666");

                entity.Property(e => e.Column667)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 667");

                entity.Property(e => e.Column668)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 668");

                entity.Property(e => e.Column669)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 669");

                entity.Property(e => e.Column67)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 67");

                entity.Property(e => e.Column670)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 670");

                entity.Property(e => e.Column671)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 671");

                entity.Property(e => e.Column672)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 672");

                entity.Property(e => e.Column673)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 673");

                entity.Property(e => e.Column674)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 674");

                entity.Property(e => e.Column675)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 675");

                entity.Property(e => e.Column676)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 676");

                entity.Property(e => e.Column677)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 677");

                entity.Property(e => e.Column678)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 678");

                entity.Property(e => e.Column679)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 679");

                entity.Property(e => e.Column68)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 68");

                entity.Property(e => e.Column680)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 680");

                entity.Property(e => e.Column681)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 681");

                entity.Property(e => e.Column682)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 682");

                entity.Property(e => e.Column683)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 683");

                entity.Property(e => e.Column684)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 684");

                entity.Property(e => e.Column685)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 685");

                entity.Property(e => e.Column686)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 686");

                entity.Property(e => e.Column687)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 687");

                entity.Property(e => e.Column688)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 688");

                entity.Property(e => e.Column689)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 689");

                entity.Property(e => e.Column69)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 69");

                entity.Property(e => e.Column690)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 690");

                entity.Property(e => e.Column691)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 691");

                entity.Property(e => e.Column692)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 692");

                entity.Property(e => e.Column693)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 693");

                entity.Property(e => e.Column694)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 694");

                entity.Property(e => e.Column695)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 695");

                entity.Property(e => e.Column696)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 696");

                entity.Property(e => e.Column697)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 697");

                entity.Property(e => e.Column698)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 698");

                entity.Property(e => e.Column699)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 699");

                entity.Property(e => e.Column70)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 70");

                entity.Property(e => e.Column700)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 700");

                entity.Property(e => e.Column701)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 701");

                entity.Property(e => e.Column702)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 702");

                entity.Property(e => e.Column703)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 703");

                entity.Property(e => e.Column704)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 704");

                entity.Property(e => e.Column705)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 705");

                entity.Property(e => e.Column706)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 706");

                entity.Property(e => e.Column707)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 707");

                entity.Property(e => e.Column708)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 708");

                entity.Property(e => e.Column709)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 709");

                entity.Property(e => e.Column71)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 71");

                entity.Property(e => e.Column710)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 710");

                entity.Property(e => e.Column711)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 711");

                entity.Property(e => e.Column712)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 712");

                entity.Property(e => e.Column713)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 713");

                entity.Property(e => e.Column714)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 714");

                entity.Property(e => e.Column715)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 715");

                entity.Property(e => e.Column716)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 716");

                entity.Property(e => e.Column717)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 717");

                entity.Property(e => e.Column718)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 718");

                entity.Property(e => e.Column719)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 719");

                entity.Property(e => e.Column72)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 72");

                entity.Property(e => e.Column720)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 720");

                entity.Property(e => e.Column721)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 721");

                entity.Property(e => e.Column722)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 722");

                entity.Property(e => e.Column723)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 723");

                entity.Property(e => e.Column724)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 724");

                entity.Property(e => e.Column725)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 725");

                entity.Property(e => e.Column726)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 726");

                entity.Property(e => e.Column727)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 727");

                entity.Property(e => e.Column728)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 728");

                entity.Property(e => e.Column729)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 729");

                entity.Property(e => e.Column73)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 73");

                entity.Property(e => e.Column730)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 730");

                entity.Property(e => e.Column731)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 731");

                entity.Property(e => e.Column732)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 732");

                entity.Property(e => e.Column733)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 733");

                entity.Property(e => e.Column734)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 734");

                entity.Property(e => e.Column735)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 735");

                entity.Property(e => e.Column736)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 736");

                entity.Property(e => e.Column737)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 737");

                entity.Property(e => e.Column738)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 738");

                entity.Property(e => e.Column739)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 739");

                entity.Property(e => e.Column74)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 74");

                entity.Property(e => e.Column740)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 740");

                entity.Property(e => e.Column741)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 741");

                entity.Property(e => e.Column742)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 742");

                entity.Property(e => e.Column743)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 743");

                entity.Property(e => e.Column744)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 744");

                entity.Property(e => e.Column745)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 745");

                entity.Property(e => e.Column746)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 746");

                entity.Property(e => e.Column747)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 747");

                entity.Property(e => e.Column748)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 748");

                entity.Property(e => e.Column749)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 749");

                entity.Property(e => e.Column75)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 75");

                entity.Property(e => e.Column750)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 750");

                entity.Property(e => e.Column751)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 751");

                entity.Property(e => e.Column752)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 752");

                entity.Property(e => e.Column753)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 753");

                entity.Property(e => e.Column754)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 754");

                entity.Property(e => e.Column755)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 755");

                entity.Property(e => e.Column756)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 756");

                entity.Property(e => e.Column757)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 757");

                entity.Property(e => e.Column758)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 758");

                entity.Property(e => e.Column759)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 759");

                entity.Property(e => e.Column76)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 76");

                entity.Property(e => e.Column760)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 760");

                entity.Property(e => e.Column761)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 761");

                entity.Property(e => e.Column762)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 762");

                entity.Property(e => e.Column763)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 763");

                entity.Property(e => e.Column764)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 764");

                entity.Property(e => e.Column765)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 765");

                entity.Property(e => e.Column766)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 766");

                entity.Property(e => e.Column767)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 767");

                entity.Property(e => e.Column768)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 768");

                entity.Property(e => e.Column769)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 769");

                entity.Property(e => e.Column77)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 77");

                entity.Property(e => e.Column770)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 770");

                entity.Property(e => e.Column771)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 771");

                entity.Property(e => e.Column772)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 772");

                entity.Property(e => e.Column773)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 773");

                entity.Property(e => e.Column774)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 774");

                entity.Property(e => e.Column775)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 775");

                entity.Property(e => e.Column776)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 776");

                entity.Property(e => e.Column777)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 777");

                entity.Property(e => e.Column778)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 778");

                entity.Property(e => e.Column779)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 779");

                entity.Property(e => e.Column78)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 78");

                entity.Property(e => e.Column780)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 780");

                entity.Property(e => e.Column781)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 781");

                entity.Property(e => e.Column782)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 782");

                entity.Property(e => e.Column783)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 783");

                entity.Property(e => e.Column784)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 784");

                entity.Property(e => e.Column785)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 785");

                entity.Property(e => e.Column786)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 786");

                entity.Property(e => e.Column787)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 787");

                entity.Property(e => e.Column788)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 788");

                entity.Property(e => e.Column789)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 789");

                entity.Property(e => e.Column79)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 79");

                entity.Property(e => e.Column790)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 790");

                entity.Property(e => e.Column791)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 791");

                entity.Property(e => e.Column792)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 792");

                entity.Property(e => e.Column793)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 793");

                entity.Property(e => e.Column794)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 794");

                entity.Property(e => e.Column795)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 795");

                entity.Property(e => e.Column796)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 796");

                entity.Property(e => e.Column797)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 797");

                entity.Property(e => e.Column798)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 798");

                entity.Property(e => e.Column799)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 799");

                entity.Property(e => e.Column80)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 80");

                entity.Property(e => e.Column800)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 800");

                entity.Property(e => e.Column801)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 801");

                entity.Property(e => e.Column802)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 802");

                entity.Property(e => e.Column803)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 803");

                entity.Property(e => e.Column804)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 804");

                entity.Property(e => e.Column805)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 805");

                entity.Property(e => e.Column806)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 806");

                entity.Property(e => e.Column807)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 807");

                entity.Property(e => e.Column808)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 808");

                entity.Property(e => e.Column809)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 809");

                entity.Property(e => e.Column81)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 81");

                entity.Property(e => e.Column810)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 810");

                entity.Property(e => e.Column811)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 811");

                entity.Property(e => e.Column812)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 812");

                entity.Property(e => e.Column813)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 813");

                entity.Property(e => e.Column814)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 814");

                entity.Property(e => e.Column815)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 815");

                entity.Property(e => e.Column816)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 816");

                entity.Property(e => e.Column817)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 817");

                entity.Property(e => e.Column818)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 818");

                entity.Property(e => e.Column819)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 819");

                entity.Property(e => e.Column82)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 82");

                entity.Property(e => e.Column820)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 820");

                entity.Property(e => e.Column821)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 821");

                entity.Property(e => e.Column822)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 822");

                entity.Property(e => e.Column823)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 823");

                entity.Property(e => e.Column824)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 824");

                entity.Property(e => e.Column825)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 825");

                entity.Property(e => e.Column826)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 826");

                entity.Property(e => e.Column827)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 827");

                entity.Property(e => e.Column828)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 828");

                entity.Property(e => e.Column829)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 829");

                entity.Property(e => e.Column83)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 83");

                entity.Property(e => e.Column830)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 830");

                entity.Property(e => e.Column831)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 831");

                entity.Property(e => e.Column832)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 832");

                entity.Property(e => e.Column833)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 833");

                entity.Property(e => e.Column834)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 834");

                entity.Property(e => e.Column835)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 835");

                entity.Property(e => e.Column836)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 836");

                entity.Property(e => e.Column837)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 837");

                entity.Property(e => e.Column838)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 838");

                entity.Property(e => e.Column839)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 839");

                entity.Property(e => e.Column84)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 84");

                entity.Property(e => e.Column840)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 840");

                entity.Property(e => e.Column841)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 841");

                entity.Property(e => e.Column842)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 842");

                entity.Property(e => e.Column843)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 843");

                entity.Property(e => e.Column844)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 844");

                entity.Property(e => e.Column845)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 845");

                entity.Property(e => e.Column846)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 846");

                entity.Property(e => e.Column847)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 847");

                entity.Property(e => e.Column848)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 848");

                entity.Property(e => e.Column849)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 849");

                entity.Property(e => e.Column85)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 85");

                entity.Property(e => e.Column850)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 850");

                entity.Property(e => e.Column851)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 851");

                entity.Property(e => e.Column852)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 852");

                entity.Property(e => e.Column853)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 853");

                entity.Property(e => e.Column854)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 854");

                entity.Property(e => e.Column855)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 855");

                entity.Property(e => e.Column856)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 856");

                entity.Property(e => e.Column857)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 857");

                entity.Property(e => e.Column858)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 858");

                entity.Property(e => e.Column859)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 859");

                entity.Property(e => e.Column86)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 86");

                entity.Property(e => e.Column860)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 860");

                entity.Property(e => e.Column861)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 861");

                entity.Property(e => e.Column862)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 862");

                entity.Property(e => e.Column863)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 863");

                entity.Property(e => e.Column864)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 864");

                entity.Property(e => e.Column865)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 865");

                entity.Property(e => e.Column866)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 866");

                entity.Property(e => e.Column867)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 867");

                entity.Property(e => e.Column868)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 868");

                entity.Property(e => e.Column869)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 869");

                entity.Property(e => e.Column87)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 87");

                entity.Property(e => e.Column870)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 870");

                entity.Property(e => e.Column871)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 871");

                entity.Property(e => e.Column872)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 872");

                entity.Property(e => e.Column873)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 873");

                entity.Property(e => e.Column874)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 874");

                entity.Property(e => e.Column875)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 875");

                entity.Property(e => e.Column876)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 876");

                entity.Property(e => e.Column877)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 877");

                entity.Property(e => e.Column878)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 878");

                entity.Property(e => e.Column879)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 879");

                entity.Property(e => e.Column88)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 88");

                entity.Property(e => e.Column880)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 880");

                entity.Property(e => e.Column881)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 881");

                entity.Property(e => e.Column882)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 882");

                entity.Property(e => e.Column883)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 883");

                entity.Property(e => e.Column884)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 884");

                entity.Property(e => e.Column885)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 885");

                entity.Property(e => e.Column886)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 886");

                entity.Property(e => e.Column887)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 887");

                entity.Property(e => e.Column888)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 888");

                entity.Property(e => e.Column889)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 889");

                entity.Property(e => e.Column89)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 89");

                entity.Property(e => e.Column890)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 890");

                entity.Property(e => e.Column891)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 891");

                entity.Property(e => e.Column892)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 892");

                entity.Property(e => e.Column893)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 893");

                entity.Property(e => e.Column894)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 894");

                entity.Property(e => e.Column895)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 895");

                entity.Property(e => e.Column896)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 896");

                entity.Property(e => e.Column897)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 897");

                entity.Property(e => e.Column898)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 898");

                entity.Property(e => e.Column899)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 899");

                entity.Property(e => e.Column90)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 90");

                entity.Property(e => e.Column900)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 900");

                entity.Property(e => e.Column901)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 901");

                entity.Property(e => e.Column902)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 902");

                entity.Property(e => e.Column903)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 903");

                entity.Property(e => e.Column904)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 904");

                entity.Property(e => e.Column905)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 905");

                entity.Property(e => e.Column906)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 906");

                entity.Property(e => e.Column907)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 907");

                entity.Property(e => e.Column908)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 908");

                entity.Property(e => e.Column909)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 909");

                entity.Property(e => e.Column91)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 91");

                entity.Property(e => e.Column910)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 910");

                entity.Property(e => e.Column911)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 911");

                entity.Property(e => e.Column912)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 912");

                entity.Property(e => e.Column913)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 913");

                entity.Property(e => e.Column914)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 914");

                entity.Property(e => e.Column915)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 915");

                entity.Property(e => e.Column916)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 916");

                entity.Property(e => e.Column917)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 917");

                entity.Property(e => e.Column918)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 918");

                entity.Property(e => e.Column919)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 919");

                entity.Property(e => e.Column92)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 92");

                entity.Property(e => e.Column920)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 920");

                entity.Property(e => e.Column921)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 921");

                entity.Property(e => e.Column922)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 922");

                entity.Property(e => e.Column923)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 923");

                entity.Property(e => e.Column924)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 924");

                entity.Property(e => e.Column925)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 925");

                entity.Property(e => e.Column926)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 926");

                entity.Property(e => e.Column927)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 927");

                entity.Property(e => e.Column928)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 928");

                entity.Property(e => e.Column929)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 929");

                entity.Property(e => e.Column93)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 93");

                entity.Property(e => e.Column930)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 930");

                entity.Property(e => e.Column931)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 931");

                entity.Property(e => e.Column932)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 932");

                entity.Property(e => e.Column933)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 933");

                entity.Property(e => e.Column934)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 934");

                entity.Property(e => e.Column935)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 935");

                entity.Property(e => e.Column936)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 936");

                entity.Property(e => e.Column937)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 937");

                entity.Property(e => e.Column938)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 938");

                entity.Property(e => e.Column939)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 939");

                entity.Property(e => e.Column94)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 94");

                entity.Property(e => e.Column940)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 940");

                entity.Property(e => e.Column941)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 941");

                entity.Property(e => e.Column942)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 942");

                entity.Property(e => e.Column943)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 943");

                entity.Property(e => e.Column944)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 944");

                entity.Property(e => e.Column945)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 945");

                entity.Property(e => e.Column946)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 946");

                entity.Property(e => e.Column947)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 947");

                entity.Property(e => e.Column948)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 948");

                entity.Property(e => e.Column949)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 949");

                entity.Property(e => e.Column95)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 95");

                entity.Property(e => e.Column950)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 950");

                entity.Property(e => e.Column951)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 951");

                entity.Property(e => e.Column952)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 952");

                entity.Property(e => e.Column953)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 953");

                entity.Property(e => e.Column954)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 954");

                entity.Property(e => e.Column955)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 955");

                entity.Property(e => e.Column956)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 956");

                entity.Property(e => e.Column957)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 957");

                entity.Property(e => e.Column958)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 958");

                entity.Property(e => e.Column959)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 959");

                entity.Property(e => e.Column96)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 96");

                entity.Property(e => e.Column960)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 960");

                entity.Property(e => e.Column961)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 961");

                entity.Property(e => e.Column962)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 962");

                entity.Property(e => e.Column963)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 963");

                entity.Property(e => e.Column964)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 964");

                entity.Property(e => e.Column965)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 965");

                entity.Property(e => e.Column966)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 966");

                entity.Property(e => e.Column967)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 967");

                entity.Property(e => e.Column968)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 968");

                entity.Property(e => e.Column969)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 969");

                entity.Property(e => e.Column97)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 97");

                entity.Property(e => e.Column970)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 970");

                entity.Property(e => e.Column971)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 971");

                entity.Property(e => e.Column972)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 972");

                entity.Property(e => e.Column973)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 973");

                entity.Property(e => e.Column974)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 974");

                entity.Property(e => e.Column975)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 975");

                entity.Property(e => e.Column976)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 976");

                entity.Property(e => e.Column977)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 977");

                entity.Property(e => e.Column978)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 978");

                entity.Property(e => e.Column979)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 979");

                entity.Property(e => e.Column98)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 98");

                entity.Property(e => e.Column980)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 980");

                entity.Property(e => e.Column981)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 981");

                entity.Property(e => e.Column982)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 982");

                entity.Property(e => e.Column983)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 983");

                entity.Property(e => e.Column984)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 984");

                entity.Property(e => e.Column985)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 985");

                entity.Property(e => e.Column986)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 986");

                entity.Property(e => e.Column987)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 987");

                entity.Property(e => e.Column988)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 988");

                entity.Property(e => e.Column989)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 989");

                entity.Property(e => e.Column99)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 99");

                entity.Property(e => e.Column990)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 990");

                entity.Property(e => e.Column991)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 991");

                entity.Property(e => e.Column992)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 992");

                entity.Property(e => e.Column993)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 993");

                entity.Property(e => e.Column994)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 994");

                entity.Property(e => e.Column995)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 995");

                entity.Property(e => e.Column996)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 996");

                entity.Property(e => e.Column997)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 997");

                entity.Property(e => e.Column998)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 998");

                entity.Property(e => e.Column999)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Column 999");

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("country_code");

                entity.Property(e => e.DiversionNotRisk)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Diversion_notRisk");

                entity.Property(e => e.DiversionRisk)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Diversion_Risk");

                entity.Property(e => e.Elr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("elr");

                entity.Property(e => e.EpciConcern)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EPCI_Concern");

                entity.Property(e => e.EpciEucr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("epci_eucr");

                entity.Property(e => e.EpciExemptEuca)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("epci_exempt_euca");

                entity.Property(e => e.EpciExemptEucnr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("epci_exempt_eucnr");

                entity.Property(e => e.GovEndUse)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("gov_end_use");

                entity.Property(e => e.GovExempt)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("gov_exempt");

                entity.Property(e => e.GtsId)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("gts_id");

                entity.Property(e => e.NotProfiledNonriskyCnty)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("not_profiled_nonrisky_cnty");

                entity.Property(e => e.NotProfiledRiskyCnty)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("not_profiled_risky_cnty");

                entity.Property(e => e.Ns3Gov)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ns3_gov");

                entity.Property(e => e.PostalCode)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("POSTAL_CODE");

                entity.Property(e => e.PotentialEmbargo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Potential_Embargo");

                entity.Property(e => e.ProfileDate)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("profile_date");

                entity.Property(e => e.ProfiledCommercialSelltoGov)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("profiled_commercial_sellto_gov");

                entity.Property(e => e.ProfiledGovRelated)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("profiled_gov_related");

                entity.Property(e => e.ProfiledNogovNosoe)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("profiled_nogov_nosoe");

                entity.Property(e => e.S3Gov)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("s3_gov");

                entity.Property(e => e.ServiceProvider)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Service_Provider");

                entity.Property(e => e.State)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("state");

                entity.Property(e => e.SystemIntegrator)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName(" System_Integrator");

                entity.Property(e => e.TradingEntity)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Trading_Entity");
            });

            modelBuilder.Entity<Profiled2016a>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("profiled_2016a", "dsf");

                entity.Property(e => e.AccountName)
                    .HasMaxLength(1500)
                    .IsUnicode(false)
                    .HasColumnName("account_name");

                entity.Property(e => e.AddressLine1)
                    .HasMaxLength(1500)
                    .IsUnicode(false)
                    .HasColumnName("address_line_1");

                entity.Property(e => e.AddressLine2)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("address_line_2");

                entity.Property(e => e.AddressLine3)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("address_line_3");

                entity.Property(e => e.AddressLine4)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("address_line_4");

                entity.Property(e => e.City)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("city");

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("country_code");

                entity.Property(e => e.DiversionNotRisk)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Diversion_notRisk");

                entity.Property(e => e.DiversionRisk)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Diversion_Risk");

                entity.Property(e => e.Elr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("elr");

                entity.Property(e => e.EpciConcern)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EPCI_Concern");

                entity.Property(e => e.EpciEucr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("epci_eucr");

                entity.Property(e => e.EpciExemptEuca)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("epci_exempt_euca");

                entity.Property(e => e.EpciExemptEucnr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("epci_exempt_eucnr");

                entity.Property(e => e.GovEndUse)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("gov_end_use");

                entity.Property(e => e.GovExempt)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("gov_exempt");

                entity.Property(e => e.GtsId)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("gts_id");

                entity.Property(e => e.NotProfiledNonriskyCnty)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("not_profiled_nonrisky_cnty");

                entity.Property(e => e.NotProfiledRiskyCnty)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("not_profiled_risky_cnty");

                entity.Property(e => e.Ns3Gov)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ns3_gov");

                entity.Property(e => e.PostalCode)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("POSTAL_CODE");

                entity.Property(e => e.PotentialEmbargo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Potential_Embargo");

                entity.Property(e => e.ProfileDate)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("profile_date");

                entity.Property(e => e.ProfiledCommercialSelltoGov)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("profiled_commercial_sellto_gov");

                entity.Property(e => e.ProfiledGovRelated)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("profiled_gov_related");

                entity.Property(e => e.ProfiledNogovNosoe)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("profiled_nogov_nosoe");

                entity.Property(e => e.S3Gov)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("s3_gov");

                entity.Property(e => e.ServiceProvider)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Service_Provider");

                entity.Property(e => e.State)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("state");

                entity.Property(e => e.SystemIntegrator)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("System_Integrator");

                entity.Property(e => e.TradingEntity)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Trading_Entity");
            });

            modelBuilder.Entity<Profiled2017>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("profiled_2017", "dsf");

                entity.Property(e => e.AccountName)
                    .HasMaxLength(255)
                    .HasColumnName("account_name");

                entity.Property(e => e.AddressLine1)
                    .HasMaxLength(255)
                    .HasColumnName("address_line_1");

                entity.Property(e => e.AddressLine2)
                    .HasMaxLength(255)
                    .HasColumnName("address_line_2");

                entity.Property(e => e.AddressLine3)
                    .HasMaxLength(255)
                    .HasColumnName("address_line_3");

                entity.Property(e => e.AddressLine4)
                    .HasMaxLength(255)
                    .HasColumnName("address_line_4");

                entity.Property(e => e.AddressType)
                    .HasMaxLength(255)
                    .HasColumnName("ADDRESS_TYPE");

                entity.Property(e => e.City)
                    .HasMaxLength(255)
                    .HasColumnName("city");

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("country_code");

                entity.Property(e => e.Created).HasMaxLength(255);

                entity.Property(e => e.CrmUcmid)
                    .HasMaxLength(255)
                    .HasColumnName("CRM_UCMID");

                entity.Property(e => e.DiversionNotRisk)
                    .HasMaxLength(255)
                    .HasColumnName("Diversion_notRisk");

                entity.Property(e => e.DiversionRisk)
                    .HasMaxLength(255)
                    .HasColumnName("Diversion_Risk");

                entity.Property(e => e.Elr)
                    .HasMaxLength(255)
                    .HasColumnName("elr");

                entity.Property(e => e.EpciConcern)
                    .HasMaxLength(255)
                    .HasColumnName("EPCI_Concern");

                entity.Property(e => e.EpciEucr)
                    .HasMaxLength(255)
                    .HasColumnName("epci_eucr");

                entity.Property(e => e.EpciExemptEuca)
                    .HasMaxLength(255)
                    .HasColumnName("epci_exempt_euca");

                entity.Property(e => e.EpciExemptEucnr)
                    .HasMaxLength(255)
                    .HasColumnName("epci_exempt_eucnr");

                entity.Property(e => e.FileName)
                    .HasMaxLength(255)
                    .HasColumnName("file_name");

                entity.Property(e => e.FulcrumNotes)
                    .HasMaxLength(255)
                    .HasColumnName("fulcrum_notes");

                entity.Property(e => e.GovEndUse)
                    .HasMaxLength(255)
                    .HasColumnName("gov_end_use");

                entity.Property(e => e.GovExempt)
                    .HasMaxLength(255)
                    .HasColumnName("gov_exempt");

                entity.Property(e => e.GtsId).HasColumnName("gts_id");

                entity.Property(e => e.MasterCom).HasMaxLength(255);

                entity.Property(e => e.MasterGov).HasMaxLength(255);

                entity.Property(e => e.MasterGve).HasMaxLength(255);

                entity.Property(e => e.MasterSoe).HasMaxLength(255);

                entity.Property(e => e.NotProfiledNonriskyCnty)
                    .HasMaxLength(255)
                    .HasColumnName("not_profiled_nonrisky_cnty");

                entity.Property(e => e.NotProfiledRiskyCnty)
                    .HasMaxLength(255)
                    .HasColumnName("not_profiled_risky_cnty");

                entity.Property(e => e.Ns3Gov)
                    .HasMaxLength(255)
                    .HasColumnName("ns3_gov");

                entity.Property(e => e.Parent).HasMaxLength(255);

                entity.Property(e => e.PostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("POSTAL_CODE");

                entity.Property(e => e.PotentialEmbargo)
                    .HasMaxLength(255)
                    .HasColumnName("Potential_Embargo");

                entity.Property(e => e.ProfileDate)
                    .HasColumnType("datetime")
                    .HasColumnName("profile_date");

                entity.Property(e => e.ProfiledCommercialSelltoGov)
                    .HasMaxLength(255)
                    .HasColumnName("profiled_commercial_sellto_gov");

                entity.Property(e => e.ProfiledGovRelated)
                    .HasMaxLength(255)
                    .HasColumnName("profiled_gov_related");

                entity.Property(e => e.ProfiledNogovNosoe)
                    .HasMaxLength(255)
                    .HasColumnName("profiled_nogov_nosoe");

                entity.Property(e => e.S3Gov)
                    .HasMaxLength(255)
                    .HasColumnName("s3_gov");

                entity.Property(e => e.ServiceProvider)
                    .HasMaxLength(255)
                    .HasColumnName("Service_Provider");

                entity.Property(e => e.State)
                    .HasMaxLength(255)
                    .HasColumnName("state");

                entity.Property(e => e.SystemIntegrator)
                    .HasMaxLength(255)
                    .HasColumnName(" System_Integrator");

                entity.Property(e => e.TradingEntity)
                    .HasMaxLength(255)
                    .HasColumnName("Trading_Entity");
            });

            modelBuilder.Entity<Profiled2017a>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("profiled_2017a", "dsf");

                entity.Property(e => e.AccountName)
                    .HasMaxLength(255)
                    .HasColumnName("account_name");

                entity.Property(e => e.AddressLine1)
                    .HasMaxLength(255)
                    .HasColumnName("address_line_1");

                entity.Property(e => e.AddressLine2)
                    .HasMaxLength(255)
                    .HasColumnName("address_line_2");

                entity.Property(e => e.AddressLine3)
                    .HasMaxLength(255)
                    .HasColumnName("address_line_3");

                entity.Property(e => e.AddressLine4)
                    .HasMaxLength(255)
                    .HasColumnName("address_line_4");

                entity.Property(e => e.City)
                    .HasMaxLength(255)
                    .HasColumnName("city");

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("country_code");

                entity.Property(e => e.DiversionNotRisk)
                    .HasMaxLength(255)
                    .HasColumnName("Diversion_notRisk");

                entity.Property(e => e.DiversionRisk)
                    .HasMaxLength(255)
                    .HasColumnName("Diversion_Risk");

                entity.Property(e => e.Elr)
                    .HasMaxLength(255)
                    .HasColumnName("elr");

                entity.Property(e => e.EpciConcern)
                    .HasMaxLength(255)
                    .HasColumnName("EPCI_Concern");

                entity.Property(e => e.EpciEucr)
                    .HasMaxLength(255)
                    .HasColumnName("epci_eucr");

                entity.Property(e => e.EpciExemptEuca)
                    .HasMaxLength(255)
                    .HasColumnName("epci_exempt_euca");

                entity.Property(e => e.EpciExemptEucnr)
                    .HasMaxLength(255)
                    .HasColumnName("epci_exempt_eucnr");

                entity.Property(e => e.GovEndUse)
                    .HasMaxLength(255)
                    .HasColumnName("gov_end_use");

                entity.Property(e => e.GovExempt)
                    .HasMaxLength(255)
                    .HasColumnName("gov_exempt");

                entity.Property(e => e.GtsId)
                    .HasMaxLength(50)
                    .HasColumnName("gts_id");

                entity.Property(e => e.NotProfiledNonriskyCnty)
                    .HasMaxLength(255)
                    .HasColumnName("not_profiled_nonrisky_cnty");

                entity.Property(e => e.NotProfiledRiskyCnty)
                    .HasMaxLength(255)
                    .HasColumnName("not_profiled_risky_cnty");

                entity.Property(e => e.Ns3Gov)
                    .HasMaxLength(255)
                    .HasColumnName("ns3_gov");

                entity.Property(e => e.PostalCode)
                    .HasMaxLength(255)
                    .HasColumnName("POSTAL_CODE");

                entity.Property(e => e.PotentialEmbargo)
                    .HasMaxLength(255)
                    .HasColumnName("Potential_Embargo");

                entity.Property(e => e.ProfileDate)
                    .HasMaxLength(50)
                    .HasColumnName("profile_date");

                entity.Property(e => e.ProfiledCommercialSelltoGov)
                    .HasMaxLength(255)
                    .HasColumnName("profiled_commercial_sellto_gov");

                entity.Property(e => e.ProfiledGovRelated)
                    .HasMaxLength(255)
                    .HasColumnName("profiled_gov_related");

                entity.Property(e => e.ProfiledNogovNosoe)
                    .HasMaxLength(255)
                    .HasColumnName("profiled_nogov_nosoe");

                entity.Property(e => e.S3Gov)
                    .HasMaxLength(255)
                    .HasColumnName("s3_gov");

                entity.Property(e => e.ServiceProvider)
                    .HasMaxLength(255)
                    .HasColumnName("Service_Provider");

                entity.Property(e => e.State)
                    .HasMaxLength(255)
                    .HasColumnName("state");

                entity.Property(e => e.SystemIntegrator)
                    .HasMaxLength(255)
                    .HasColumnName("System_Integrator");

                entity.Property(e => e.TradingEntity)
                    .HasMaxLength(255)
                    .HasColumnName("Trading_Entity");
            });

            modelBuilder.Entity<Q3Q417PosFinal>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Q3-Q4_17_POS_FINAL", "dsf");

                entity.Property(e => e.BillToPartyBasDistrictKey)
                    .HasMaxLength(2000)
                    .HasColumnName("Bill_To_Party___BAS__District__Key_");

                entity.Property(e => e.BillToPartyBasPostalCodeKey)
                    .HasMaxLength(2000)
                    .HasColumnName("Bill_To_Party___BAS__Postal_Code__Key_");

                entity.Property(e => e.BillToPartyBasStreet2Key)
                    .HasMaxLength(2000)
                    .HasColumnName("Bill_To_Party___BAS___Street_2__Key_");

                entity.Property(e => e.BillToPartyBasStreet3Key)
                    .HasMaxLength(2000)
                    .HasColumnName("Bill_To_Party___BAS___Street_3__Key_");

                entity.Property(e => e.BillToPartyBasStreet4Key)
                    .HasMaxLength(2000)
                    .HasColumnName("Bill_To_Party___BAS___Street_4__Key_");

                entity.Property(e => e.BillToPartyBasStreetKey)
                    .HasMaxLength(2000)
                    .HasColumnName("Bill_To_Party___BAS__Street__Key_");

                entity.Property(e => e.BillToPartyCountryText)
                    .HasMaxLength(2000)
                    .HasColumnName("Bill_To_Party___Country__Text_");

                entity.Property(e => e.BillToPartyKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___Key");

                entity.Property(e => e.BillToPartyLongText)
                    .HasMaxLength(2000)
                    .HasColumnName("Bill_To_Party___Long_Text");

                entity.Property(e => e.BillToPartyRegionKey)
                    .HasMaxLength(2000)
                    .HasColumnName("Bill_To_Party___Region__Key_");

                entity.Property(e => e.ChannelPartnerKey)
                    .HasMaxLength(2000)
                    .HasColumnName("Channel_Partner___Key");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(50)
                    .HasColumnName("CI_Status");

                entity.Property(e => e.ClaimAmount)
                    .HasMaxLength(50)
                    .HasColumnName("Claim_Amount");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(50)
                    .HasColumnName("Claim_Status");

                entity.Property(e => e.Column67)
                    .HasMaxLength(1)
                    .HasColumnName("column_67");

                entity.Property(e => e.DistributorBasPostalCodeKey)
                    .HasMaxLength(2000)
                    .HasColumnName("Distributor___BAS__Postal_Code__Key_");

                entity.Property(e => e.DistributorBasStreet2Key)
                    .HasMaxLength(2000)
                    .HasColumnName("Distributor___BAS___Street_2__Key_");

                entity.Property(e => e.DistributorBasStreet3Key)
                    .HasMaxLength(2000)
                    .HasColumnName("Distributor___BAS___Street_3__Key_");

                entity.Property(e => e.DistributorBasStreet4Key)
                    .HasMaxLength(2000)
                    .HasColumnName("Distributor___BAS___Street_4__Key_");

                entity.Property(e => e.DistributorBasStreetKey)
                    .HasMaxLength(50)
                    .HasColumnName("Distributor___BAS__Street__Key_");

                entity.Property(e => e.DistributorCountryText)
                    .HasMaxLength(2000)
                    .HasColumnName("Distributor___Country__Text_");

                entity.Property(e => e.DistributorDistrictKey)
                    .HasMaxLength(2000)
                    .HasColumnName("Distributor___District__Key_");

                entity.Property(e => e.DistributorKey)
                    .HasMaxLength(50)
                    .HasColumnName("Distributor___Key");

                entity.Property(e => e.DistributorLongText)
                    .HasMaxLength(2000)
                    .HasColumnName("Distributor___Long_Text");

                entity.Property(e => e.DistributorRegionKey)
                    .HasMaxLength(2000)
                    .HasColumnName("Distributor___Region__Key_");

                entity.Property(e => e.DistributorSalesOrPdisslsonKey)
                    .HasMaxLength(50)
                    .HasColumnName("Distributor_Sales_Or__PDISSLSON____Key");

                entity.Property(e => e.DocumentOrderNumbe)
                    .HasMaxLength(2000)
                    .HasColumnName("Document_Order_numbe");

                entity.Property(e => e.EndCustomerBasDistrictKey)
                    .HasMaxLength(2000)
                    .HasColumnName("End_Customer___BAS__District__Key_");

                entity.Property(e => e.EndCustomerBasPostalCodeKey)
                    .HasMaxLength(2000)
                    .HasColumnName("End_Customer___BAS__Postal_Code__Key_");

                entity.Property(e => e.EndCustomerBasStreet2Key)
                    .HasMaxLength(2000)
                    .HasColumnName("End_Customer___BAS___Street_2__Key_");

                entity.Property(e => e.EndCustomerBasStreet3Key)
                    .HasMaxLength(2000)
                    .HasColumnName("End_Customer___BAS___Street_3__Key_");

                entity.Property(e => e.EndCustomerBasStreet4Key)
                    .HasMaxLength(2000)
                    .HasColumnName("End_Customer___BAS___Street_4__Key_");

                entity.Property(e => e.EndCustomerBasStreetKey)
                    .HasMaxLength(2000)
                    .HasColumnName("End_Customer___BAS__Street__Key_");

                entity.Property(e => e.EndCustomerCountryKey)
                    .HasMaxLength(2000)
                    .HasColumnName("End_Customer___Country__Key_");

                entity.Property(e => e.EndCustomerCountryText)
                    .HasMaxLength(2000)
                    .HasColumnName("End_Customer___Country__Text_");

                entity.Property(e => e.EndCustomerKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Key");

                entity.Property(e => e.EndCustomerLongText)
                    .HasMaxLength(2000)
                    .HasColumnName("End_Customer___Long_Text");

                entity.Property(e => e.EndCustomerPoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer_PO_Number");

                entity.Property(e => e.EndCustomerRegionKey)
                    .HasMaxLength(2000)
                    .HasColumnName("End_Customer___Region__Key_");

                entity.Property(e => e.ItemCreatedDate)
                    .HasMaxLength(50)
                    .HasColumnName("Item_Created_Date");

                entity.Property(e => e.ItemNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Item_Number");

                entity.Property(e => e.JuniperPosValue)
                    .HasMaxLength(50)
                    .HasColumnName("Juniper_POS_Value");

                entity.Property(e => e.JuniperProductSeri)
                    .HasMaxLength(50)
                    .HasColumnName("Juniper_Product_Seri");

                entity.Property(e => e.Material).HasMaxLength(2000);

                entity.Property(e => e.MaterialEccnKey)
                    .HasMaxLength(2000)
                    .HasColumnName("Material___ECCN__Key_");

                entity.Property(e => e.MaterialHtsKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___HTS__Key_");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___Key");

                entity.Property(e => e.MaterialMaterialTypeKey)
                    .HasMaxLength(2000)
                    .HasColumnName("Material___Material_type__Key_");

                entity.Property(e => e.MaterialMaterialTypeText)
                    .HasMaxLength(2000)
                    .HasColumnName("Material___Material_type__Text_");

                entity.Property(e => e.MaterialProductCategoryText)
                    .HasMaxLength(2000)
                    .HasColumnName("Material___Product_Category__Text_");

                entity.Property(e => e.ReportedQuantity)
                    .HasMaxLength(50)
                    .HasColumnName("Reported_Quantity");

                entity.Property(e => e.ResaleShipDate)
                    .HasMaxLength(50)
                    .HasColumnName("Resale_ship_date");

                entity.Property(e => e.Reseller1BasDistrictKey)
                    .HasMaxLength(2000)
                    .HasColumnName("Reseller_1___BAS__District__Key_");

                entity.Property(e => e.Reseller1BasPostalCodeKey)
                    .HasMaxLength(2000)
                    .HasColumnName("Reseller_1___BAS__Postal_Code__Key_");

                entity.Property(e => e.Reseller1BasStreet2Key)
                    .HasMaxLength(2000)
                    .HasColumnName("Reseller_1___BAS___Street_2__Key_");

                entity.Property(e => e.Reseller1BasStreet3Key)
                    .HasMaxLength(2000)
                    .HasColumnName("Reseller_1___BAS___Street_3__Key_");

                entity.Property(e => e.Reseller1BasStreet4Key)
                    .HasMaxLength(2000)
                    .HasColumnName("Reseller_1___BAS___Street_4__Key_");

                entity.Property(e => e.Reseller1BasStreetKey)
                    .HasMaxLength(2000)
                    .HasColumnName("Reseller_1___BAS__Street__Key_");

                entity.Property(e => e.Reseller1CountryText)
                    .HasMaxLength(2000)
                    .HasColumnName("Reseller_1___Country__Text_");

                entity.Property(e => e.Reseller1Key)
                    .HasMaxLength(50)
                    .HasColumnName("Reseller_1___Key");

                entity.Property(e => e.Reseller1LongText)
                    .HasMaxLength(2000)
                    .HasColumnName("Reseller_1___Long_Text");

                entity.Property(e => e.ResellerPoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Reseller_PO_Number");

                entity.Property(e => e.SalesOrderNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Sales_Order_Number");

                entity.Property(e => e.SdContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("SD_Contract_Number");

                entity.Property(e => e.TransactionDate)
                    .HasMaxLength(50)
                    .HasColumnName("Transaction_Date");

                entity.Property(e => e.TransactionQuantity)
                    .HasMaxLength(50)
                    .HasColumnName("Transaction_Quantity");

                entity.Property(e => e.TransmissionNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Transmission_Number");
            });

            modelBuilder.Entity<QuoteOrderJanMay2018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("quote_order_JanMay2018", "dsf");

                entity.Property(e => e.QuoteCreationDate)
                    .HasMaxLength(255)
                    .HasColumnName("quote_creation_date");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(255)
                    .HasColumnName("quote_id");

                entity.Property(e => e.SoCreationDate)
                    .HasMaxLength(255)
                    .HasColumnName("so_creation_date");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(255)
                    .HasColumnName("so_number");
            });

            modelBuilder.Entity<QuoteSoMap>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("quote_so_map", "dev");

                entity.HasIndex(e => e.SoNumber, "quote_so_map_ndx1");

                entity.Property(e => e.QuoteCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("quote_creation_date");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("quote_id");

                entity.Property(e => e.SoCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("so_creation_date");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");
            });

            modelBuilder.Entity<QuoteSoMetric>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("quote_so_metrics", "dev");

                entity.Property(e => e.ConsUndertakingRequired).HasMaxLength(10);

                entity.Property(e => e.CountryName).HasMaxLength(255);

                entity.Property(e => e.Embargoed).HasMaxLength(10);

                entity.Property(e => e.EndUserCountryCode)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("end_user_country_code");

                entity.Property(e => e.HighRisk).HasMaxLength(10);

                entity.Property(e => e.JuniperWatchList).HasMaxLength(10);

                entity.Property(e => e.LowRisk).HasMaxLength(10);

                entity.Property(e => e.MidRisk).HasMaxLength(10);

                entity.Property(e => e.NetherlandsBrokerNotif).HasMaxLength(10);

                entity.Property(e => e.NoGlobalLicForMilitaryEu)
                    .HasMaxLength(10)
                    .HasColumnName("NoGlobalLicForMilitaryEU");

                entity.Property(e => e.Qot2soDays).HasColumnName("qot2so_days");

                entity.Property(e => e.QuoteCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("quote_creation_date");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("quote_id");

                entity.Property(e => e.SoCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("so_creation_date");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoType)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("so_type");

                entity.Property(e => e.UsnonSupp3)
                    .HasMaxLength(10)
                    .HasColumnName("USNonSupp3");
            });

            modelBuilder.Entity<QuotesOrders2018q1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("quotes_orders_2018q1", "dsf");

                entity.Property(e => e.OrderAllocatedRevenue)
                    .HasMaxLength(50)
                    .HasColumnName("_Order__Allocated_Revenue_");

                entity.Property(e => e.OrderCreatedMonth)
                    .HasMaxLength(50)
                    .HasColumnName("_Order__Created_Month_");

                entity.Property(e => e.OrderCreatedWeek)
                    .HasMaxLength(50)
                    .HasColumnName("_Order__Created_Week_");

                entity.Property(e => e.OrderCreatedYear)
                    .HasMaxLength(50)
                    .HasColumnName("_Order__Created_Year_");

                entity.Property(e => e.OrderFmvActual)
                    .HasMaxLength(50)
                    .HasColumnName("_Order__FMV_Actual_");

                entity.Property(e => e.OrderId)
                    .HasMaxLength(50)
                    .HasColumnName("_Order_ID_");

                entity.Property(e => e.OrderItemNo)
                    .HasMaxLength(50)
                    .HasColumnName("_Order__Item_No__");

                entity.Property(e => e.OrderItemTransactionType)
                    .HasMaxLength(50)
                    .HasColumnName("_Order__Item_Transaction_Type_");

                entity.Property(e => e.OrderNetValueOfItem)
                    .HasMaxLength(50)
                    .HasColumnName("_Order__Net_Value_of_Item_");

                entity.Property(e => e.OrderTotalDerivedL0Discount)
                    .HasMaxLength(50)
                    .HasColumnName("_Order__Total_Derived_L0_Discount_");

                entity.Property(e => e.OrderTotalFreight)
                    .HasMaxLength(50)
                    .HasColumnName("_Order__Total_Freight_");

                entity.Property(e => e.OrderTotalGross)
                    .HasMaxLength(50)
                    .HasColumnName("_Order__Total_Gross_");

                entity.Property(e => e.OrderType)
                    .HasMaxLength(50)
                    .HasColumnName("_Order_Type_");

                entity.Property(e => e.QuoteAllocatedRevenue)
                    .HasMaxLength(50)
                    .HasColumnName("_Quote__Allocated_Revenue_");

                entity.Property(e => e.QuoteCreatedMonth)
                    .HasMaxLength(50)
                    .HasColumnName("_Quote__Created_Month_");

                entity.Property(e => e.QuoteCreatedWeek)
                    .HasMaxLength(50)
                    .HasColumnName("_Quote__Created_Week_");

                entity.Property(e => e.QuoteCreatedYear)
                    .HasMaxLength(50)
                    .HasColumnName("_Quote__Created_Year_");

                entity.Property(e => e.QuoteFmvActual)
                    .HasMaxLength(50)
                    .HasColumnName("_Quote__FMV_Actual_");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .HasColumnName("_Quote_ID_");

                entity.Property(e => e.QuoteItemNo)
                    .HasMaxLength(50)
                    .HasColumnName("_Quote__Item_No__");

                entity.Property(e => e.QuoteItemTransactionType)
                    .HasMaxLength(50)
                    .HasColumnName("_Quote__Item_Transaction_Type_");

                entity.Property(e => e.QuoteNetValueOfItem)
                    .HasMaxLength(50)
                    .HasColumnName("_Quote__Net_Value_of_Item_");

                entity.Property(e => e.QuoteTotalDerivedL0Discount)
                    .HasMaxLength(50)
                    .HasColumnName("_Quote__Total_Derived_L0_Discount_");

                entity.Property(e => e.QuoteTotalFreight)
                    .HasMaxLength(50)
                    .HasColumnName("_Quote__Total_Freight_");

                entity.Property(e => e.QuoteTotalGross)
                    .HasMaxLength(50)
                    .HasColumnName("_Quote__Total_Gross_");

                entity.Property(e => e.QuoteType)
                    .HasMaxLength(50)
                    .HasColumnName("_Quote_Type_");
            });

            modelBuilder.Entity<RawBooking>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("raw_bookings");

                entity.HasIndex(e => e.ImportId, "raw_bookings_ndx1");

                entity.HasIndex(e => e.SalesOrderNumber, "so_number_idx1");

                entity.Property(e => e.BillToPartyBasPostalCodeKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Bill To Party - BAS  Postal Code (Key)");

                entity.Property(e => e.BillToPartyBasStreet2Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Bill To Party - BAS   Street 2 (Key)");

                entity.Property(e => e.BillToPartyBasStreet3Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Bill To Party - BAS   Street 3 (Key)");

                entity.Property(e => e.BillToPartyBasStreet4Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Bill To Party - BAS   Street 4 (Key)");

                entity.Property(e => e.BillToPartyBusinessPartnerKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Bill To Party - Business Partner (Key)");

                entity.Property(e => e.BillToPartyCountryText)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Bill To Party - Country (Text)");

                entity.Property(e => e.BillToPartyLocationKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Bill To Party - Location (Key)");

                entity.Property(e => e.BillToPartyNameKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Bill To Party - Name (Key)");

                entity.Property(e => e.BillToPartyStreetNameKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Bill To Party - Street Name (Key)");

                entity.Property(e => e.BookDate)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Book Date");

                entity.Property(e => e.BookingQuantity)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Booking Quantity");

                entity.Property(e => e.BookingsNetValue)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Bookings Net Value");

                entity.Property(e => e.CompleteDelivery)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Complete Delivery");

                entity.Property(e => e.Compliance)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CustomerPoNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Customer PO Number");

                entity.Property(e => e.DeliveryStatus)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Delivery Status");

                entity.Property(e => e.EmbargoStatusAtTheLineLevel)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Embargo Status at the line level");

                entity.Property(e => e.EndUser)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.EndUserBasPostalCodeKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("EndUser - BAS  Postal Code (Key)");

                entity.Property(e => e.EndUserBasStreet2Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("EndUser - BAS   Street 2 (Key)");

                entity.Property(e => e.EndUserBasStreet3Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("EndUser - BAS   Street 3 (Key)");

                entity.Property(e => e.EndUserBasStreet4Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("EndUser - BAS   Street 4 (Key)");

                entity.Property(e => e.EndUserCountryKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("EndUser - Country (Key)");

                entity.Property(e => e.EndUserCountryText)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("EndUser - Country (Text)");

                entity.Property(e => e.EndUserKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("EndUser - Key");

                entity.Property(e => e.EndUserLocationKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("EndUser - Location (Key)");

                entity.Property(e => e.EndUserStreetNameKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("EndUser - Street Name (Key)");

                entity.Property(e => e.FrieghtForwarder1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Frieght Forwarder 1");

                entity.Property(e => e.FrieghtForwarder1BasStreet2Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Frieght Forwarder 1 - BAS   Street 2 (Key)");

                entity.Property(e => e.FrieghtForwarder1BasStreet3Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Frieght Forwarder 1 - BAS   Street 3 (Key)");

                entity.Property(e => e.FrieghtForwarder1BasStreet4Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Frieght Forwarder 1 - BAS   Street 4 (Key)");

                entity.Property(e => e.FrieghtForwarder1CountryText)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Frieght Forwarder 1 - Country (Text)");

                entity.Property(e => e.FrieghtForwarder1LocationKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Frieght Forwarder 1 - Location (Key)");

                entity.Property(e => e.FrieghtForwarder1StreetNameKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Frieght Forwarder 1 - Street Name (Key)");

                entity.Property(e => e.FrieghtForwarder2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Frieght Forwarder 2");

                entity.Property(e => e.FrieghtForwarder2BasStreet2Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Frieght Forwarder 2 - BAS   Street 2 (Key)");

                entity.Property(e => e.FrieghtForwarder2BasStreet3Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Frieght Forwarder 2 - BAS   Street 3 (Key)");

                entity.Property(e => e.FrieghtForwarder2BasStreet4Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Frieght Forwarder 2 - BAS   Street 4 (Key)");

                entity.Property(e => e.FrieghtForwarder2CountryText)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Frieght Forwarder 2 - Country (Text)");

                entity.Property(e => e.FrieghtForwarder2LocationKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Frieght Forwarder 2 - Location (Key)");

                entity.Property(e => e.FrieghtForwarder2StreetNameKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Frieght Forwarder 2 - Street Name (Key)");

                entity.Property(e => e.FrieghtForwarder3)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Frieght Forwarder 3");

                entity.Property(e => e.FrieghtForwarder3BasStreet2Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Frieght Forwarder 3 - BAS   Street 2 (Key)");

                entity.Property(e => e.FrieghtForwarder3BasStreet3Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Frieght Forwarder 3 - BAS   Street 3 (Key)");

                entity.Property(e => e.FrieghtForwarder3BasStreet4Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Frieght Forwarder 3 - BAS   Street 4 (Key)");

                entity.Property(e => e.FrieghtForwarder3CountryText)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Frieght Forwarder 3 - Country (Text)");

                entity.Property(e => e.FrieghtForwarder3LocationKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Frieght Forwarder 3 - Location (Key)");

                entity.Property(e => e.FrieghtForwarder3StreetNameKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Frieght Forwarder 3 - Street Name (Key)");

                entity.Property(e => e.GtsOverallStatus)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("GTS Overall  Status");

                entity.Property(e => e.ImportDate)
                    .HasColumnType("datetime")
                    .HasColumnName("import_date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ImportId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("import_id");

                entity.Property(e => e.ImportStatus)
                    .HasMaxLength(255)
                    .HasColumnName("import_status");

                entity.Property(e => e.Incoterms1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Incoterms 1");

                entity.Property(e => e.Incoterms2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Incoterms 2");

                entity.Property(e => e.LicenseForBlocked)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("License for blocked");

                entity.Property(e => e.Material)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.MaterialEccnKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Material - ECCN (Key)");

                entity.Property(e => e.MaterialHtsKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Material - HTS (Key)");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Material - Key");

                entity.Property(e => e.MaterialMediumKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Material - Medium (Key)");

                entity.Property(e => e.MaterialPlantViewCountryOfOriginText)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Material Plant View - Country of Origin (Text)");

                entity.Property(e => e.Mit)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("MIT");

                entity.Property(e => e.OrderType1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Order Type1");

                entity.Property(e => e.OrderType2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Order Type2");

                entity.Property(e => e.PayerKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Payer - Key");

                entity.Property(e => e.PlantCountryKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Plant - Country (Key)");

                entity.Property(e => e.PlantKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Plant - Key");

                entity.Property(e => e.PlantMediumText)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Plant - Medium Text");

                entity.Property(e => e.PurchaseOrderType)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Purchase Order Type");

                entity.Property(e => e.QuoteId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("quote_id");

                entity.Property(e => e.ReasonCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Reason Code");

                entity.Property(e => e.RtphStatus)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("RTPH status");

                entity.Property(e => e.SalesDocumentItemCategory)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Sales Document Item Category");

                entity.Property(e => e.SalesOrderLineItem)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Sales Order Line Item");

                entity.Property(e => e.SalesOrderNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Sales Order Number");

                entity.Property(e => e.SalesOrderScheduleLineNo)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Sales Order Schedule Line No");

                entity.Property(e => e.ScheduleLineDate)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Schedule Line Date");

                entity.Property(e => e.ShipToPartyBasPostalCodeKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Ship To Party - BAS  Postal Code (Key)");

                entity.Property(e => e.ShipToPartyBasStreet2Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Ship To Party - BAS   Street 2 (Key)");

                entity.Property(e => e.ShipToPartyBasStreet3Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Ship To Party - BAS   Street 3 (Key)");

                entity.Property(e => e.ShipToPartyBasStreet4Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Ship To Party - BAS   Street 4 (Key)");

                entity.Property(e => e.ShipToPartyBusinessPartnerKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Ship To Party - Business Partner (Key)");

                entity.Property(e => e.ShipToPartyCountryText)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Ship To Party - Country (Text)");

                entity.Property(e => e.ShipToPartyLocationKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Ship To Party - Location (Key)");

                entity.Property(e => e.ShipToPartyNameKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Ship To Party - Name (Key)");

                entity.Property(e => e.ShipToPartyStreetNameKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Ship To Party - Street Name (Key)");

                entity.Property(e => e.ShippingNoteKey)
                    .HasColumnType("text")
                    .HasColumnName("Shipping Note - Key");

                entity.Property(e => e.ShippingType)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Shipping Type");

                entity.Property(e => e.SoldToPartyBasPostalCodeKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Sold To Party - BAS  Postal Code (Key)");

                entity.Property(e => e.SoldToPartyBasStreet2Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Sold To Party - BAS   Street 2 (Key)");

                entity.Property(e => e.SoldToPartyBasStreet3Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Sold To Party - BAS   Street 3 (Key)");

                entity.Property(e => e.SoldToPartyBasStreet4Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Sold To Party - BAS   Street 4 (Key)");

                entity.Property(e => e.SoldToPartyBusinessPartnerKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Sold To Party - Business Partner (Key)");

                entity.Property(e => e.SoldToPartyCountryText)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Sold To Party - Country (Text)");

                entity.Property(e => e.SoldToPartyLocationKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Sold To Party - Location (Key)");

                entity.Property(e => e.SoldToPartyNameKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Sold To Party - Name (Key)");

                entity.Property(e => e.SoldToPartyStreetNameKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Sold To Party - Street Name (Key)");

                entity.Property(e => e.SplStatusAtTheLineLevel)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("SPL  Status at the Line level");
            });

            modelBuilder.Entity<RawBookingsAm>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("raw_bookings_am", "dev");

                entity.HasIndex(e => e.OrderIdKey, "so_number_idx1");

                entity.Property(e => e.EmployeeResponsibleCountryKey).HasColumnName("Employee_Responsible___Country__Key_");

                entity.Property(e => e.EmployeeResponsibleLongText).HasColumnName("Employee_Responsible___Long_Text");

                entity.Property(e => e.EndCustomerGsaFlagText).HasColumnName("End_Customer___GSA_Flag__Text_");

                entity.Property(e => e.EndCustomerPartnerLevelText).HasColumnName("End_Customer___Partner_Level__Text_");

                entity.Property(e => e.ImportId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("import_id");

                entity.Property(e => e.ImportedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("imported_date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ImportedStatus)
                    .HasMaxLength(255)
                    .HasColumnName("imported_status");

                entity.Property(e => e.OrderIdKey)
                    .HasMaxLength(50)
                    .HasColumnName("Order_ID___Key");

                entity.Property(e => e.ResellerBasDistrictText).HasColumnName("Reseller___BAS__District__Text_");

                entity.Property(e => e.ResellerCountryKey).HasColumnName("Reseller___Country__Key_");

                entity.Property(e => e.ResellerGsaFlagText).HasColumnName("Reseller___GSA_Flag__Text_");

                entity.Property(e => e.ResellerKey).HasColumnName("Reseller___Key");

                entity.Property(e => e.ResellerLongText).HasColumnName("Reseller___Long_Text");

                entity.Property(e => e.ResellerPartnerLevelKey).HasColumnName("Reseller___Partner_Level__Key_");

                entity.Property(e => e.SoldToPartyGsaFlagText).HasColumnName("Sold_To_Party___GSA_Flag__Text_");

                entity.Property(e => e.TransactionCreatedKey).HasColumnName("Transaction_Created___Key");
            });

            modelBuilder.Entity<RawBookingsResAm>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("raw_bookings_res_am");

                entity.HasIndex(e => e.OrderIdKey, "raw_bookings_res_am_so");

                entity.Property(e => e.EmployeeResponsibleCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("Employee_Responsible___Country__Key_");

                entity.Property(e => e.EmployeeResponsibleLongText)
                    .HasMaxLength(50)
                    .HasColumnName("Employee_Responsible___Long_Text");

                entity.Property(e => e.EndCustomerGsaFlagText)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___GSA_Flag__Text_");

                entity.Property(e => e.EndCustomerPartnerLevelText)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___Partner_Level__Text_");

                entity.Property(e => e.ImportId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("import_id");

                entity.Property(e => e.ImportedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("imported_date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ImportedStatus)
                    .HasMaxLength(255)
                    .HasColumnName("imported_status");

                entity.Property(e => e.OrderIdKey)
                    .HasMaxLength(50)
                    .HasColumnName("Order_ID___Key");

                entity.Property(e => e.ResellerBasDistrictText)
                    .HasMaxLength(150)
                    .HasColumnName("Reseller___BAS__District__Text_");

                entity.Property(e => e.ResellerCountryKey)
                    .HasMaxLength(10)
                    .HasColumnName("Reseller___Country__Key_");

                entity.Property(e => e.ResellerGsaFlagText)
                    .HasMaxLength(250)
                    .HasColumnName("Reseller___GSA_Flag__Text_");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("Reseller___Key");

                entity.Property(e => e.ResellerLongText)
                    .HasMaxLength(250)
                    .HasColumnName("Reseller___Long_Text");

                entity.Property(e => e.ResellerPartnerLevelKey)
                    .HasMaxLength(50)
                    .HasColumnName("Reseller___Partner_Level__Key_");

                entity.Property(e => e.SoldToPartyGsaFlagText)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Party___GSA_Flag__Text_");

                entity.Property(e => e.TransactionCreatedKey)
                    .HasMaxLength(50)
                    .HasColumnName("Transaction_Created___Key");
            });

            modelBuilder.Entity<RawBookingsReseller>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("raw_bookings_reseller", "dev");

                entity.Property(e => e.ImportDate)
                    .HasColumnType("datetime")
                    .HasColumnName("import_date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ImportId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("import_id");

                entity.Property(e => e.ImportStatus)
                    .HasMaxLength(255)
                    .HasColumnName("import_status");

                entity.Property(e => e.ResellerCity)
                    .HasMaxLength(255)
                    .HasColumnName("Reseller_City");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("Reseller_Country");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(255)
                    .HasColumnName("Reseller_Key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .HasColumnName("Reseller_Name");

                entity.Property(e => e.So)
                    .HasMaxLength(255)
                    .HasColumnName("SO");

                entity.Property(e => e.SoCreatedOn)
                    .HasColumnType("datetime")
                    .HasColumnName("SO_Created_On");
            });

            modelBuilder.Entity<RawCustomerMaster>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("raw_customer_master");

                entity.Property(e => e.Accountclass)
                    .HasMaxLength(50)
                    .HasColumnName("ACCOUNTCLASS");

                entity.Property(e => e.Accountgroup)
                    .HasMaxLength(50)
                    .HasColumnName("ACCOUNTGROUP");

                entity.Property(e => e.Accounttype)
                    .HasMaxLength(50)
                    .HasColumnName("ACCOUNTTYPE");

                entity.Property(e => e.Addrnumber)
                    .HasMaxLength(50)
                    .HasColumnName("ADDRNUMBER");

                entity.Property(e => e.ArchivingFlag)
                    .HasMaxLength(50)
                    .HasColumnName("ARCHIVING_FLAG");

                entity.Property(e => e.Attr4)
                    .HasMaxLength(50)
                    .HasColumnName("ATTR4");

                entity.Property(e => e.Billtorole)
                    .HasMaxLength(50)
                    .HasColumnName("BILLTOROLE");

                entity.Property(e => e.BpLastUpd)
                    .HasMaxLength(50)
                    .HasColumnName("BP_LAST_UPD");

                entity.Property(e => e.Bpid)
                    .HasMaxLength(50)
                    .HasColumnName("BPID");

                entity.Property(e => e.Buildingcode)
                    .HasMaxLength(50)
                    .HasColumnName("BUILDINGCODE");

                entity.Property(e => e.CentralBlock)
                    .HasMaxLength(50)
                    .HasColumnName("CENTRAL_BLOCK");

                entity.Property(e => e.Chusr)
                    .HasMaxLength(50)
                    .HasColumnName("CHUSR");

                entity.Property(e => e.City)
                    .HasMaxLength(50)
                    .HasColumnName("CITY");

                entity.Property(e => e.Commonid)
                    .HasMaxLength(50)
                    .HasColumnName("COMMONID");

                entity.Property(e => e.Country)
                    .HasMaxLength(50)
                    .HasColumnName("COUNTRY");

                entity.Property(e => e.Customersince)
                    .HasMaxLength(50)
                    .HasColumnName("CUSTOMERSINCE");

                entity.Property(e => e.Distributorrole)
                    .HasMaxLength(50)
                    .HasColumnName("DISTRIBUTORROLE");

                entity.Property(e => e.Domduns)
                    .HasMaxLength(50)
                    .HasColumnName("DOMDUNS");

                entity.Property(e => e.Duns)
                    .HasMaxLength(50)
                    .HasColumnName("DUNS");

                entity.Property(e => e.EdiId)
                    .HasMaxLength(50)
                    .HasColumnName("EDI_ID");

                entity.Property(e => e.EmpLogin)
                    .HasMaxLength(50)
                    .HasColumnName("EMP_LOGIN");

                entity.Property(e => e.EmpName)
                    .HasMaxLength(250)
                    .HasColumnName("EMP_NAME");

                entity.Property(e => e.EmpOrgCode)
                    .HasMaxLength(50)
                    .HasColumnName("EMP_ORG_CODE");

                entity.Property(e => e.EmpOrgUnit)
                    .HasMaxLength(50)
                    .HasColumnName("EMP_ORG_UNIT");

                entity.Property(e => e.EmpOrgUntiName)
                    .HasMaxLength(250)
                    .HasColumnName("EMP_ORG_UNTI_NAME");

                entity.Property(e => e.Endcustomerrole)
                    .HasMaxLength(50)
                    .HasColumnName("ENDCUSTOMERROLE");

                entity.Property(e => e.FaxNumber)
                    .HasMaxLength(50)
                    .HasColumnName("FAX_NUMBER");

                entity.Property(e => e.Floor)
                    .HasMaxLength(50)
                    .HasColumnName("FLOOR");

                entity.Property(e => e.Globalultduns)
                    .HasMaxLength(50)
                    .HasColumnName("GLOBALULTDUNS");

                entity.Property(e => e.Grouping)
                    .HasMaxLength(50)
                    .HasColumnName("GROUPING");

                entity.Property(e => e.Housenumber)
                    .HasMaxLength(50)
                    .HasColumnName("HOUSENUMBER");

                entity.Property(e => e.Housenumbersupplement)
                    .HasMaxLength(50)
                    .HasColumnName("HOUSENUMBERSUPPLEMENT");

                entity.Property(e => e.Iscustomer)
                    .HasMaxLength(50)
                    .HasColumnName("ISCUSTOMER");

                entity.Property(e => e.JuniperIndustryCode)
                    .HasMaxLength(50)
                    .HasColumnName("JUNIPER_INDUSTRY_CODE");

                entity.Property(e => e.Langu)
                    .HasMaxLength(50)
                    .HasColumnName("LANGU");

                entity.Property(e => e.Name1)
                    .HasMaxLength(250)
                    .HasColumnName("NAME1");

                entity.Property(e => e.Name2)
                    .HasMaxLength(250)
                    .HasColumnName("NAME2");

                entity.Property(e => e.Name3)
                    .HasMaxLength(250)
                    .HasColumnName("NAME3");

                entity.Property(e => e.Name4)
                    .HasMaxLength(250)
                    .HasColumnName("NAME4");

                entity.Property(e => e.Oracleid)
                    .HasMaxLength(50)
                    .HasColumnName("ORACLEID");

                entity.Property(e => e.PartnerAuthCode)
                    .HasMaxLength(50)
                    .HasColumnName("PARTNER_AUTH_CODE");

                entity.Property(e => e.Payerrole)
                    .HasMaxLength(50)
                    .HasColumnName("PAYERROLE");

                entity.Property(e => e.Postalcode)
                    .HasMaxLength(50)
                    .HasColumnName("POSTALCODE");

                entity.Property(e => e.PrimaryVarId)
                    .HasMaxLength(50)
                    .HasColumnName("PRIMARY_VAR_ID");

                entity.Property(e => e.Region)
                    .HasMaxLength(50)
                    .HasColumnName("REGION");

                entity.Property(e => e.Resellerrole)
                    .HasMaxLength(50)
                    .HasColumnName("RESELLERROLE");

                entity.Property(e => e.Roomnumber)
                    .HasMaxLength(50)
                    .HasColumnName("ROOMNUMBER");

                entity.Property(e => e.Salessystemflag)
                    .HasMaxLength(50)
                    .HasColumnName("SALESSYSTEMFLAG");

                entity.Property(e => e.Searchterm1)
                    .HasMaxLength(50)
                    .HasColumnName("SEARCHTERM1");

                entity.Property(e => e.Searchterm2)
                    .HasMaxLength(50)
                    .HasColumnName("SEARCHTERM2");

                entity.Property(e => e.SfdcId)
                    .HasMaxLength(50)
                    .HasColumnName("SFDC_ID");

                entity.Property(e => e.SfdcVictimId)
                    .HasMaxLength(50)
                    .HasColumnName("SFDC_VICTIM_ID");

                entity.Property(e => e.Shiptorole)
                    .HasMaxLength(50)
                    .HasColumnName("SHIPTOROLE");

                entity.Property(e => e.Siebelid)
                    .HasMaxLength(50)
                    .HasColumnName("SIEBELID");

                entity.Property(e => e.Soldtorole)
                    .HasMaxLength(50)
                    .HasColumnName("SOLDTOROLE");

                entity.Property(e => e.Source)
                    .HasMaxLength(50)
                    .HasColumnName("SOURCE");

                entity.Property(e => e.Street1)
                    .HasMaxLength(250)
                    .HasColumnName("STREET1");

                entity.Property(e => e.Street2)
                    .HasMaxLength(250)
                    .HasColumnName("STREET2");

                entity.Property(e => e.Street3)
                    .HasMaxLength(250)
                    .HasColumnName("STREET3");

                entity.Property(e => e.Street4)
                    .HasMaxLength(250)
                    .HasColumnName("STREET4");

                entity.Property(e => e.Street5)
                    .HasMaxLength(250)
                    .HasColumnName("STREET5");

                entity.Property(e => e.TelNumber)
                    .HasMaxLength(50)
                    .HasColumnName("TEL_NUMBER");

                entity.Property(e => e.TransZone)
                    .HasMaxLength(50)
                    .HasColumnName("TRANS_ZONE");

                entity.Property(e => e.UcmId)
                    .HasMaxLength(50)
                    .HasColumnName("UCM_ID");

                entity.Property(e => e.UriAddr)
                    .HasMaxLength(250)
                    .HasColumnName("URI_ADDR");

                entity.Property(e => e.VarId)
                    .HasMaxLength(50)
                    .HasColumnName("VAR_ID");

                entity.Property(e => e.Verifydate)
                    .HasMaxLength(50)
                    .HasColumnName("VERIFYDATE");
            });

            modelBuilder.Entity<RawPo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("raw_pos");

                entity.HasIndex(e => e.JuniperProductSeri, "pos_idx1");

                entity.Property(e => e.BillToPartyBasDistrictKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Bill-To Party - BAS  District (Key)");

                entity.Property(e => e.BillToPartyBasPostalCodeKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Bill-To Party - BAS  Postal Code (Key)");

                entity.Property(e => e.BillToPartyBasStreet2Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Bill-To Party - BAS   Street 2 (Key)");

                entity.Property(e => e.BillToPartyBasStreet3Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Bill-To Party - BAS   Street 3 (Key)");

                entity.Property(e => e.BillToPartyBasStreet4Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Bill-To Party - BAS   Street 4 (Key)");

                entity.Property(e => e.BillToPartyBasStreetKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Bill-To Party - BAS  Street (Key)");

                entity.Property(e => e.BillToPartyCountryKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Bill_To_Party___Country__Key_");

                entity.Property(e => e.BillToPartyCountryText)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Bill-To Party - Country (Text)");

                entity.Property(e => e.BillToPartyKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Bill-To Party - Key");

                entity.Property(e => e.BillToPartyLongText)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Bill-To Party - Long Text");

                entity.Property(e => e.BillToPartyRegionKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Bill-To Party - Region (Key)");

                entity.Property(e => e.ChannelPartnerKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Channel Partner - Key");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("CI Status");

                entity.Property(e => e.ClaimAmount)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Claim Amount");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Claim Status");

                entity.Property(e => e.DistributorBasPostalCodeKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Distributor - BAS  Postal Code (Key)");

                entity.Property(e => e.DistributorBasStreet2Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Distributor - BAS   Street 2 (Key)");

                entity.Property(e => e.DistributorBasStreet3Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Distributor - BAS   Street 3 (Key)");

                entity.Property(e => e.DistributorBasStreet4Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Distributor - BAS   Street 4 (Key)");

                entity.Property(e => e.DistributorBasStreetKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Distributor - BAS  Street (Key)");

                entity.Property(e => e.DistributorCountryText)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Distributor - Country (Text)");

                entity.Property(e => e.DistributorDistrictKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Distributor - District (Key)");

                entity.Property(e => e.DistributorKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Distributor - Key");

                entity.Property(e => e.DistributorLongText)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Distributor - Long Text");

                entity.Property(e => e.DistributorRegionKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Distributor - Region (Key)");

                entity.Property(e => e.DistributorSalesOrPdisslsonKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Distributor Sales Or (PDISSLSON) - Key");

                entity.Property(e => e.DocumentOrderNumbe)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Document Order numbe");

                entity.Property(e => e.EndCustomerBasDistrictKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("End Customer - BAS  District (Key)");

                entity.Property(e => e.EndCustomerBasPostalCodeKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("End Customer - BAS  Postal Code (Key)");

                entity.Property(e => e.EndCustomerBasStreet2Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("End Customer - BAS   Street 2 (Key)");

                entity.Property(e => e.EndCustomerBasStreet3Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("End Customer - BAS   Street 3 (Key)");

                entity.Property(e => e.EndCustomerBasStreet4Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("End Customer - BAS   Street 4 (Key)");

                entity.Property(e => e.EndCustomerBasStreetKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("End Customer - BAS  Street (Key)");

                entity.Property(e => e.EndCustomerCountryKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("End Customer - Country (Key)");

                entity.Property(e => e.EndCustomerCountryText)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("End Customer - Country (Text)");

                entity.Property(e => e.EndCustomerKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("End Customer - Key");

                entity.Property(e => e.EndCustomerLongText)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("End Customer - Long Text");

                entity.Property(e => e.EndCustomerPoNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("End Customer PO Number");

                entity.Property(e => e.EndCustomerRegionKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("End Customer - Region (Key)");

                entity.Property(e => e.ImportDate)
                    .HasColumnType("datetime")
                    .HasColumnName("import_date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ImportId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("import_id");

                entity.Property(e => e.ImportStatus)
                    .HasMaxLength(255)
                    .HasColumnName("import_status");

                entity.Property(e => e.ItemCreatedDate)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Item Created Date");

                entity.Property(e => e.ItemNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Item Number");

                entity.Property(e => e.JuniperPosValue)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Juniper POS Value");

                entity.Property(e => e.JuniperProductSeri)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Juniper Product Seri");

                entity.Property(e => e.ListPrice)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("list_price");

                entity.Property(e => e.Material)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.MaterialEccnKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Material - ECCN (Key)");

                entity.Property(e => e.MaterialHtsKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Material - HTS (Key)");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Material - Key");

                entity.Property(e => e.MaterialMaterialTypeKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Material - Material type (Key)");

                entity.Property(e => e.MaterialMaterialTypeText)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Material - Material type (Text)");

                entity.Property(e => e.MaterialProductCategoryText)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Material - Product Category (Text)");

                entity.Property(e => e.NetPrice)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("net_price");

                entity.Property(e => e.ReportedQuantity)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Reported Quantity");

                entity.Property(e => e.ResaleShipDate)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Resale ship date");

                entity.Property(e => e.Reseller1BasDistrictKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Reseller 1 - BAS  District (Key)");

                entity.Property(e => e.Reseller1BasPostalCodeKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Reseller 1 - BAS  Postal Code (Key)");

                entity.Property(e => e.Reseller1BasStreet2Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Reseller 1 - BAS   Street 2 (Key)");

                entity.Property(e => e.Reseller1BasStreet3Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Reseller 1 - BAS   Street 3 (Key)");

                entity.Property(e => e.Reseller1BasStreet4Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Reseller 1 - BAS   Street 4 (Key)");

                entity.Property(e => e.Reseller1BasStreetKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Reseller 1 - BAS  Street (Key)");

                entity.Property(e => e.Reseller1CountryText)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Reseller 1 - Country (Text)");

                entity.Property(e => e.Reseller1Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Reseller 1 - Key");

                entity.Property(e => e.Reseller1LongText)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Reseller 1 - Long Text");

                entity.Property(e => e.ResellerPoNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Reseller PO Number");

                entity.Property(e => e.SalesOrderNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Sales Order Number");

                entity.Property(e => e.SdContractNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("SD Contract Number");

                entity.Property(e => e.TransactionDate)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Transaction Date");

                entity.Property(e => e.TransactionQuantity)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Transaction Quantity");

                entity.Property(e => e.TransmissionNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Transmission Number");
            });

            modelBuilder.Entity<RawPo1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("raw_pos", "dev");

                entity.Property(e => e.BillToPartyBasDistrictKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Bill-To Party - BAS  District (Key)");

                entity.Property(e => e.BillToPartyBasPostalCodeKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Bill-To Party - BAS  Postal Code (Key)");

                entity.Property(e => e.BillToPartyBasStreet2Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Bill-To Party - BAS   Street 2 (Key)");

                entity.Property(e => e.BillToPartyBasStreet3Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Bill-To Party - BAS   Street 3 (Key)");

                entity.Property(e => e.BillToPartyBasStreet4Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Bill-To Party - BAS   Street 4 (Key)");

                entity.Property(e => e.BillToPartyBasStreetKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Bill-To Party - BAS  Street (Key)");

                entity.Property(e => e.BillToPartyCountryKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Bill_To_Party___Country__Key_");

                entity.Property(e => e.BillToPartyCountryText)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Bill-To Party - Country (Text)");

                entity.Property(e => e.BillToPartyKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Bill-To Party - Key");

                entity.Property(e => e.BillToPartyLongText)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Bill-To Party - Long Text");

                entity.Property(e => e.BillToPartyRegionKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Bill-To Party - Region (Key)");

                entity.Property(e => e.ChannelPartnerKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Channel Partner - Key");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("CI Status");

                entity.Property(e => e.ClaimAmount)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Claim Amount");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Claim Status");

                entity.Property(e => e.DistributorBasPostalCodeKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Distributor - BAS  Postal Code (Key)");

                entity.Property(e => e.DistributorBasStreet2Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Distributor - BAS   Street 2 (Key)");

                entity.Property(e => e.DistributorBasStreet3Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Distributor - BAS   Street 3 (Key)");

                entity.Property(e => e.DistributorBasStreet4Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Distributor - BAS   Street 4 (Key)");

                entity.Property(e => e.DistributorBasStreetKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Distributor - BAS  Street (Key)");

                entity.Property(e => e.DistributorCountryText)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Distributor - Country (Text)");

                entity.Property(e => e.DistributorDistrictKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Distributor - District (Key)");

                entity.Property(e => e.DistributorKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Distributor - Key");

                entity.Property(e => e.DistributorLongText)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Distributor - Long Text");

                entity.Property(e => e.DistributorRegionKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Distributor - Region (Key)");

                entity.Property(e => e.DistributorSalesOrPdisslsonKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Distributor Sales Or (PDISSLSON) - Key");

                entity.Property(e => e.DocumentOrderNumbe)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Document Order numbe");

                entity.Property(e => e.EndCustomerBasDistrictKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("End Customer - BAS  District (Key)");

                entity.Property(e => e.EndCustomerBasPostalCodeKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("End Customer - BAS  Postal Code (Key)");

                entity.Property(e => e.EndCustomerBasStreet2Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("End Customer - BAS   Street 2 (Key)");

                entity.Property(e => e.EndCustomerBasStreet3Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("End Customer - BAS   Street 3 (Key)");

                entity.Property(e => e.EndCustomerBasStreet4Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("End Customer - BAS   Street 4 (Key)");

                entity.Property(e => e.EndCustomerBasStreetKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("End Customer - BAS  Street (Key)");

                entity.Property(e => e.EndCustomerCountryKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("End Customer - Country (Key)");

                entity.Property(e => e.EndCustomerCountryText)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("End Customer - Country (Text)");

                entity.Property(e => e.EndCustomerKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("End Customer - Key");

                entity.Property(e => e.EndCustomerLongText)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("End Customer - Long Text");

                entity.Property(e => e.EndCustomerPoNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("End Customer PO Number");

                entity.Property(e => e.EndCustomerRegionKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("End Customer - Region (Key)");

                entity.Property(e => e.ImportDate)
                    .HasColumnType("datetime")
                    .HasColumnName("import_date");

                entity.Property(e => e.ImportId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("import_id");

                entity.Property(e => e.ImportStatus)
                    .HasMaxLength(255)
                    .HasColumnName("import_status");

                entity.Property(e => e.ItemCreatedDate)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Item Created Date");

                entity.Property(e => e.ItemNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Item Number");

                entity.Property(e => e.JuniperPosValue)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Juniper POS Value");

                entity.Property(e => e.JuniperProductSeri)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Juniper Product Seri");

                entity.Property(e => e.ListPrice)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("list_price");

                entity.Property(e => e.Material)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.MaterialEccnKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Material - ECCN (Key)");

                entity.Property(e => e.MaterialHtsKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Material - HTS (Key)");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Material - Key");

                entity.Property(e => e.MaterialMaterialTypeKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Material - Material type (Key)");

                entity.Property(e => e.MaterialMaterialTypeText)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Material - Material type (Text)");

                entity.Property(e => e.MaterialProductCategoryText)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Material - Product Category (Text)");

                entity.Property(e => e.NetPrice)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("net_price");

                entity.Property(e => e.ReportedQuantity)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Reported Quantity");

                entity.Property(e => e.ResaleShipDate)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Resale ship date");

                entity.Property(e => e.Reseller1BasDistrictKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Reseller 1 - BAS  District (Key)");

                entity.Property(e => e.Reseller1BasPostalCodeKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Reseller 1 - BAS  Postal Code (Key)");

                entity.Property(e => e.Reseller1BasStreet2Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Reseller 1 - BAS   Street 2 (Key)");

                entity.Property(e => e.Reseller1BasStreet3Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Reseller 1 - BAS   Street 3 (Key)");

                entity.Property(e => e.Reseller1BasStreet4Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Reseller 1 - BAS   Street 4 (Key)");

                entity.Property(e => e.Reseller1BasStreetKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Reseller 1 - BAS  Street (Key)");

                entity.Property(e => e.Reseller1CountryText)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Reseller 1 - Country (Text)");

                entity.Property(e => e.Reseller1Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Reseller 1 - Key");

                entity.Property(e => e.Reseller1LongText)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Reseller 1 - Long Text");

                entity.Property(e => e.ResellerPoNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Reseller PO Number");

                entity.Property(e => e.SalesOrderNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Sales Order Number");

                entity.Property(e => e.SdContractNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("SD Contract Number");

                entity.Property(e => e.TransactionDate)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Transaction Date");

                entity.Property(e => e.TransactionQuantity)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Transaction Quantity");

                entity.Property(e => e.TransmissionNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Transmission Number");
            });

            modelBuilder.Entity<RawRma>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("raw_rma");

                entity.HasIndex(e => e.ImportId, "raw_rma_ndx");

                entity.Property(e => e.AssociatedContactBasPostalCodeKey)
                    .HasMaxLength(250)
                    .HasColumnName("Associated_Contact___BAS__Postal_Code__Key_");

                entity.Property(e => e.AssociatedContactBasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Associated_Contact___BAS___Street_2__Key_");

                entity.Property(e => e.AssociatedContactBasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Associated_Contact___BAS___Street_3__Key_");

                entity.Property(e => e.AssociatedContactBasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Associated_Contact___BAS___Street_4__Key_");

                entity.Property(e => e.AssociatedContactBasStreetKey)
                    .HasMaxLength(250)
                    .HasColumnName("Associated_Contact___BAS__Street__Key_");

                entity.Property(e => e.AssociatedContactCity)
                    .HasMaxLength(250)
                    .HasColumnName("Associated_Contact___City");

                entity.Property(e => e.AssociatedContactCountryKey)
                    .HasMaxLength(250)
                    .HasColumnName("Associated_Contact___Country__Key_");

                entity.Property(e => e.AssociatedContactCountryText)
                    .HasMaxLength(250)
                    .HasColumnName("Associated_Contact___Country__Text_");

                entity.Property(e => e.AssociatedContactKey)
                    .HasMaxLength(250)
                    .HasColumnName("Associated_Contact___Key");

                entity.Property(e => e.AssociatedContactName)
                    .HasMaxLength(250)
                    .HasColumnName("Associated_Contact_Name");

                entity.Property(e => e.AssociatedContactRegionText)
                    .HasMaxLength(250)
                    .HasColumnName("Associated_Contact___Region__Text_");

                entity.Property(e => e.BillToPartyKey)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_to_Party___Key");

                entity.Property(e => e.ComplaintsNo)
                    .HasMaxLength(250)
                    .HasColumnName("Complaints_No_");

                entity.Property(e => e.Coo)
                    .HasMaxLength(250)
                    .HasColumnName("COO");

                entity.Property(e => e.CustomsDeclCreateDt)
                    .HasMaxLength(250)
                    .HasColumnName("Customs_Decl_Create_Dt");

                entity.Property(e => e.CustomsDeclarationNo)
                    .HasMaxLength(250)
                    .HasColumnName("Customs_Declaration_No");

                entity.Property(e => e.CustomsValuation)
                    .HasMaxLength(250)
                    .HasColumnName("Customs_Valuation");

                entity.Property(e => e.DefectProductId)
                    .HasMaxLength(250)
                    .HasColumnName("Defect___Product_ID");

                entity.Property(e => e.DefectProductIdEccnKey)
                    .HasMaxLength(250)
                    .HasColumnName("Defect___Product_ID___ECCN__Key_");

                entity.Property(e => e.DefectProductIdHtsKey)
                    .HasMaxLength(250)
                    .HasColumnName("Defect___Product_ID___HTS__Key_");

                entity.Property(e => e.DefectProductIdKey)
                    .HasMaxLength(250)
                    .HasColumnName("Defect___Product_ID___Key");

                entity.Property(e => e.DefectProductIdOverLengthPartNumKey)
                    .HasMaxLength(250)
                    .HasColumnName("Defect___Product_ID___Over_Length_Part_Num__Key_");

                entity.Property(e => e.DefectSerialNo)
                    .HasMaxLength(250)
                    .HasColumnName("Defect___Serial_No");

                entity.Property(e => e.DeliveryCreateDate)
                    .HasMaxLength(250)
                    .HasColumnName("Delivery_Create_Date");

                entity.Property(e => e.DeliveryNumber)
                    .HasMaxLength(250)
                    .HasColumnName("Delivery_Number");

                entity.Property(e => e.EndCustomerBasPostalCodeKey)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___BAS__Postal_Code__Key_");

                entity.Property(e => e.EndCustomerBasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___BAS___Street_2__Key_");

                entity.Property(e => e.EndCustomerBasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___BAS___Street_3__Key_");

                entity.Property(e => e.EndCustomerBasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___BAS___Street_4__Key_");

                entity.Property(e => e.EndCustomerBasStreetKey)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___BAS__Street__Key_");

                entity.Property(e => e.EndCustomerCity)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___City");

                entity.Property(e => e.EndCustomerCountryKey)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___Country__Key_");

                entity.Property(e => e.EndCustomerCountryText)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___Country__Text_");

                entity.Property(e => e.EndCustomerKey)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___Key");

                entity.Property(e => e.EndCustomerName)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___Name");

                entity.Property(e => e.EndCustomerRegionText)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___Region__Text_");

                entity.Property(e => e.ExporterAddr1Key)
                    .HasMaxLength(250)
                    .HasColumnName("Exporter_Addr1___Key");

                entity.Property(e => e.ExporterAddr2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Exporter_Addr2___Key");

                entity.Property(e => e.ExporterCity)
                    .HasMaxLength(250)
                    .HasColumnName("Exporter_City");

                entity.Property(e => e.ExporterCountry)
                    .HasMaxLength(250)
                    .HasColumnName("Exporter_Country");

                entity.Property(e => e.ExporterKey)
                    .HasMaxLength(250)
                    .HasColumnName("Exporter___Key");

                entity.Property(e => e.ExtLicence)
                    .HasMaxLength(250)
                    .HasColumnName("Ext_Licence");

                entity.Property(e => e.GoodsSupplier)
                    .HasMaxLength(250)
                    .HasColumnName("Goods_Supplier");

                entity.Property(e => e.GoodsSupplierKey)
                    .HasMaxLength(250)
                    .HasColumnName("Goods_Supplier___Key");

                entity.Property(e => e.GtsBillToAddr1Key)
                    .HasMaxLength(250)
                    .HasColumnName("GTS_BillTo_Addr1___Key");

                entity.Property(e => e.GtsBillToAddr2Key)
                    .HasMaxLength(250)
                    .HasColumnName("GTS_BillTo_Addr2___Key");

                entity.Property(e => e.GtsBillToAddressKey)
                    .HasMaxLength(250)
                    .HasColumnName("GTS_Bill_to_Address___Key");

                entity.Property(e => e.GtsBillToCity)
                    .HasMaxLength(250)
                    .HasColumnName("GTS_BillTo_City");

                entity.Property(e => e.GtsBillToCountry)
                    .HasMaxLength(250)
                    .HasColumnName("GTS_BillTo_Country");

                entity.Property(e => e.GtsBillToKey)
                    .HasMaxLength(250)
                    .HasColumnName("GTS_BillTo___Key");

                entity.Property(e => e.GtsExporterAddressKey)
                    .HasMaxLength(250)
                    .HasColumnName("GTS_Exporter_Address___Key");

                entity.Property(e => e.GtsShipToAddr1Key)
                    .HasMaxLength(250)
                    .HasColumnName("GTS_ShipTo_Addr1___Key");

                entity.Property(e => e.GtsShipToAddr2Key)
                    .HasMaxLength(250)
                    .HasColumnName("GTS_ShipTo_Addr2___Key");

                entity.Property(e => e.GtsShipToAddressKey)
                    .HasMaxLength(250)
                    .HasColumnName("GTS_Ship_to_Address___Key");

                entity.Property(e => e.GtsShipToCity)
                    .HasMaxLength(250)
                    .HasColumnName("GTS_ShipTo_City");

                entity.Property(e => e.GtsShipToCountry)
                    .HasMaxLength(250)
                    .HasColumnName("GTS_ShipTo_Country");

                entity.Property(e => e.GtsShipToKey)
                    .HasMaxLength(250)
                    .HasColumnName("GTS_ShipTo___Key");

                entity.Property(e => e.HeaderStatus)
                    .HasMaxLength(250)
                    .HasColumnName("Header_Status");

                entity.Property(e => e.ImportDate)
                    .HasColumnType("datetime")
                    .HasColumnName("import_date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ImportId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("import_id");

                entity.Property(e => e.ImportStatus)
                    .HasMaxLength(255)
                    .HasColumnName("import_status");

                entity.Property(e => e.InstalledAtBasPostalCodeKey)
                    .HasMaxLength(250)
                    .HasColumnName("Installed_At___BAS__Postal_Code__Key_");

                entity.Property(e => e.InstalledAtBasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Installed_At___BAS___Street_2__Key_");

                entity.Property(e => e.InstalledAtBasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Installed_At___BAS___Street_3__Key_");

                entity.Property(e => e.InstalledAtBasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Installed_At___BAS___Street_4__Key_");

                entity.Property(e => e.InstalledAtBasStreetKey)
                    .HasMaxLength(250)
                    .HasColumnName("Installed_At___BAS__Street__Key_");

                entity.Property(e => e.InstalledAtCity)
                    .HasMaxLength(250)
                    .HasColumnName("Installed_At___City");

                entity.Property(e => e.InstalledAtCountryKey)
                    .HasMaxLength(250)
                    .HasColumnName("Installed_At___Country__Key_");

                entity.Property(e => e.InstalledAtCountryText)
                    .HasMaxLength(250)
                    .HasColumnName("Installed_At___Country__Text_");

                entity.Property(e => e.InstalledAtKey)
                    .HasMaxLength(250)
                    .HasColumnName("Installed_At___Key");

                entity.Property(e => e.InstalledAtName)
                    .HasMaxLength(250)
                    .HasColumnName("Installed_At___Name");

                entity.Property(e => e.InstalledAtRegionText)
                    .HasMaxLength(250)
                    .HasColumnName("Installed_At___Region__Text_");

                entity.Property(e => e.ItemCreateDate)
                    .HasMaxLength(250)
                    .HasColumnName("Item_Create_Date");

                entity.Property(e => e.ItemStatus)
                    .HasMaxLength(250)
                    .HasColumnName("Item_Status");

                entity.Property(e => e.LegalRegulation)
                    .HasMaxLength(250)
                    .HasColumnName("Legal_Regulation");

                entity.Property(e => e.LicenseAppliedDate)
                    .HasMaxLength(250)
                    .HasColumnName("License_Applied_Date");

                entity.Property(e => e.LicenseNumber)
                    .HasMaxLength(250)
                    .HasColumnName("License_Number");

                entity.Property(e => e.LicenseType)
                    .HasMaxLength(250)
                    .HasColumnName("License_Type");

                entity.Property(e => e.LicenseValidFrom)
                    .HasMaxLength(250)
                    .HasColumnName("License_Valid_From");

                entity.Property(e => e.LicenseValidTo)
                    .HasMaxLength(250)
                    .HasColumnName("License_Valid_To");

                entity.Property(e => e.PlantKey)
                    .HasMaxLength(250)
                    .HasColumnName("Plant___Key");

                entity.Property(e => e.PlantText)
                    .HasMaxLength(250)
                    .HasColumnName("Plant___Text");

                entity.Property(e => e.ReplaceEccn)
                    .HasMaxLength(250)
                    .HasColumnName("Replace___ECCN");

                entity.Property(e => e.ReplaceProductId0material)
                    .HasMaxLength(250)
                    .HasColumnName("Replace___Product_ID__0MATERIAL_");

                entity.Property(e => e.ReplaceProductId0materialHtsKey)
                    .HasMaxLength(250)
                    .HasColumnName("Replace___Product_ID__0MATERIAL____HTS__Key_");

                entity.Property(e => e.ReplaceProductId0materialKey)
                    .HasMaxLength(250)
                    .HasColumnName("Replace___Product_ID__0MATERIAL____Key");

                entity.Property(e => e.ReplaceProductId0materialOverLengthPartNumKey)
                    .HasMaxLength(250)
                    .HasColumnName("Replace___Product_ID__0MATERIAL____Over_Length_Part_Num__Key_");

                entity.Property(e => e.ReplaceSerialNo)
                    .HasMaxLength(250)
                    .HasColumnName("Replace___Serial_No");

                entity.Property(e => e.RmaCreateDate)
                    .HasMaxLength(250)
                    .HasColumnName("RMA_Create_Date");

                entity.Property(e => e.RmaItemNumber0crmNumint)
                    .HasMaxLength(250)
                    .HasColumnName("RMA_Item_Number__0CRM_NUMINT_");

                entity.Property(e => e.RmaItemType)
                    .HasMaxLength(250)
                    .HasColumnName("RMA_Item_Type");

                entity.Property(e => e.RmaItemTypeKey)
                    .HasMaxLength(250)
                    .HasColumnName("RMA_Item_Type___Key");

                entity.Property(e => e.ServiceReqNo)
                    .HasMaxLength(250)
                    .HasColumnName("Service_Req_No");

                entity.Property(e => e.ShipDate)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_Date");

                entity.Property(e => e.ShipToAddr1Key)
                    .HasMaxLength(250)
                    .HasColumnName("ShipTo_Addr1___Key");

                entity.Property(e => e.ShipToAddr2Key)
                    .HasMaxLength(250)
                    .HasColumnName("ShipTo_Addr2___Key");

                entity.Property(e => e.ShipToCityKey)
                    .HasMaxLength(250)
                    .HasColumnName("ShipTo_City___Key");

                entity.Property(e => e.ShipToPartyKey)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_to_Party___Key");

                entity.Property(e => e.ShipToSiteCountryKey)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_to_Site_Country___Key");

                entity.Property(e => e.ShipToSiteKey)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Site___Key");

                entity.Property(e => e.ShipToSiteName)
                    .HasMaxLength(250)
                    .HasColumnName("ShipTo_Site___Name");

                entity.Property(e => e.ShipToSitePostalCodeKey)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_to_Site_Postal_Code___Key");

                entity.Property(e => e.ShipToSiteRegion)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_to_Site_Region");

                entity.Property(e => e.ShipToSiteRegionKey)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_to_Site_Region___Key");

                entity.Property(e => e.StorageLocationKey)
                    .HasMaxLength(250)
                    .HasColumnName("Storage_Location___Key");

                entity.Property(e => e.StorageLocationText)
                    .HasMaxLength(250)
                    .HasColumnName("Storage_location___Text");

                entity.Property(e => e.TrackingNo)
                    .HasMaxLength(250)
                    .HasColumnName("Tracking_No");

                entity.Property(e => e.ValuationType)
                    .HasMaxLength(250)
                    .HasColumnName("Valuation_Type");

                entity.Property(e => e.Vendor).HasMaxLength(250);

                entity.Property(e => e.VendorKey)
                    .HasMaxLength(250)
                    .HasColumnName("Vendor___Key");
            });

            modelBuilder.Entity<RawRma1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("raw_rmas", "dev");

                entity.Property(e => e.AssociatedContactBasPostalCodeKey)
                    .HasMaxLength(250)
                    .HasColumnName("Associated_Contact___BAS__Postal_Code__Key_");

                entity.Property(e => e.AssociatedContactBasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Associated_Contact___BAS___Street_2__Key_");

                entity.Property(e => e.AssociatedContactBasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Associated_Contact___BAS___Street_3__Key_");

                entity.Property(e => e.AssociatedContactBasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Associated_Contact___BAS___Street_4__Key_");

                entity.Property(e => e.AssociatedContactBasStreetKey)
                    .HasMaxLength(250)
                    .HasColumnName("Associated_Contact___BAS__Street__Key_");

                entity.Property(e => e.AssociatedContactCity)
                    .HasMaxLength(250)
                    .HasColumnName("Associated_Contact___City");

                entity.Property(e => e.AssociatedContactCountryKey)
                    .HasMaxLength(250)
                    .HasColumnName("Associated_Contact___Country__Key_");

                entity.Property(e => e.AssociatedContactCountryText)
                    .HasMaxLength(250)
                    .HasColumnName("Associated_Contact___Country__Text_");

                entity.Property(e => e.AssociatedContactKey)
                    .HasMaxLength(250)
                    .HasColumnName("Associated_Contact___Key");

                entity.Property(e => e.AssociatedContactName)
                    .HasMaxLength(250)
                    .HasColumnName("Associated_Contact_Name");

                entity.Property(e => e.AssociatedContactRegionText)
                    .HasMaxLength(250)
                    .HasColumnName("Associated_Contact___Region__Text_");

                entity.Property(e => e.BillToPartyKey)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_to_Party___Key");

                entity.Property(e => e.ComplaintsNo)
                    .HasMaxLength(250)
                    .HasColumnName("Complaints_No_");

                entity.Property(e => e.Coo)
                    .HasMaxLength(250)
                    .HasColumnName("COO");

                entity.Property(e => e.CustomsDeclCreateDt)
                    .HasMaxLength(250)
                    .HasColumnName("Customs_Decl_Create_Dt");

                entity.Property(e => e.CustomsDeclarationNo)
                    .HasMaxLength(250)
                    .HasColumnName("Customs_Declaration_No");

                entity.Property(e => e.CustomsValuation)
                    .HasMaxLength(250)
                    .HasColumnName("Customs_Valuation");

                entity.Property(e => e.DefectProductId)
                    .HasMaxLength(250)
                    .HasColumnName("Defect___Product_ID");

                entity.Property(e => e.DefectProductIdEccnKey)
                    .HasMaxLength(250)
                    .HasColumnName("Defect___Product_ID___ECCN__Key_");

                entity.Property(e => e.DefectProductIdHtsKey)
                    .HasMaxLength(250)
                    .HasColumnName("Defect___Product_ID___HTS__Key_");

                entity.Property(e => e.DefectProductIdKey)
                    .HasMaxLength(250)
                    .HasColumnName("Defect___Product_ID___Key");

                entity.Property(e => e.DefectProductIdOverLengthPartNumKey)
                    .HasMaxLength(250)
                    .HasColumnName("Defect___Product_ID___Over_Length_Part_Num__Key_");

                entity.Property(e => e.DefectSerialNo)
                    .HasMaxLength(250)
                    .HasColumnName("Defect___Serial_No");

                entity.Property(e => e.DeliveryCreateDate)
                    .HasMaxLength(250)
                    .HasColumnName("Delivery_Create_Date");

                entity.Property(e => e.DeliveryNumber)
                    .HasMaxLength(250)
                    .HasColumnName("Delivery_Number");

                entity.Property(e => e.EndCustomerBasPostalCodeKey)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___BAS__Postal_Code__Key_");

                entity.Property(e => e.EndCustomerBasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___BAS___Street_2__Key_");

                entity.Property(e => e.EndCustomerBasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___BAS___Street_3__Key_");

                entity.Property(e => e.EndCustomerBasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___BAS___Street_4__Key_");

                entity.Property(e => e.EndCustomerBasStreetKey)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___BAS__Street__Key_");

                entity.Property(e => e.EndCustomerCity)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___City");

                entity.Property(e => e.EndCustomerCountryKey)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___Country__Key_");

                entity.Property(e => e.EndCustomerCountryText)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___Country__Text_");

                entity.Property(e => e.EndCustomerKey)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___Key");

                entity.Property(e => e.EndCustomerName)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___Name");

                entity.Property(e => e.EndCustomerRegionText)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___Region__Text_");

                entity.Property(e => e.ExporterAddr1Key)
                    .HasMaxLength(250)
                    .HasColumnName("Exporter_Addr1___Key");

                entity.Property(e => e.ExporterAddr2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Exporter_Addr2___Key");

                entity.Property(e => e.ExporterCity)
                    .HasMaxLength(250)
                    .HasColumnName("Exporter_City");

                entity.Property(e => e.ExporterCountry)
                    .HasMaxLength(250)
                    .HasColumnName("Exporter_Country");

                entity.Property(e => e.ExporterKey)
                    .HasMaxLength(250)
                    .HasColumnName("Exporter___Key");

                entity.Property(e => e.ExtLicence)
                    .HasMaxLength(250)
                    .HasColumnName("Ext_Licence");

                entity.Property(e => e.GoodsSupplier)
                    .HasMaxLength(250)
                    .HasColumnName("Goods_Supplier");

                entity.Property(e => e.GoodsSupplierKey)
                    .HasMaxLength(250)
                    .HasColumnName("Goods_Supplier___Key");

                entity.Property(e => e.GtsBillToAddr1Key)
                    .HasMaxLength(250)
                    .HasColumnName("GTS_BillTo_Addr1___Key");

                entity.Property(e => e.GtsBillToAddr2Key)
                    .HasMaxLength(250)
                    .HasColumnName("GTS_BillTo_Addr2___Key");

                entity.Property(e => e.GtsBillToAddressKey)
                    .HasMaxLength(250)
                    .HasColumnName("GTS_Bill_to_Address___Key");

                entity.Property(e => e.GtsBillToCity)
                    .HasMaxLength(250)
                    .HasColumnName("GTS_BillTo_City");

                entity.Property(e => e.GtsBillToCountry)
                    .HasMaxLength(250)
                    .HasColumnName("GTS_BillTo_Country");

                entity.Property(e => e.GtsBillToKey)
                    .HasMaxLength(250)
                    .HasColumnName("GTS_BillTo___Key");

                entity.Property(e => e.GtsExporterAddressKey)
                    .HasMaxLength(250)
                    .HasColumnName("GTS_Exporter_Address___Key");

                entity.Property(e => e.GtsShipToAddr1Key)
                    .HasMaxLength(250)
                    .HasColumnName("GTS_ShipTo_Addr1___Key");

                entity.Property(e => e.GtsShipToAddr2Key)
                    .HasMaxLength(250)
                    .HasColumnName("GTS_ShipTo_Addr2___Key");

                entity.Property(e => e.GtsShipToAddressKey)
                    .HasMaxLength(250)
                    .HasColumnName("GTS_Ship_to_Address___Key");

                entity.Property(e => e.GtsShipToCity)
                    .HasMaxLength(250)
                    .HasColumnName("GTS_ShipTo_City");

                entity.Property(e => e.GtsShipToCountry)
                    .HasMaxLength(250)
                    .HasColumnName("GTS_ShipTo_Country");

                entity.Property(e => e.GtsShipToKey)
                    .HasMaxLength(250)
                    .HasColumnName("GTS_ShipTo___Key");

                entity.Property(e => e.HeaderStatus)
                    .HasMaxLength(250)
                    .HasColumnName("Header_Status");

                entity.Property(e => e.InstalledAtBasPostalCodeKey)
                    .HasMaxLength(250)
                    .HasColumnName("Installed_At___BAS__Postal_Code__Key_");

                entity.Property(e => e.InstalledAtBasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Installed_At___BAS___Street_2__Key_");

                entity.Property(e => e.InstalledAtBasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Installed_At___BAS___Street_3__Key_");

                entity.Property(e => e.InstalledAtBasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Installed_At___BAS___Street_4__Key_");

                entity.Property(e => e.InstalledAtBasStreetKey)
                    .HasMaxLength(250)
                    .HasColumnName("Installed_At___BAS__Street__Key_");

                entity.Property(e => e.InstalledAtCity)
                    .HasMaxLength(250)
                    .HasColumnName("Installed_At___City");

                entity.Property(e => e.InstalledAtCountryKey)
                    .HasMaxLength(250)
                    .HasColumnName("Installed_At___Country__Key_");

                entity.Property(e => e.InstalledAtCountryText)
                    .HasMaxLength(250)
                    .HasColumnName("Installed_At___Country__Text_");

                entity.Property(e => e.InstalledAtKey)
                    .HasMaxLength(250)
                    .HasColumnName("Installed_At___Key");

                entity.Property(e => e.InstalledAtName)
                    .HasMaxLength(250)
                    .HasColumnName("Installed_At___Name");

                entity.Property(e => e.InstalledAtRegionText)
                    .HasMaxLength(250)
                    .HasColumnName("Installed_At___Region__Text_");

                entity.Property(e => e.ItemCreateDate)
                    .HasMaxLength(250)
                    .HasColumnName("Item_Create_Date");

                entity.Property(e => e.ItemStatus)
                    .HasMaxLength(250)
                    .HasColumnName("Item_Status");

                entity.Property(e => e.LegalRegulation)
                    .HasMaxLength(250)
                    .HasColumnName("Legal_Regulation");

                entity.Property(e => e.LicenseAppliedDate)
                    .HasMaxLength(250)
                    .HasColumnName("License_Applied_Date");

                entity.Property(e => e.LicenseNumber)
                    .HasMaxLength(250)
                    .HasColumnName("License_Number");

                entity.Property(e => e.LicenseType)
                    .HasMaxLength(250)
                    .HasColumnName("License_Type");

                entity.Property(e => e.LicenseValidFrom)
                    .HasMaxLength(250)
                    .HasColumnName("License_Valid_From");

                entity.Property(e => e.LicenseValidTo)
                    .HasMaxLength(250)
                    .HasColumnName("License_Valid_To");

                entity.Property(e => e.PlantKey)
                    .HasMaxLength(250)
                    .HasColumnName("Plant___Key");

                entity.Property(e => e.PlantText)
                    .HasMaxLength(250)
                    .HasColumnName("Plant___Text");

                entity.Property(e => e.ReplaceEccn)
                    .HasMaxLength(250)
                    .HasColumnName("Replace___ECCN");

                entity.Property(e => e.ReplaceProductId0material)
                    .HasMaxLength(250)
                    .HasColumnName("Replace___Product_ID__0MATERIAL_");

                entity.Property(e => e.ReplaceProductId0materialHtsKey)
                    .HasMaxLength(250)
                    .HasColumnName("Replace___Product_ID__0MATERIAL____HTS__Key_");

                entity.Property(e => e.ReplaceProductId0materialKey)
                    .HasMaxLength(250)
                    .HasColumnName("Replace___Product_ID__0MATERIAL____Key");

                entity.Property(e => e.ReplaceProductId0materialOverLengthPartNumKey)
                    .HasMaxLength(250)
                    .HasColumnName("Replace___Product_ID__0MATERIAL____Over_Length_Part_Num__Key_");

                entity.Property(e => e.ReplaceSerialNo)
                    .HasMaxLength(250)
                    .HasColumnName("Replace___Serial_No");

                entity.Property(e => e.RmaCreateDate)
                    .HasMaxLength(250)
                    .HasColumnName("RMA_Create_Date");

                entity.Property(e => e.RmaItemNumber0crmNumint)
                    .HasMaxLength(250)
                    .HasColumnName("RMA_Item_Number__0CRM_NUMINT_");

                entity.Property(e => e.RmaItemType)
                    .HasMaxLength(250)
                    .HasColumnName("RMA_Item_Type");

                entity.Property(e => e.RmaItemTypeKey)
                    .HasMaxLength(250)
                    .HasColumnName("RMA_Item_Type___Key");

                entity.Property(e => e.ServiceReqNo)
                    .HasMaxLength(250)
                    .HasColumnName("Service_Req_No");

                entity.Property(e => e.ShipDate)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_Date");

                entity.Property(e => e.ShipToAddr1Key)
                    .HasMaxLength(250)
                    .HasColumnName("ShipTo_Addr1___Key");

                entity.Property(e => e.ShipToAddr2Key)
                    .HasMaxLength(250)
                    .HasColumnName("ShipTo_Addr2___Key");

                entity.Property(e => e.ShipToCityKey)
                    .HasMaxLength(250)
                    .HasColumnName("ShipTo_City___Key");

                entity.Property(e => e.ShipToPartyKey)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_to_Party___Key");

                entity.Property(e => e.ShipToSiteCountryKey)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_to_Site_Country___Key");

                entity.Property(e => e.ShipToSiteKey)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Site___Key");

                entity.Property(e => e.ShipToSiteName)
                    .HasMaxLength(250)
                    .HasColumnName("ShipTo_Site___Name");

                entity.Property(e => e.ShipToSitePostalCodeKey)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_to_Site_Postal_Code___Key");

                entity.Property(e => e.ShipToSiteRegion)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_to_Site_Region");

                entity.Property(e => e.ShipToSiteRegionKey)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_to_Site_Region___Key");

                entity.Property(e => e.StorageLocationKey)
                    .HasMaxLength(250)
                    .HasColumnName("Storage_Location___Key");

                entity.Property(e => e.StorageLocationText)
                    .HasMaxLength(250)
                    .HasColumnName("Storage_location___Text");

                entity.Property(e => e.TrackingNo)
                    .HasMaxLength(250)
                    .HasColumnName("Tracking_No");

                entity.Property(e => e.ValuationType)
                    .HasMaxLength(250)
                    .HasColumnName("Valuation_Type");

                entity.Property(e => e.Vendor).HasMaxLength(250);

                entity.Property(e => e.VendorKey)
                    .HasMaxLength(250)
                    .HasColumnName("Vendor___Key");
            });

            modelBuilder.Entity<RawServiceContract>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("raw_service_contract");

                entity.HasIndex(e => e.ImportId, "raw_svc_contract_ndx");

                entity.HasIndex(e => e.SerialNumber, "service_contract_idx1");

                entity.Property(e => e.BillToPartyBasDistrictKey).HasColumnName("Bill_To_Party___BAS__District__Key_");

                entity.Property(e => e.BillToPartyCountryText).HasColumnName("Bill_To_Party___Country__Text_");

                entity.Property(e => e.BillToPartyKey).HasColumnName("Bill_To_Party___Key");

                entity.Property(e => e.BillToPartyLongText).HasColumnName("Bill_To_Party___Long_Text");

                entity.Property(e => e.ContractCreationDate).HasColumnName("Contract_Creation_Date");

                entity.Property(e => e.ContractItemNo).HasColumnName("Contract_item_No");

                entity.Property(e => e.ContractLineItemStatusDescription).HasColumnName("Contract_Line_Item_Status_Description");

                entity.Property(e => e.ContractNumber).HasColumnName("Contract_Number");

                entity.Property(e => e.ContractStatusText).HasColumnName("Contract_Status___Text");

                entity.Property(e => e.DiscountDoNotUse).HasColumnName("Discount___Do_Not_Use");

                entity.Property(e => e.EndCustomer).HasColumnName("End_Customer");

                entity.Property(e => e.EndCustomerBasDistrictKey).HasColumnName("End_Customer___BAS__District__Key_");

                entity.Property(e => e.EndCustomerCountryKey).HasColumnName("End_Customer___Country__Key_");

                entity.Property(e => e.EndCustomerDescription).HasColumnName("End_Customer_Description");

                entity.Property(e => e.ExtendedListPriceDoNotUse).HasColumnName("Extended_List_Price___Do_Not_Use");

                entity.Property(e => e.IObjectId).HasColumnName("I_Object_ID");

                entity.Property(e => e.ImportDate)
                    .HasColumnType("datetime")
                    .HasColumnName("import_date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ImportId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("import_id");

                entity.Property(e => e.ImportStatus)
                    .HasMaxLength(255)
                    .HasColumnName("import_status");

                entity.Property(e => e.InstalledAtBasDistrictText).HasColumnName("Installed_At___BAS__District__Text_");

                entity.Property(e => e.InstalledAtCountryKey).HasColumnName("Installed_At_Country___Key");

                entity.Property(e => e.InstalledAtKey).HasColumnName("Installed_At___Key");

                entity.Property(e => e.InstalledAtLongText).HasColumnName("Installed_At___Long_Text");

                entity.Property(e => e.MaterialEccnKey).HasColumnName("Material___ECCN__Key_");

                entity.Property(e => e.MaterialHtsKey).HasColumnName("Material___HTS__Key_");

                entity.Property(e => e.MaterialKey).HasColumnName("Material___Key");

                entity.Property(e => e.MaterialText).HasColumnName("Material___Text");

                entity.Property(e => e.NetValue).HasColumnName("Net_Value");

                entity.Property(e => e.PayerBasDistrictKey).HasColumnName("Payer___BAS__District__Key_");

                entity.Property(e => e.PayerCountryText).HasColumnName("Payer___Country__Text_");

                entity.Property(e => e.PayerKey).HasColumnName("Payer___Key");

                entity.Property(e => e.PayerLongText).HasColumnName("Payer___Long_Text");

                entity.Property(e => e.ProductFamily).HasColumnName("Product_Family");

                entity.Property(e => e.ProductLine).HasColumnName("Product_Line");

                entity.Property(e => e.SalesOrderAlpha).HasColumnName("Sales_Order_ALPHA");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Serial_Number");

                entity.Property(e => e.ServiceContractType).HasColumnName("Service_Contract_Type");

                entity.Property(e => e.ServiceEndDate).HasColumnName("Service_End_date");

                entity.Property(e => e.ServiceMaterial).HasColumnName("Service_Material");

                entity.Property(e => e.ServiceMaterialKey).HasColumnName("Service_Material___Key");

                entity.Property(e => e.ServiceMaterialProductLineText).HasColumnName("Service_Material___Product_Line__Text_");

                entity.Property(e => e.ServiceStartDate).HasColumnName("Service_Start_Date");
            });

            modelBuilder.Entity<RawServiceContractTmp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("raw_service_contract_tmp", "dev");

                entity.Property(e => e.BillToPartyBasDistrictKey).HasColumnName("Bill_To_Party___BAS__District__Key_");

                entity.Property(e => e.BillToPartyCountryText).HasColumnName("Bill_To_Party___Country__Text_");

                entity.Property(e => e.BillToPartyKey).HasColumnName("Bill_To_Party___Key");

                entity.Property(e => e.BillToPartyLongText).HasColumnName("Bill_To_Party___Long_Text");

                entity.Property(e => e.ContractCreationDate).HasColumnName("Contract_Creation_Date");

                entity.Property(e => e.ContractItemNo).HasColumnName("Contract_item_No");

                entity.Property(e => e.ContractLineItemStatusDescription).HasColumnName("Contract_Line_Item_Status_Description");

                entity.Property(e => e.ContractNumber).HasColumnName("Contract_Number");

                entity.Property(e => e.ContractStatusText).HasColumnName("Contract_Status___Text");

                entity.Property(e => e.DiscountDoNotUse).HasColumnName("Discount___Do_Not_Use");

                entity.Property(e => e.EndCustomer).HasColumnName("End_Customer");

                entity.Property(e => e.EndCustomerBasDistrictKey).HasColumnName("End_Customer___BAS__District__Key_");

                entity.Property(e => e.EndCustomerCountryKey).HasColumnName("End_Customer___Country__Key_");

                entity.Property(e => e.EndCustomerDescription).HasColumnName("End_Customer_Description");

                entity.Property(e => e.ExtendedListPriceDoNotUse).HasColumnName("Extended_List_Price___Do_Not_Use");

                entity.Property(e => e.IObjectId).HasColumnName("I_Object_ID");

                entity.Property(e => e.ImportDate)
                    .HasColumnType("datetime")
                    .HasColumnName("import_date");

                entity.Property(e => e.ImportId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("import_id");

                entity.Property(e => e.ImportStatus)
                    .HasMaxLength(255)
                    .HasColumnName("import_status");

                entity.Property(e => e.InstalledAtBasDistrictText).HasColumnName("Installed_At___BAS__District__Text_");

                entity.Property(e => e.InstalledAtCountryKey).HasColumnName("Installed_At_Country___Key");

                entity.Property(e => e.InstalledAtKey).HasColumnName("Installed_At___Key");

                entity.Property(e => e.InstalledAtLongText).HasColumnName("Installed_At___Long_Text");

                entity.Property(e => e.MaterialEccnKey).HasColumnName("Material___ECCN__Key_");

                entity.Property(e => e.MaterialHtsKey).HasColumnName("Material___HTS__Key_");

                entity.Property(e => e.MaterialKey).HasColumnName("Material___Key");

                entity.Property(e => e.MaterialText).HasColumnName("Material___Text");

                entity.Property(e => e.NetValue).HasColumnName("Net_Value");

                entity.Property(e => e.PayerBasDistrictKey).HasColumnName("Payer___BAS__District__Key_");

                entity.Property(e => e.PayerCountryText).HasColumnName("Payer___Country__Text_");

                entity.Property(e => e.PayerKey).HasColumnName("Payer___Key");

                entity.Property(e => e.PayerLongText).HasColumnName("Payer___Long_Text");

                entity.Property(e => e.ProductFamily).HasColumnName("Product_Family");

                entity.Property(e => e.ProductLine).HasColumnName("Product_Line");

                entity.Property(e => e.SalesOrderAlpha).HasColumnName("Sales_Order_ALPHA");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Serial_Number");

                entity.Property(e => e.ServiceContractType).HasColumnName("Service_Contract_Type");

                entity.Property(e => e.ServiceEndDate).HasColumnName("Service_End_date");

                entity.Property(e => e.ServiceMaterial).HasColumnName("Service_Material");

                entity.Property(e => e.ServiceMaterialKey).HasColumnName("Service_Material___Key");

                entity.Property(e => e.ServiceMaterialProductLineText).HasColumnName("Service_Material___Product_Line__Text_");

                entity.Property(e => e.ServiceStartDate).HasColumnName("Service_Start_Date");
            });

            modelBuilder.Entity<RawShipmentHdr>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("raw_shipment_hdr");

                entity.Property(e => e.BillToParty)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Bill To Party");

                entity.Property(e => e.BillToPartyBasCityDistrictKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Bill To Party - BAS  City District (Key)");

                entity.Property(e => e.BillToPartyBasStreet2Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Bill To Party - BAS   Street 2 (Key)");

                entity.Property(e => e.BillToPartyBasStreet3Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Bill To Party - BAS   Street 3 (Key)");

                entity.Property(e => e.BillToPartyBasStreet4Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Bill To Party - BAS   Street 4 (Key)");

                entity.Property(e => e.BillToPartyBasStreet5Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Bill To Party - BAS  Street 5 (Key)");

                entity.Property(e => e.BillToPartyCountry)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Bill to Party Country");

                entity.Property(e => e.BillToPartyKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Bill To Party - Key");

                entity.Property(e => e.BillToPartyLocationKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Bill To Party - Location (Key)");

                entity.Property(e => e.BillToPartyPostalCodeKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Bill To Party - Postal Code (Key)");

                entity.Property(e => e.BillToPartyRegionText)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Bill To Party - Region (Text)");

                entity.Property(e => e.BillToPartyStreetNameKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Bill To Party - Street Name (Key)");

                entity.Property(e => e.CompleteDelivery)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Complete Delivery");

                entity.Property(e => e.CumulativeOrderQuantity)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Cumulative Order Quantity");

                entity.Property(e => e.CustomerPoNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Customer PO Number");

                entity.Property(e => e.DeliveryCreatedOn)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Delivery Created on");

                entity.Property(e => e.DeliveryNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Delivery Number");

                entity.Property(e => e.DeliveryShipToParty)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Delivery Ship To Party");

                entity.Property(e => e.DeliveryShipToPartyBasCityDistrictKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Delivery Ship To Party - BAS  City District (Key)");

                entity.Property(e => e.DeliveryShipToPartyBasStreet2Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Delivery Ship To Party - BAS   Street 2 (Key)");

                entity.Property(e => e.DeliveryShipToPartyBasStreet3Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Delivery Ship To Party - BAS   Street 3 (Key)");

                entity.Property(e => e.DeliveryShipToPartyBasStreet4Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Delivery Ship To Party - BAS   Street 4 (Key)");

                entity.Property(e => e.DeliveryShipToPartyBasStreet5Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Delivery Ship To Party - BAS  Street 5 (Key)");

                entity.Property(e => e.DeliveryShipToPartyCountryText)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Delivery Ship To Party - Country (Text)");

                entity.Property(e => e.DeliveryShipToPartyKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Delivery Ship To Party - Key");

                entity.Property(e => e.DeliveryShipToPartyLocationKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Delivery Ship To Party - Location (Key)");

                entity.Property(e => e.DeliveryShipToPartyPostalCodeKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Delivery Ship To Party - Postal Code (Key)");

                entity.Property(e => e.DeliveryShipToPartyRegionText)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Delivery Ship To Party - Region (Text)");

                entity.Property(e => e.DeliveryShipToPartyStreetNameKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Delivery Ship To Party - Street Name (Key)");

                entity.Property(e => e.DeliveryType)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Delivery Type");

                entity.Property(e => e.EndUser)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.EndUserBasCityDistrictKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("EndUser - BAS  City District (Key)");

                entity.Property(e => e.EndUserBasStreet2Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("EndUser - BAS   Street 2 (Key)");

                entity.Property(e => e.EndUserBasStreet3Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("EndUser - BAS   Street 3 (Key)");

                entity.Property(e => e.EndUserBasStreet4Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("EndUser - BAS   Street 4 (Key)");

                entity.Property(e => e.EndUserBasStreet5Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("EndUser - BAS  Street 5 (Key)");

                entity.Property(e => e.EndUserCountryText)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("EndUser - Country (Text)");

                entity.Property(e => e.EndUserKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("EndUser - Key");

                entity.Property(e => e.EndUserLocationKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("EndUser - Location (Key)");

                entity.Property(e => e.EndUserPostalCodeKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("EndUser - Postal Code (Key)");

                entity.Property(e => e.EndUserRegionText)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("EndUser - Region (Text)");

                entity.Property(e => e.EndUserStreetNameKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("EndUser - Street Name (Key)");

                entity.Property(e => e.FreightForwarder1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Freight Forwarder 1");

                entity.Property(e => e.FreightForwarder1CountryText)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Freight Forwarder 1 - Country (Text)");

                entity.Property(e => e.FreightForwarder1Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Freight Forwarder 1 - Key");

                entity.Property(e => e.FreightForwarder1LocationKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Freight Forwarder 1 - Location (Key)");

                entity.Property(e => e.FreightForwarder1StreetNameKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Freight Forwarder 1 - Street Name (Key)");

                entity.Property(e => e.HigherLevelItem)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Higher Level Item");

                entity.Property(e => e.ImportDate)
                    .HasColumnType("datetime")
                    .HasColumnName("import_date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ImportId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("import_id");

                entity.Property(e => e.ImportStatus)
                    .HasMaxLength(255)
                    .HasColumnName("import_status");

                entity.Property(e => e.Incoterms1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Incoterms 1");

                entity.Property(e => e.Incoterms2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Incoterms 2");

                entity.Property(e => e.MaterialEccnText)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Material - ECCN (Text)");

                entity.Property(e => e.MaterialGrossWeightKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Material - Gross weight (Key)");

                entity.Property(e => e.MaterialHtsText)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Material - HTS (Text)");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Material - Key");

                entity.Property(e => e.MaterialNetWeightKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Material - Net Weight (Key)");

                entity.Property(e => e.MaterialText)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Material - Text");

                entity.Property(e => e.MaterialWeightUnitKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Material - Weight unit (Key)");

                entity.Property(e => e.MaterialWeightUnitText)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Material - Weight unit (Text)");

                entity.Property(e => e.OrderReason)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Order Reason");

                entity.Property(e => e.OrderType)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Order Type");

                entity.Property(e => e.Plant)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.PlantCountryText)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Plant - Country (Text)");

                entity.Property(e => e.PlantMediumText)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Plant - Medium Text");

                entity.Property(e => e.PodControl)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("POD Control");

                entity.Property(e => e.PodStatusOnHeader)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("POD Status on header");

                entity.Property(e => e.PodStatusOnItem)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("POD Status on Item");

                entity.Property(e => e.SalesDocumentItemCategory)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Sales Document Item Category");

                entity.Property(e => e.SalesOrderItem)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Sales Order Item");

                entity.Property(e => e.SalesOrderNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Sales Order Number");

                entity.Property(e => e.ShipDate)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Ship Date");

                entity.Property(e => e.ShipmentsCogsValue)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Shipments COGS Value");

                entity.Property(e => e.ShipmentsListValue)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Shipments List Value");

                entity.Property(e => e.ShipmentsNetValue)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Shipments Net Value");

                entity.Property(e => e.ShipmentsQuantity)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Shipments Quantity");

                entity.Property(e => e.ShippingNoteText)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Shipping Note - Text");

                entity.Property(e => e.ShippingType)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Shipping Type");

                entity.Property(e => e.SoldToParty)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Sold To Party");

                entity.Property(e => e.SoldToPartyBasCityDistrictKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Sold To Party - BAS  City District (Key)");

                entity.Property(e => e.SoldToPartyBasStreet2Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Sold To Party - BAS   Street 2 (Key)");

                entity.Property(e => e.SoldToPartyBasStreet3Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Sold To Party - BAS   Street 3 (Key)");

                entity.Property(e => e.SoldToPartyBasStreet4Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Sold To Party - BAS   Street 4 (Key)");

                entity.Property(e => e.SoldToPartyBasStreet5Key)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Sold To Party - BAS  Street 5 (Key)");

                entity.Property(e => e.SoldToPartyCountryText)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Sold To Party - Country (Text)");

                entity.Property(e => e.SoldToPartyKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Sold To Party - Key");

                entity.Property(e => e.SoldToPartyLocationKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Sold To Party - Location (Key)");

                entity.Property(e => e.SoldToPartyPostalCodeKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Sold To Party - Postal Code (Key)");

                entity.Property(e => e.SoldToPartyRegionText)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Sold To Party - Region (Text)");

                entity.Property(e => e.SoldToPartyStreetNameKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Sold To Party - Street Name (Key)");

                entity.Property(e => e.TrackingNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Tracking Number");

                entity.Property(e => e.VarExtLincenseNum)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Var-Ext lincense Num");

                entity.Property(e => e.VarLegRegLegalCtrl)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Var-Leg  Reg  Legal Ctrl");

                entity.Property(e => e.VarLicValidTo)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Var_Lic_Valid_To");

                entity.Property(e => e.VarLicenseAppliedDate)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Var-License Applied Date");

                entity.Property(e => e.VarLicenseNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Var-License Number");

                entity.Property(e => e.VarLicenseType)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Var-License Type");

                entity.Property(e => e.VarLicenseValidFrom)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Var-License Valid From");
            });

            modelBuilder.Entity<RawShipmentLine>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("raw_shipment_line");

                entity.HasIndex(e => e.ImportId, "raw_shipment_line_ndx");

                entity.HasIndex(e => e.SerialNumber, "shipment_line_idx1");

                entity.Property(e => e.BillToPartyCity)
                    .IsUnicode(false)
                    .HasColumnName("Bill_To_Party_City");

                entity.Property(e => e.BillToPartyCountry)
                    .IsUnicode(false)
                    .HasColumnName("Bill_To_Party_Country");

                entity.Property(e => e.BillToPartyKey)
                    .IsUnicode(false)
                    .HasColumnName("Bill_To_Party_Key");

                entity.Property(e => e.BillToPartyName)
                    .IsUnicode(false)
                    .HasColumnName("Bill_To_Party_Name");

                entity.Property(e => e.BillToPartyStreet1)
                    .IsUnicode(false)
                    .HasColumnName("Bill_To_Party_Street1");

                entity.Property(e => e.BillToPartyStreet2)
                    .IsUnicode(false)
                    .HasColumnName("Bill_To_Party_Street2");

                entity.Property(e => e.BillToPartyStreet3)
                    .IsUnicode(false)
                    .HasColumnName("Bill_To_Party_Street3");

                entity.Property(e => e.BillToPartyStreet4)
                    .IsUnicode(false)
                    .HasColumnName("Bill_To_Party_Street4");

                entity.Property(e => e.BillToPartyStreet5)
                    .IsUnicode(false)
                    .HasColumnName("Bill_To_Party_Street5");

                entity.Property(e => e.CustomerGroup)
                    .IsUnicode(false)
                    .HasColumnName("Customer_Group");

                entity.Property(e => e.DeliveryDate)
                    .IsUnicode(false)
                    .HasColumnName("Delivery_Date");

                entity.Property(e => e.DeliveryItem)
                    .IsUnicode(false)
                    .HasColumnName("Delivery_Item");

                entity.Property(e => e.DeliveryNumber)
                    .IsUnicode(false)
                    .HasColumnName("Delivery_Number");

                entity.Property(e => e.DeliveryType)
                    .IsUnicode(false)
                    .HasColumnName("Delivery_Type");

                entity.Property(e => e.Eccn)
                    .IsUnicode(false)
                    .HasColumnName("ECCN");

                entity.Property(e => e.EndUserCity)
                    .IsUnicode(false)
                    .HasColumnName("End_User_City");

                entity.Property(e => e.EndUserCountry)
                    .IsUnicode(false)
                    .HasColumnName("End_User_Country");

                entity.Property(e => e.EndUserKey)
                    .IsUnicode(false)
                    .HasColumnName("End_User_Key");

                entity.Property(e => e.EndUserName)
                    .IsUnicode(false)
                    .HasColumnName("End_User_Name");

                entity.Property(e => e.EndUserStreet1)
                    .IsUnicode(false)
                    .HasColumnName("End_User_Street1");

                entity.Property(e => e.EndUserStreet2)
                    .IsUnicode(false)
                    .HasColumnName("End_User_Street2");

                entity.Property(e => e.EndUserStreet3)
                    .IsUnicode(false)
                    .HasColumnName("End_User_Street3");

                entity.Property(e => e.EndUserStreet4)
                    .IsUnicode(false)
                    .HasColumnName("End_User_Street4");

                entity.Property(e => e.EndUserStreet5)
                    .IsUnicode(false)
                    .HasColumnName("End_User_Street5");

                entity.Property(e => e.Hts)
                    .IsUnicode(false)
                    .HasColumnName("HTS");

                entity.Property(e => e.ImportDate)
                    .HasColumnType("datetime")
                    .HasColumnName("import_date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ImportId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("import_id");

                entity.Property(e => e.ImportStatus)
                    .HasMaxLength(255)
                    .HasColumnName("import_status");

                entity.Property(e => e.ListPrice)
                    .IsUnicode(false)
                    .HasColumnName("List_Price");

                entity.Property(e => e.Material).IsUnicode(false);

                entity.Property(e => e.MaterialOfferingType)
                    .IsUnicode(false)
                    .HasColumnName("Material_Offering_Type");

                entity.Property(e => e.MaterialType)
                    .IsUnicode(false)
                    .HasColumnName("Material_Type");

                entity.Property(e => e.NetValue)
                    .IsUnicode(false)
                    .HasColumnName("Net_Value");

                entity.Property(e => e.PlantKey)
                    .IsUnicode(false)
                    .HasColumnName("Plant_Key");

                entity.Property(e => e.PlantName)
                    .IsUnicode(false)
                    .HasColumnName("Plant_Name");

                entity.Property(e => e.PoType)
                    .IsUnicode(false)
                    .HasColumnName("PO_Type");

                entity.Property(e => e.Quantity).IsUnicode(false);

                entity.Property(e => e.SalesOrgKey)
                    .IsUnicode(false)
                    .HasColumnName("Sales_Org_Key");

                entity.Property(e => e.SalesOrgName)
                    .IsUnicode(false)
                    .HasColumnName("Sales_Org_Name");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Serial_Number");

                entity.Property(e => e.ShipToCity)
                    .IsUnicode(false)
                    .HasColumnName("Ship_To_City");

                entity.Property(e => e.ShipToCountry)
                    .IsUnicode(false)
                    .HasColumnName("Ship_To_Country");

                entity.Property(e => e.ShipToCustomer)
                    .IsUnicode(false)
                    .HasColumnName("Ship_To_Customer");

                entity.Property(e => e.ShipToKey)
                    .IsUnicode(false)
                    .HasColumnName("Ship_To_Key");

                entity.Property(e => e.ShipToStreet1)
                    .IsUnicode(false)
                    .HasColumnName("Ship_To_Street1");

                entity.Property(e => e.ShipToStreet2)
                    .IsUnicode(false)
                    .HasColumnName("Ship_To_Street2");

                entity.Property(e => e.ShipToStreet3)
                    .IsUnicode(false)
                    .HasColumnName("Ship_To_Street3");

                entity.Property(e => e.ShipToStreet4)
                    .IsUnicode(false)
                    .HasColumnName("Ship_To_Street4");

                entity.Property(e => e.ShipToStreet5)
                    .IsUnicode(false)
                    .HasColumnName("Ship_To_Street5");

                entity.Property(e => e.SoDate)
                    .IsUnicode(false)
                    .HasColumnName("SO_Date");

                entity.Property(e => e.SoItem)
                    .IsUnicode(false)
                    .HasColumnName("SO_Item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SO_Number");

                entity.Property(e => e.SoType)
                    .IsUnicode(false)
                    .HasColumnName("SO_Type");

                entity.Property(e => e.SoldToCity)
                    .IsUnicode(false)
                    .HasColumnName("Sold_To_City");

                entity.Property(e => e.SoldToCountry)
                    .IsUnicode(false)
                    .HasColumnName("Sold_To_Country");

                entity.Property(e => e.SoldToKey)
                    .IsUnicode(false)
                    .HasColumnName("Sold_To_Key");

                entity.Property(e => e.SoldToName)
                    .IsUnicode(false)
                    .HasColumnName("Sold_To_Name");

                entity.Property(e => e.SoldToStreet1)
                    .IsUnicode(false)
                    .HasColumnName("Sold_To_Street1");

                entity.Property(e => e.SoldToStreet2)
                    .IsUnicode(false)
                    .HasColumnName("Sold_To_Street2");

                entity.Property(e => e.SoldToStreet3)
                    .IsUnicode(false)
                    .HasColumnName("Sold_To_Street3");

                entity.Property(e => e.SoldToStreet4)
                    .IsUnicode(false)
                    .HasColumnName("Sold_To_Street4");

                entity.Property(e => e.SoldToStreet5)
                    .IsUnicode(false)
                    .HasColumnName("Sold_To_Street5");
            });

            modelBuilder.Entity<RawShipmentLineTmp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("raw_shipment_line_tmp", "dsf");

                entity.Property(e => e.BillToPartyCity)
                    .IsUnicode(false)
                    .HasColumnName("Bill_To_Party_City");

                entity.Property(e => e.BillToPartyCountry)
                    .IsUnicode(false)
                    .HasColumnName("Bill_To_Party_Country");

                entity.Property(e => e.BillToPartyKey)
                    .IsUnicode(false)
                    .HasColumnName("Bill_To_Party_Key");

                entity.Property(e => e.BillToPartyName)
                    .IsUnicode(false)
                    .HasColumnName("Bill_To_Party_Name");

                entity.Property(e => e.BillToPartyStreet1)
                    .IsUnicode(false)
                    .HasColumnName("Bill_To_Party_Street1");

                entity.Property(e => e.BillToPartyStreet2)
                    .IsUnicode(false)
                    .HasColumnName("Bill_To_Party_Street2");

                entity.Property(e => e.BillToPartyStreet3)
                    .IsUnicode(false)
                    .HasColumnName("Bill_To_Party_Street3");

                entity.Property(e => e.BillToPartyStreet4)
                    .IsUnicode(false)
                    .HasColumnName("Bill_To_Party_Street4");

                entity.Property(e => e.BillToPartyStreet5)
                    .IsUnicode(false)
                    .HasColumnName("Bill_To_Party_Street5");

                entity.Property(e => e.CustomerGroup)
                    .IsUnicode(false)
                    .HasColumnName("Customer_Group");

                entity.Property(e => e.DeliveryDate)
                    .IsUnicode(false)
                    .HasColumnName("Delivery_Date");

                entity.Property(e => e.DeliveryItem)
                    .IsUnicode(false)
                    .HasColumnName("Delivery_Item");

                entity.Property(e => e.DeliveryNumber)
                    .IsUnicode(false)
                    .HasColumnName("Delivery_Number");

                entity.Property(e => e.DeliveryType)
                    .IsUnicode(false)
                    .HasColumnName("Delivery_Type");

                entity.Property(e => e.Eccn)
                    .IsUnicode(false)
                    .HasColumnName("ECCN");

                entity.Property(e => e.EndUserCity)
                    .IsUnicode(false)
                    .HasColumnName("End_User_City");

                entity.Property(e => e.EndUserCountry)
                    .IsUnicode(false)
                    .HasColumnName("End_User_Country");

                entity.Property(e => e.EndUserKey)
                    .IsUnicode(false)
                    .HasColumnName("End_User_Key");

                entity.Property(e => e.EndUserName)
                    .IsUnicode(false)
                    .HasColumnName("End_User_Name");

                entity.Property(e => e.EndUserStreet1)
                    .IsUnicode(false)
                    .HasColumnName("End_User_Street1");

                entity.Property(e => e.EndUserStreet2)
                    .IsUnicode(false)
                    .HasColumnName("End_User_Street2");

                entity.Property(e => e.EndUserStreet3)
                    .IsUnicode(false)
                    .HasColumnName("End_User_Street3");

                entity.Property(e => e.EndUserStreet4)
                    .IsUnicode(false)
                    .HasColumnName("End_User_Street4");

                entity.Property(e => e.EndUserStreet5)
                    .IsUnicode(false)
                    .HasColumnName("End_User_Street5");

                entity.Property(e => e.Hts)
                    .IsUnicode(false)
                    .HasColumnName("HTS");

                entity.Property(e => e.ImportDate)
                    .HasColumnType("datetime")
                    .HasColumnName("import_date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ImportStatus)
                    .HasMaxLength(255)
                    .HasColumnName("import_status");

                entity.Property(e => e.ListPrice)
                    .IsUnicode(false)
                    .HasColumnName("List_Price");

                entity.Property(e => e.Material).IsUnicode(false);

                entity.Property(e => e.MaterialOfferingType)
                    .IsUnicode(false)
                    .HasColumnName("Material_Offering_Type");

                entity.Property(e => e.MaterialType)
                    .IsUnicode(false)
                    .HasColumnName("Material_Type");

                entity.Property(e => e.NetValue)
                    .IsUnicode(false)
                    .HasColumnName("Net_Value");

                entity.Property(e => e.PlantKey)
                    .IsUnicode(false)
                    .HasColumnName("Plant_Key");

                entity.Property(e => e.PlantName)
                    .IsUnicode(false)
                    .HasColumnName("Plant_Name");

                entity.Property(e => e.PoType)
                    .IsUnicode(false)
                    .HasColumnName("PO_Type");

                entity.Property(e => e.Quantity).IsUnicode(false);

                entity.Property(e => e.SalesOrgKey)
                    .IsUnicode(false)
                    .HasColumnName("Sales_Org_Key");

                entity.Property(e => e.SalesOrgName)
                    .IsUnicode(false)
                    .HasColumnName("Sales_Org_Name");

                entity.Property(e => e.SerialNumber)
                    .IsUnicode(false)
                    .HasColumnName("Serial_Number");

                entity.Property(e => e.ShipToCity)
                    .IsUnicode(false)
                    .HasColumnName("Ship_To_City");

                entity.Property(e => e.ShipToCountry)
                    .IsUnicode(false)
                    .HasColumnName("Ship_To_Country");

                entity.Property(e => e.ShipToCustomer)
                    .IsUnicode(false)
                    .HasColumnName("Ship_To_Customer");

                entity.Property(e => e.ShipToKey)
                    .IsUnicode(false)
                    .HasColumnName("Ship_To_Key");

                entity.Property(e => e.ShipToStreet1)
                    .IsUnicode(false)
                    .HasColumnName("Ship_To_Street1");

                entity.Property(e => e.ShipToStreet2)
                    .IsUnicode(false)
                    .HasColumnName("Ship_To_Street2");

                entity.Property(e => e.ShipToStreet3)
                    .IsUnicode(false)
                    .HasColumnName("Ship_To_Street3");

                entity.Property(e => e.ShipToStreet4)
                    .IsUnicode(false)
                    .HasColumnName("Ship_To_Street4");

                entity.Property(e => e.ShipToStreet5)
                    .IsUnicode(false)
                    .HasColumnName("Ship_To_Street5");

                entity.Property(e => e.SoDate)
                    .IsUnicode(false)
                    .HasColumnName("SO_Date");

                entity.Property(e => e.SoItem)
                    .IsUnicode(false)
                    .HasColumnName("SO_Item");

                entity.Property(e => e.SoNumber)
                    .IsUnicode(false)
                    .HasColumnName("SO_Number");

                entity.Property(e => e.SoType)
                    .IsUnicode(false)
                    .HasColumnName("SO_Type");

                entity.Property(e => e.SoldToCity)
                    .IsUnicode(false)
                    .HasColumnName("Sold_To_City");

                entity.Property(e => e.SoldToCountry)
                    .IsUnicode(false)
                    .HasColumnName("Sold_To_Country");

                entity.Property(e => e.SoldToKey)
                    .IsUnicode(false)
                    .HasColumnName("Sold_To_Key");

                entity.Property(e => e.SoldToName)
                    .IsUnicode(false)
                    .HasColumnName("Sold_To_Name");

                entity.Property(e => e.SoldToStreet1)
                    .IsUnicode(false)
                    .HasColumnName("Sold_To_Street1");

                entity.Property(e => e.SoldToStreet2)
                    .IsUnicode(false)
                    .HasColumnName("Sold_To_Street2");

                entity.Property(e => e.SoldToStreet3)
                    .IsUnicode(false)
                    .HasColumnName("Sold_To_Street3");

                entity.Property(e => e.SoldToStreet4)
                    .IsUnicode(false)
                    .HasColumnName("Sold_To_Street4");

                entity.Property(e => e.SoldToStreet5)
                    .IsUnicode(false)
                    .HasColumnName("Sold_To_Street5");
            });

            modelBuilder.Entity<ResellerMissing>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("reseller_missing", "wp");

                entity.Property(e => e.PoType)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("po_type");

                entity.Property(e => e.ResellerCountryName)
                    .HasMaxLength(400)
                    .IsUnicode(false)
                    .HasColumnName("reseller_country_name");

                entity.Property(e => e.ResellerName).HasColumnName("reseller_name");
            });

            modelBuilder.Entity<RmaLinesApr2018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("rma_lines_apr2018", "dsf");

                entity.Property(e => e.AssociatedContactBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Associated_Contact___BAS__Postal_Code__Key_");

                entity.Property(e => e.AssociatedContactBasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Associated_Contact___BAS___Street_2__Key_");

                entity.Property(e => e.AssociatedContactBasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Associated_Contact___BAS___Street_3__Key_");

                entity.Property(e => e.AssociatedContactBasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Associated_Contact___BAS___Street_4__Key_");

                entity.Property(e => e.AssociatedContactBasStreetKey)
                    .HasMaxLength(250)
                    .HasColumnName("Associated_Contact___BAS__Street__Key_");

                entity.Property(e => e.AssociatedContactCity)
                    .HasMaxLength(50)
                    .HasColumnName("Associated_Contact___City");

                entity.Property(e => e.AssociatedContactCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("Associated_Contact___Country__Key_");

                entity.Property(e => e.AssociatedContactCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Associated_Contact___Country__Text_");

                entity.Property(e => e.AssociatedContactKey)
                    .HasMaxLength(50)
                    .HasColumnName("Associated_Contact___Key");

                entity.Property(e => e.AssociatedContactName)
                    .HasMaxLength(250)
                    .HasColumnName("Associated_Contact_Name");

                entity.Property(e => e.AssociatedContactRegionText)
                    .HasMaxLength(50)
                    .HasColumnName("Associated_Contact___Region__Text_");

                entity.Property(e => e.BillToPartyKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_to_Party___Key");

                entity.Property(e => e.ComplaintsNo)
                    .HasMaxLength(50)
                    .HasColumnName("Complaints_No_");

                entity.Property(e => e.Coo)
                    .HasMaxLength(50)
                    .HasColumnName("COO");

                entity.Property(e => e.CustomsDeclCreateDt)
                    .HasMaxLength(50)
                    .HasColumnName("Customs_Decl_Create_Dt");

                entity.Property(e => e.CustomsDeclarationNo)
                    .HasMaxLength(50)
                    .HasColumnName("Customs_Declaration_No");

                entity.Property(e => e.CustomsValuation)
                    .HasMaxLength(50)
                    .HasColumnName("Customs_Valuation");

                entity.Property(e => e.DefectProductId)
                    .HasMaxLength(50)
                    .HasColumnName("Defect___Product_ID");

                entity.Property(e => e.DefectProductIdEccnKey)
                    .HasMaxLength(50)
                    .HasColumnName("Defect___Product_ID___ECCN__Key_");

                entity.Property(e => e.DefectProductIdHtsKey)
                    .HasMaxLength(50)
                    .HasColumnName("Defect___Product_ID___HTS__Key_");

                entity.Property(e => e.DefectProductIdKey)
                    .HasMaxLength(50)
                    .HasColumnName("Defect___Product_ID___Key");

                entity.Property(e => e.DefectProductIdOverLengthPartNumKey)
                    .HasMaxLength(50)
                    .HasColumnName("Defect___Product_ID___Over_Length_Part_Num__Key_");

                entity.Property(e => e.DefectSerialNo)
                    .HasMaxLength(50)
                    .HasColumnName("Defect___Serial_No");

                entity.Property(e => e.DeliveryCreateDate)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Create_Date");

                entity.Property(e => e.DeliveryNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Number");

                entity.Property(e => e.EndCustomerBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___BAS__Postal_Code__Key_");

                entity.Property(e => e.EndCustomerBasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___BAS___Street_2__Key_");

                entity.Property(e => e.EndCustomerBasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___BAS___Street_3__Key_");

                entity.Property(e => e.EndCustomerBasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___BAS___Street_4__Key_");

                entity.Property(e => e.EndCustomerBasStreetKey)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___BAS__Street__Key_");

                entity.Property(e => e.EndCustomerCity)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___City");

                entity.Property(e => e.EndCustomerCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Country__Key_");

                entity.Property(e => e.EndCustomerCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Country__Text_");

                entity.Property(e => e.EndCustomerKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Key");

                entity.Property(e => e.EndCustomerName)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___Name");

                entity.Property(e => e.EndCustomerRegionText)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Region__Text_");

                entity.Property(e => e.ExporterAddr1Key)
                    .HasMaxLength(250)
                    .HasColumnName("Exporter_Addr1___Key");

                entity.Property(e => e.ExporterAddr2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Exporter_Addr2___Key");

                entity.Property(e => e.ExporterCity)
                    .HasMaxLength(50)
                    .HasColumnName("Exporter_City");

                entity.Property(e => e.ExporterCountry)
                    .HasMaxLength(50)
                    .HasColumnName("Exporter_Country");

                entity.Property(e => e.ExporterKey)
                    .HasMaxLength(50)
                    .HasColumnName("Exporter___Key");

                entity.Property(e => e.ExtLicence)
                    .HasMaxLength(50)
                    .HasColumnName("Ext_Licence");

                entity.Property(e => e.GoodsSupplier)
                    .HasMaxLength(50)
                    .HasColumnName("Goods_Supplier");

                entity.Property(e => e.GoodsSupplierKey)
                    .HasMaxLength(50)
                    .HasColumnName("Goods_Supplier___Key");

                entity.Property(e => e.GtsBillToAddr1Key)
                    .HasMaxLength(250)
                    .HasColumnName("GTS_BillTo_Addr1___Key");

                entity.Property(e => e.GtsBillToAddr2Key)
                    .HasMaxLength(250)
                    .HasColumnName("GTS_BillTo_Addr2___Key");

                entity.Property(e => e.GtsBillToAddressKey)
                    .HasMaxLength(250)
                    .HasColumnName("GTS_Bill_to_Address___Key");

                entity.Property(e => e.GtsBillToCity)
                    .HasMaxLength(50)
                    .HasColumnName("GTS_BillTo_City");

                entity.Property(e => e.GtsBillToCountry)
                    .HasMaxLength(50)
                    .HasColumnName("GTS_BillTo_Country");

                entity.Property(e => e.GtsBillToKey)
                    .HasMaxLength(50)
                    .HasColumnName("GTS_BillTo___Key");

                entity.Property(e => e.GtsExporterAddressKey)
                    .HasMaxLength(250)
                    .HasColumnName("GTS_Exporter_Address___Key");

                entity.Property(e => e.GtsShipToAddr1Key)
                    .HasMaxLength(50)
                    .HasColumnName("GTS_ShipTo_Addr1___Key");

                entity.Property(e => e.GtsShipToAddr2Key)
                    .HasMaxLength(50)
                    .HasColumnName("GTS_ShipTo_Addr2___Key");

                entity.Property(e => e.GtsShipToAddressKey)
                    .HasMaxLength(100)
                    .HasColumnName("GTS_Ship_to_Address___Key");

                entity.Property(e => e.GtsShipToCity)
                    .HasMaxLength(50)
                    .HasColumnName("GTS_ShipTo_City");

                entity.Property(e => e.GtsShipToCountry)
                    .HasMaxLength(50)
                    .HasColumnName("GTS_ShipTo_Country");

                entity.Property(e => e.GtsShipToKey)
                    .HasMaxLength(50)
                    .HasColumnName("GTS_ShipTo___Key");

                entity.Property(e => e.HeaderStatus)
                    .HasMaxLength(50)
                    .HasColumnName("Header_Status");

                entity.Property(e => e.InstalledAtBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Installed_At___BAS__Postal_Code__Key_");

                entity.Property(e => e.InstalledAtBasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Installed_At___BAS___Street_2__Key_");

                entity.Property(e => e.InstalledAtBasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Installed_At___BAS___Street_3__Key_");

                entity.Property(e => e.InstalledAtBasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Installed_At___BAS___Street_4__Key_");

                entity.Property(e => e.InstalledAtBasStreetKey)
                    .HasMaxLength(250)
                    .HasColumnName("Installed_At___BAS__Street__Key_");

                entity.Property(e => e.InstalledAtCity)
                    .HasMaxLength(50)
                    .HasColumnName("Installed_At___City");

                entity.Property(e => e.InstalledAtCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("Installed_At___Country__Key_");

                entity.Property(e => e.InstalledAtCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Installed_At___Country__Text_");

                entity.Property(e => e.InstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("Installed_At___Key");

                entity.Property(e => e.InstalledAtName)
                    .HasMaxLength(250)
                    .HasColumnName("Installed_At___Name");

                entity.Property(e => e.InstalledAtRegionText)
                    .HasMaxLength(50)
                    .HasColumnName("Installed_At___Region__Text_");

                entity.Property(e => e.ItemCreateDate)
                    .HasMaxLength(50)
                    .HasColumnName("Item_Create_Date");

                entity.Property(e => e.ItemStatus)
                    .HasMaxLength(50)
                    .HasColumnName("Item_Status");

                entity.Property(e => e.LegalRegulation)
                    .HasMaxLength(50)
                    .HasColumnName("Legal_Regulation");

                entity.Property(e => e.LicenseAppliedDate)
                    .HasMaxLength(50)
                    .HasColumnName("License_Applied_Date");

                entity.Property(e => e.LicenseNumber)
                    .HasMaxLength(50)
                    .HasColumnName("License_Number");

                entity.Property(e => e.LicenseType)
                    .HasMaxLength(50)
                    .HasColumnName("License_Type");

                entity.Property(e => e.LicenseValidFrom)
                    .HasMaxLength(50)
                    .HasColumnName("License_Valid_From");

                entity.Property(e => e.LicenseValidTo)
                    .HasMaxLength(50)
                    .HasColumnName("License_Valid_To");

                entity.Property(e => e.PlantKey)
                    .HasMaxLength(50)
                    .HasColumnName("Plant___Key");

                entity.Property(e => e.PlantText)
                    .HasMaxLength(50)
                    .HasColumnName("Plant___Text");

                entity.Property(e => e.ReplaceEccn)
                    .HasMaxLength(50)
                    .HasColumnName("Replace___ECCN");

                entity.Property(e => e.ReplaceProductId0material)
                    .HasMaxLength(50)
                    .HasColumnName("Replace___Product_ID__0MATERIAL_");

                entity.Property(e => e.ReplaceProductId0materialHtsKey)
                    .HasMaxLength(50)
                    .HasColumnName("Replace___Product_ID__0MATERIAL____HTS__Key_");

                entity.Property(e => e.ReplaceProductId0materialKey)
                    .HasMaxLength(50)
                    .HasColumnName("Replace___Product_ID__0MATERIAL____Key");

                entity.Property(e => e.ReplaceProductId0materialOverLengthPartNumKey)
                    .HasMaxLength(50)
                    .HasColumnName("Replace___Product_ID__0MATERIAL____Over_Length_Part_Num__Key_");

                entity.Property(e => e.ReplaceSerialNo)
                    .HasMaxLength(50)
                    .HasColumnName("Replace___Serial_No");

                entity.Property(e => e.RmaCreateDate)
                    .HasMaxLength(50)
                    .HasColumnName("RMA_Create_Date");

                entity.Property(e => e.RmaItemNumber0crmNumint)
                    .HasMaxLength(50)
                    .HasColumnName("RMA_Item_Number__0CRM_NUMINT_");

                entity.Property(e => e.RmaItemType)
                    .HasMaxLength(50)
                    .HasColumnName("RMA_Item_Type");

                entity.Property(e => e.RmaItemTypeKey)
                    .HasMaxLength(50)
                    .HasColumnName("RMA_Item_Type___Key");

                entity.Property(e => e.ServiceReqNo)
                    .HasMaxLength(50)
                    .HasColumnName("Service_Req_No");

                entity.Property(e => e.ShipDate)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_Date");

                entity.Property(e => e.ShipToAddr1Key)
                    .HasMaxLength(250)
                    .HasColumnName("ShipTo_Addr1___Key");

                entity.Property(e => e.ShipToAddr2Key)
                    .HasMaxLength(250)
                    .HasColumnName("ShipTo_Addr2___Key");

                entity.Property(e => e.ShipToCityKey)
                    .HasMaxLength(50)
                    .HasColumnName("ShipTo_City___Key");

                entity.Property(e => e.ShipToPartyKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_to_Party___Key");

                entity.Property(e => e.ShipToSiteCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_to_Site_Country___Key");

                entity.Property(e => e.ShipToSiteKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_Site___Key");

                entity.Property(e => e.ShipToSiteName)
                    .HasMaxLength(250)
                    .HasColumnName("ShipTo_Site___Name");

                entity.Property(e => e.ShipToSitePostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_to_Site_Postal_Code___Key");

                entity.Property(e => e.ShipToSiteRegion)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_to_Site_Region");

                entity.Property(e => e.ShipToSiteRegionKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_to_Site_Region___Key");

                entity.Property(e => e.StorageLocationKey)
                    .HasMaxLength(50)
                    .HasColumnName("Storage_Location___Key");

                entity.Property(e => e.StorageLocationText)
                    .HasMaxLength(50)
                    .HasColumnName("Storage_location___Text");

                entity.Property(e => e.TrackingNo)
                    .HasMaxLength(50)
                    .HasColumnName("Tracking_No");

                entity.Property(e => e.ValuationType)
                    .HasMaxLength(50)
                    .HasColumnName("Valuation_Type");

                entity.Property(e => e.Vendor).HasMaxLength(50);

                entity.Property(e => e.VendorKey)
                    .HasMaxLength(50)
                    .HasColumnName("Vendor___Key");
            });

            modelBuilder.Entity<RmaLinesAugsep2018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("rma_lines_augsep2018", "dsf");

                entity.Property(e => e.AssociatedContactBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Associated_Contact___BAS__Postal_Code__Key_");

                entity.Property(e => e.AssociatedContactBasStreet2Key)
                    .HasMaxLength(150)
                    .HasColumnName("Associated_Contact___BAS___Street_2__Key_");

                entity.Property(e => e.AssociatedContactBasStreet3Key)
                    .HasMaxLength(150)
                    .HasColumnName("Associated_Contact___BAS___Street_3__Key_");

                entity.Property(e => e.AssociatedContactBasStreet4Key)
                    .HasMaxLength(150)
                    .HasColumnName("Associated_Contact___BAS___Street_4__Key_");

                entity.Property(e => e.AssociatedContactBasStreetKey)
                    .HasMaxLength(150)
                    .HasColumnName("Associated_Contact___BAS__Street__Key_");

                entity.Property(e => e.AssociatedContactCity)
                    .HasMaxLength(50)
                    .HasColumnName("Associated_Contact___City");

                entity.Property(e => e.AssociatedContactCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("Associated_Contact___Country__Key_");

                entity.Property(e => e.AssociatedContactCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Associated_Contact___Country__Text_");

                entity.Property(e => e.AssociatedContactKey)
                    .HasMaxLength(50)
                    .HasColumnName("Associated_Contact___Key");

                entity.Property(e => e.AssociatedContactName)
                    .HasMaxLength(150)
                    .HasColumnName("Associated_Contact_Name");

                entity.Property(e => e.AssociatedContactRegionText)
                    .HasMaxLength(50)
                    .HasColumnName("Associated_Contact___Region__Text_");

                entity.Property(e => e.BillToPartyKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_to_Party___Key");

                entity.Property(e => e.ComplaintsNo)
                    .HasMaxLength(50)
                    .HasColumnName("Complaints_No_");

                entity.Property(e => e.Coo)
                    .HasMaxLength(50)
                    .HasColumnName("COO");

                entity.Property(e => e.CustomsDeclCreateDt)
                    .HasMaxLength(50)
                    .HasColumnName("Customs_Decl_Create_Dt");

                entity.Property(e => e.CustomsDeclarationNo)
                    .HasMaxLength(50)
                    .HasColumnName("Customs_Declaration_No");

                entity.Property(e => e.CustomsValuation)
                    .HasMaxLength(50)
                    .HasColumnName("Customs_Valuation");

                entity.Property(e => e.DefectProductId)
                    .HasMaxLength(50)
                    .HasColumnName("Defect___Product_ID");

                entity.Property(e => e.DefectProductIdEccnKey)
                    .HasMaxLength(50)
                    .HasColumnName("Defect___Product_ID___ECCN__Key_");

                entity.Property(e => e.DefectProductIdHtsKey)
                    .HasMaxLength(50)
                    .HasColumnName("Defect___Product_ID___HTS__Key_");

                entity.Property(e => e.DefectProductIdKey)
                    .HasMaxLength(50)
                    .HasColumnName("Defect___Product_ID___Key");

                entity.Property(e => e.DefectProductIdOverLengthPartNumKey)
                    .HasMaxLength(50)
                    .HasColumnName("Defect___Product_ID___Over_Length_Part_Num__Key_");

                entity.Property(e => e.DefectSerialNo)
                    .HasMaxLength(50)
                    .HasColumnName("Defect___Serial_No");

                entity.Property(e => e.DeliveryCreateDate)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Create_Date");

                entity.Property(e => e.DeliveryNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Number");

                entity.Property(e => e.EndCustomerBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___BAS__Postal_Code__Key_");

                entity.Property(e => e.EndCustomerBasStreet2Key)
                    .HasMaxLength(150)
                    .HasColumnName("End_Customer___BAS___Street_2__Key_");

                entity.Property(e => e.EndCustomerBasStreet3Key)
                    .HasMaxLength(150)
                    .HasColumnName("End_Customer___BAS___Street_3__Key_");

                entity.Property(e => e.EndCustomerBasStreet4Key)
                    .HasMaxLength(150)
                    .HasColumnName("End_Customer___BAS___Street_4__Key_");

                entity.Property(e => e.EndCustomerBasStreetKey)
                    .HasMaxLength(150)
                    .HasColumnName("End_Customer___BAS__Street__Key_");

                entity.Property(e => e.EndCustomerCity)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___City");

                entity.Property(e => e.EndCustomerCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Country__Key_");

                entity.Property(e => e.EndCustomerCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Country__Text_");

                entity.Property(e => e.EndCustomerKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Key");

                entity.Property(e => e.EndCustomerName)
                    .HasMaxLength(150)
                    .HasColumnName("End_Customer___Name");

                entity.Property(e => e.EndCustomerRegionText)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Region__Text_");

                entity.Property(e => e.ExporterAddr1Key)
                    .HasMaxLength(50)
                    .HasColumnName("Exporter_Addr1___Key");

                entity.Property(e => e.ExporterAddr2Key)
                    .HasMaxLength(50)
                    .HasColumnName("Exporter_Addr2___Key");

                entity.Property(e => e.ExporterCity)
                    .HasMaxLength(50)
                    .HasColumnName("Exporter_City");

                entity.Property(e => e.ExporterCountry)
                    .HasMaxLength(50)
                    .HasColumnName("Exporter_Country");

                entity.Property(e => e.ExporterKey)
                    .HasMaxLength(50)
                    .HasColumnName("Exporter___Key");

                entity.Property(e => e.ExtLicence)
                    .HasMaxLength(50)
                    .HasColumnName("Ext_Licence");

                entity.Property(e => e.GoodsSupplier)
                    .HasMaxLength(50)
                    .HasColumnName("Goods_Supplier");

                entity.Property(e => e.GoodsSupplierKey)
                    .HasMaxLength(50)
                    .HasColumnName("Goods_Supplier___Key");

                entity.Property(e => e.GtsBillToAddr1Key)
                    .HasMaxLength(150)
                    .HasColumnName("GTS_BillTo_Addr1___Key");

                entity.Property(e => e.GtsBillToAddr2Key)
                    .HasMaxLength(150)
                    .HasColumnName("GTS_BillTo_Addr2___Key");

                entity.Property(e => e.GtsBillToAddressKey)
                    .HasMaxLength(150)
                    .HasColumnName("GTS_Bill_to_Address___Key");

                entity.Property(e => e.GtsBillToCity)
                    .HasMaxLength(50)
                    .HasColumnName("GTS_BillTo_City");

                entity.Property(e => e.GtsBillToCountry)
                    .HasMaxLength(50)
                    .HasColumnName("GTS_BillTo_Country");

                entity.Property(e => e.GtsBillToKey)
                    .HasMaxLength(50)
                    .HasColumnName("GTS_BillTo___Key");

                entity.Property(e => e.GtsExporterAddressKey)
                    .HasMaxLength(50)
                    .HasColumnName("GTS_Exporter_Address___Key");

                entity.Property(e => e.GtsShipToAddr1Key)
                    .HasMaxLength(150)
                    .HasColumnName("GTS_ShipTo_Addr1___Key");

                entity.Property(e => e.GtsShipToAddr2Key)
                    .HasMaxLength(150)
                    .HasColumnName("GTS_ShipTo_Addr2___Key");

                entity.Property(e => e.GtsShipToAddressKey)
                    .HasMaxLength(150)
                    .HasColumnName("GTS_Ship_to_Address___Key");

                entity.Property(e => e.GtsShipToCity)
                    .HasMaxLength(50)
                    .HasColumnName("GTS_ShipTo_City");

                entity.Property(e => e.GtsShipToCountry)
                    .HasMaxLength(50)
                    .HasColumnName("GTS_ShipTo_Country");

                entity.Property(e => e.GtsShipToKey)
                    .HasMaxLength(50)
                    .HasColumnName("GTS_ShipTo___Key");

                entity.Property(e => e.HeaderStatus)
                    .HasMaxLength(50)
                    .HasColumnName("Header_Status");

                entity.Property(e => e.InstalledAtBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Installed_At___BAS__Postal_Code__Key_");

                entity.Property(e => e.InstalledAtBasStreet2Key)
                    .HasMaxLength(150)
                    .HasColumnName("Installed_At___BAS___Street_2__Key_");

                entity.Property(e => e.InstalledAtBasStreet3Key)
                    .HasMaxLength(150)
                    .HasColumnName("Installed_At___BAS___Street_3__Key_");

                entity.Property(e => e.InstalledAtBasStreet4Key)
                    .HasMaxLength(150)
                    .HasColumnName("Installed_At___BAS___Street_4__Key_");

                entity.Property(e => e.InstalledAtBasStreetKey)
                    .HasMaxLength(150)
                    .HasColumnName("Installed_At___BAS__Street__Key_");

                entity.Property(e => e.InstalledAtCity)
                    .HasMaxLength(50)
                    .HasColumnName("Installed_At___City");

                entity.Property(e => e.InstalledAtCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("Installed_At___Country__Key_");

                entity.Property(e => e.InstalledAtCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Installed_At___Country__Text_");

                entity.Property(e => e.InstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("Installed_At___Key");

                entity.Property(e => e.InstalledAtName)
                    .HasMaxLength(150)
                    .HasColumnName("Installed_At___Name");

                entity.Property(e => e.InstalledAtRegionText)
                    .HasMaxLength(50)
                    .HasColumnName("Installed_At___Region__Text_");

                entity.Property(e => e.ItemCreateDate)
                    .HasMaxLength(50)
                    .HasColumnName("Item_Create_Date");

                entity.Property(e => e.ItemStatus)
                    .HasMaxLength(50)
                    .HasColumnName("Item_Status");

                entity.Property(e => e.LegalRegulation)
                    .HasMaxLength(50)
                    .HasColumnName("Legal_Regulation");

                entity.Property(e => e.LicenseAppliedDate)
                    .HasMaxLength(50)
                    .HasColumnName("License_Applied_Date");

                entity.Property(e => e.LicenseNumber)
                    .HasMaxLength(50)
                    .HasColumnName("License_Number");

                entity.Property(e => e.LicenseType)
                    .HasMaxLength(50)
                    .HasColumnName("License_Type");

                entity.Property(e => e.LicenseValidFrom)
                    .HasMaxLength(50)
                    .HasColumnName("License_Valid_From");

                entity.Property(e => e.LicenseValidTo)
                    .HasMaxLength(50)
                    .HasColumnName("License_Valid_To");

                entity.Property(e => e.PlantKey)
                    .HasMaxLength(50)
                    .HasColumnName("Plant___Key");

                entity.Property(e => e.PlantText)
                    .HasMaxLength(150)
                    .HasColumnName("Plant___Text");

                entity.Property(e => e.ReplaceEccn)
                    .HasMaxLength(50)
                    .HasColumnName("Replace___ECCN");

                entity.Property(e => e.ReplaceProductId0material)
                    .HasMaxLength(50)
                    .HasColumnName("Replace___Product_ID__0MATERIAL_");

                entity.Property(e => e.ReplaceProductId0materialHtsKey)
                    .HasMaxLength(50)
                    .HasColumnName("Replace___Product_ID__0MATERIAL____HTS__Key_");

                entity.Property(e => e.ReplaceProductId0materialKey)
                    .HasMaxLength(50)
                    .HasColumnName("Replace___Product_ID__0MATERIAL____Key");

                entity.Property(e => e.ReplaceProductId0materialOverLengthPartNumKey)
                    .HasMaxLength(50)
                    .HasColumnName("Replace___Product_ID__0MATERIAL____Over_Length_Part_Num__Key_");

                entity.Property(e => e.ReplaceSerialNo)
                    .HasMaxLength(50)
                    .HasColumnName("Replace___Serial_No");

                entity.Property(e => e.RmaCreateDate)
                    .HasMaxLength(50)
                    .HasColumnName("RMA_Create_Date");

                entity.Property(e => e.RmaItemNumber0crmNumint)
                    .HasMaxLength(50)
                    .HasColumnName("RMA_Item_Number__0CRM_NUMINT_");

                entity.Property(e => e.RmaItemType)
                    .HasMaxLength(50)
                    .HasColumnName("RMA_Item_Type");

                entity.Property(e => e.RmaItemTypeKey)
                    .HasMaxLength(50)
                    .HasColumnName("RMA_Item_Type___Key");

                entity.Property(e => e.ServiceReqNo)
                    .HasMaxLength(50)
                    .HasColumnName("Service_Req_No");

                entity.Property(e => e.ShipDate)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_Date");

                entity.Property(e => e.ShipToAddr1Key)
                    .HasMaxLength(150)
                    .HasColumnName("ShipTo_Addr1___Key");

                entity.Property(e => e.ShipToAddr2Key)
                    .HasMaxLength(150)
                    .HasColumnName("ShipTo_Addr2___Key");

                entity.Property(e => e.ShipToCityKey)
                    .HasMaxLength(50)
                    .HasColumnName("ShipTo_City___Key");

                entity.Property(e => e.ShipToPartyKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_to_Party___Key");

                entity.Property(e => e.ShipToSiteCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_to_Site_Country___Key");

                entity.Property(e => e.ShipToSiteKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_Site___Key");

                entity.Property(e => e.ShipToSiteName)
                    .HasMaxLength(150)
                    .HasColumnName("ShipTo_Site___Name");

                entity.Property(e => e.ShipToSitePostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_to_Site_Postal_Code___Key");

                entity.Property(e => e.ShipToSiteRegion)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_to_Site_Region");

                entity.Property(e => e.ShipToSiteRegionKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_to_Site_Region___Key");

                entity.Property(e => e.StorageLocationKey)
                    .HasMaxLength(50)
                    .HasColumnName("Storage_Location___Key");

                entity.Property(e => e.StorageLocationText)
                    .HasMaxLength(150)
                    .HasColumnName("Storage_location___Text");

                entity.Property(e => e.TrackingNo)
                    .HasMaxLength(50)
                    .HasColumnName("Tracking_No");

                entity.Property(e => e.ValuationType)
                    .HasMaxLength(50)
                    .HasColumnName("Valuation_Type");

                entity.Property(e => e.Vendor).HasMaxLength(150);

                entity.Property(e => e.VendorKey)
                    .HasMaxLength(50)
                    .HasColumnName("Vendor___Key");
            });

            modelBuilder.Entity<RmaLinesFeb2018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("rma_lines_feb2018", "dsf");

                entity.Property(e => e.AssociatedContactBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Associated_Contact___BAS__Postal_Code__Key_");

                entity.Property(e => e.AssociatedContactBasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Associated_Contact___BAS___Street_2__Key_");

                entity.Property(e => e.AssociatedContactBasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Associated_Contact___BAS___Street_3__Key_");

                entity.Property(e => e.AssociatedContactBasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Associated_Contact___BAS___Street_4__Key_");

                entity.Property(e => e.AssociatedContactBasStreetKey)
                    .HasMaxLength(250)
                    .HasColumnName("Associated_Contact___BAS__Street__Key_");

                entity.Property(e => e.AssociatedContactCity)
                    .HasMaxLength(50)
                    .HasColumnName("Associated_Contact___City");

                entity.Property(e => e.AssociatedContactCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("Associated_Contact___Country__Key_");

                entity.Property(e => e.AssociatedContactCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Associated_Contact___Country__Text_");

                entity.Property(e => e.AssociatedContactKey)
                    .HasMaxLength(50)
                    .HasColumnName("Associated_Contact___Key");

                entity.Property(e => e.AssociatedContactName)
                    .HasMaxLength(250)
                    .HasColumnName("Associated_Contact_Name");

                entity.Property(e => e.AssociatedContactRegionText)
                    .HasMaxLength(50)
                    .HasColumnName("Associated_Contact___Region__Text_");

                entity.Property(e => e.BillToPartyKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_to_Party___Key");

                entity.Property(e => e.ComplaintsNo)
                    .HasMaxLength(50)
                    .HasColumnName("Complaints_No_");

                entity.Property(e => e.Coo)
                    .HasMaxLength(50)
                    .HasColumnName("COO");

                entity.Property(e => e.CustomsDeclCreateDt)
                    .HasMaxLength(50)
                    .HasColumnName("Customs_Decl_Create_Dt");

                entity.Property(e => e.CustomsDeclarationNo)
                    .HasMaxLength(50)
                    .HasColumnName("Customs_Declaration_No");

                entity.Property(e => e.CustomsValuation)
                    .HasMaxLength(50)
                    .HasColumnName("Customs_Valuation");

                entity.Property(e => e.DefectProductId)
                    .HasMaxLength(50)
                    .HasColumnName("Defect___Product_ID");

                entity.Property(e => e.DefectProductIdEccnKey)
                    .HasMaxLength(50)
                    .HasColumnName("Defect___Product_ID___ECCN__Key_");

                entity.Property(e => e.DefectProductIdHtsKey)
                    .HasMaxLength(50)
                    .HasColumnName("Defect___Product_ID___HTS__Key_");

                entity.Property(e => e.DefectProductIdKey)
                    .HasMaxLength(50)
                    .HasColumnName("Defect___Product_ID___Key");

                entity.Property(e => e.DefectProductIdOverLengthPartNumKey)
                    .HasMaxLength(50)
                    .HasColumnName("Defect___Product_ID___Over_Length_Part_Num__Key_");

                entity.Property(e => e.DefectSerialNo)
                    .HasMaxLength(50)
                    .HasColumnName("Defect___Serial_No");

                entity.Property(e => e.DeliveryCreateDate)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Create_Date");

                entity.Property(e => e.DeliveryNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Number");

                entity.Property(e => e.EndCustomerBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___BAS__Postal_Code__Key_");

                entity.Property(e => e.EndCustomerBasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___BAS___Street_2__Key_");

                entity.Property(e => e.EndCustomerBasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___BAS___Street_3__Key_");

                entity.Property(e => e.EndCustomerBasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___BAS___Street_4__Key_");

                entity.Property(e => e.EndCustomerBasStreetKey)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___BAS__Street__Key_");

                entity.Property(e => e.EndCustomerCity)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___City");

                entity.Property(e => e.EndCustomerCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Country__Key_");

                entity.Property(e => e.EndCustomerCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Country__Text_");

                entity.Property(e => e.EndCustomerKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Key");

                entity.Property(e => e.EndCustomerName)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___Name");

                entity.Property(e => e.EndCustomerRegionText)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Region__Text_");

                entity.Property(e => e.ExporterAddr1Key)
                    .HasMaxLength(50)
                    .HasColumnName("Exporter_Addr1___Key");

                entity.Property(e => e.ExporterAddr2Key)
                    .HasMaxLength(50)
                    .HasColumnName("Exporter_Addr2___Key");

                entity.Property(e => e.ExporterCity)
                    .HasMaxLength(50)
                    .HasColumnName("Exporter_City");

                entity.Property(e => e.ExporterCountry)
                    .HasMaxLength(50)
                    .HasColumnName("Exporter_Country");

                entity.Property(e => e.ExporterKey)
                    .HasMaxLength(50)
                    .HasColumnName("Exporter___Key");

                entity.Property(e => e.ExtLicence)
                    .HasMaxLength(50)
                    .HasColumnName("Ext_Licence");

                entity.Property(e => e.GoodsSupplier)
                    .HasMaxLength(50)
                    .HasColumnName("Goods_Supplier");

                entity.Property(e => e.GoodsSupplierKey)
                    .HasMaxLength(50)
                    .HasColumnName("Goods_Supplier___Key");

                entity.Property(e => e.GtsBillToAddr1Key)
                    .HasMaxLength(250)
                    .HasColumnName("GTS_BillTo_Addr1___Key");

                entity.Property(e => e.GtsBillToAddr2Key)
                    .HasMaxLength(250)
                    .HasColumnName("GTS_BillTo_Addr2___Key");

                entity.Property(e => e.GtsBillToAddressKey)
                    .HasMaxLength(250)
                    .HasColumnName("GTS_Bill_to_Address___Key");

                entity.Property(e => e.GtsBillToCity)
                    .HasMaxLength(50)
                    .HasColumnName("GTS_BillTo_City");

                entity.Property(e => e.GtsBillToCountry)
                    .HasMaxLength(50)
                    .HasColumnName("GTS_BillTo_Country");

                entity.Property(e => e.GtsBillToKey)
                    .HasMaxLength(50)
                    .HasColumnName("GTS_BillTo___Key");

                entity.Property(e => e.GtsExporterAddressKey)
                    .HasMaxLength(50)
                    .HasColumnName("GTS_Exporter_Address___Key");

                entity.Property(e => e.GtsShipToAddr1Key)
                    .HasMaxLength(250)
                    .HasColumnName("GTS_ShipTo_Addr1___Key");

                entity.Property(e => e.GtsShipToAddr2Key)
                    .HasMaxLength(250)
                    .HasColumnName("GTS_ShipTo_Addr2___Key");

                entity.Property(e => e.GtsShipToAddressKey)
                    .HasMaxLength(250)
                    .HasColumnName("GTS_Ship_to_Address___Key");

                entity.Property(e => e.GtsShipToCity)
                    .HasMaxLength(50)
                    .HasColumnName("GTS_ShipTo_City");

                entity.Property(e => e.GtsShipToCountry)
                    .HasMaxLength(50)
                    .HasColumnName("GTS_ShipTo_Country");

                entity.Property(e => e.GtsShipToKey)
                    .HasMaxLength(50)
                    .HasColumnName("GTS_ShipTo___Key");

                entity.Property(e => e.HeaderStatus)
                    .HasMaxLength(50)
                    .HasColumnName("Header_Status");

                entity.Property(e => e.InstalledAtBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Installed_At___BAS__Postal_Code__Key_");

                entity.Property(e => e.InstalledAtBasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Installed_At___BAS___Street_2__Key_");

                entity.Property(e => e.InstalledAtBasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Installed_At___BAS___Street_3__Key_");

                entity.Property(e => e.InstalledAtBasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Installed_At___BAS___Street_4__Key_");

                entity.Property(e => e.InstalledAtBasStreetKey)
                    .HasMaxLength(250)
                    .HasColumnName("Installed_At___BAS__Street__Key_");

                entity.Property(e => e.InstalledAtCity)
                    .HasMaxLength(50)
                    .HasColumnName("Installed_At___City");

                entity.Property(e => e.InstalledAtCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("Installed_At___Country__Key_");

                entity.Property(e => e.InstalledAtCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Installed_At___Country__Text_");

                entity.Property(e => e.InstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("Installed_At___Key");

                entity.Property(e => e.InstalledAtName)
                    .HasMaxLength(250)
                    .HasColumnName("Installed_At___Name");

                entity.Property(e => e.InstalledAtRegionText)
                    .HasMaxLength(50)
                    .HasColumnName("Installed_At___Region__Text_");

                entity.Property(e => e.ItemCreateDate)
                    .HasMaxLength(50)
                    .HasColumnName("Item_Create_Date");

                entity.Property(e => e.ItemStatus)
                    .HasMaxLength(50)
                    .HasColumnName("Item_Status");

                entity.Property(e => e.LegalRegulation)
                    .HasMaxLength(50)
                    .HasColumnName("Legal_Regulation");

                entity.Property(e => e.LicenseAppliedDate)
                    .HasMaxLength(50)
                    .HasColumnName("License_Applied_Date");

                entity.Property(e => e.LicenseNumber)
                    .HasMaxLength(50)
                    .HasColumnName("License_Number");

                entity.Property(e => e.LicenseType)
                    .HasMaxLength(50)
                    .HasColumnName("License_Type");

                entity.Property(e => e.LicenseValidFrom)
                    .HasMaxLength(50)
                    .HasColumnName("License_Valid_From");

                entity.Property(e => e.LicenseValidTo)
                    .HasMaxLength(50)
                    .HasColumnName("License_Valid_To");

                entity.Property(e => e.PlantKey)
                    .HasMaxLength(50)
                    .HasColumnName("Plant___Key");

                entity.Property(e => e.PlantText)
                    .HasMaxLength(50)
                    .HasColumnName("Plant___Text");

                entity.Property(e => e.ReplaceEccn)
                    .HasMaxLength(50)
                    .HasColumnName("Replace___ECCN");

                entity.Property(e => e.ReplaceProductId0material)
                    .HasMaxLength(50)
                    .HasColumnName("Replace___Product_ID__0MATERIAL_");

                entity.Property(e => e.ReplaceProductId0materialHtsKey)
                    .HasMaxLength(50)
                    .HasColumnName("Replace___Product_ID__0MATERIAL____HTS__Key_");

                entity.Property(e => e.ReplaceProductId0materialKey)
                    .HasMaxLength(50)
                    .HasColumnName("Replace___Product_ID__0MATERIAL____Key");

                entity.Property(e => e.ReplaceProductId0materialOverLengthPartNumKey)
                    .HasMaxLength(50)
                    .HasColumnName("Replace___Product_ID__0MATERIAL____Over_Length_Part_Num__Key_");

                entity.Property(e => e.ReplaceSerialNo)
                    .HasMaxLength(50)
                    .HasColumnName("Replace___Serial_No");

                entity.Property(e => e.RmaCreateDate)
                    .HasMaxLength(50)
                    .HasColumnName("RMA_Create_Date");

                entity.Property(e => e.RmaItemNumber0crmNumint)
                    .HasMaxLength(50)
                    .HasColumnName("RMA_Item_Number__0CRM_NUMINT_");

                entity.Property(e => e.RmaItemType)
                    .HasMaxLength(50)
                    .HasColumnName("RMA_Item_Type");

                entity.Property(e => e.RmaItemTypeKey)
                    .HasMaxLength(50)
                    .HasColumnName("RMA_Item_Type___Key");

                entity.Property(e => e.ServiceReqNo)
                    .HasMaxLength(50)
                    .HasColumnName("Service_Req_No");

                entity.Property(e => e.ShipDate)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_Date");

                entity.Property(e => e.ShipToAddr1Key)
                    .HasMaxLength(250)
                    .HasColumnName("ShipTo_Addr1___Key");

                entity.Property(e => e.ShipToAddr2Key)
                    .HasMaxLength(250)
                    .HasColumnName("ShipTo_Addr2___Key");

                entity.Property(e => e.ShipToCityKey)
                    .HasMaxLength(50)
                    .HasColumnName("ShipTo_City___Key");

                entity.Property(e => e.ShipToPartyKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_to_Party___Key");

                entity.Property(e => e.ShipToSiteCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_to_Site_Country___Key");

                entity.Property(e => e.ShipToSiteKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_Site___Key");

                entity.Property(e => e.ShipToSiteName)
                    .HasMaxLength(250)
                    .HasColumnName("ShipTo_Site___Name");

                entity.Property(e => e.ShipToSitePostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_to_Site_Postal_Code___Key");

                entity.Property(e => e.ShipToSiteRegion)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_to_Site_Region");

                entity.Property(e => e.ShipToSiteRegionKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_to_Site_Region___Key");

                entity.Property(e => e.StorageLocationKey)
                    .HasMaxLength(50)
                    .HasColumnName("Storage_Location___Key");

                entity.Property(e => e.StorageLocationText)
                    .HasMaxLength(250)
                    .HasColumnName("Storage_location___Text");

                entity.Property(e => e.TrackingNo)
                    .HasMaxLength(50)
                    .HasColumnName("Tracking_No");

                entity.Property(e => e.ValuationType)
                    .HasMaxLength(50)
                    .HasColumnName("Valuation_Type");

                entity.Property(e => e.Vendor).HasMaxLength(50);

                entity.Property(e => e.VendorKey)
                    .HasMaxLength(50)
                    .HasColumnName("Vendor___Key");
            });

            modelBuilder.Entity<RmaLinesJan2018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("rma_lines_jan2018", "dsf");

                entity.Property(e => e.AssociatedContactBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Associated_Contact___BAS__Postal_Code__Key_");

                entity.Property(e => e.AssociatedContactBasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Associated_Contact___BAS___Street_2__Key_");

                entity.Property(e => e.AssociatedContactBasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Associated_Contact___BAS___Street_3__Key_");

                entity.Property(e => e.AssociatedContactBasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Associated_Contact___BAS___Street_4__Key_");

                entity.Property(e => e.AssociatedContactBasStreetKey)
                    .HasMaxLength(250)
                    .HasColumnName("Associated_Contact___BAS__Street__Key_");

                entity.Property(e => e.AssociatedContactCity)
                    .HasMaxLength(50)
                    .HasColumnName("Associated_Contact___City");

                entity.Property(e => e.AssociatedContactCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("Associated_Contact___Country__Key_");

                entity.Property(e => e.AssociatedContactCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Associated_Contact___Country__Text_");

                entity.Property(e => e.AssociatedContactKey)
                    .HasMaxLength(50)
                    .HasColumnName("Associated_Contact___Key");

                entity.Property(e => e.AssociatedContactName)
                    .HasMaxLength(250)
                    .HasColumnName("Associated_Contact_Name");

                entity.Property(e => e.AssociatedContactRegionText)
                    .HasMaxLength(50)
                    .HasColumnName("Associated_Contact___Region__Text_");

                entity.Property(e => e.BillToPartyKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_to_Party___Key");

                entity.Property(e => e.ComplaintsNo)
                    .HasMaxLength(50)
                    .HasColumnName("Complaints_No_");

                entity.Property(e => e.Coo)
                    .HasMaxLength(50)
                    .HasColumnName("COO");

                entity.Property(e => e.CustomsDeclCreateDt)
                    .HasMaxLength(50)
                    .HasColumnName("Customs_Decl_Create_Dt");

                entity.Property(e => e.CustomsDeclarationNo)
                    .HasMaxLength(50)
                    .HasColumnName("Customs_Declaration_No");

                entity.Property(e => e.CustomsValuation)
                    .HasMaxLength(50)
                    .HasColumnName("Customs_Valuation");

                entity.Property(e => e.DefectProductId)
                    .HasMaxLength(50)
                    .HasColumnName("Defect___Product_ID");

                entity.Property(e => e.DefectProductIdEccnKey)
                    .HasMaxLength(50)
                    .HasColumnName("Defect___Product_ID___ECCN__Key_");

                entity.Property(e => e.DefectProductIdHtsKey)
                    .HasMaxLength(50)
                    .HasColumnName("Defect___Product_ID___HTS__Key_");

                entity.Property(e => e.DefectProductIdKey)
                    .HasMaxLength(50)
                    .HasColumnName("Defect___Product_ID___Key");

                entity.Property(e => e.DefectProductIdOverLengthPartNumKey)
                    .HasMaxLength(50)
                    .HasColumnName("Defect___Product_ID___Over_Length_Part_Num__Key_");

                entity.Property(e => e.DefectSerialNo)
                    .HasMaxLength(50)
                    .HasColumnName("Defect___Serial_No");

                entity.Property(e => e.DeliveryCreateDate)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Create_Date");

                entity.Property(e => e.DeliveryNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Number");

                entity.Property(e => e.EndCustomerBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___BAS__Postal_Code__Key_");

                entity.Property(e => e.EndCustomerBasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___BAS___Street_2__Key_");

                entity.Property(e => e.EndCustomerBasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___BAS___Street_3__Key_");

                entity.Property(e => e.EndCustomerBasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___BAS___Street_4__Key_");

                entity.Property(e => e.EndCustomerBasStreetKey)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___BAS__Street__Key_");

                entity.Property(e => e.EndCustomerCity)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___City");

                entity.Property(e => e.EndCustomerCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Country__Key_");

                entity.Property(e => e.EndCustomerCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Country__Text_");

                entity.Property(e => e.EndCustomerKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Key");

                entity.Property(e => e.EndCustomerName)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___Name");

                entity.Property(e => e.EndCustomerRegionText)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Region__Text_");

                entity.Property(e => e.ExporterAddr1Key)
                    .HasMaxLength(250)
                    .HasColumnName("Exporter_Addr1___Key");

                entity.Property(e => e.ExporterAddr2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Exporter_Addr2___Key");

                entity.Property(e => e.ExporterCity)
                    .HasMaxLength(50)
                    .HasColumnName("Exporter_City");

                entity.Property(e => e.ExporterCountry)
                    .HasMaxLength(50)
                    .HasColumnName("Exporter_Country");

                entity.Property(e => e.ExporterKey)
                    .HasMaxLength(50)
                    .HasColumnName("Exporter___Key");

                entity.Property(e => e.ExtLicence)
                    .HasMaxLength(50)
                    .HasColumnName("Ext_Licence");

                entity.Property(e => e.GoodsSupplier)
                    .HasMaxLength(50)
                    .HasColumnName("Goods_Supplier");

                entity.Property(e => e.GoodsSupplierKey)
                    .HasMaxLength(50)
                    .HasColumnName("Goods_Supplier___Key");

                entity.Property(e => e.GtsBillToAddr1Key)
                    .HasMaxLength(250)
                    .HasColumnName("GTS_BillTo_Addr1___Key");

                entity.Property(e => e.GtsBillToAddr2Key)
                    .HasMaxLength(250)
                    .HasColumnName("GTS_BillTo_Addr2___Key");

                entity.Property(e => e.GtsBillToAddressKey)
                    .HasMaxLength(250)
                    .HasColumnName("GTS_Bill_to_Address___Key");

                entity.Property(e => e.GtsBillToCity)
                    .HasMaxLength(50)
                    .HasColumnName("GTS_BillTo_City");

                entity.Property(e => e.GtsBillToCountry)
                    .HasMaxLength(50)
                    .HasColumnName("GTS_BillTo_Country");

                entity.Property(e => e.GtsBillToKey)
                    .HasMaxLength(50)
                    .HasColumnName("GTS_BillTo___Key");

                entity.Property(e => e.GtsExporterAddressKey)
                    .HasMaxLength(250)
                    .HasColumnName("GTS_Exporter_Address___Key");

                entity.Property(e => e.GtsShipToAddr1Key)
                    .HasMaxLength(250)
                    .HasColumnName("GTS_ShipTo_Addr1___Key");

                entity.Property(e => e.GtsShipToAddr2Key)
                    .HasMaxLength(250)
                    .HasColumnName("GTS_ShipTo_Addr2___Key");

                entity.Property(e => e.GtsShipToAddressKey)
                    .HasMaxLength(250)
                    .HasColumnName("GTS_Ship_to_Address___Key");

                entity.Property(e => e.GtsShipToCity)
                    .HasMaxLength(50)
                    .HasColumnName("GTS_ShipTo_City");

                entity.Property(e => e.GtsShipToCountry)
                    .HasMaxLength(50)
                    .HasColumnName("GTS_ShipTo_Country");

                entity.Property(e => e.GtsShipToKey)
                    .HasMaxLength(50)
                    .HasColumnName("GTS_ShipTo___Key");

                entity.Property(e => e.HeaderStatus)
                    .HasMaxLength(50)
                    .HasColumnName("Header_Status");

                entity.Property(e => e.InstalledAtBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Installed_At___BAS__Postal_Code__Key_");

                entity.Property(e => e.InstalledAtBasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Installed_At___BAS___Street_2__Key_");

                entity.Property(e => e.InstalledAtBasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Installed_At___BAS___Street_3__Key_");

                entity.Property(e => e.InstalledAtBasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Installed_At___BAS___Street_4__Key_");

                entity.Property(e => e.InstalledAtBasStreetKey)
                    .HasMaxLength(250)
                    .HasColumnName("Installed_At___BAS__Street__Key_");

                entity.Property(e => e.InstalledAtCity)
                    .HasMaxLength(50)
                    .HasColumnName("Installed_At___City");

                entity.Property(e => e.InstalledAtCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("Installed_At___Country__Key_");

                entity.Property(e => e.InstalledAtCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Installed_At___Country__Text_");

                entity.Property(e => e.InstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("Installed_At___Key");

                entity.Property(e => e.InstalledAtName)
                    .HasMaxLength(250)
                    .HasColumnName("Installed_At___Name");

                entity.Property(e => e.InstalledAtRegionText)
                    .HasMaxLength(50)
                    .HasColumnName("Installed_At___Region__Text_");

                entity.Property(e => e.ItemCreateDate)
                    .HasMaxLength(50)
                    .HasColumnName("Item_Create_Date");

                entity.Property(e => e.ItemStatus)
                    .HasMaxLength(50)
                    .HasColumnName("Item_Status");

                entity.Property(e => e.LegalRegulation)
                    .HasMaxLength(50)
                    .HasColumnName("Legal_Regulation");

                entity.Property(e => e.LicenseAppliedDate)
                    .HasMaxLength(50)
                    .HasColumnName("License_Applied_Date");

                entity.Property(e => e.LicenseNumber)
                    .HasMaxLength(50)
                    .HasColumnName("License_Number");

                entity.Property(e => e.LicenseType)
                    .HasMaxLength(50)
                    .HasColumnName("License_Type");

                entity.Property(e => e.LicenseValidFrom)
                    .HasMaxLength(50)
                    .HasColumnName("License_Valid_From");

                entity.Property(e => e.LicenseValidTo)
                    .HasMaxLength(50)
                    .HasColumnName("License_Valid_To");

                entity.Property(e => e.PlantKey)
                    .HasMaxLength(50)
                    .HasColumnName("Plant___Key");

                entity.Property(e => e.PlantText)
                    .HasMaxLength(50)
                    .HasColumnName("Plant___Text");

                entity.Property(e => e.ReplaceEccn)
                    .HasMaxLength(50)
                    .HasColumnName("Replace___ECCN");

                entity.Property(e => e.ReplaceProductId0material)
                    .HasMaxLength(50)
                    .HasColumnName("Replace___Product_ID__0MATERIAL_");

                entity.Property(e => e.ReplaceProductId0materialHtsKey)
                    .HasMaxLength(50)
                    .HasColumnName("Replace___Product_ID__0MATERIAL____HTS__Key_");

                entity.Property(e => e.ReplaceProductId0materialKey)
                    .HasMaxLength(50)
                    .HasColumnName("Replace___Product_ID__0MATERIAL____Key");

                entity.Property(e => e.ReplaceProductId0materialOverLengthPartNumKey)
                    .HasMaxLength(50)
                    .HasColumnName("Replace___Product_ID__0MATERIAL____Over_Length_Part_Num__Key_");

                entity.Property(e => e.ReplaceSerialNo)
                    .HasMaxLength(50)
                    .HasColumnName("Replace___Serial_No");

                entity.Property(e => e.RmaCreateDate)
                    .HasMaxLength(50)
                    .HasColumnName("RMA_Create_Date");

                entity.Property(e => e.RmaItemNumber0crmNumint)
                    .HasMaxLength(50)
                    .HasColumnName("RMA_Item_Number__0CRM_NUMINT_");

                entity.Property(e => e.RmaItemType)
                    .HasMaxLength(50)
                    .HasColumnName("RMA_Item_Type");

                entity.Property(e => e.RmaItemTypeKey)
                    .HasMaxLength(50)
                    .HasColumnName("RMA_Item_Type___Key");

                entity.Property(e => e.ServiceReqNo)
                    .HasMaxLength(50)
                    .HasColumnName("Service_Req_No");

                entity.Property(e => e.ShipDate)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_Date");

                entity.Property(e => e.ShipToAddr1Key)
                    .HasMaxLength(250)
                    .HasColumnName("ShipTo_Addr1___Key");

                entity.Property(e => e.ShipToAddr2Key)
                    .HasMaxLength(250)
                    .HasColumnName("ShipTo_Addr2___Key");

                entity.Property(e => e.ShipToCityKey)
                    .HasMaxLength(50)
                    .HasColumnName("ShipTo_City___Key");

                entity.Property(e => e.ShipToPartyKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_to_Party___Key");

                entity.Property(e => e.ShipToSiteCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_to_Site_Country___Key");

                entity.Property(e => e.ShipToSiteKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_Site___Key");

                entity.Property(e => e.ShipToSiteName)
                    .HasMaxLength(250)
                    .HasColumnName("ShipTo_Site___Name");

                entity.Property(e => e.ShipToSitePostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_to_Site_Postal_Code___Key");

                entity.Property(e => e.ShipToSiteRegion)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_to_Site_Region");

                entity.Property(e => e.ShipToSiteRegionKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_to_Site_Region___Key");

                entity.Property(e => e.StorageLocationKey)
                    .HasMaxLength(50)
                    .HasColumnName("Storage_Location___Key");

                entity.Property(e => e.StorageLocationText)
                    .HasMaxLength(50)
                    .HasColumnName("Storage_location___Text");

                entity.Property(e => e.TrackingNo)
                    .HasMaxLength(50)
                    .HasColumnName("Tracking_No");

                entity.Property(e => e.ValuationType)
                    .HasMaxLength(50)
                    .HasColumnName("Valuation_Type");

                entity.Property(e => e.Vendor).HasMaxLength(50);

                entity.Property(e => e.VendorKey)
                    .HasMaxLength(50)
                    .HasColumnName("Vendor___Key");
            });

            modelBuilder.Entity<RmaLinesJunjul2018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("rma_lines_junjul2018", "dsf");

                entity.Property(e => e.AssociatedContactBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Associated_Contact___BAS__Postal_Code__Key_");

                entity.Property(e => e.AssociatedContactBasStreet2Key)
                    .HasMaxLength(150)
                    .HasColumnName("Associated_Contact___BAS___Street_2__Key_");

                entity.Property(e => e.AssociatedContactBasStreet3Key)
                    .HasMaxLength(150)
                    .HasColumnName("Associated_Contact___BAS___Street_3__Key_");

                entity.Property(e => e.AssociatedContactBasStreet4Key)
                    .HasMaxLength(150)
                    .HasColumnName("Associated_Contact___BAS___Street_4__Key_");

                entity.Property(e => e.AssociatedContactBasStreetKey)
                    .HasMaxLength(150)
                    .HasColumnName("Associated_Contact___BAS__Street__Key_");

                entity.Property(e => e.AssociatedContactCity)
                    .HasMaxLength(50)
                    .HasColumnName("Associated_Contact___City");

                entity.Property(e => e.AssociatedContactCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("Associated_Contact___Country__Key_");

                entity.Property(e => e.AssociatedContactCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Associated_Contact___Country__Text_");

                entity.Property(e => e.AssociatedContactKey)
                    .HasMaxLength(50)
                    .HasColumnName("Associated_Contact___Key");

                entity.Property(e => e.AssociatedContactName)
                    .HasMaxLength(150)
                    .HasColumnName("Associated_Contact_Name");

                entity.Property(e => e.AssociatedContactRegionText)
                    .HasMaxLength(50)
                    .HasColumnName("Associated_Contact___Region__Text_");

                entity.Property(e => e.BillToPartyKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_to_Party___Key");

                entity.Property(e => e.ComplaintsNo)
                    .HasMaxLength(50)
                    .HasColumnName("Complaints_No_");

                entity.Property(e => e.Coo)
                    .HasMaxLength(50)
                    .HasColumnName("COO");

                entity.Property(e => e.CustomsDeclCreateDt)
                    .HasMaxLength(50)
                    .HasColumnName("Customs_Decl_Create_Dt");

                entity.Property(e => e.CustomsDeclarationNo)
                    .HasMaxLength(50)
                    .HasColumnName("Customs_Declaration_No");

                entity.Property(e => e.CustomsValuation)
                    .HasMaxLength(50)
                    .HasColumnName("Customs_Valuation");

                entity.Property(e => e.DefectProductId)
                    .HasMaxLength(50)
                    .HasColumnName("Defect___Product_ID");

                entity.Property(e => e.DefectProductIdEccnKey)
                    .HasMaxLength(50)
                    .HasColumnName("Defect___Product_ID___ECCN__Key_");

                entity.Property(e => e.DefectProductIdHtsKey)
                    .HasMaxLength(50)
                    .HasColumnName("Defect___Product_ID___HTS__Key_");

                entity.Property(e => e.DefectProductIdKey)
                    .HasMaxLength(50)
                    .HasColumnName("Defect___Product_ID___Key");

                entity.Property(e => e.DefectProductIdOverLengthPartNumKey)
                    .HasMaxLength(50)
                    .HasColumnName("Defect___Product_ID___Over_Length_Part_Num__Key_");

                entity.Property(e => e.DefectSerialNo)
                    .HasMaxLength(50)
                    .HasColumnName("Defect___Serial_No");

                entity.Property(e => e.DeliveryCreateDate)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Create_Date");

                entity.Property(e => e.DeliveryNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Number");

                entity.Property(e => e.EndCustomerBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___BAS__Postal_Code__Key_");

                entity.Property(e => e.EndCustomerBasStreet2Key)
                    .HasMaxLength(150)
                    .HasColumnName("End_Customer___BAS___Street_2__Key_");

                entity.Property(e => e.EndCustomerBasStreet3Key)
                    .HasMaxLength(150)
                    .HasColumnName("End_Customer___BAS___Street_3__Key_");

                entity.Property(e => e.EndCustomerBasStreet4Key)
                    .HasMaxLength(150)
                    .HasColumnName("End_Customer___BAS___Street_4__Key_");

                entity.Property(e => e.EndCustomerBasStreetKey)
                    .HasMaxLength(150)
                    .HasColumnName("End_Customer___BAS__Street__Key_");

                entity.Property(e => e.EndCustomerCity)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___City");

                entity.Property(e => e.EndCustomerCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Country__Key_");

                entity.Property(e => e.EndCustomerCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Country__Text_");

                entity.Property(e => e.EndCustomerKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Key");

                entity.Property(e => e.EndCustomerName)
                    .HasMaxLength(150)
                    .HasColumnName("End_Customer___Name");

                entity.Property(e => e.EndCustomerRegionText)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Region__Text_");

                entity.Property(e => e.ExporterAddr1Key)
                    .HasMaxLength(50)
                    .HasColumnName("Exporter_Addr1___Key");

                entity.Property(e => e.ExporterAddr2Key)
                    .HasMaxLength(50)
                    .HasColumnName("Exporter_Addr2___Key");

                entity.Property(e => e.ExporterCity)
                    .HasMaxLength(50)
                    .HasColumnName("Exporter_City");

                entity.Property(e => e.ExporterCountry)
                    .HasMaxLength(50)
                    .HasColumnName("Exporter_Country");

                entity.Property(e => e.ExporterKey)
                    .HasMaxLength(50)
                    .HasColumnName("Exporter___Key");

                entity.Property(e => e.ExtLicence)
                    .HasMaxLength(50)
                    .HasColumnName("Ext_Licence");

                entity.Property(e => e.GoodsSupplier)
                    .HasMaxLength(50)
                    .HasColumnName("Goods_Supplier");

                entity.Property(e => e.GoodsSupplierKey)
                    .HasMaxLength(50)
                    .HasColumnName("Goods_Supplier___Key");

                entity.Property(e => e.GtsBillToAddr1Key)
                    .HasMaxLength(150)
                    .HasColumnName("GTS_BillTo_Addr1___Key");

                entity.Property(e => e.GtsBillToAddr2Key)
                    .HasMaxLength(150)
                    .HasColumnName("GTS_BillTo_Addr2___Key");

                entity.Property(e => e.GtsBillToAddressKey)
                    .HasMaxLength(150)
                    .HasColumnName("GTS_Bill_to_Address___Key");

                entity.Property(e => e.GtsBillToCity)
                    .HasMaxLength(50)
                    .HasColumnName("GTS_BillTo_City");

                entity.Property(e => e.GtsBillToCountry)
                    .HasMaxLength(50)
                    .HasColumnName("GTS_BillTo_Country");

                entity.Property(e => e.GtsBillToKey)
                    .HasMaxLength(50)
                    .HasColumnName("GTS_BillTo___Key");

                entity.Property(e => e.GtsExporterAddressKey)
                    .HasMaxLength(50)
                    .HasColumnName("GTS_Exporter_Address___Key");

                entity.Property(e => e.GtsShipToAddr1Key)
                    .HasMaxLength(150)
                    .HasColumnName("GTS_ShipTo_Addr1___Key");

                entity.Property(e => e.GtsShipToAddr2Key)
                    .HasMaxLength(150)
                    .HasColumnName("GTS_ShipTo_Addr2___Key");

                entity.Property(e => e.GtsShipToAddressKey)
                    .HasMaxLength(150)
                    .HasColumnName("GTS_Ship_to_Address___Key");

                entity.Property(e => e.GtsShipToCity)
                    .HasMaxLength(50)
                    .HasColumnName("GTS_ShipTo_City");

                entity.Property(e => e.GtsShipToCountry)
                    .HasMaxLength(50)
                    .HasColumnName("GTS_ShipTo_Country");

                entity.Property(e => e.GtsShipToKey)
                    .HasMaxLength(50)
                    .HasColumnName("GTS_ShipTo___Key");

                entity.Property(e => e.HeaderStatus)
                    .HasMaxLength(50)
                    .HasColumnName("Header_Status");

                entity.Property(e => e.InstalledAtBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Installed_At___BAS__Postal_Code__Key_");

                entity.Property(e => e.InstalledAtBasStreet2Key)
                    .HasMaxLength(150)
                    .HasColumnName("Installed_At___BAS___Street_2__Key_");

                entity.Property(e => e.InstalledAtBasStreet3Key)
                    .HasMaxLength(150)
                    .HasColumnName("Installed_At___BAS___Street_3__Key_");

                entity.Property(e => e.InstalledAtBasStreet4Key)
                    .HasMaxLength(150)
                    .HasColumnName("Installed_At___BAS___Street_4__Key_");

                entity.Property(e => e.InstalledAtBasStreetKey)
                    .HasMaxLength(150)
                    .HasColumnName("Installed_At___BAS__Street__Key_");

                entity.Property(e => e.InstalledAtCity)
                    .HasMaxLength(50)
                    .HasColumnName("Installed_At___City");

                entity.Property(e => e.InstalledAtCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("Installed_At___Country__Key_");

                entity.Property(e => e.InstalledAtCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Installed_At___Country__Text_");

                entity.Property(e => e.InstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("Installed_At___Key");

                entity.Property(e => e.InstalledAtName)
                    .HasMaxLength(150)
                    .HasColumnName("Installed_At___Name");

                entity.Property(e => e.InstalledAtRegionText)
                    .HasMaxLength(50)
                    .HasColumnName("Installed_At___Region__Text_");

                entity.Property(e => e.ItemCreateDate)
                    .HasMaxLength(50)
                    .HasColumnName("Item_Create_Date");

                entity.Property(e => e.ItemStatus)
                    .HasMaxLength(50)
                    .HasColumnName("Item_Status");

                entity.Property(e => e.LegalRegulation)
                    .HasMaxLength(50)
                    .HasColumnName("Legal_Regulation");

                entity.Property(e => e.LicenseAppliedDate)
                    .HasMaxLength(50)
                    .HasColumnName("License_Applied_Date");

                entity.Property(e => e.LicenseNumber)
                    .HasMaxLength(50)
                    .HasColumnName("License_Number");

                entity.Property(e => e.LicenseType)
                    .HasMaxLength(50)
                    .HasColumnName("License_Type");

                entity.Property(e => e.LicenseValidFrom)
                    .HasMaxLength(50)
                    .HasColumnName("License_Valid_From");

                entity.Property(e => e.LicenseValidTo)
                    .HasMaxLength(50)
                    .HasColumnName("License_Valid_To");

                entity.Property(e => e.PlantKey)
                    .HasMaxLength(50)
                    .HasColumnName("Plant___Key");

                entity.Property(e => e.PlantText)
                    .HasMaxLength(150)
                    .HasColumnName("Plant___Text");

                entity.Property(e => e.ReplaceEccn)
                    .HasMaxLength(50)
                    .HasColumnName("Replace___ECCN");

                entity.Property(e => e.ReplaceProductId0material)
                    .HasMaxLength(50)
                    .HasColumnName("Replace___Product_ID__0MATERIAL_");

                entity.Property(e => e.ReplaceProductId0materialHtsKey)
                    .HasMaxLength(50)
                    .HasColumnName("Replace___Product_ID__0MATERIAL____HTS__Key_");

                entity.Property(e => e.ReplaceProductId0materialKey)
                    .HasMaxLength(50)
                    .HasColumnName("Replace___Product_ID__0MATERIAL____Key");

                entity.Property(e => e.ReplaceProductId0materialOverLengthPartNumKey)
                    .HasMaxLength(50)
                    .HasColumnName("Replace___Product_ID__0MATERIAL____Over_Length_Part_Num__Key_");

                entity.Property(e => e.ReplaceSerialNo)
                    .HasMaxLength(50)
                    .HasColumnName("Replace___Serial_No");

                entity.Property(e => e.RmaCreateDate)
                    .HasMaxLength(50)
                    .HasColumnName("RMA_Create_Date");

                entity.Property(e => e.RmaItemNumber0crmNumint)
                    .HasMaxLength(50)
                    .HasColumnName("RMA_Item_Number__0CRM_NUMINT_");

                entity.Property(e => e.RmaItemType)
                    .HasMaxLength(50)
                    .HasColumnName("RMA_Item_Type");

                entity.Property(e => e.RmaItemTypeKey)
                    .HasMaxLength(50)
                    .HasColumnName("RMA_Item_Type___Key");

                entity.Property(e => e.ServiceReqNo)
                    .HasMaxLength(50)
                    .HasColumnName("Service_Req_No");

                entity.Property(e => e.ShipDate)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_Date");

                entity.Property(e => e.ShipToAddr1Key)
                    .HasMaxLength(150)
                    .HasColumnName("ShipTo_Addr1___Key");

                entity.Property(e => e.ShipToAddr2Key)
                    .HasMaxLength(150)
                    .HasColumnName("ShipTo_Addr2___Key");

                entity.Property(e => e.ShipToCityKey)
                    .HasMaxLength(50)
                    .HasColumnName("ShipTo_City___Key");

                entity.Property(e => e.ShipToPartyKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_to_Party___Key");

                entity.Property(e => e.ShipToSiteCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_to_Site_Country___Key");

                entity.Property(e => e.ShipToSiteKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_Site___Key");

                entity.Property(e => e.ShipToSiteName)
                    .HasMaxLength(150)
                    .HasColumnName("ShipTo_Site___Name");

                entity.Property(e => e.ShipToSitePostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_to_Site_Postal_Code___Key");

                entity.Property(e => e.ShipToSiteRegion)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_to_Site_Region");

                entity.Property(e => e.ShipToSiteRegionKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_to_Site_Region___Key");

                entity.Property(e => e.StorageLocationKey)
                    .HasMaxLength(50)
                    .HasColumnName("Storage_Location___Key");

                entity.Property(e => e.StorageLocationText)
                    .HasMaxLength(150)
                    .HasColumnName("Storage_location___Text");

                entity.Property(e => e.TrackingNo)
                    .HasMaxLength(50)
                    .HasColumnName("Tracking_No");

                entity.Property(e => e.ValuationType)
                    .HasMaxLength(50)
                    .HasColumnName("Valuation_Type");

                entity.Property(e => e.Vendor).HasMaxLength(150);

                entity.Property(e => e.VendorKey)
                    .HasMaxLength(50)
                    .HasColumnName("Vendor___Key");
            });

            modelBuilder.Entity<RmaLinesMar2018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("rma_lines_mar2018", "dsf");

                entity.Property(e => e.AssociatedContactBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Associated_Contact___BAS__Postal_Code__Key_");

                entity.Property(e => e.AssociatedContactBasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Associated_Contact___BAS___Street_2__Key_");

                entity.Property(e => e.AssociatedContactBasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Associated_Contact___BAS___Street_3__Key_");

                entity.Property(e => e.AssociatedContactBasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Associated_Contact___BAS___Street_4__Key_");

                entity.Property(e => e.AssociatedContactBasStreetKey)
                    .HasMaxLength(250)
                    .HasColumnName("Associated_Contact___BAS__Street__Key_");

                entity.Property(e => e.AssociatedContactCity)
                    .HasMaxLength(50)
                    .HasColumnName("Associated_Contact___City");

                entity.Property(e => e.AssociatedContactCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("Associated_Contact___Country__Key_");

                entity.Property(e => e.AssociatedContactCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Associated_Contact___Country__Text_");

                entity.Property(e => e.AssociatedContactKey)
                    .HasMaxLength(50)
                    .HasColumnName("Associated_Contact___Key");

                entity.Property(e => e.AssociatedContactName)
                    .HasMaxLength(250)
                    .HasColumnName("Associated_Contact_Name");

                entity.Property(e => e.AssociatedContactRegionText)
                    .HasMaxLength(50)
                    .HasColumnName("Associated_Contact___Region__Text_");

                entity.Property(e => e.BillToPartyKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_to_Party___Key");

                entity.Property(e => e.ComplaintsNo)
                    .HasMaxLength(50)
                    .HasColumnName("Complaints_No_");

                entity.Property(e => e.Coo)
                    .HasMaxLength(50)
                    .HasColumnName("COO");

                entity.Property(e => e.CustomsDeclCreateDt)
                    .HasMaxLength(50)
                    .HasColumnName("Customs_Decl_Create_Dt");

                entity.Property(e => e.CustomsDeclarationNo)
                    .HasMaxLength(50)
                    .HasColumnName("Customs_Declaration_No");

                entity.Property(e => e.CustomsValuation)
                    .HasMaxLength(50)
                    .HasColumnName("Customs_Valuation");

                entity.Property(e => e.DefectProductId)
                    .HasMaxLength(50)
                    .HasColumnName("Defect___Product_ID");

                entity.Property(e => e.DefectProductIdEccnKey)
                    .HasMaxLength(50)
                    .HasColumnName("Defect___Product_ID___ECCN__Key_");

                entity.Property(e => e.DefectProductIdHtsKey)
                    .HasMaxLength(50)
                    .HasColumnName("Defect___Product_ID___HTS__Key_");

                entity.Property(e => e.DefectProductIdKey)
                    .HasMaxLength(50)
                    .HasColumnName("Defect___Product_ID___Key");

                entity.Property(e => e.DefectProductIdOverLengthPartNumKey)
                    .HasMaxLength(50)
                    .HasColumnName("Defect___Product_ID___Over_Length_Part_Num__Key_");

                entity.Property(e => e.DefectSerialNo)
                    .HasMaxLength(50)
                    .HasColumnName("Defect___Serial_No");

                entity.Property(e => e.DeliveryCreateDate)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Create_Date");

                entity.Property(e => e.DeliveryNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Number");

                entity.Property(e => e.EndCustomerBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___BAS__Postal_Code__Key_");

                entity.Property(e => e.EndCustomerBasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___BAS___Street_2__Key_");

                entity.Property(e => e.EndCustomerBasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___BAS___Street_3__Key_");

                entity.Property(e => e.EndCustomerBasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___BAS___Street_4__Key_");

                entity.Property(e => e.EndCustomerBasStreetKey)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___BAS__Street__Key_");

                entity.Property(e => e.EndCustomerCity)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___City");

                entity.Property(e => e.EndCustomerCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Country__Key_");

                entity.Property(e => e.EndCustomerCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Country__Text_");

                entity.Property(e => e.EndCustomerKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Key");

                entity.Property(e => e.EndCustomerName)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___Name");

                entity.Property(e => e.EndCustomerRegionText)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Region__Text_");

                entity.Property(e => e.ExporterAddr1Key)
                    .HasMaxLength(250)
                    .HasColumnName("Exporter_Addr1___Key");

                entity.Property(e => e.ExporterAddr2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Exporter_Addr2___Key");

                entity.Property(e => e.ExporterCity)
                    .HasMaxLength(50)
                    .HasColumnName("Exporter_City");

                entity.Property(e => e.ExporterCountry)
                    .HasMaxLength(50)
                    .HasColumnName("Exporter_Country");

                entity.Property(e => e.ExporterKey)
                    .HasMaxLength(50)
                    .HasColumnName("Exporter___Key");

                entity.Property(e => e.ExtLicence)
                    .HasMaxLength(50)
                    .HasColumnName("Ext_Licence");

                entity.Property(e => e.GoodsSupplier)
                    .HasMaxLength(50)
                    .HasColumnName("Goods_Supplier");

                entity.Property(e => e.GoodsSupplierKey)
                    .HasMaxLength(50)
                    .HasColumnName("Goods_Supplier___Key");

                entity.Property(e => e.GtsBillToAddr1Key)
                    .HasMaxLength(250)
                    .HasColumnName("GTS_BillTo_Addr1___Key");

                entity.Property(e => e.GtsBillToAddr2Key)
                    .HasMaxLength(250)
                    .HasColumnName("GTS_BillTo_Addr2___Key");

                entity.Property(e => e.GtsBillToAddressKey)
                    .HasMaxLength(250)
                    .HasColumnName("GTS_Bill_to_Address___Key");

                entity.Property(e => e.GtsBillToCity)
                    .HasMaxLength(50)
                    .HasColumnName("GTS_BillTo_City");

                entity.Property(e => e.GtsBillToCountry)
                    .HasMaxLength(50)
                    .HasColumnName("GTS_BillTo_Country");

                entity.Property(e => e.GtsBillToKey)
                    .HasMaxLength(50)
                    .HasColumnName("GTS_BillTo___Key");

                entity.Property(e => e.GtsExporterAddressKey)
                    .HasMaxLength(50)
                    .HasColumnName("GTS_Exporter_Address___Key");

                entity.Property(e => e.GtsShipToAddr1Key)
                    .HasMaxLength(250)
                    .HasColumnName("GTS_ShipTo_Addr1___Key");

                entity.Property(e => e.GtsShipToAddr2Key)
                    .HasMaxLength(250)
                    .HasColumnName("GTS_ShipTo_Addr2___Key");

                entity.Property(e => e.GtsShipToAddressKey)
                    .HasMaxLength(250)
                    .HasColumnName("GTS_Ship_to_Address___Key");

                entity.Property(e => e.GtsShipToCity)
                    .HasMaxLength(50)
                    .HasColumnName("GTS_ShipTo_City");

                entity.Property(e => e.GtsShipToCountry)
                    .HasMaxLength(50)
                    .HasColumnName("GTS_ShipTo_Country");

                entity.Property(e => e.GtsShipToKey)
                    .HasMaxLength(50)
                    .HasColumnName("GTS_ShipTo___Key");

                entity.Property(e => e.HeaderStatus)
                    .HasMaxLength(50)
                    .HasColumnName("Header_Status");

                entity.Property(e => e.InstalledAtBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Installed_At___BAS__Postal_Code__Key_");

                entity.Property(e => e.InstalledAtBasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Installed_At___BAS___Street_2__Key_");

                entity.Property(e => e.InstalledAtBasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Installed_At___BAS___Street_3__Key_");

                entity.Property(e => e.InstalledAtBasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Installed_At___BAS___Street_4__Key_");

                entity.Property(e => e.InstalledAtBasStreetKey)
                    .HasMaxLength(250)
                    .HasColumnName("Installed_At___BAS__Street__Key_");

                entity.Property(e => e.InstalledAtCity)
                    .HasMaxLength(50)
                    .HasColumnName("Installed_At___City");

                entity.Property(e => e.InstalledAtCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("Installed_At___Country__Key_");

                entity.Property(e => e.InstalledAtCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Installed_At___Country__Text_");

                entity.Property(e => e.InstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("Installed_At___Key");

                entity.Property(e => e.InstalledAtName)
                    .HasMaxLength(250)
                    .HasColumnName("Installed_At___Name");

                entity.Property(e => e.InstalledAtRegionText)
                    .HasMaxLength(50)
                    .HasColumnName("Installed_At___Region__Text_");

                entity.Property(e => e.ItemCreateDate)
                    .HasMaxLength(50)
                    .HasColumnName("Item_Create_Date");

                entity.Property(e => e.ItemStatus)
                    .HasMaxLength(50)
                    .HasColumnName("Item_Status");

                entity.Property(e => e.LegalRegulation)
                    .HasMaxLength(50)
                    .HasColumnName("Legal_Regulation");

                entity.Property(e => e.LicenseAppliedDate)
                    .HasMaxLength(50)
                    .HasColumnName("License_Applied_Date");

                entity.Property(e => e.LicenseNumber)
                    .HasMaxLength(50)
                    .HasColumnName("License_Number");

                entity.Property(e => e.LicenseType)
                    .HasMaxLength(50)
                    .HasColumnName("License_Type");

                entity.Property(e => e.LicenseValidFrom)
                    .HasMaxLength(50)
                    .HasColumnName("License_Valid_From");

                entity.Property(e => e.LicenseValidTo)
                    .HasMaxLength(50)
                    .HasColumnName("License_Valid_To");

                entity.Property(e => e.PlantKey)
                    .HasMaxLength(50)
                    .HasColumnName("Plant___Key");

                entity.Property(e => e.PlantText)
                    .HasMaxLength(50)
                    .HasColumnName("Plant___Text");

                entity.Property(e => e.ReplaceEccn)
                    .HasMaxLength(50)
                    .HasColumnName("Replace___ECCN");

                entity.Property(e => e.ReplaceProductId0material)
                    .HasMaxLength(50)
                    .HasColumnName("Replace___Product_ID__0MATERIAL_");

                entity.Property(e => e.ReplaceProductId0materialHtsKey)
                    .HasMaxLength(50)
                    .HasColumnName("Replace___Product_ID__0MATERIAL____HTS__Key_");

                entity.Property(e => e.ReplaceProductId0materialKey)
                    .HasMaxLength(50)
                    .HasColumnName("Replace___Product_ID__0MATERIAL____Key");

                entity.Property(e => e.ReplaceProductId0materialOverLengthPartNumKey)
                    .HasMaxLength(50)
                    .HasColumnName("Replace___Product_ID__0MATERIAL____Over_Length_Part_Num__Key_");

                entity.Property(e => e.ReplaceSerialNo)
                    .HasMaxLength(50)
                    .HasColumnName("Replace___Serial_No");

                entity.Property(e => e.RmaCreateDate)
                    .HasMaxLength(50)
                    .HasColumnName("RMA_Create_Date");

                entity.Property(e => e.RmaItemNumber0crmNumint)
                    .HasMaxLength(50)
                    .HasColumnName("RMA_Item_Number__0CRM_NUMINT_");

                entity.Property(e => e.RmaItemType)
                    .HasMaxLength(50)
                    .HasColumnName("RMA_Item_Type");

                entity.Property(e => e.RmaItemTypeKey)
                    .HasMaxLength(50)
                    .HasColumnName("RMA_Item_Type___Key");

                entity.Property(e => e.ServiceReqNo)
                    .HasMaxLength(50)
                    .HasColumnName("Service_Req_No");

                entity.Property(e => e.ShipDate)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_Date");

                entity.Property(e => e.ShipToAddr1Key)
                    .HasMaxLength(250)
                    .HasColumnName("ShipTo_Addr1___Key");

                entity.Property(e => e.ShipToAddr2Key)
                    .HasMaxLength(250)
                    .HasColumnName("ShipTo_Addr2___Key");

                entity.Property(e => e.ShipToCityKey)
                    .HasMaxLength(50)
                    .HasColumnName("ShipTo_City___Key");

                entity.Property(e => e.ShipToPartyKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_to_Party___Key");

                entity.Property(e => e.ShipToSiteCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_to_Site_Country___Key");

                entity.Property(e => e.ShipToSiteKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_Site___Key");

                entity.Property(e => e.ShipToSiteName)
                    .HasMaxLength(250)
                    .HasColumnName("ShipTo_Site___Name");

                entity.Property(e => e.ShipToSitePostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_to_Site_Postal_Code___Key");

                entity.Property(e => e.ShipToSiteRegion)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_to_Site_Region");

                entity.Property(e => e.ShipToSiteRegionKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_to_Site_Region___Key");

                entity.Property(e => e.StorageLocationKey)
                    .HasMaxLength(50)
                    .HasColumnName("Storage_Location___Key");

                entity.Property(e => e.StorageLocationText)
                    .HasMaxLength(50)
                    .HasColumnName("Storage_location___Text");

                entity.Property(e => e.TrackingNo)
                    .HasMaxLength(50)
                    .HasColumnName("Tracking_No");

                entity.Property(e => e.ValuationType)
                    .HasMaxLength(50)
                    .HasColumnName("Valuation_Type");

                entity.Property(e => e.Vendor).HasMaxLength(50);

                entity.Property(e => e.VendorKey)
                    .HasMaxLength(50)
                    .HasColumnName("Vendor___Key");
            });

            modelBuilder.Entity<RmaLinesMay2018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("rma_lines_may2018", "dsf");

                entity.Property(e => e.AssociatedContactBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Associated_Contact___BAS__Postal_Code__Key_");

                entity.Property(e => e.AssociatedContactBasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Associated_Contact___BAS___Street_2__Key_");

                entity.Property(e => e.AssociatedContactBasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Associated_Contact___BAS___Street_3__Key_");

                entity.Property(e => e.AssociatedContactBasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Associated_Contact___BAS___Street_4__Key_");

                entity.Property(e => e.AssociatedContactBasStreetKey)
                    .HasMaxLength(250)
                    .HasColumnName("Associated_Contact___BAS__Street__Key_");

                entity.Property(e => e.AssociatedContactCity)
                    .HasMaxLength(50)
                    .HasColumnName("Associated_Contact___City");

                entity.Property(e => e.AssociatedContactCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("Associated_Contact___Country__Key_");

                entity.Property(e => e.AssociatedContactCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Associated_Contact___Country__Text_");

                entity.Property(e => e.AssociatedContactKey)
                    .HasMaxLength(50)
                    .HasColumnName("Associated_Contact___Key");

                entity.Property(e => e.AssociatedContactName)
                    .HasMaxLength(250)
                    .HasColumnName("Associated_Contact_Name");

                entity.Property(e => e.AssociatedContactRegionText)
                    .HasMaxLength(50)
                    .HasColumnName("Associated_Contact___Region__Text_");

                entity.Property(e => e.BillToPartyKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_to_Party___Key");

                entity.Property(e => e.ComplaintsNo)
                    .HasMaxLength(50)
                    .HasColumnName("Complaints_No_");

                entity.Property(e => e.Coo)
                    .HasMaxLength(50)
                    .HasColumnName("COO");

                entity.Property(e => e.CustomsDeclCreateDt)
                    .HasMaxLength(50)
                    .HasColumnName("Customs_Decl_Create_Dt");

                entity.Property(e => e.CustomsDeclarationNo)
                    .HasMaxLength(50)
                    .HasColumnName("Customs_Declaration_No");

                entity.Property(e => e.CustomsValuation)
                    .HasMaxLength(50)
                    .HasColumnName("Customs_Valuation");

                entity.Property(e => e.DefectProductId)
                    .HasMaxLength(50)
                    .HasColumnName("Defect___Product_ID");

                entity.Property(e => e.DefectProductIdEccnKey)
                    .HasMaxLength(50)
                    .HasColumnName("Defect___Product_ID___ECCN__Key_");

                entity.Property(e => e.DefectProductIdHtsKey)
                    .HasMaxLength(50)
                    .HasColumnName("Defect___Product_ID___HTS__Key_");

                entity.Property(e => e.DefectProductIdKey)
                    .HasMaxLength(50)
                    .HasColumnName("Defect___Product_ID___Key");

                entity.Property(e => e.DefectProductIdOverLengthPartNumKey)
                    .HasMaxLength(50)
                    .HasColumnName("Defect___Product_ID___Over_Length_Part_Num__Key_");

                entity.Property(e => e.DefectSerialNo)
                    .HasMaxLength(50)
                    .HasColumnName("Defect___Serial_No");

                entity.Property(e => e.DeliveryCreateDate)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Create_Date");

                entity.Property(e => e.DeliveryNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Number");

                entity.Property(e => e.EndCustomerBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___BAS__Postal_Code__Key_");

                entity.Property(e => e.EndCustomerBasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___BAS___Street_2__Key_");

                entity.Property(e => e.EndCustomerBasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___BAS___Street_3__Key_");

                entity.Property(e => e.EndCustomerBasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___BAS___Street_4__Key_");

                entity.Property(e => e.EndCustomerBasStreetKey)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___BAS__Street__Key_");

                entity.Property(e => e.EndCustomerCity)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___City");

                entity.Property(e => e.EndCustomerCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Country__Key_");

                entity.Property(e => e.EndCustomerCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Country__Text_");

                entity.Property(e => e.EndCustomerKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Key");

                entity.Property(e => e.EndCustomerName)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___Name");

                entity.Property(e => e.EndCustomerRegionText)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Region__Text_");

                entity.Property(e => e.ExporterAddr1Key)
                    .HasMaxLength(250)
                    .HasColumnName("Exporter_Addr1___Key");

                entity.Property(e => e.ExporterAddr2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Exporter_Addr2___Key");

                entity.Property(e => e.ExporterCity)
                    .HasMaxLength(50)
                    .HasColumnName("Exporter_City");

                entity.Property(e => e.ExporterCountry)
                    .HasMaxLength(50)
                    .HasColumnName("Exporter_Country");

                entity.Property(e => e.ExporterKey)
                    .HasMaxLength(50)
                    .HasColumnName("Exporter___Key");

                entity.Property(e => e.ExtLicence)
                    .HasMaxLength(50)
                    .HasColumnName("Ext_Licence");

                entity.Property(e => e.GoodsSupplier)
                    .HasMaxLength(50)
                    .HasColumnName("Goods_Supplier");

                entity.Property(e => e.GoodsSupplierKey)
                    .HasMaxLength(50)
                    .HasColumnName("Goods_Supplier___Key");

                entity.Property(e => e.GtsBillToAddr1Key)
                    .HasMaxLength(250)
                    .HasColumnName("GTS_BillTo_Addr1___Key");

                entity.Property(e => e.GtsBillToAddr2Key)
                    .HasMaxLength(250)
                    .HasColumnName("GTS_BillTo_Addr2___Key");

                entity.Property(e => e.GtsBillToAddressKey)
                    .HasMaxLength(250)
                    .HasColumnName("GTS_Bill_to_Address___Key");

                entity.Property(e => e.GtsBillToCity)
                    .HasMaxLength(50)
                    .HasColumnName("GTS_BillTo_City");

                entity.Property(e => e.GtsBillToCountry)
                    .HasMaxLength(50)
                    .HasColumnName("GTS_BillTo_Country");

                entity.Property(e => e.GtsBillToKey)
                    .HasMaxLength(50)
                    .HasColumnName("GTS_BillTo___Key");

                entity.Property(e => e.GtsExporterAddressKey)
                    .HasMaxLength(250)
                    .HasColumnName("GTS_Exporter_Address___Key");

                entity.Property(e => e.GtsShipToAddr1Key)
                    .HasMaxLength(250)
                    .HasColumnName("GTS_ShipTo_Addr1___Key");

                entity.Property(e => e.GtsShipToAddr2Key)
                    .HasMaxLength(250)
                    .HasColumnName("GTS_ShipTo_Addr2___Key");

                entity.Property(e => e.GtsShipToAddressKey)
                    .HasMaxLength(250)
                    .HasColumnName("GTS_Ship_to_Address___Key");

                entity.Property(e => e.GtsShipToCity)
                    .HasMaxLength(50)
                    .HasColumnName("GTS_ShipTo_City");

                entity.Property(e => e.GtsShipToCountry)
                    .HasMaxLength(50)
                    .HasColumnName("GTS_ShipTo_Country");

                entity.Property(e => e.GtsShipToKey)
                    .HasMaxLength(50)
                    .HasColumnName("GTS_ShipTo___Key");

                entity.Property(e => e.HeaderStatus)
                    .HasMaxLength(50)
                    .HasColumnName("Header_Status");

                entity.Property(e => e.InstalledAtBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Installed_At___BAS__Postal_Code__Key_");

                entity.Property(e => e.InstalledAtBasStreet2Key)
                    .HasMaxLength(250)
                    .HasColumnName("Installed_At___BAS___Street_2__Key_");

                entity.Property(e => e.InstalledAtBasStreet3Key)
                    .HasMaxLength(250)
                    .HasColumnName("Installed_At___BAS___Street_3__Key_");

                entity.Property(e => e.InstalledAtBasStreet4Key)
                    .HasMaxLength(250)
                    .HasColumnName("Installed_At___BAS___Street_4__Key_");

                entity.Property(e => e.InstalledAtBasStreetKey)
                    .HasMaxLength(250)
                    .HasColumnName("Installed_At___BAS__Street__Key_");

                entity.Property(e => e.InstalledAtCity)
                    .HasMaxLength(50)
                    .HasColumnName("Installed_At___City");

                entity.Property(e => e.InstalledAtCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("Installed_At___Country__Key_");

                entity.Property(e => e.InstalledAtCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Installed_At___Country__Text_");

                entity.Property(e => e.InstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("Installed_At___Key");

                entity.Property(e => e.InstalledAtName)
                    .HasMaxLength(250)
                    .HasColumnName("Installed_At___Name");

                entity.Property(e => e.InstalledAtRegionText)
                    .HasMaxLength(50)
                    .HasColumnName("Installed_At___Region__Text_");

                entity.Property(e => e.ItemCreateDate)
                    .HasMaxLength(50)
                    .HasColumnName("Item_Create_Date");

                entity.Property(e => e.ItemStatus)
                    .HasMaxLength(50)
                    .HasColumnName("Item_Status");

                entity.Property(e => e.LegalRegulation)
                    .HasMaxLength(50)
                    .HasColumnName("Legal_Regulation");

                entity.Property(e => e.LicenseAppliedDate)
                    .HasMaxLength(50)
                    .HasColumnName("License_Applied_Date");

                entity.Property(e => e.LicenseNumber)
                    .HasMaxLength(50)
                    .HasColumnName("License_Number");

                entity.Property(e => e.LicenseType)
                    .HasMaxLength(50)
                    .HasColumnName("License_Type");

                entity.Property(e => e.LicenseValidFrom)
                    .HasMaxLength(50)
                    .HasColumnName("License_Valid_From");

                entity.Property(e => e.LicenseValidTo)
                    .HasMaxLength(50)
                    .HasColumnName("License_Valid_To");

                entity.Property(e => e.PlantKey)
                    .HasMaxLength(50)
                    .HasColumnName("Plant___Key");

                entity.Property(e => e.PlantText)
                    .HasMaxLength(50)
                    .HasColumnName("Plant___Text");

                entity.Property(e => e.ReplaceEccn)
                    .HasMaxLength(50)
                    .HasColumnName("Replace___ECCN");

                entity.Property(e => e.ReplaceProductId0material)
                    .HasMaxLength(50)
                    .HasColumnName("Replace___Product_ID__0MATERIAL_");

                entity.Property(e => e.ReplaceProductId0materialHtsKey)
                    .HasMaxLength(50)
                    .HasColumnName("Replace___Product_ID__0MATERIAL____HTS__Key_");

                entity.Property(e => e.ReplaceProductId0materialKey)
                    .HasMaxLength(50)
                    .HasColumnName("Replace___Product_ID__0MATERIAL____Key");

                entity.Property(e => e.ReplaceProductId0materialOverLengthPartNumKey)
                    .HasMaxLength(50)
                    .HasColumnName("Replace___Product_ID__0MATERIAL____Over_Length_Part_Num__Key_");

                entity.Property(e => e.ReplaceSerialNo)
                    .HasMaxLength(50)
                    .HasColumnName("Replace___Serial_No");

                entity.Property(e => e.RmaCreateDate)
                    .HasMaxLength(50)
                    .HasColumnName("RMA_Create_Date");

                entity.Property(e => e.RmaItemNumber0crmNumint)
                    .HasMaxLength(50)
                    .HasColumnName("RMA_Item_Number__0CRM_NUMINT_");

                entity.Property(e => e.RmaItemType)
                    .HasMaxLength(50)
                    .HasColumnName("RMA_Item_Type");

                entity.Property(e => e.RmaItemTypeKey)
                    .HasMaxLength(50)
                    .HasColumnName("RMA_Item_Type___Key");

                entity.Property(e => e.ServiceReqNo)
                    .HasMaxLength(50)
                    .HasColumnName("Service_Req_No");

                entity.Property(e => e.ShipDate)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_Date");

                entity.Property(e => e.ShipToAddr1Key)
                    .HasMaxLength(250)
                    .HasColumnName("ShipTo_Addr1___Key");

                entity.Property(e => e.ShipToAddr2Key)
                    .HasMaxLength(250)
                    .HasColumnName("ShipTo_Addr2___Key");

                entity.Property(e => e.ShipToCityKey)
                    .HasMaxLength(50)
                    .HasColumnName("ShipTo_City___Key");

                entity.Property(e => e.ShipToPartyKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_to_Party___Key");

                entity.Property(e => e.ShipToSiteCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_to_Site_Country___Key");

                entity.Property(e => e.ShipToSiteKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_Site___Key");

                entity.Property(e => e.ShipToSiteName)
                    .HasMaxLength(250)
                    .HasColumnName("ShipTo_Site___Name");

                entity.Property(e => e.ShipToSitePostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_to_Site_Postal_Code___Key");

                entity.Property(e => e.ShipToSiteRegion)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_to_Site_Region");

                entity.Property(e => e.ShipToSiteRegionKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_to_Site_Region___Key");

                entity.Property(e => e.StorageLocationKey)
                    .HasMaxLength(50)
                    .HasColumnName("Storage_Location___Key");

                entity.Property(e => e.StorageLocationText)
                    .HasMaxLength(50)
                    .HasColumnName("Storage_location___Text");

                entity.Property(e => e.TrackingNo)
                    .HasMaxLength(50)
                    .HasColumnName("Tracking_No");

                entity.Property(e => e.ValuationType)
                    .HasMaxLength(50)
                    .HasColumnName("Valuation_Type");

                entity.Property(e => e.Vendor).HasMaxLength(50);

                entity.Property(e => e.VendorKey)
                    .HasMaxLength(50)
                    .HasColumnName("Vendor___Key");
            });

            modelBuilder.Entity<RmaLinesOctdec2018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("rma_lines_octdec2018", "dsf");

                entity.Property(e => e.AssociatedContactBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Associated_Contact___BAS__Postal_Code__Key_");

                entity.Property(e => e.AssociatedContactBasStreet2Key)
                    .HasMaxLength(150)
                    .HasColumnName("Associated_Contact___BAS___Street_2__Key_");

                entity.Property(e => e.AssociatedContactBasStreet3Key)
                    .HasMaxLength(150)
                    .HasColumnName("Associated_Contact___BAS___Street_3__Key_");

                entity.Property(e => e.AssociatedContactBasStreet4Key)
                    .HasMaxLength(150)
                    .HasColumnName("Associated_Contact___BAS___Street_4__Key_");

                entity.Property(e => e.AssociatedContactBasStreetKey)
                    .HasMaxLength(150)
                    .HasColumnName("Associated_Contact___BAS__Street__Key_");

                entity.Property(e => e.AssociatedContactCity)
                    .HasMaxLength(50)
                    .HasColumnName("Associated_Contact___City");

                entity.Property(e => e.AssociatedContactCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("Associated_Contact___Country__Key_");

                entity.Property(e => e.AssociatedContactCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Associated_Contact___Country__Text_");

                entity.Property(e => e.AssociatedContactKey)
                    .HasMaxLength(50)
                    .HasColumnName("Associated_Contact___Key");

                entity.Property(e => e.AssociatedContactName)
                    .HasMaxLength(150)
                    .HasColumnName("Associated_Contact_Name");

                entity.Property(e => e.AssociatedContactRegionText)
                    .HasMaxLength(50)
                    .HasColumnName("Associated_Contact___Region__Text_");

                entity.Property(e => e.BillToPartyKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_to_Party___Key");

                entity.Property(e => e.ComplaintsNo)
                    .HasMaxLength(50)
                    .HasColumnName("Complaints_No_");

                entity.Property(e => e.Coo)
                    .HasMaxLength(50)
                    .HasColumnName("COO");

                entity.Property(e => e.CustomsDeclCreateDt)
                    .HasMaxLength(50)
                    .HasColumnName("Customs_Decl_Create_Dt");

                entity.Property(e => e.CustomsDeclarationNo)
                    .HasMaxLength(50)
                    .HasColumnName("Customs_Declaration_No");

                entity.Property(e => e.CustomsValuation)
                    .HasMaxLength(50)
                    .HasColumnName("Customs_Valuation");

                entity.Property(e => e.DefectProductId)
                    .HasMaxLength(50)
                    .HasColumnName("Defect___Product_ID");

                entity.Property(e => e.DefectProductIdEccnKey)
                    .HasMaxLength(50)
                    .HasColumnName("Defect___Product_ID___ECCN__Key_");

                entity.Property(e => e.DefectProductIdHtsKey)
                    .HasMaxLength(50)
                    .HasColumnName("Defect___Product_ID___HTS__Key_");

                entity.Property(e => e.DefectProductIdKey)
                    .HasMaxLength(50)
                    .HasColumnName("Defect___Product_ID___Key");

                entity.Property(e => e.DefectProductIdOverLengthPartNumKey)
                    .HasMaxLength(50)
                    .HasColumnName("Defect___Product_ID___Over_Length_Part_Num__Key_");

                entity.Property(e => e.DefectSerialNo)
                    .HasMaxLength(50)
                    .HasColumnName("Defect___Serial_No");

                entity.Property(e => e.DeliveryCreateDate)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Create_Date");

                entity.Property(e => e.DeliveryNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Number");

                entity.Property(e => e.EndCustomerBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___BAS__Postal_Code__Key_");

                entity.Property(e => e.EndCustomerBasStreet2Key)
                    .HasMaxLength(150)
                    .HasColumnName("End_Customer___BAS___Street_2__Key_");

                entity.Property(e => e.EndCustomerBasStreet3Key)
                    .HasMaxLength(150)
                    .HasColumnName("End_Customer___BAS___Street_3__Key_");

                entity.Property(e => e.EndCustomerBasStreet4Key)
                    .HasMaxLength(150)
                    .HasColumnName("End_Customer___BAS___Street_4__Key_");

                entity.Property(e => e.EndCustomerBasStreetKey)
                    .HasMaxLength(150)
                    .HasColumnName("End_Customer___BAS__Street__Key_");

                entity.Property(e => e.EndCustomerCity)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___City");

                entity.Property(e => e.EndCustomerCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Country__Key_");

                entity.Property(e => e.EndCustomerCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Country__Text_");

                entity.Property(e => e.EndCustomerKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Key");

                entity.Property(e => e.EndCustomerName)
                    .HasMaxLength(150)
                    .HasColumnName("End_Customer___Name");

                entity.Property(e => e.EndCustomerRegionText)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Region__Text_");

                entity.Property(e => e.ExporterAddr1Key)
                    .HasMaxLength(150)
                    .HasColumnName("Exporter_Addr1___Key");

                entity.Property(e => e.ExporterAddr2Key)
                    .HasMaxLength(150)
                    .HasColumnName("Exporter_Addr2___Key");

                entity.Property(e => e.ExporterCity)
                    .HasMaxLength(50)
                    .HasColumnName("Exporter_City");

                entity.Property(e => e.ExporterCountry)
                    .HasMaxLength(50)
                    .HasColumnName("Exporter_Country");

                entity.Property(e => e.ExporterKey)
                    .HasMaxLength(50)
                    .HasColumnName("Exporter___Key");

                entity.Property(e => e.ExtLicence)
                    .HasMaxLength(50)
                    .HasColumnName("Ext_Licence");

                entity.Property(e => e.GoodsSupplier)
                    .HasMaxLength(150)
                    .HasColumnName("Goods_Supplier");

                entity.Property(e => e.GoodsSupplierKey)
                    .HasMaxLength(50)
                    .HasColumnName("Goods_Supplier___Key");

                entity.Property(e => e.GtsBillToAddr1Key)
                    .HasMaxLength(150)
                    .HasColumnName("GTS_BillTo_Addr1___Key");

                entity.Property(e => e.GtsBillToAddr2Key)
                    .HasMaxLength(150)
                    .HasColumnName("GTS_BillTo_Addr2___Key");

                entity.Property(e => e.GtsBillToAddressKey)
                    .HasMaxLength(50)
                    .HasColumnName("GTS_Bill_to_Address___Key");

                entity.Property(e => e.GtsBillToCity)
                    .HasMaxLength(50)
                    .HasColumnName("GTS_BillTo_City");

                entity.Property(e => e.GtsBillToCountry)
                    .HasMaxLength(50)
                    .HasColumnName("GTS_BillTo_Country");

                entity.Property(e => e.GtsBillToKey)
                    .HasMaxLength(50)
                    .HasColumnName("GTS_BillTo___Key");

                entity.Property(e => e.GtsExporterAddressKey)
                    .HasMaxLength(150)
                    .HasColumnName("GTS_Exporter_Address___Key");

                entity.Property(e => e.GtsShipToAddr1Key)
                    .HasMaxLength(150)
                    .HasColumnName("GTS_ShipTo_Addr1___Key");

                entity.Property(e => e.GtsShipToAddr2Key)
                    .HasMaxLength(150)
                    .HasColumnName("GTS_ShipTo_Addr2___Key");

                entity.Property(e => e.GtsShipToAddressKey)
                    .HasMaxLength(150)
                    .HasColumnName("GTS_Ship_to_Address___Key");

                entity.Property(e => e.GtsShipToCity)
                    .HasMaxLength(50)
                    .HasColumnName("GTS_ShipTo_City");

                entity.Property(e => e.GtsShipToCountry)
                    .HasMaxLength(50)
                    .HasColumnName("GTS_ShipTo_Country");

                entity.Property(e => e.GtsShipToKey)
                    .HasMaxLength(150)
                    .HasColumnName("GTS_ShipTo___Key");

                entity.Property(e => e.HeaderStatus)
                    .HasMaxLength(50)
                    .HasColumnName("Header_Status");

                entity.Property(e => e.InstalledAtBasPostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Installed_At___BAS__Postal_Code__Key_");

                entity.Property(e => e.InstalledAtBasStreet2Key)
                    .HasMaxLength(150)
                    .HasColumnName("Installed_At___BAS___Street_2__Key_");

                entity.Property(e => e.InstalledAtBasStreet3Key)
                    .HasMaxLength(150)
                    .HasColumnName("Installed_At___BAS___Street_3__Key_");

                entity.Property(e => e.InstalledAtBasStreet4Key)
                    .HasMaxLength(150)
                    .HasColumnName("Installed_At___BAS___Street_4__Key_");

                entity.Property(e => e.InstalledAtBasStreetKey)
                    .HasMaxLength(150)
                    .HasColumnName("Installed_At___BAS__Street__Key_");

                entity.Property(e => e.InstalledAtCity)
                    .HasMaxLength(50)
                    .HasColumnName("Installed_At___City");

                entity.Property(e => e.InstalledAtCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("Installed_At___Country__Key_");

                entity.Property(e => e.InstalledAtCountryText)
                    .HasMaxLength(150)
                    .HasColumnName("Installed_At___Country__Text_");

                entity.Property(e => e.InstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("Installed_At___Key");

                entity.Property(e => e.InstalledAtName)
                    .HasMaxLength(150)
                    .HasColumnName("Installed_At___Name");

                entity.Property(e => e.InstalledAtRegionText)
                    .HasMaxLength(50)
                    .HasColumnName("Installed_At___Region__Text_");

                entity.Property(e => e.ItemCreateDate)
                    .HasMaxLength(50)
                    .HasColumnName("Item_Create_Date");

                entity.Property(e => e.ItemStatus)
                    .HasMaxLength(50)
                    .HasColumnName("Item_Status");

                entity.Property(e => e.LegalRegulation)
                    .HasMaxLength(50)
                    .HasColumnName("Legal_Regulation");

                entity.Property(e => e.LicenseAppliedDate)
                    .HasMaxLength(50)
                    .HasColumnName("License_Applied_Date");

                entity.Property(e => e.LicenseNumber)
                    .HasMaxLength(50)
                    .HasColumnName("License_Number");

                entity.Property(e => e.LicenseType)
                    .HasMaxLength(50)
                    .HasColumnName("License_Type");

                entity.Property(e => e.LicenseValidFrom)
                    .HasMaxLength(50)
                    .HasColumnName("License_Valid_From");

                entity.Property(e => e.LicenseValidTo)
                    .HasMaxLength(50)
                    .HasColumnName("License_Valid_To");

                entity.Property(e => e.PlantKey)
                    .HasMaxLength(50)
                    .HasColumnName("Plant___Key");

                entity.Property(e => e.PlantText)
                    .HasMaxLength(50)
                    .HasColumnName("Plant___Text");

                entity.Property(e => e.ReplaceEccn)
                    .HasMaxLength(50)
                    .HasColumnName("Replace___ECCN");

                entity.Property(e => e.ReplaceProductId0material)
                    .HasMaxLength(50)
                    .HasColumnName("Replace___Product_ID__0MATERIAL_");

                entity.Property(e => e.ReplaceProductId0materialHtsKey)
                    .HasMaxLength(50)
                    .HasColumnName("Replace___Product_ID__0MATERIAL____HTS__Key_");

                entity.Property(e => e.ReplaceProductId0materialKey)
                    .HasMaxLength(50)
                    .HasColumnName("Replace___Product_ID__0MATERIAL____Key");

                entity.Property(e => e.ReplaceProductId0materialOverLengthPartNumKey)
                    .HasMaxLength(50)
                    .HasColumnName("Replace___Product_ID__0MATERIAL____Over_Length_Part_Num__Key_");

                entity.Property(e => e.ReplaceSerialNo)
                    .HasMaxLength(50)
                    .HasColumnName("Replace___Serial_No");

                entity.Property(e => e.RmaCreateDate)
                    .HasMaxLength(50)
                    .HasColumnName("RMA_Create_Date");

                entity.Property(e => e.RmaItemNumber0crmNumint)
                    .HasMaxLength(50)
                    .HasColumnName("RMA_Item_Number__0CRM_NUMINT_");

                entity.Property(e => e.RmaItemType)
                    .HasMaxLength(50)
                    .HasColumnName("RMA_Item_Type");

                entity.Property(e => e.RmaItemTypeKey)
                    .HasMaxLength(50)
                    .HasColumnName("RMA_Item_Type___Key");

                entity.Property(e => e.ServiceReqNo)
                    .HasMaxLength(50)
                    .HasColumnName("Service_Req_No");

                entity.Property(e => e.ShipDate)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_Date");

                entity.Property(e => e.ShipToAddr1Key)
                    .HasMaxLength(50)
                    .HasColumnName("ShipTo_Addr1___Key");

                entity.Property(e => e.ShipToAddr2Key)
                    .HasMaxLength(150)
                    .HasColumnName("ShipTo_Addr2___Key");

                entity.Property(e => e.ShipToCityKey)
                    .HasMaxLength(150)
                    .HasColumnName("ShipTo_City___Key");

                entity.Property(e => e.ShipToPartyKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_to_Party___Key");

                entity.Property(e => e.ShipToSiteCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_to_Site_Country___Key");

                entity.Property(e => e.ShipToSiteKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_Site___Key");

                entity.Property(e => e.ShipToSiteName)
                    .HasMaxLength(150)
                    .HasColumnName("ShipTo_Site___Name");

                entity.Property(e => e.ShipToSitePostalCodeKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_to_Site_Postal_Code___Key");

                entity.Property(e => e.ShipToSiteRegion)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_to_Site_Region");

                entity.Property(e => e.ShipToSiteRegionKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_to_Site_Region___Key");

                entity.Property(e => e.StorageLocationKey)
                    .HasMaxLength(50)
                    .HasColumnName("Storage_Location___Key");

                entity.Property(e => e.StorageLocationText)
                    .HasMaxLength(50)
                    .HasColumnName("Storage_location___Text");

                entity.Property(e => e.TrackingNo)
                    .HasMaxLength(50)
                    .HasColumnName("Tracking_No");

                entity.Property(e => e.ValuationType)
                    .HasMaxLength(50)
                    .HasColumnName("Valuation_Type");

                entity.Property(e => e.Vendor).HasMaxLength(50);

                entity.Property(e => e.VendorKey)
                    .HasMaxLength(50)
                    .HasColumnName("Vendor___Key");
            });

            modelBuilder.Entity<RmaMetaVw>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("rma_meta_vw");

                entity.Property(e => e.AssociatedContactCity)
                    .HasMaxLength(250)
                    .HasColumnName("associated_contact_city");

                entity.Property(e => e.AssociatedContactCountry)
                    .HasMaxLength(250)
                    .HasColumnName("associated_contact_country");

                entity.Property(e => e.AssociatedContactCountryCode)
                    .HasMaxLength(250)
                    .HasColumnName("associated_contact_country_code");

                entity.Property(e => e.AssociatedContactKey)
                    .HasMaxLength(250)
                    .HasColumnName("associated_contact_key");

                entity.Property(e => e.AssociatedContactName)
                    .HasMaxLength(250)
                    .HasColumnName("associated_contact_name");

                entity.Property(e => e.AssociatedContactPostalCode)
                    .HasMaxLength(250)
                    .HasColumnName("associated_contact_postal_code");

                entity.Property(e => e.AssociatedContactRegion)
                    .HasMaxLength(250)
                    .HasColumnName("associated_contact_region");

                entity.Property(e => e.AssociatedContactStreet1)
                    .HasMaxLength(250)
                    .HasColumnName("associated_contact_street1");

                entity.Property(e => e.AssociatedContactStreet2)
                    .HasMaxLength(250)
                    .HasColumnName("associated_contact_street2");

                entity.Property(e => e.AssociatedContactStreet3)
                    .HasMaxLength(250)
                    .HasColumnName("associated_contact_street3");

                entity.Property(e => e.AssociatedContactStreet4)
                    .HasMaxLength(250)
                    .HasColumnName("associated_contact_street4");

                entity.Property(e => e.BilltoPartyKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_party_key");

                entity.Property(e => e.ComplaintsNo)
                    .HasMaxLength(50)
                    .HasColumnName("complaints_no");

                entity.Property(e => e.Coo)
                    .HasMaxLength(250)
                    .HasColumnName("coo");

                entity.Property(e => e.CustomsDeclCreateDt)
                    .HasMaxLength(250)
                    .HasColumnName("customs_decl_create_dt");

                entity.Property(e => e.CustomsDeclarationNo)
                    .HasMaxLength(250)
                    .HasColumnName("customs_declaration_no");

                entity.Property(e => e.CustomsValuation)
                    .HasMaxLength(250)
                    .HasColumnName("customs_valuation");

                entity.Property(e => e.DefectProductId)
                    .HasMaxLength(250)
                    .HasColumnName("defect_product_id");

                entity.Property(e => e.DefectProductIdEccnKey)
                    .HasMaxLength(250)
                    .HasColumnName("defect_product_id_eccn_key");

                entity.Property(e => e.DefectProductIdHtsKey)
                    .HasMaxLength(250)
                    .HasColumnName("defect_product_id_hts_key");

                entity.Property(e => e.DefectProductIdKey)
                    .HasMaxLength(250)
                    .HasColumnName("defect_product_id_key");

                entity.Property(e => e.DefectProductIdOverLengthPartNumKey)
                    .HasMaxLength(250)
                    .HasColumnName("defect_product_id_over_length_part_num_key");

                entity.Property(e => e.DefectSerialNo)
                    .HasMaxLength(50)
                    .HasColumnName("defect_serial_no");

                entity.Property(e => e.DeliveryCreateDate)
                    .HasColumnType("date")
                    .HasColumnName("delivery_create_date");

                entity.Property(e => e.DeliveryNumber)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_number");

                entity.Property(e => e.EndCustomerCity)
                    .HasMaxLength(250)
                    .HasColumnName("end_customer_city");

                entity.Property(e => e.EndCustomerCountry)
                    .HasMaxLength(250)
                    .HasColumnName("end_customer_country");

                entity.Property(e => e.EndCustomerCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("end_customer_country_code");

                entity.Property(e => e.EndCustomerKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_customer_key");

                entity.Property(e => e.EndCustomerName)
                    .HasMaxLength(250)
                    .HasColumnName("end_customer_name");

                entity.Property(e => e.EndCustomerPostalCode)
                    .HasMaxLength(250)
                    .HasColumnName("end_customer_postal_code");

                entity.Property(e => e.EndCustomerRegion)
                    .HasMaxLength(250)
                    .HasColumnName("end_customer_region");

                entity.Property(e => e.EndCustomerStreet1)
                    .HasMaxLength(250)
                    .HasColumnName("end_customer_street1");

                entity.Property(e => e.EndCustomerStreet2)
                    .HasMaxLength(250)
                    .HasColumnName("end_customer_street2");

                entity.Property(e => e.EndCustomerStreet3)
                    .HasMaxLength(250)
                    .HasColumnName("end_customer_street3");

                entity.Property(e => e.EndCustomerStreet4)
                    .HasMaxLength(250)
                    .HasColumnName("end_customer_street4");

                entity.Property(e => e.ExporterAddr)
                    .HasMaxLength(250)
                    .HasColumnName("exporter_addr");

                entity.Property(e => e.ExporterAddr1)
                    .HasMaxLength(250)
                    .HasColumnName("exporter_addr1");

                entity.Property(e => e.ExporterAddr2)
                    .HasMaxLength(250)
                    .HasColumnName("exporter_addr2");

                entity.Property(e => e.ExporterCity)
                    .HasMaxLength(250)
                    .HasColumnName("exporter_city");

                entity.Property(e => e.ExporterCountry)
                    .HasMaxLength(250)
                    .HasColumnName("exporter_country");

                entity.Property(e => e.ExporterKey)
                    .HasMaxLength(250)
                    .HasColumnName("exporter_key");

                entity.Property(e => e.ExtLicence)
                    .HasMaxLength(250)
                    .HasColumnName("ext_licence");

                entity.Property(e => e.GoodsSupplier)
                    .HasMaxLength(250)
                    .HasColumnName("goods_supplier");

                entity.Property(e => e.GoodsSupplierKey)
                    .HasMaxLength(250)
                    .HasColumnName("goods_supplier_key");

                entity.Property(e => e.GtsBillto)
                    .HasMaxLength(250)
                    .HasColumnName("gts_billto");

                entity.Property(e => e.GtsBilltoAddr)
                    .HasMaxLength(250)
                    .HasColumnName("gts_billto_addr");

                entity.Property(e => e.GtsBilltoAddr1)
                    .HasMaxLength(250)
                    .HasColumnName("gts_billto_addr1");

                entity.Property(e => e.GtsBilltoAddr2)
                    .HasMaxLength(250)
                    .HasColumnName("gts_billto_addr2");

                entity.Property(e => e.GtsBilltoCity)
                    .HasMaxLength(250)
                    .HasColumnName("gts_billto_city");

                entity.Property(e => e.GtsBilltoCountry)
                    .HasMaxLength(250)
                    .HasColumnName("gts_billto_country");

                entity.Property(e => e.GtsShipto)
                    .HasMaxLength(250)
                    .HasColumnName("gts_shipto");

                entity.Property(e => e.GtsShiptoAddr)
                    .HasMaxLength(250)
                    .HasColumnName("gts_shipto_addr");

                entity.Property(e => e.GtsShiptoAddr1)
                    .HasMaxLength(250)
                    .HasColumnName("gts_shipto_addr1");

                entity.Property(e => e.GtsShiptoAddr2)
                    .HasMaxLength(250)
                    .HasColumnName("gts_shipto_addr2");

                entity.Property(e => e.GtsShiptoCity)
                    .HasMaxLength(250)
                    .HasColumnName("gts_shipto_city");

                entity.Property(e => e.GtsShiptoCountry)
                    .HasMaxLength(250)
                    .HasColumnName("gts_shipto_country");

                entity.Property(e => e.HeaderStatus)
                    .HasMaxLength(50)
                    .HasColumnName("header_status");

                entity.Property(e => e.ImportDate)
                    .HasColumnType("datetime")
                    .HasColumnName("import_date");

                entity.Property(e => e.ImportId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("import_id");

                entity.Property(e => e.ImportStatus)
                    .HasMaxLength(255)
                    .HasColumnName("import_status");

                entity.Property(e => e.InstalledAtBasStreet1)
                    .HasMaxLength(250)
                    .HasColumnName("installed_at_bas_street1");

                entity.Property(e => e.InstalledAtBasStreet2)
                    .HasMaxLength(250)
                    .HasColumnName("installed_at_bas_street2");

                entity.Property(e => e.InstalledAtBasStreet3)
                    .HasMaxLength(250)
                    .HasColumnName("installed_at_bas_street3");

                entity.Property(e => e.InstalledAtBasStreet4)
                    .HasMaxLength(250)
                    .HasColumnName("installed_at_bas_street4");

                entity.Property(e => e.InstalledAtCity)
                    .HasMaxLength(250)
                    .HasColumnName("installed_at_city");

                entity.Property(e => e.InstalledAtCountry)
                    .HasMaxLength(250)
                    .HasColumnName("installed_at_country");

                entity.Property(e => e.InstalledAtCountryCode)
                    .HasMaxLength(250)
                    .HasColumnName("installed_at_country_code");

                entity.Property(e => e.InstalledAtKey)
                    .HasMaxLength(250)
                    .HasColumnName("installed_at_key");

                entity.Property(e => e.InstalledAtName)
                    .HasMaxLength(250)
                    .HasColumnName("installed_at_name");

                entity.Property(e => e.InstalledAtPostalCode)
                    .HasMaxLength(250)
                    .HasColumnName("installed_at_postal_code");

                entity.Property(e => e.InstalledAtRegion)
                    .HasMaxLength(250)
                    .HasColumnName("installed_at_region");

                entity.Property(e => e.ItemCreateDate)
                    .HasColumnType("date")
                    .HasColumnName("item_create_date");

                entity.Property(e => e.ItemStatus)
                    .HasMaxLength(255)
                    .HasColumnName("item_status");

                entity.Property(e => e.LegalRegulation)
                    .HasMaxLength(250)
                    .HasColumnName("legal_regulation");

                entity.Property(e => e.LicenseAppliedDate)
                    .HasColumnType("date")
                    .HasColumnName("license_applied_date");

                entity.Property(e => e.LicenseNumber)
                    .HasMaxLength(250)
                    .HasColumnName("license_number");

                entity.Property(e => e.LicenseType)
                    .HasMaxLength(250)
                    .HasColumnName("license_type");

                entity.Property(e => e.LicenseValidFrom)
                    .HasColumnType("date")
                    .HasColumnName("license_valid_from");

                entity.Property(e => e.LicenseValidTo)
                    .HasColumnType("date")
                    .HasColumnName("license_valid_to");

                entity.Property(e => e.PlantKey)
                    .HasMaxLength(50)
                    .HasColumnName("plant_key");

                entity.Property(e => e.PlantText)
                    .HasMaxLength(250)
                    .HasColumnName("plant_text");

                entity.Property(e => e.ReplaceProductId)
                    .HasMaxLength(250)
                    .HasColumnName("replace_product_id");

                entity.Property(e => e.ReplaceProductIdEccnKey)
                    .HasMaxLength(250)
                    .HasColumnName("replace_product_id_eccn_key");

                entity.Property(e => e.ReplaceProductIdHtsKey)
                    .HasMaxLength(250)
                    .HasColumnName("replace_product_id_hts_key");

                entity.Property(e => e.ReplaceProductIdKey)
                    .HasMaxLength(250)
                    .HasColumnName("replace_product_id_key");

                entity.Property(e => e.ReplaceProductIdOverLengthPartNumKey)
                    .HasMaxLength(250)
                    .HasColumnName("replace_product_id_over_length_part_num_key");

                entity.Property(e => e.ReplaceSerialNo)
                    .HasMaxLength(50)
                    .HasColumnName("replace_serial_no");

                entity.Property(e => e.RmaCreateDate)
                    .HasColumnType("date")
                    .HasColumnName("rma_create_date");

                entity.Property(e => e.RmaItemNumber).HasColumnName("rma_item_number");

                entity.Property(e => e.RmaItemType)
                    .HasMaxLength(250)
                    .HasColumnName("rma_item_type");

                entity.Property(e => e.RmaItemTypeKey)
                    .HasMaxLength(250)
                    .HasColumnName("rma_item_type_key");

                entity.Property(e => e.ServiceReqNo)
                    .HasMaxLength(250)
                    .HasColumnName("service_req_no");

                entity.Property(e => e.ShipDate)
                    .HasColumnType("date")
                    .HasColumnName("ship_date");

                entity.Property(e => e.ShipToSiteKey)
                    .HasMaxLength(250)
                    .HasColumnName("ship_to_site_key");

                entity.Property(e => e.ShiptoAddr1)
                    .HasMaxLength(250)
                    .HasColumnName("shipto_addr1");

                entity.Property(e => e.ShiptoAddr2)
                    .HasMaxLength(250)
                    .HasColumnName("shipto_addr2");

                entity.Property(e => e.ShiptoCity)
                    .HasMaxLength(250)
                    .HasColumnName("shipto_city");

                entity.Property(e => e.ShiptoPartyKey)
                    .HasMaxLength(50)
                    .HasColumnName("shipto_party_key");

                entity.Property(e => e.ShiptoSiteCountryCode)
                    .HasMaxLength(250)
                    .HasColumnName("shipto_site_country_code");

                entity.Property(e => e.ShiptoSiteName)
                    .HasMaxLength(250)
                    .HasColumnName("shipto_site_name");

                entity.Property(e => e.ShiptoSitePostalCode)
                    .HasMaxLength(250)
                    .HasColumnName("shipto_site_postal_code");

                entity.Property(e => e.ShiptoSiteRegion)
                    .HasMaxLength(250)
                    .HasColumnName("shipto_site_region");

                entity.Property(e => e.ShiptoSiteRegionKey)
                    .HasMaxLength(250)
                    .HasColumnName("shipto_site_region_key");

                entity.Property(e => e.StorageLocationKey)
                    .HasMaxLength(50)
                    .HasColumnName("storage_location_key");

                entity.Property(e => e.StorageLocationText)
                    .HasMaxLength(250)
                    .HasColumnName("storage_location_text");

                entity.Property(e => e.TrackingNo)
                    .HasMaxLength(250)
                    .HasColumnName("tracking_no");

                entity.Property(e => e.ValuationType)
                    .HasMaxLength(250)
                    .HasColumnName("valuation_type");

                entity.Property(e => e.Vendor)
                    .HasMaxLength(250)
                    .HasColumnName("vendor");

                entity.Property(e => e.VendorKey)
                    .HasMaxLength(250)
                    .HasColumnName("vendor_key");
            });

            modelBuilder.Entity<RoleReportMapping>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("role_report_mapping");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("created_date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.ReportId).HasColumnName("report_id");

                entity.Property(e => e.RoleId).HasColumnName("role_id");

                entity.Property(e => e.Status)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("status");
            });

            modelBuilder.Entity<SameResellerSvcEndCustomer>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SameResellerSvcEndCustomer", "rep");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.GmeFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("gme_flag");

                entity.Property(e => e.MspAcctScore).HasColumnName("msp_acct_score");

                entity.Property(e => e.ResSvcJaroScore).HasColumnName("res_svc_jaro_score");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(500)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("so_number");

                entity.Property(e => e.SvcContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("svc_contract_number");

                entity.Property(e => e.SvcEndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("svc_end_cust_key");

                entity.Property(e => e.SvcEndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("svc_end_cust_name");
            });

            modelBuilder.Entity<Schema>(entity =>
            {
                entity.HasKey(e => e.Version)
                    .HasName("PK_HangFire_Schema");

                entity.ToTable("Schema", "HangFire");

                entity.Property(e => e.Version).ValueGeneratedNever();
            });

            modelBuilder.Entity<Server>(entity =>
            {
                entity.ToTable("Server", "HangFire");

                entity.Property(e => e.Id).HasMaxLength(100);

                entity.Property(e => e.LastHeartbeat).HasColumnType("datetime");
            });

            modelBuilder.Entity<ServiceContractApr2016>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ServiceContract_Apr2016", "dsf");

                entity.Property(e => e.BillToPartyBasDistrictKey).HasColumnName("Bill_To_Party___BAS__District__Key_");

                entity.Property(e => e.BillToPartyCountryText).HasColumnName("Bill_To_Party___Country__Text_");

                entity.Property(e => e.BillToPartyKey).HasColumnName("Bill_To_Party___Key");

                entity.Property(e => e.BillToPartyLongText).HasColumnName("Bill_To_Party___Long_Text");

                entity.Property(e => e.ContractCreationDate).HasColumnName("Contract_Creation_Date");

                entity.Property(e => e.ContractItemNo).HasColumnName("Contract_item_No");

                entity.Property(e => e.ContractLineItemStatusDescription).HasColumnName("Contract_Line_Item_Status_Description");

                entity.Property(e => e.ContractNumber).HasColumnName("Contract_Number");

                entity.Property(e => e.ContractStatusText).HasColumnName("Contract_Status___Text");

                entity.Property(e => e.DiscountDoNotUse).HasColumnName("Discount___Do_Not_Use");

                entity.Property(e => e.EndCustomer).HasColumnName("End_Customer");

                entity.Property(e => e.EndCustomerBasDistrictKey).HasColumnName("End_Customer___BAS__District__Key_");

                entity.Property(e => e.EndCustomerCountryKey).HasColumnName("End_Customer___Country__Key_");

                entity.Property(e => e.EndCustomerDescription).HasColumnName("End_Customer_Description");

                entity.Property(e => e.ExtendedListPriceDoNotUse).HasColumnName("Extended_List_Price___Do_Not_Use");

                entity.Property(e => e.IObjectId).HasColumnName("I_Object_ID");

                entity.Property(e => e.InstalledAtBasDistrictText).HasColumnName("Installed_At___BAS__District__Text_");

                entity.Property(e => e.InstalledAtCountryKey).HasColumnName("Installed_At_Country___Key");

                entity.Property(e => e.InstalledAtKey).HasColumnName("Installed_At___Key");

                entity.Property(e => e.InstalledAtLongText).HasColumnName("Installed_At___Long_Text");

                entity.Property(e => e.MaterialEccnKey).HasColumnName("Material___ECCN__Key_");

                entity.Property(e => e.MaterialHtsKey).HasColumnName("Material___HTS__Key_");

                entity.Property(e => e.MaterialKey).HasColumnName("Material___Key");

                entity.Property(e => e.MaterialText).HasColumnName("Material___Text");

                entity.Property(e => e.NetValue).HasColumnName("Net_Value");

                entity.Property(e => e.PayerBasDistrictKey).HasColumnName("Payer___BAS__District__Key_");

                entity.Property(e => e.PayerCountryText).HasColumnName("Payer___Country__Text_");

                entity.Property(e => e.PayerKey).HasColumnName("Payer___Key");

                entity.Property(e => e.PayerLongText).HasColumnName("Payer___Long_Text");

                entity.Property(e => e.ProductFamily).HasColumnName("Product_Family");

                entity.Property(e => e.ProductLine).HasColumnName("Product_Line");

                entity.Property(e => e.SalesOrderAlpha).HasColumnName("Sales_Order_ALPHA");

                entity.Property(e => e.SerialNumber).HasColumnName("Serial_Number");

                entity.Property(e => e.ServiceContractType).HasColumnName("Service_Contract_Type");

                entity.Property(e => e.ServiceEndDate).HasColumnName("Service_End_date");

                entity.Property(e => e.ServiceMaterial).HasColumnName("Service_Material");

                entity.Property(e => e.ServiceMaterialKey).HasColumnName("Service_Material___Key");

                entity.Property(e => e.ServiceMaterialProductLineText).HasColumnName("Service_Material___Product_Line__Text_");

                entity.Property(e => e.ServiceStartDate).HasColumnName("Service_Start_Date");
            });

            modelBuilder.Entity<ServiceContractApr2017>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ServiceContract_Apr2017", "dsf");

                entity.Property(e => e.BillToPartyBasDistrictKey).HasColumnName("Bill_To_Party___BAS__District__Key_");

                entity.Property(e => e.BillToPartyCountryText).HasColumnName("Bill_To_Party___Country__Text_");

                entity.Property(e => e.BillToPartyKey).HasColumnName("Bill_To_Party___Key");

                entity.Property(e => e.BillToPartyLongText).HasColumnName("Bill_To_Party___Long_Text");

                entity.Property(e => e.ContractCreationDate).HasColumnName("Contract_Creation_Date");

                entity.Property(e => e.ContractItemNo).HasColumnName("Contract_item_No");

                entity.Property(e => e.ContractLineItemStatusDescription).HasColumnName("Contract_Line_Item_Status_Description");

                entity.Property(e => e.ContractNumber).HasColumnName("Contract_Number");

                entity.Property(e => e.ContractStatusText).HasColumnName("Contract_Status___Text");

                entity.Property(e => e.DiscountDoNotUse).HasColumnName("Discount___Do_Not_Use");

                entity.Property(e => e.EndCustomer).HasColumnName("End_Customer");

                entity.Property(e => e.EndCustomerBasDistrictKey).HasColumnName("End_Customer___BAS__District__Key_");

                entity.Property(e => e.EndCustomerCountryKey).HasColumnName("End_Customer___Country__Key_");

                entity.Property(e => e.EndCustomerDescription).HasColumnName("End_Customer_Description");

                entity.Property(e => e.ExtendedListPriceDoNotUse).HasColumnName("Extended_List_Price___Do_Not_Use");

                entity.Property(e => e.IObjectId).HasColumnName("I_Object_ID");

                entity.Property(e => e.InstalledAtBasDistrictText).HasColumnName("Installed_At___BAS__District__Text_");

                entity.Property(e => e.InstalledAtCountryKey).HasColumnName("Installed_At_Country___Key");

                entity.Property(e => e.InstalledAtKey).HasColumnName("Installed_At___Key");

                entity.Property(e => e.InstalledAtLongText).HasColumnName("Installed_At___Long_Text");

                entity.Property(e => e.MaterialEccnKey).HasColumnName("Material___ECCN__Key_");

                entity.Property(e => e.MaterialHtsKey).HasColumnName("Material___HTS__Key_");

                entity.Property(e => e.MaterialKey).HasColumnName("Material___Key");

                entity.Property(e => e.MaterialText).HasColumnName("Material___Text");

                entity.Property(e => e.NetValue).HasColumnName("Net_Value");

                entity.Property(e => e.PayerBasDistrictKey).HasColumnName("Payer___BAS__District__Key_");

                entity.Property(e => e.PayerCountryText).HasColumnName("Payer___Country__Text_");

                entity.Property(e => e.PayerKey).HasColumnName("Payer___Key");

                entity.Property(e => e.PayerLongText).HasColumnName("Payer___Long_Text");

                entity.Property(e => e.ProductFamily).HasColumnName("Product_Family");

                entity.Property(e => e.ProductLine).HasColumnName("Product_Line");

                entity.Property(e => e.SalesOrderAlpha).HasColumnName("Sales_Order_ALPHA");

                entity.Property(e => e.SerialNumber).HasColumnName("Serial_Number");

                entity.Property(e => e.ServiceContractType).HasColumnName("Service_Contract_Type");

                entity.Property(e => e.ServiceEndDate).HasColumnName("Service_End_date");

                entity.Property(e => e.ServiceMaterial).HasColumnName("Service_Material");

                entity.Property(e => e.ServiceMaterialKey).HasColumnName("Service_Material___Key");

                entity.Property(e => e.ServiceMaterialProductLineText).HasColumnName("Service_Material___Product_Line__Text_");

                entity.Property(e => e.ServiceStartDate).HasColumnName("Service_Start_Date");
            });

            modelBuilder.Entity<ServiceContractAprmay2018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ServiceContract_aprmay2018", "dsf");

                entity.Property(e => e.BillToPartyBasDistrictKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___BAS__District__Key_");

                entity.Property(e => e.BillToPartyCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___Country__Text_");

                entity.Property(e => e.BillToPartyKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___Key");

                entity.Property(e => e.BillToPartyLongText)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party___Long_Text");

                entity.Property(e => e.ContractCreationDate)
                    .HasMaxLength(50)
                    .HasColumnName("Contract_Creation_Date");

                entity.Property(e => e.ContractItemNo)
                    .HasMaxLength(50)
                    .HasColumnName("Contract_item_No");

                entity.Property(e => e.ContractLineItemStatusDescription)
                    .HasMaxLength(50)
                    .HasColumnName("Contract_Line_Item_Status_Description");

                entity.Property(e => e.ContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Contract_Number");

                entity.Property(e => e.ContractStatusText)
                    .HasMaxLength(50)
                    .HasColumnName("Contract_Status___Text");

                entity.Property(e => e.Currency).HasMaxLength(50);

                entity.Property(e => e.DiscountDoNotUse)
                    .HasMaxLength(50)
                    .HasColumnName("Discount___Do_Not_Use");

                entity.Property(e => e.EndCustomer)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer");

                entity.Property(e => e.EndCustomerBasDistrictKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___BAS__District__Key_");

                entity.Property(e => e.EndCustomerCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Country__Key_");

                entity.Property(e => e.EndCustomerDescription)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer_Description");

                entity.Property(e => e.ExtendedListPriceDoNotUse)
                    .HasMaxLength(50)
                    .HasColumnName("Extended_List_Price___Do_Not_Use");

                entity.Property(e => e.IObjectId)
                    .HasMaxLength(50)
                    .HasColumnName("I_Object_ID");

                entity.Property(e => e.InstalledAtBasDistrictText)
                    .HasMaxLength(50)
                    .HasColumnName("Installed_At___BAS__District__Text_");

                entity.Property(e => e.InstalledAtCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("Installed_At_Country___Key");

                entity.Property(e => e.InstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("Installed_At___Key");

                entity.Property(e => e.InstalledAtLongText)
                    .HasMaxLength(250)
                    .HasColumnName("Installed_At___Long_Text");

                entity.Property(e => e.MaterialEccnKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___ECCN__Key_");

                entity.Property(e => e.MaterialHtsKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___HTS__Key_");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___Key");

                entity.Property(e => e.MaterialText)
                    .HasMaxLength(50)
                    .HasColumnName("Material___Text");

                entity.Property(e => e.NetValue)
                    .HasMaxLength(50)
                    .HasColumnName("Net_Value");

                entity.Property(e => e.PayerBasDistrictKey)
                    .HasMaxLength(50)
                    .HasColumnName("Payer___BAS__District__Key_");

                entity.Property(e => e.PayerCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Payer___Country__Text_");

                entity.Property(e => e.PayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("Payer___Key");

                entity.Property(e => e.PayerLongText)
                    .HasMaxLength(250)
                    .HasColumnName("Payer___Long_Text");

                entity.Property(e => e.ProductFamily)
                    .HasMaxLength(50)
                    .HasColumnName("Product_Family");

                entity.Property(e => e.ProductLine)
                    .HasMaxLength(50)
                    .HasColumnName("Product_Line");

                entity.Property(e => e.SalesOrderAlpha)
                    .HasMaxLength(50)
                    .HasColumnName("Sales_Order_ALPHA");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Serial_Number");

                entity.Property(e => e.ServiceContractType)
                    .HasMaxLength(50)
                    .HasColumnName("Service_Contract_Type");

                entity.Property(e => e.ServiceEndDate)
                    .HasMaxLength(50)
                    .HasColumnName("Service_End_date");

                entity.Property(e => e.ServiceMaterial)
                    .HasMaxLength(50)
                    .HasColumnName("Service_Material");

                entity.Property(e => e.ServiceMaterialKey)
                    .HasMaxLength(50)
                    .HasColumnName("Service_Material___Key");

                entity.Property(e => e.ServiceMaterialProductLineText)
                    .HasMaxLength(50)
                    .HasColumnName("Service_Material___Product_Line__Text_");

                entity.Property(e => e.ServiceStartDate)
                    .HasMaxLength(50)
                    .HasColumnName("Service_Start_Date");
            });

            modelBuilder.Entity<ServiceContractAug2016>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ServiceContract_Aug2016", "dsf");

                entity.Property(e => e.BillToPartyBasDistrictKey).HasColumnName("Bill_To_Party___BAS__District__Key_");

                entity.Property(e => e.BillToPartyCountryText).HasColumnName("Bill_To_Party___Country__Text_");

                entity.Property(e => e.BillToPartyKey).HasColumnName("Bill_To_Party___Key");

                entity.Property(e => e.BillToPartyLongText).HasColumnName("Bill_To_Party___Long_Text");

                entity.Property(e => e.ContractCreationDate).HasColumnName("Contract_Creation_Date");

                entity.Property(e => e.ContractItemNo).HasColumnName("Contract_item_No");

                entity.Property(e => e.ContractLineItemStatusDescription).HasColumnName("Contract_Line_Item_Status_Description");

                entity.Property(e => e.ContractNumber).HasColumnName("Contract_Number");

                entity.Property(e => e.ContractStatusText).HasColumnName("Contract_Status___Text");

                entity.Property(e => e.DiscountDoNotUse).HasColumnName("Discount___Do_Not_Use");

                entity.Property(e => e.EndCustomer).HasColumnName("End_Customer");

                entity.Property(e => e.EndCustomerBasDistrictKey).HasColumnName("End_Customer___BAS__District__Key_");

                entity.Property(e => e.EndCustomerCountryKey).HasColumnName("End_Customer___Country__Key_");

                entity.Property(e => e.EndCustomerDescription).HasColumnName("End_Customer_Description");

                entity.Property(e => e.ExtendedListPriceDoNotUse).HasColumnName("Extended_List_Price___Do_Not_Use");

                entity.Property(e => e.IObjectId).HasColumnName("I_Object_ID");

                entity.Property(e => e.InstalledAtBasDistrictText).HasColumnName("Installed_At___BAS__District__Text_");

                entity.Property(e => e.InstalledAtCountryKey).HasColumnName("Installed_At_Country___Key");

                entity.Property(e => e.InstalledAtKey).HasColumnName("Installed_At___Key");

                entity.Property(e => e.InstalledAtLongText).HasColumnName("Installed_At___Long_Text");

                entity.Property(e => e.MaterialEccnKey).HasColumnName("Material___ECCN__Key_");

                entity.Property(e => e.MaterialHtsKey).HasColumnName("Material___HTS__Key_");

                entity.Property(e => e.MaterialKey).HasColumnName("Material___Key");

                entity.Property(e => e.MaterialText).HasColumnName("Material___Text");

                entity.Property(e => e.NetValue).HasColumnName("Net_Value");

                entity.Property(e => e.PayerBasDistrictKey).HasColumnName("Payer___BAS__District__Key_");

                entity.Property(e => e.PayerCountryText).HasColumnName("Payer___Country__Text_");

                entity.Property(e => e.PayerKey).HasColumnName("Payer___Key");

                entity.Property(e => e.PayerLongText).HasColumnName("Payer___Long_Text");

                entity.Property(e => e.ProductFamily).HasColumnName("Product_Family");

                entity.Property(e => e.ProductLine).HasColumnName("Product_Line");

                entity.Property(e => e.SalesOrderAlpha).HasColumnName("Sales_Order_ALPHA");

                entity.Property(e => e.SerialNumber).HasColumnName("Serial_Number");

                entity.Property(e => e.ServiceContractType).HasColumnName("Service_Contract_Type");

                entity.Property(e => e.ServiceEndDate).HasColumnName("Service_End_date");

                entity.Property(e => e.ServiceMaterial).HasColumnName("Service_Material");

                entity.Property(e => e.ServiceMaterialKey).HasColumnName("Service_Material___Key");

                entity.Property(e => e.ServiceMaterialProductLineText).HasColumnName("Service_Material___Product_Line__Text_");

                entity.Property(e => e.ServiceStartDate).HasColumnName("Service_Start_Date");
            });

            modelBuilder.Entity<ServiceContractAug2017>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ServiceContract_Aug2017", "dsf");

                entity.Property(e => e.BillToPartyBasDistrictKey).HasColumnName("Bill_To_Party___BAS__District__Key_");

                entity.Property(e => e.BillToPartyCountryText).HasColumnName("Bill_To_Party___Country__Text_");

                entity.Property(e => e.BillToPartyKey).HasColumnName("Bill_To_Party___Key");

                entity.Property(e => e.BillToPartyLongText).HasColumnName("Bill_To_Party___Long_Text");

                entity.Property(e => e.ContractCreationDate).HasColumnName("Contract_Creation_Date");

                entity.Property(e => e.ContractItemNo).HasColumnName("Contract_item_No");

                entity.Property(e => e.ContractLineItemStatusDescription).HasColumnName("Contract_Line_Item_Status_Description");

                entity.Property(e => e.ContractNumber).HasColumnName("Contract_Number");

                entity.Property(e => e.ContractStatusText).HasColumnName("Contract_Status___Text");

                entity.Property(e => e.DiscountDoNotUse).HasColumnName("Discount___Do_Not_Use");

                entity.Property(e => e.EndCustomer).HasColumnName("End_Customer");

                entity.Property(e => e.EndCustomerBasDistrictKey).HasColumnName("End_Customer___BAS__District__Key_");

                entity.Property(e => e.EndCustomerCountryKey).HasColumnName("End_Customer___Country__Key_");

                entity.Property(e => e.EndCustomerDescription).HasColumnName("End_Customer_Description");

                entity.Property(e => e.ExtendedListPriceDoNotUse).HasColumnName("Extended_List_Price___Do_Not_Use");

                entity.Property(e => e.IObjectId).HasColumnName("I_Object_ID");

                entity.Property(e => e.InstalledAtBasDistrictText).HasColumnName("Installed_At___BAS__District__Text_");

                entity.Property(e => e.InstalledAtCountryKey).HasColumnName("Installed_At_Country___Key");

                entity.Property(e => e.InstalledAtKey).HasColumnName("Installed_At___Key");

                entity.Property(e => e.InstalledAtLongText).HasColumnName("Installed_At___Long_Text");

                entity.Property(e => e.MaterialEccnKey).HasColumnName("Material___ECCN__Key_");

                entity.Property(e => e.MaterialHtsKey).HasColumnName("Material___HTS__Key_");

                entity.Property(e => e.MaterialKey).HasColumnName("Material___Key");

                entity.Property(e => e.MaterialText).HasColumnName("Material___Text");

                entity.Property(e => e.NetValue).HasColumnName("Net_Value");

                entity.Property(e => e.PayerBasDistrictKey).HasColumnName("Payer___BAS__District__Key_");

                entity.Property(e => e.PayerCountryText).HasColumnName("Payer___Country__Text_");

                entity.Property(e => e.PayerKey).HasColumnName("Payer___Key");

                entity.Property(e => e.PayerLongText).HasColumnName("Payer___Long_Text");

                entity.Property(e => e.ProductFamily).HasColumnName("Product_Family");

                entity.Property(e => e.ProductLine).HasColumnName("Product_Line");

                entity.Property(e => e.SalesOrderAlpha).HasColumnName("Sales_Order_ALPHA");

                entity.Property(e => e.SerialNumber).HasColumnName("Serial_Number");

                entity.Property(e => e.ServiceContractType).HasColumnName("Service_Contract_Type");

                entity.Property(e => e.ServiceEndDate).HasColumnName("Service_End_date");

                entity.Property(e => e.ServiceMaterial).HasColumnName("Service_Material");

                entity.Property(e => e.ServiceMaterialKey).HasColumnName("Service_Material___Key");

                entity.Property(e => e.ServiceMaterialProductLineText).HasColumnName("Service_Material___Product_Line__Text_");

                entity.Property(e => e.ServiceStartDate).HasColumnName("Service_Start_Date");
            });

            modelBuilder.Entity<ServiceContractDec2016>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ServiceContract_Dec2016", "dsf");

                entity.Property(e => e.BillToPartyBasDistrictKey).HasColumnName("Bill_To_Party___BAS__District__Key_");

                entity.Property(e => e.BillToPartyCountryText).HasColumnName("Bill_To_Party___Country__Text_");

                entity.Property(e => e.BillToPartyKey).HasColumnName("Bill_To_Party___Key");

                entity.Property(e => e.BillToPartyLongText).HasColumnName("Bill_To_Party___Long_Text");

                entity.Property(e => e.ContractCreationDate).HasColumnName("Contract_Creation_Date");

                entity.Property(e => e.ContractItemNo).HasColumnName("Contract_item_No");

                entity.Property(e => e.ContractLineItemStatusDescription).HasColumnName("Contract_Line_Item_Status_Description");

                entity.Property(e => e.ContractNumber).HasColumnName("Contract_Number");

                entity.Property(e => e.ContractStatusText).HasColumnName("Contract_Status___Text");

                entity.Property(e => e.DiscountDoNotUse).HasColumnName("Discount___Do_Not_Use");

                entity.Property(e => e.EndCustomer).HasColumnName("End_Customer");

                entity.Property(e => e.EndCustomerBasDistrictKey).HasColumnName("End_Customer___BAS__District__Key_");

                entity.Property(e => e.EndCustomerCountryKey).HasColumnName("End_Customer___Country__Key_");

                entity.Property(e => e.EndCustomerDescription).HasColumnName("End_Customer_Description");

                entity.Property(e => e.ExtendedListPriceDoNotUse).HasColumnName("Extended_List_Price___Do_Not_Use");

                entity.Property(e => e.IObjectId).HasColumnName("I_Object_ID");

                entity.Property(e => e.InstalledAtBasDistrictText).HasColumnName("Installed_At___BAS__District__Text_");

                entity.Property(e => e.InstalledAtCountryKey).HasColumnName("Installed_At_Country___Key");

                entity.Property(e => e.InstalledAtKey).HasColumnName("Installed_At___Key");

                entity.Property(e => e.InstalledAtLongText).HasColumnName("Installed_At___Long_Text");

                entity.Property(e => e.MaterialEccnKey).HasColumnName("Material___ECCN__Key_");

                entity.Property(e => e.MaterialHtsKey).HasColumnName("Material___HTS__Key_");

                entity.Property(e => e.MaterialKey).HasColumnName("Material___Key");

                entity.Property(e => e.MaterialText).HasColumnName("Material___Text");

                entity.Property(e => e.NetValue).HasColumnName("Net_Value");

                entity.Property(e => e.PayerBasDistrictKey).HasColumnName("Payer___BAS__District__Key_");

                entity.Property(e => e.PayerCountryText).HasColumnName("Payer___Country__Text_");

                entity.Property(e => e.PayerKey).HasColumnName("Payer___Key");

                entity.Property(e => e.PayerLongText).HasColumnName("Payer___Long_Text");

                entity.Property(e => e.ProductFamily).HasColumnName("Product_Family");

                entity.Property(e => e.ProductLine).HasColumnName("Product_Line");

                entity.Property(e => e.SalesOrderAlpha).HasColumnName("Sales_Order_ALPHA");

                entity.Property(e => e.SerialNumber).HasColumnName("Serial_Number");

                entity.Property(e => e.ServiceContractType).HasColumnName("Service_Contract_Type");

                entity.Property(e => e.ServiceEndDate).HasColumnName("Service_End_date");

                entity.Property(e => e.ServiceMaterial).HasColumnName("Service_Material");

                entity.Property(e => e.ServiceMaterialKey).HasColumnName("Service_Material___Key");

                entity.Property(e => e.ServiceMaterialProductLineText).HasColumnName("Service_Material___Product_Line__Text_");

                entity.Property(e => e.ServiceStartDate).HasColumnName("Service_Start_Date");
            });

            modelBuilder.Entity<ServiceContractFeb2016>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ServiceContract_Feb2016", "dsf");

                entity.Property(e => e.BillToPartyBasDistrictKey).HasColumnName("Bill_To_Party___BAS__District__Key_");

                entity.Property(e => e.BillToPartyCountryText).HasColumnName("Bill_To_Party___Country__Text_");

                entity.Property(e => e.BillToPartyKey).HasColumnName("Bill_To_Party___Key");

                entity.Property(e => e.BillToPartyLongText).HasColumnName("Bill_To_Party___Long_Text");

                entity.Property(e => e.ContractCreationDate).HasColumnName("Contract_Creation_Date");

                entity.Property(e => e.ContractItemNo).HasColumnName("Contract_item_No");

                entity.Property(e => e.ContractLineItemStatusDescription).HasColumnName("Contract_Line_Item_Status_Description");

                entity.Property(e => e.ContractNumber).HasColumnName("Contract_Number");

                entity.Property(e => e.ContractStatusText).HasColumnName("Contract_Status___Text");

                entity.Property(e => e.DiscountDoNotUse).HasColumnName("Discount___Do_Not_Use");

                entity.Property(e => e.EndCustomer).HasColumnName("End_Customer");

                entity.Property(e => e.EndCustomerBasDistrictKey).HasColumnName("End_Customer___BAS__District__Key_");

                entity.Property(e => e.EndCustomerCountryKey).HasColumnName("End_Customer___Country__Key_");

                entity.Property(e => e.EndCustomerDescription).HasColumnName("End_Customer_Description");

                entity.Property(e => e.ExtendedListPriceDoNotUse).HasColumnName("Extended_List_Price___Do_Not_Use");

                entity.Property(e => e.IObjectId).HasColumnName("I_Object_ID");

                entity.Property(e => e.InstalledAtBasDistrictText).HasColumnName("Installed_At___BAS__District__Text_");

                entity.Property(e => e.InstalledAtCountryKey).HasColumnName("Installed_At_Country___Key");

                entity.Property(e => e.InstalledAtKey).HasColumnName("Installed_At___Key");

                entity.Property(e => e.InstalledAtLongText).HasColumnName("Installed_At___Long_Text");

                entity.Property(e => e.MaterialEccnKey).HasColumnName("Material___ECCN__Key_");

                entity.Property(e => e.MaterialHtsKey).HasColumnName("Material___HTS__Key_");

                entity.Property(e => e.MaterialKey).HasColumnName("Material___Key");

                entity.Property(e => e.MaterialText).HasColumnName("Material___Text");

                entity.Property(e => e.NetValue).HasColumnName("Net_Value");

                entity.Property(e => e.PayerBasDistrictKey).HasColumnName("Payer___BAS__District__Key_");

                entity.Property(e => e.PayerCountryText).HasColumnName("Payer___Country__Text_");

                entity.Property(e => e.PayerKey).HasColumnName("Payer___Key");

                entity.Property(e => e.PayerLongText).HasColumnName("Payer___Long_Text");

                entity.Property(e => e.ProductFamily).HasColumnName("Product_Family");

                entity.Property(e => e.ProductLine).HasColumnName("Product_Line");

                entity.Property(e => e.SalesOrderAlpha).HasColumnName("Sales_Order_ALPHA");

                entity.Property(e => e.SerialNumber).HasColumnName("Serial_Number");

                entity.Property(e => e.ServiceContractType).HasColumnName("Service_Contract_Type");

                entity.Property(e => e.ServiceEndDate).HasColumnName("Service_End_date");

                entity.Property(e => e.ServiceMaterial).HasColumnName("Service_Material");

                entity.Property(e => e.ServiceMaterialKey).HasColumnName("Service_Material___Key");

                entity.Property(e => e.ServiceMaterialProductLineText).HasColumnName("Service_Material___Product_Line__Text_");

                entity.Property(e => e.ServiceStartDate).HasColumnName("Service_Start_Date");
            });

            modelBuilder.Entity<ServiceContractFeb2017>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ServiceContract_Feb2017", "dsf");

                entity.Property(e => e.BillToPartyBasDistrictKey).HasColumnName("Bill_To_Party___BAS__District__Key_");

                entity.Property(e => e.BillToPartyCountryText).HasColumnName("Bill_To_Party___Country__Text_");

                entity.Property(e => e.BillToPartyKey).HasColumnName("Bill_To_Party___Key");

                entity.Property(e => e.BillToPartyLongText).HasColumnName("Bill_To_Party___Long_Text");

                entity.Property(e => e.ContractCreationDate).HasColumnName("Contract_Creation_Date");

                entity.Property(e => e.ContractItemNo).HasColumnName("Contract_item_No");

                entity.Property(e => e.ContractLineItemStatusDescription).HasColumnName("Contract_Line_Item_Status_Description");

                entity.Property(e => e.ContractNumber).HasColumnName("Contract_Number");

                entity.Property(e => e.ContractStatusText).HasColumnName("Contract_Status___Text");

                entity.Property(e => e.DiscountDoNotUse).HasColumnName("Discount___Do_Not_Use");

                entity.Property(e => e.EndCustomer).HasColumnName("End_Customer");

                entity.Property(e => e.EndCustomerBasDistrictKey).HasColumnName("End_Customer___BAS__District__Key_");

                entity.Property(e => e.EndCustomerCountryKey).HasColumnName("End_Customer___Country__Key_");

                entity.Property(e => e.EndCustomerDescription).HasColumnName("End_Customer_Description");

                entity.Property(e => e.ExtendedListPriceDoNotUse).HasColumnName("Extended_List_Price___Do_Not_Use");

                entity.Property(e => e.IObjectId).HasColumnName("I_Object_ID");

                entity.Property(e => e.InstalledAtBasDistrictText).HasColumnName("Installed_At___BAS__District__Text_");

                entity.Property(e => e.InstalledAtCountryKey).HasColumnName("Installed_At_Country___Key");

                entity.Property(e => e.InstalledAtKey).HasColumnName("Installed_At___Key");

                entity.Property(e => e.InstalledAtLongText).HasColumnName("Installed_At___Long_Text");

                entity.Property(e => e.MaterialEccnKey).HasColumnName("Material___ECCN__Key_");

                entity.Property(e => e.MaterialHtsKey).HasColumnName("Material___HTS__Key_");

                entity.Property(e => e.MaterialKey).HasColumnName("Material___Key");

                entity.Property(e => e.MaterialText).HasColumnName("Material___Text");

                entity.Property(e => e.NetValue).HasColumnName("Net_Value");

                entity.Property(e => e.PayerBasDistrictKey).HasColumnName("Payer___BAS__District__Key_");

                entity.Property(e => e.PayerCountryText).HasColumnName("Payer___Country__Text_");

                entity.Property(e => e.PayerKey).HasColumnName("Payer___Key");

                entity.Property(e => e.PayerLongText).HasColumnName("Payer___Long_Text");

                entity.Property(e => e.ProductFamily).HasColumnName("Product_Family");

                entity.Property(e => e.ProductLine).HasColumnName("Product_Line");

                entity.Property(e => e.SalesOrderAlpha).HasColumnName("Sales_Order_ALPHA");

                entity.Property(e => e.SerialNumber).HasColumnName("Serial_Number");

                entity.Property(e => e.ServiceContractType).HasColumnName("Service_Contract_Type");

                entity.Property(e => e.ServiceEndDate).HasColumnName("Service_End_date");

                entity.Property(e => e.ServiceMaterial).HasColumnName("Service_Material");

                entity.Property(e => e.ServiceMaterialKey).HasColumnName("Service_Material___Key");

                entity.Property(e => e.ServiceMaterialProductLineText).HasColumnName("Service_Material___Product_Line__Text_");

                entity.Property(e => e.ServiceStartDate).HasColumnName("Service_Start_Date");
            });

            modelBuilder.Entity<ServiceContractFebmar2018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ServiceContract_febmar2018", "dsf");

                entity.Property(e => e.BillToPartyBasDistrictKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___BAS__District__Key_");

                entity.Property(e => e.BillToPartyCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___Country__Text_");

                entity.Property(e => e.BillToPartyKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___Key");

                entity.Property(e => e.BillToPartyLongText)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party___Long_Text");

                entity.Property(e => e.ContractCreationDate)
                    .HasMaxLength(50)
                    .HasColumnName("Contract_Creation_Date");

                entity.Property(e => e.ContractItemNo)
                    .HasMaxLength(50)
                    .HasColumnName("Contract_item_No");

                entity.Property(e => e.ContractLineItemStatusDescription)
                    .HasMaxLength(50)
                    .HasColumnName("Contract_Line_Item_Status_Description");

                entity.Property(e => e.ContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Contract_Number");

                entity.Property(e => e.ContractStatusText)
                    .HasMaxLength(50)
                    .HasColumnName("Contract_Status___Text");

                entity.Property(e => e.Currency).HasMaxLength(50);

                entity.Property(e => e.DiscountDoNotUse)
                    .HasMaxLength(50)
                    .HasColumnName("Discount___Do_Not_Use");

                entity.Property(e => e.EndCustomer)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer");

                entity.Property(e => e.EndCustomerBasDistrictKey)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer___BAS__District__Key_");

                entity.Property(e => e.EndCustomerCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Country__Key_");

                entity.Property(e => e.EndCustomerDescription)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer_Description");

                entity.Property(e => e.ExtendedListPriceDoNotUse)
                    .HasMaxLength(50)
                    .HasColumnName("Extended_List_Price___Do_Not_Use");

                entity.Property(e => e.IObjectId)
                    .HasMaxLength(50)
                    .HasColumnName("I_Object_ID");

                entity.Property(e => e.InstalledAtBasDistrictText)
                    .HasMaxLength(50)
                    .HasColumnName("Installed_At___BAS__District__Text_");

                entity.Property(e => e.InstalledAtCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("Installed_At_Country___Key");

                entity.Property(e => e.InstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("Installed_At___Key");

                entity.Property(e => e.InstalledAtLongText)
                    .HasMaxLength(250)
                    .HasColumnName("Installed_At___Long_Text");

                entity.Property(e => e.MaterialEccnKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___ECCN__Key_");

                entity.Property(e => e.MaterialHtsKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___HTS__Key_");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___Key");

                entity.Property(e => e.MaterialText)
                    .HasMaxLength(50)
                    .HasColumnName("Material___Text");

                entity.Property(e => e.NetValue)
                    .HasMaxLength(50)
                    .HasColumnName("Net_Value");

                entity.Property(e => e.PayerBasDistrictKey)
                    .HasMaxLength(50)
                    .HasColumnName("Payer___BAS__District__Key_");

                entity.Property(e => e.PayerCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Payer___Country__Text_");

                entity.Property(e => e.PayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("Payer___Key");

                entity.Property(e => e.PayerLongText)
                    .HasMaxLength(250)
                    .HasColumnName("Payer___Long_Text");

                entity.Property(e => e.ProductFamily)
                    .HasMaxLength(50)
                    .HasColumnName("Product_Family");

                entity.Property(e => e.ProductLine)
                    .HasMaxLength(50)
                    .HasColumnName("Product_Line");

                entity.Property(e => e.SalesOrderAlpha)
                    .HasMaxLength(50)
                    .HasColumnName("Sales_Order_ALPHA");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Serial_Number");

                entity.Property(e => e.ServiceContractType)
                    .HasMaxLength(50)
                    .HasColumnName("Service_Contract_Type");

                entity.Property(e => e.ServiceEndDate)
                    .HasMaxLength(50)
                    .HasColumnName("Service_End_date");

                entity.Property(e => e.ServiceMaterial)
                    .HasMaxLength(50)
                    .HasColumnName("Service_Material");

                entity.Property(e => e.ServiceMaterialKey)
                    .HasMaxLength(50)
                    .HasColumnName("Service_Material___Key");

                entity.Property(e => e.ServiceMaterialProductLineText)
                    .HasMaxLength(50)
                    .HasColumnName("Service_Material___Product_Line__Text_");

                entity.Property(e => e.ServiceStartDate)
                    .HasMaxLength(50)
                    .HasColumnName("Service_Start_Date");
            });

            modelBuilder.Entity<ServiceContractJan2016>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ServiceContract_Jan2016", "dsf");

                entity.Property(e => e.BillToPartyBasDistrictKey).HasColumnName("Bill_To_Party___BAS__District__Key_");

                entity.Property(e => e.BillToPartyCountryText).HasColumnName("Bill_To_Party___Country__Text_");

                entity.Property(e => e.BillToPartyKey).HasColumnName("Bill_To_Party___Key");

                entity.Property(e => e.BillToPartyLongText).HasColumnName("Bill_To_Party___Long_Text");

                entity.Property(e => e.ContractCreationDate).HasColumnName("Contract_Creation_Date");

                entity.Property(e => e.ContractItemNo).HasColumnName("Contract_item_No");

                entity.Property(e => e.ContractLineItemStatusDescription).HasColumnName("Contract_Line_Item_Status_Description");

                entity.Property(e => e.ContractNumber).HasColumnName("Contract_Number");

                entity.Property(e => e.ContractStatusText).HasColumnName("Contract_Status___Text");

                entity.Property(e => e.DiscountDoNotUse).HasColumnName("Discount___Do_Not_Use");

                entity.Property(e => e.EndCustomer).HasColumnName("End_Customer");

                entity.Property(e => e.EndCustomerBasDistrictKey).HasColumnName("End_Customer___BAS__District__Key_");

                entity.Property(e => e.EndCustomerCountryKey).HasColumnName("End_Customer___Country__Key_");

                entity.Property(e => e.EndCustomerDescription).HasColumnName("End_Customer_Description");

                entity.Property(e => e.ExtendedListPriceDoNotUse).HasColumnName("Extended_List_Price___Do_Not_Use");

                entity.Property(e => e.IObjectId).HasColumnName("I_Object_ID");

                entity.Property(e => e.InstalledAtBasDistrictText).HasColumnName("Installed_At___BAS__District__Text_");

                entity.Property(e => e.InstalledAtCountryKey).HasColumnName("Installed_At_Country___Key");

                entity.Property(e => e.InstalledAtKey).HasColumnName("Installed_At___Key");

                entity.Property(e => e.InstalledAtLongText).HasColumnName("Installed_At___Long_Text");

                entity.Property(e => e.MaterialEccnKey).HasColumnName("Material___ECCN__Key_");

                entity.Property(e => e.MaterialHtsKey).HasColumnName("Material___HTS__Key_");

                entity.Property(e => e.MaterialKey).HasColumnName("Material___Key");

                entity.Property(e => e.MaterialText).HasColumnName("Material___Text");

                entity.Property(e => e.NetValue).HasColumnName("Net_Value");

                entity.Property(e => e.PayerBasDistrictKey).HasColumnName("Payer___BAS__District__Key_");

                entity.Property(e => e.PayerCountryText).HasColumnName("Payer___Country__Text_");

                entity.Property(e => e.PayerKey).HasColumnName("Payer___Key");

                entity.Property(e => e.PayerLongText).HasColumnName("Payer___Long_Text");

                entity.Property(e => e.ProductFamily).HasColumnName("Product_Family");

                entity.Property(e => e.ProductLine).HasColumnName("Product_Line");

                entity.Property(e => e.SalesOrderAlpha).HasColumnName("Sales_Order_ALPHA");

                entity.Property(e => e.SerialNumber).HasColumnName("Serial_Number");

                entity.Property(e => e.ServiceContractType).HasColumnName("Service_Contract_Type");

                entity.Property(e => e.ServiceEndDate).HasColumnName("Service_End_date");

                entity.Property(e => e.ServiceMaterial).HasColumnName("Service_Material");

                entity.Property(e => e.ServiceMaterialKey).HasColumnName("Service_Material___Key");

                entity.Property(e => e.ServiceMaterialProductLineText).HasColumnName("Service_Material___Product_Line__Text_");

                entity.Property(e => e.ServiceStartDate).HasColumnName("Service_Start_Date");
            });

            modelBuilder.Entity<ServiceContractJan2017>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ServiceContract_Jan2017", "dsf");

                entity.Property(e => e.BillToPartyBasDistrictKey).HasColumnName("Bill_To_Party___BAS__District__Key_");

                entity.Property(e => e.BillToPartyCountryText).HasColumnName("Bill_To_Party___Country__Text_");

                entity.Property(e => e.BillToPartyKey).HasColumnName("Bill_To_Party___Key");

                entity.Property(e => e.BillToPartyLongText).HasColumnName("Bill_To_Party___Long_Text");

                entity.Property(e => e.ContractCreationDate).HasColumnName("Contract_Creation_Date");

                entity.Property(e => e.ContractItemNo).HasColumnName("Contract_item_No");

                entity.Property(e => e.ContractLineItemStatusDescription).HasColumnName("Contract_Line_Item_Status_Description");

                entity.Property(e => e.ContractNumber).HasColumnName("Contract_Number");

                entity.Property(e => e.ContractStatusText).HasColumnName("Contract_Status___Text");

                entity.Property(e => e.DiscountDoNotUse).HasColumnName("Discount___Do_Not_Use");

                entity.Property(e => e.EndCustomer).HasColumnName("End_Customer");

                entity.Property(e => e.EndCustomerBasDistrictKey).HasColumnName("End_Customer___BAS__District__Key_");

                entity.Property(e => e.EndCustomerCountryKey).HasColumnName("End_Customer___Country__Key_");

                entity.Property(e => e.EndCustomerDescription).HasColumnName("End_Customer_Description");

                entity.Property(e => e.ExtendedListPriceDoNotUse).HasColumnName("Extended_List_Price___Do_Not_Use");

                entity.Property(e => e.IObjectId).HasColumnName("I_Object_ID");

                entity.Property(e => e.InstalledAtBasDistrictText).HasColumnName("Installed_At___BAS__District__Text_");

                entity.Property(e => e.InstalledAtCountryKey).HasColumnName("Installed_At_Country___Key");

                entity.Property(e => e.InstalledAtKey).HasColumnName("Installed_At___Key");

                entity.Property(e => e.InstalledAtLongText).HasColumnName("Installed_At___Long_Text");

                entity.Property(e => e.MaterialEccnKey).HasColumnName("Material___ECCN__Key_");

                entity.Property(e => e.MaterialHtsKey).HasColumnName("Material___HTS__Key_");

                entity.Property(e => e.MaterialKey).HasColumnName("Material___Key");

                entity.Property(e => e.MaterialText).HasColumnName("Material___Text");

                entity.Property(e => e.NetValue).HasColumnName("Net_Value");

                entity.Property(e => e.PayerBasDistrictKey).HasColumnName("Payer___BAS__District__Key_");

                entity.Property(e => e.PayerCountryText).HasColumnName("Payer___Country__Text_");

                entity.Property(e => e.PayerKey).HasColumnName("Payer___Key");

                entity.Property(e => e.PayerLongText).HasColumnName("Payer___Long_Text");

                entity.Property(e => e.ProductFamily).HasColumnName("Product_Family");

                entity.Property(e => e.ProductLine).HasColumnName("Product_Line");

                entity.Property(e => e.SalesOrderAlpha).HasColumnName("Sales_Order_ALPHA");

                entity.Property(e => e.SerialNumber).HasColumnName("Serial_Number");

                entity.Property(e => e.ServiceContractType).HasColumnName("Service_Contract_Type");

                entity.Property(e => e.ServiceEndDate).HasColumnName("Service_End_date");

                entity.Property(e => e.ServiceMaterial).HasColumnName("Service_Material");

                entity.Property(e => e.ServiceMaterialKey).HasColumnName("Service_Material___Key");

                entity.Property(e => e.ServiceMaterialProductLineText).HasColumnName("Service_Material___Product_Line__Text_");

                entity.Property(e => e.ServiceStartDate).HasColumnName("Service_Start_Date");
            });

            modelBuilder.Entity<ServiceContractJan2018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ServiceContract_jan2018", "dsf");

                entity.Property(e => e.BillToPartyBasDistrictKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___BAS__District__Key_");

                entity.Property(e => e.BillToPartyCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___Country__Text_");

                entity.Property(e => e.BillToPartyKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___Key");

                entity.Property(e => e.BillToPartyLongText)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party___Long_Text");

                entity.Property(e => e.ContractCreationDate)
                    .HasMaxLength(50)
                    .HasColumnName("Contract_Creation_Date");

                entity.Property(e => e.ContractItemNo)
                    .HasMaxLength(50)
                    .HasColumnName("Contract_item_No");

                entity.Property(e => e.ContractLineItemStatusDescription)
                    .HasMaxLength(50)
                    .HasColumnName("Contract_Line_Item_Status_Description");

                entity.Property(e => e.ContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Contract_Number");

                entity.Property(e => e.ContractStatusText)
                    .HasMaxLength(50)
                    .HasColumnName("Contract_Status___Text");

                entity.Property(e => e.Currency).HasMaxLength(50);

                entity.Property(e => e.DiscountDoNotUse)
                    .HasMaxLength(50)
                    .HasColumnName("Discount___Do_Not_Use");

                entity.Property(e => e.EndCustomer)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer");

                entity.Property(e => e.EndCustomerBasDistrictKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___BAS__District__Key_");

                entity.Property(e => e.EndCustomerCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Country__Key_");

                entity.Property(e => e.EndCustomerDescription)
                    .HasMaxLength(250)
                    .HasColumnName("End_Customer_Description");

                entity.Property(e => e.ExtendedListPriceDoNotUse)
                    .HasMaxLength(50)
                    .HasColumnName("Extended_List_Price___Do_Not_Use");

                entity.Property(e => e.IObjectId)
                    .HasMaxLength(50)
                    .HasColumnName("I_Object_ID");

                entity.Property(e => e.InstalledAtBasDistrictText)
                    .HasMaxLength(50)
                    .HasColumnName("Installed_At___BAS__District__Text_");

                entity.Property(e => e.InstalledAtCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("Installed_At_Country___Key");

                entity.Property(e => e.InstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("Installed_At___Key");

                entity.Property(e => e.InstalledAtLongText)
                    .HasMaxLength(250)
                    .HasColumnName("Installed_At___Long_Text");

                entity.Property(e => e.MaterialEccnKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___ECCN__Key_");

                entity.Property(e => e.MaterialHtsKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___HTS__Key_");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(50)
                    .HasColumnName("Material___Key");

                entity.Property(e => e.MaterialText)
                    .HasMaxLength(50)
                    .HasColumnName("Material___Text");

                entity.Property(e => e.NetValue)
                    .HasMaxLength(50)
                    .HasColumnName("Net_Value");

                entity.Property(e => e.PayerBasDistrictKey)
                    .HasMaxLength(50)
                    .HasColumnName("Payer___BAS__District__Key_");

                entity.Property(e => e.PayerCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("Payer___Country__Text_");

                entity.Property(e => e.PayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("Payer___Key");

                entity.Property(e => e.PayerLongText)
                    .HasMaxLength(250)
                    .HasColumnName("Payer___Long_Text");

                entity.Property(e => e.ProductFamily)
                    .HasMaxLength(50)
                    .HasColumnName("Product_Family");

                entity.Property(e => e.ProductLine)
                    .HasMaxLength(50)
                    .HasColumnName("Product_Line");

                entity.Property(e => e.SalesOrderAlpha)
                    .HasMaxLength(50)
                    .HasColumnName("Sales_Order_ALPHA");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Serial_Number");

                entity.Property(e => e.ServiceContractType)
                    .HasMaxLength(50)
                    .HasColumnName("Service_Contract_Type");

                entity.Property(e => e.ServiceEndDate)
                    .HasMaxLength(50)
                    .HasColumnName("Service_End_date");

                entity.Property(e => e.ServiceMaterial)
                    .HasMaxLength(50)
                    .HasColumnName("Service_Material");

                entity.Property(e => e.ServiceMaterialKey)
                    .HasMaxLength(50)
                    .HasColumnName("Service_Material___Key");

                entity.Property(e => e.ServiceMaterialProductLineText)
                    .HasMaxLength(50)
                    .HasColumnName("Service_Material___Product_Line__Text_");

                entity.Property(e => e.ServiceStartDate)
                    .HasMaxLength(50)
                    .HasColumnName("Service_Start_Date");
            });

            modelBuilder.Entity<ServiceContractJul2016>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ServiceContract_Jul2016", "dsf");

                entity.Property(e => e.BillToPartyBasDistrictKey).HasColumnName("Bill_To_Party___BAS__District__Key_");

                entity.Property(e => e.BillToPartyCountryText).HasColumnName("Bill_To_Party___Country__Text_");

                entity.Property(e => e.BillToPartyKey).HasColumnName("Bill_To_Party___Key");

                entity.Property(e => e.BillToPartyLongText).HasColumnName("Bill_To_Party___Long_Text");

                entity.Property(e => e.ContractCreationDate).HasColumnName("Contract_Creation_Date");

                entity.Property(e => e.ContractItemNo).HasColumnName("Contract_item_No");

                entity.Property(e => e.ContractLineItemStatusDescription).HasColumnName("Contract_Line_Item_Status_Description");

                entity.Property(e => e.ContractNumber).HasColumnName("Contract_Number");

                entity.Property(e => e.ContractStatusText).HasColumnName("Contract_Status___Text");

                entity.Property(e => e.DiscountDoNotUse).HasColumnName("Discount___Do_Not_Use");

                entity.Property(e => e.EndCustomer).HasColumnName("End_Customer");

                entity.Property(e => e.EndCustomerBasDistrictKey).HasColumnName("End_Customer___BAS__District__Key_");

                entity.Property(e => e.EndCustomerCountryKey).HasColumnName("End_Customer___Country__Key_");

                entity.Property(e => e.EndCustomerDescription).HasColumnName("End_Customer_Description");

                entity.Property(e => e.ExtendedListPriceDoNotUse).HasColumnName("Extended_List_Price___Do_Not_Use");

                entity.Property(e => e.IObjectId).HasColumnName("I_Object_ID");

                entity.Property(e => e.InstalledAtBasDistrictText).HasColumnName("Installed_At___BAS__District__Text_");

                entity.Property(e => e.InstalledAtCountryKey).HasColumnName("Installed_At_Country___Key");

                entity.Property(e => e.InstalledAtKey).HasColumnName("Installed_At___Key");

                entity.Property(e => e.InstalledAtLongText).HasColumnName("Installed_At___Long_Text");

                entity.Property(e => e.MaterialEccnKey).HasColumnName("Material___ECCN__Key_");

                entity.Property(e => e.MaterialHtsKey).HasColumnName("Material___HTS__Key_");

                entity.Property(e => e.MaterialKey).HasColumnName("Material___Key");

                entity.Property(e => e.MaterialText).HasColumnName("Material___Text");

                entity.Property(e => e.NetValue).HasColumnName("Net_Value");

                entity.Property(e => e.PayerBasDistrictKey).HasColumnName("Payer___BAS__District__Key_");

                entity.Property(e => e.PayerCountryText).HasColumnName("Payer___Country__Text_");

                entity.Property(e => e.PayerKey).HasColumnName("Payer___Key");

                entity.Property(e => e.PayerLongText).HasColumnName("Payer___Long_Text");

                entity.Property(e => e.ProductFamily).HasColumnName("Product_Family");

                entity.Property(e => e.ProductLine).HasColumnName("Product_Line");

                entity.Property(e => e.SalesOrderAlpha).HasColumnName("Sales_Order_ALPHA");

                entity.Property(e => e.SerialNumber).HasColumnName("Serial_Number");

                entity.Property(e => e.ServiceContractType).HasColumnName("Service_Contract_Type");

                entity.Property(e => e.ServiceEndDate).HasColumnName("Service_End_date");

                entity.Property(e => e.ServiceMaterial).HasColumnName("Service_Material");

                entity.Property(e => e.ServiceMaterialKey).HasColumnName("Service_Material___Key");

                entity.Property(e => e.ServiceMaterialProductLineText).HasColumnName("Service_Material___Product_Line__Text_");

                entity.Property(e => e.ServiceStartDate).HasColumnName("Service_Start_Date");
            });

            modelBuilder.Entity<ServiceContractJul2017>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ServiceContract_Jul2017", "dsf");

                entity.Property(e => e.BillToPartyBasDistrictKey).HasColumnName("Bill_To_Party___BAS__District__Key_");

                entity.Property(e => e.BillToPartyCountryText).HasColumnName("Bill_To_Party___Country__Text_");

                entity.Property(e => e.BillToPartyKey).HasColumnName("Bill_To_Party___Key");

                entity.Property(e => e.BillToPartyLongText).HasColumnName("Bill_To_Party___Long_Text");

                entity.Property(e => e.ContractCreationDate).HasColumnName("Contract_Creation_Date");

                entity.Property(e => e.ContractItemNo).HasColumnName("Contract_item_No");

                entity.Property(e => e.ContractLineItemStatusDescription).HasColumnName("Contract_Line_Item_Status_Description");

                entity.Property(e => e.ContractNumber).HasColumnName("Contract_Number");

                entity.Property(e => e.ContractStatusText).HasColumnName("Contract_Status___Text");

                entity.Property(e => e.DiscountDoNotUse).HasColumnName("Discount___Do_Not_Use");

                entity.Property(e => e.EndCustomer).HasColumnName("End_Customer");

                entity.Property(e => e.EndCustomerBasDistrictKey).HasColumnName("End_Customer___BAS__District__Key_");

                entity.Property(e => e.EndCustomerCountryKey).HasColumnName("End_Customer___Country__Key_");

                entity.Property(e => e.EndCustomerDescription).HasColumnName("End_Customer_Description");

                entity.Property(e => e.ExtendedListPriceDoNotUse).HasColumnName("Extended_List_Price___Do_Not_Use");

                entity.Property(e => e.IObjectId).HasColumnName("I_Object_ID");

                entity.Property(e => e.InstalledAtBasDistrictText).HasColumnName("Installed_At___BAS__District__Text_");

                entity.Property(e => e.InstalledAtCountryKey).HasColumnName("Installed_At_Country___Key");

                entity.Property(e => e.InstalledAtKey).HasColumnName("Installed_At___Key");

                entity.Property(e => e.InstalledAtLongText).HasColumnName("Installed_At___Long_Text");

                entity.Property(e => e.MaterialEccnKey).HasColumnName("Material___ECCN__Key_");

                entity.Property(e => e.MaterialHtsKey).HasColumnName("Material___HTS__Key_");

                entity.Property(e => e.MaterialKey).HasColumnName("Material___Key");

                entity.Property(e => e.MaterialText).HasColumnName("Material___Text");

                entity.Property(e => e.NetValue).HasColumnName("Net_Value");

                entity.Property(e => e.PayerBasDistrictKey).HasColumnName("Payer___BAS__District__Key_");

                entity.Property(e => e.PayerCountryText).HasColumnName("Payer___Country__Text_");

                entity.Property(e => e.PayerKey).HasColumnName("Payer___Key");

                entity.Property(e => e.PayerLongText).HasColumnName("Payer___Long_Text");

                entity.Property(e => e.ProductFamily).HasColumnName("Product_Family");

                entity.Property(e => e.ProductLine).HasColumnName("Product_Line");

                entity.Property(e => e.SalesOrderAlpha).HasColumnName("Sales_Order_ALPHA");

                entity.Property(e => e.SerialNumber).HasColumnName("Serial_Number");

                entity.Property(e => e.ServiceContractType).HasColumnName("Service_Contract_Type");

                entity.Property(e => e.ServiceEndDate).HasColumnName("Service_End_date");

                entity.Property(e => e.ServiceMaterial).HasColumnName("Service_Material");

                entity.Property(e => e.ServiceMaterialKey).HasColumnName("Service_Material___Key");

                entity.Property(e => e.ServiceMaterialProductLineText).HasColumnName("Service_Material___Product_Line__Text_");

                entity.Property(e => e.ServiceStartDate).HasColumnName("Service_Start_Date");
            });

            modelBuilder.Entity<ServiceContractJulaug2018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ServiceContract_julaug2018", "dsf");

                entity.Property(e => e.BillToParty)
                    .HasMaxLength(150)
                    .HasColumnName("_Bill_To_Party_");

                entity.Property(e => e.BillToPartyBasDistrictKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Bill_To_Party___BAS__District__Key__");

                entity.Property(e => e.BillToPartyCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("_Bill_To_Party___Country__Text__");

                entity.Property(e => e.BillToPartyKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Bill_To_Party___Key_");

                entity.Property(e => e.BillToPartyLongText)
                    .HasMaxLength(150)
                    .HasColumnName("_Bill_To_Party___Long_Text_");

                entity.Property(e => e.ContractCreationDate)
                    .HasMaxLength(50)
                    .HasColumnName("_Contract_Creation_Date_");

                entity.Property(e => e.ContractItemNo)
                    .HasMaxLength(50)
                    .HasColumnName("_Contract_item_No_");

                entity.Property(e => e.ContractLineItemStatus)
                    .HasMaxLength(50)
                    .HasColumnName("_Contract_Line_Item_Status_");

                entity.Property(e => e.ContractLineItemStatusMediumText)
                    .HasMaxLength(50)
                    .HasColumnName("_Contract_Line_Item_Status___Medium_Text_");

                entity.Property(e => e.ContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("_Contract_Number_");

                entity.Property(e => e.ContractStatusText)
                    .HasMaxLength(50)
                    .HasColumnName("_Contract_Status___Text_");

                entity.Property(e => e.CurrencyKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Currency___Key_");

                entity.Property(e => e.DiscountDoNotUse)
                    .HasMaxLength(50)
                    .HasColumnName("_Discount___Do_Not_Use_");

                entity.Property(e => e.EndCustomer)
                    .HasMaxLength(150)
                    .HasColumnName("_End_Customer_");

                entity.Property(e => e.EndCustomerBasDistrictKey)
                    .HasMaxLength(50)
                    .HasColumnName("_End_Customer___BAS__District__Key__");

                entity.Property(e => e.EndCustomerCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("_End_Customer___Country__Key__");

                entity.Property(e => e.EndCustomerKey)
                    .HasMaxLength(50)
                    .HasColumnName("_End_Customer___Key_");

                entity.Property(e => e.EndCustomerText)
                    .HasMaxLength(150)
                    .HasColumnName("_End_Customer___Text_");

                entity.Property(e => e.ExtendedListPriceDoNotUse)
                    .HasMaxLength(50)
                    .HasColumnName("_Extended_List_Price___Do_Not_Use_");

                entity.Property(e => e.IObjectId)
                    .HasMaxLength(50)
                    .HasColumnName("_I_Object_ID_");

                entity.Property(e => e.InstalledAtBasDistrictText)
                    .HasMaxLength(50)
                    .HasColumnName("_Installed_At___BAS__District__Text__");

                entity.Property(e => e.InstalledAtCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Installed_At_Country___Key_");

                entity.Property(e => e.InstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Installed_At___Key_");

                entity.Property(e => e.InstalledAtLongText)
                    .HasMaxLength(150)
                    .HasColumnName("_Installed_At___Long_Text_");

                entity.Property(e => e.Material)
                    .HasMaxLength(50)
                    .HasColumnName("_Material_");

                entity.Property(e => e.MaterialEccnKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Material___ECCN__Key__");

                entity.Property(e => e.MaterialHtsKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Material___HTS__Key__");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Material___Key_");

                entity.Property(e => e.MaterialText)
                    .HasMaxLength(50)
                    .HasColumnName("_Material___Text_");

                entity.Property(e => e.OrderNetValue)
                    .HasMaxLength(50)
                    .HasColumnName("_Order__Net_Value_");

                entity.Property(e => e.Payer)
                    .HasMaxLength(150)
                    .HasColumnName("_Payer_");

                entity.Property(e => e.PayerBasDistrictKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Payer___BAS__District__Key__");

                entity.Property(e => e.PayerCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("_Payer___Country__Text__");

                entity.Property(e => e.PayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Payer___Key_");

                entity.Property(e => e.PayerLongText)
                    .HasMaxLength(150)
                    .HasColumnName("_Payer___Long_Text_");

                entity.Property(e => e.ProductFamily)
                    .HasMaxLength(50)
                    .HasColumnName("_Product_Family_");

                entity.Property(e => e.ProductLine)
                    .HasMaxLength(50)
                    .HasColumnName("_Product_Line_");

                entity.Property(e => e.SalesOrderAlpha)
                    .HasMaxLength(50)
                    .HasColumnName("_Sales_Order_ALPHA_");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("_Serial_Number_");

                entity.Property(e => e.ServiceContractType)
                    .HasMaxLength(50)
                    .HasColumnName("_Service_Contract_Type_");

                entity.Property(e => e.ServiceEndDate)
                    .HasMaxLength(50)
                    .HasColumnName("_Service_End_date_");

                entity.Property(e => e.ServiceMaterial)
                    .HasMaxLength(50)
                    .HasColumnName("_Service_Material_");

                entity.Property(e => e.ServiceMaterialKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Service_Material___Key_");

                entity.Property(e => e.ServiceMaterialProductLineText)
                    .HasMaxLength(50)
                    .HasColumnName("_Service_Material___Product_Line__Text__");

                entity.Property(e => e.ServiceStartDate)
                    .HasMaxLength(50)
                    .HasColumnName("_Service_Start_Date_");
            });

            modelBuilder.Entity<ServiceContractJun2016>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ServiceContract_Jun2016", "dsf");

                entity.Property(e => e.BillToPartyBasDistrictKey).HasColumnName("Bill_To_Party___BAS__District__Key_");

                entity.Property(e => e.BillToPartyCountryText).HasColumnName("Bill_To_Party___Country__Text_");

                entity.Property(e => e.BillToPartyKey).HasColumnName("Bill_To_Party___Key");

                entity.Property(e => e.BillToPartyLongText).HasColumnName("Bill_To_Party___Long_Text");

                entity.Property(e => e.ContractCreationDate).HasColumnName("Contract_Creation_Date");

                entity.Property(e => e.ContractItemNo).HasColumnName("Contract_item_No");

                entity.Property(e => e.ContractLineItemStatusDescription).HasColumnName("Contract_Line_Item_Status_Description");

                entity.Property(e => e.ContractNumber).HasColumnName("Contract_Number");

                entity.Property(e => e.ContractStatusText).HasColumnName("Contract_Status___Text");

                entity.Property(e => e.DiscountDoNotUse).HasColumnName("Discount___Do_Not_Use");

                entity.Property(e => e.EndCustomer).HasColumnName("End_Customer");

                entity.Property(e => e.EndCustomerBasDistrictKey).HasColumnName("End_Customer___BAS__District__Key_");

                entity.Property(e => e.EndCustomerCountryKey).HasColumnName("End_Customer___Country__Key_");

                entity.Property(e => e.EndCustomerDescription).HasColumnName("End_Customer_Description");

                entity.Property(e => e.ExtendedListPriceDoNotUse).HasColumnName("Extended_List_Price___Do_Not_Use");

                entity.Property(e => e.IObjectId).HasColumnName("I_Object_ID");

                entity.Property(e => e.InstalledAtBasDistrictText).HasColumnName("Installed_At___BAS__District__Text_");

                entity.Property(e => e.InstalledAtCountryKey).HasColumnName("Installed_At_Country___Key");

                entity.Property(e => e.InstalledAtKey).HasColumnName("Installed_At___Key");

                entity.Property(e => e.InstalledAtLongText).HasColumnName("Installed_At___Long_Text");

                entity.Property(e => e.MaterialEccnKey).HasColumnName("Material___ECCN__Key_");

                entity.Property(e => e.MaterialHtsKey).HasColumnName("Material___HTS__Key_");

                entity.Property(e => e.MaterialKey).HasColumnName("Material___Key");

                entity.Property(e => e.MaterialText).HasColumnName("Material___Text");

                entity.Property(e => e.NetValue).HasColumnName("Net_Value");

                entity.Property(e => e.PayerBasDistrictKey).HasColumnName("Payer___BAS__District__Key_");

                entity.Property(e => e.PayerCountryText).HasColumnName("Payer___Country__Text_");

                entity.Property(e => e.PayerKey).HasColumnName("Payer___Key");

                entity.Property(e => e.PayerLongText).HasColumnName("Payer___Long_Text");

                entity.Property(e => e.ProductFamily).HasColumnName("Product_Family");

                entity.Property(e => e.ProductLine).HasColumnName("Product_Line");

                entity.Property(e => e.SalesOrderAlpha).HasColumnName("Sales_Order_ALPHA");

                entity.Property(e => e.SerialNumber).HasColumnName("Serial_Number");

                entity.Property(e => e.ServiceContractType).HasColumnName("Service_Contract_Type");

                entity.Property(e => e.ServiceEndDate).HasColumnName("Service_End_date");

                entity.Property(e => e.ServiceMaterial).HasColumnName("Service_Material");

                entity.Property(e => e.ServiceMaterialKey).HasColumnName("Service_Material___Key");

                entity.Property(e => e.ServiceMaterialProductLineText).HasColumnName("Service_Material___Product_Line__Text_");

                entity.Property(e => e.ServiceStartDate).HasColumnName("Service_Start_Date");
            });

            modelBuilder.Entity<ServiceContractJun2017>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ServiceContract_Jun2017", "dsf");

                entity.Property(e => e.BillToPartyBasDistrictKey).HasColumnName("Bill_To_Party___BAS__District__Key_");

                entity.Property(e => e.BillToPartyCountryText).HasColumnName("Bill_To_Party___Country__Text_");

                entity.Property(e => e.BillToPartyKey).HasColumnName("Bill_To_Party___Key");

                entity.Property(e => e.BillToPartyLongText).HasColumnName("Bill_To_Party___Long_Text");

                entity.Property(e => e.ContractCreationDate).HasColumnName("Contract_Creation_Date");

                entity.Property(e => e.ContractItemNo).HasColumnName("Contract_item_No");

                entity.Property(e => e.ContractLineItemStatusDescription).HasColumnName("Contract_Line_Item_Status_Description");

                entity.Property(e => e.ContractNumber).HasColumnName("Contract_Number");

                entity.Property(e => e.ContractStatusText).HasColumnName("Contract_Status___Text");

                entity.Property(e => e.DiscountDoNotUse).HasColumnName("Discount___Do_Not_Use");

                entity.Property(e => e.EndCustomer).HasColumnName("End_Customer");

                entity.Property(e => e.EndCustomerBasDistrictKey).HasColumnName("End_Customer___BAS__District__Key_");

                entity.Property(e => e.EndCustomerCountryKey).HasColumnName("End_Customer___Country__Key_");

                entity.Property(e => e.EndCustomerDescription).HasColumnName("End_Customer_Description");

                entity.Property(e => e.ExtendedListPriceDoNotUse).HasColumnName("Extended_List_Price___Do_Not_Use");

                entity.Property(e => e.IObjectId).HasColumnName("I_Object_ID");

                entity.Property(e => e.InstalledAtBasDistrictText).HasColumnName("Installed_At___BAS__District__Text_");

                entity.Property(e => e.InstalledAtCountryKey).HasColumnName("Installed_At_Country___Key");

                entity.Property(e => e.InstalledAtKey).HasColumnName("Installed_At___Key");

                entity.Property(e => e.InstalledAtLongText).HasColumnName("Installed_At___Long_Text");

                entity.Property(e => e.MaterialEccnKey).HasColumnName("Material___ECCN__Key_");

                entity.Property(e => e.MaterialHtsKey).HasColumnName("Material___HTS__Key_");

                entity.Property(e => e.MaterialKey).HasColumnName("Material___Key");

                entity.Property(e => e.MaterialText).HasColumnName("Material___Text");

                entity.Property(e => e.NetValue).HasColumnName("Net_Value");

                entity.Property(e => e.PayerBasDistrictKey).HasColumnName("Payer___BAS__District__Key_");

                entity.Property(e => e.PayerCountryText).HasColumnName("Payer___Country__Text_");

                entity.Property(e => e.PayerKey).HasColumnName("Payer___Key");

                entity.Property(e => e.PayerLongText).HasColumnName("Payer___Long_Text");

                entity.Property(e => e.ProductFamily).HasColumnName("Product_Family");

                entity.Property(e => e.ProductLine).HasColumnName("Product_Line");

                entity.Property(e => e.SalesOrderAlpha).HasColumnName("Sales_Order_ALPHA");

                entity.Property(e => e.SerialNumber).HasColumnName("Serial_Number");

                entity.Property(e => e.ServiceContractType).HasColumnName("Service_Contract_Type");

                entity.Property(e => e.ServiceEndDate).HasColumnName("Service_End_date");

                entity.Property(e => e.ServiceMaterial).HasColumnName("Service_Material");

                entity.Property(e => e.ServiceMaterialKey).HasColumnName("Service_Material___Key");

                entity.Property(e => e.ServiceMaterialProductLineText).HasColumnName("Service_Material___Product_Line__Text_");

                entity.Property(e => e.ServiceStartDate).HasColumnName("Service_Start_Date");
            });

            modelBuilder.Entity<ServiceContractJun2018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ServiceContract_jun2018", "dsf");

                entity.Property(e => e.BillToParty)
                    .HasMaxLength(150)
                    .HasColumnName("_Bill_To_Party_");

                entity.Property(e => e.BillToPartyBasDistrictKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Bill_To_Party___BAS__District__Key__");

                entity.Property(e => e.BillToPartyCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("_Bill_To_Party___Country__Text__");

                entity.Property(e => e.BillToPartyKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Bill_To_Party___Key_");

                entity.Property(e => e.BillToPartyLongText)
                    .HasMaxLength(150)
                    .HasColumnName("_Bill_To_Party___Long_Text_");

                entity.Property(e => e.ContractCreationDate)
                    .HasMaxLength(50)
                    .HasColumnName("_Contract_Creation_Date_");

                entity.Property(e => e.ContractItemNo)
                    .HasMaxLength(50)
                    .HasColumnName("_Contract_item_No_");

                entity.Property(e => e.ContractLineItemStatus)
                    .HasMaxLength(50)
                    .HasColumnName("_Contract_Line_Item_Status_");

                entity.Property(e => e.ContractLineItemStatusMediumText)
                    .HasMaxLength(50)
                    .HasColumnName("_Contract_Line_Item_Status___Medium_Text_");

                entity.Property(e => e.ContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("_Contract_Number_");

                entity.Property(e => e.ContractStatusText)
                    .HasMaxLength(50)
                    .HasColumnName("_Contract_Status___Text_");

                entity.Property(e => e.CurrencyKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Currency___Key_");

                entity.Property(e => e.DiscountDoNotUse)
                    .HasMaxLength(50)
                    .HasColumnName("_Discount___Do_Not_Use_");

                entity.Property(e => e.EndCustomer)
                    .HasMaxLength(150)
                    .HasColumnName("_End_Customer_");

                entity.Property(e => e.EndCustomerBasDistrictKey)
                    .HasMaxLength(50)
                    .HasColumnName("_End_Customer___BAS__District__Key__");

                entity.Property(e => e.EndCustomerCountryKey)
                    .HasMaxLength(150)
                    .HasColumnName("_End_Customer___Country__Key__");

                entity.Property(e => e.EndCustomerKey)
                    .HasMaxLength(50)
                    .HasColumnName("_End_Customer___Key_");

                entity.Property(e => e.EndCustomerText)
                    .HasMaxLength(150)
                    .HasColumnName("_End_Customer___Text_");

                entity.Property(e => e.ExtendedListPriceDoNotUse)
                    .HasMaxLength(50)
                    .HasColumnName("_Extended_List_Price___Do_Not_Use_");

                entity.Property(e => e.IObjectId)
                    .HasMaxLength(50)
                    .HasColumnName("_I_Object_ID_");

                entity.Property(e => e.InstalledAtBasDistrictText)
                    .HasMaxLength(50)
                    .HasColumnName("_Installed_At___BAS__District__Text__");

                entity.Property(e => e.InstalledAtCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Installed_At_Country___Key_");

                entity.Property(e => e.InstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Installed_At___Key_");

                entity.Property(e => e.InstalledAtLongText)
                    .HasMaxLength(150)
                    .HasColumnName("_Installed_At___Long_Text_");

                entity.Property(e => e.Material)
                    .HasMaxLength(50)
                    .HasColumnName("_Material_");

                entity.Property(e => e.MaterialEccnKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Material___ECCN__Key__");

                entity.Property(e => e.MaterialHtsKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Material___HTS__Key__");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Material___Key_");

                entity.Property(e => e.MaterialText)
                    .HasMaxLength(50)
                    .HasColumnName("_Material___Text_");

                entity.Property(e => e.OrderNetValue)
                    .HasMaxLength(50)
                    .HasColumnName("_Order__Net_Value_");

                entity.Property(e => e.Payer)
                    .HasMaxLength(150)
                    .HasColumnName("_Payer_");

                entity.Property(e => e.PayerBasDistrictKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Payer___BAS__District__Key__");

                entity.Property(e => e.PayerCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("_Payer___Country__Text__");

                entity.Property(e => e.PayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Payer___Key_");

                entity.Property(e => e.PayerLongText)
                    .HasMaxLength(150)
                    .HasColumnName("_Payer___Long_Text_");

                entity.Property(e => e.ProductFamily)
                    .HasMaxLength(50)
                    .HasColumnName("_Product_Family_");

                entity.Property(e => e.ProductLine)
                    .HasMaxLength(50)
                    .HasColumnName("_Product_Line_");

                entity.Property(e => e.SalesOrderAlpha)
                    .HasMaxLength(50)
                    .HasColumnName("_Sales_Order_ALPHA_");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("_Serial_Number_");

                entity.Property(e => e.ServiceContractType)
                    .HasMaxLength(50)
                    .HasColumnName("_Service_Contract_Type_");

                entity.Property(e => e.ServiceEndDate)
                    .HasMaxLength(50)
                    .HasColumnName("_Service_End_date_");

                entity.Property(e => e.ServiceMaterial)
                    .HasMaxLength(50)
                    .HasColumnName("_Service_Material_");

                entity.Property(e => e.ServiceMaterialKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Service_Material___Key_");

                entity.Property(e => e.ServiceMaterialProductLineText)
                    .HasMaxLength(50)
                    .HasColumnName("_Service_Material___Product_Line__Text__");

                entity.Property(e => e.ServiceStartDate)
                    .HasMaxLength(50)
                    .HasColumnName("_Service_Start_Date_");
            });

            modelBuilder.Entity<ServiceContractMar2016>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ServiceContract_Mar2016", "dsf");

                entity.Property(e => e.BillToPartyBasDistrictKey).HasColumnName("Bill_To_Party___BAS__District__Key_");

                entity.Property(e => e.BillToPartyCountryText).HasColumnName("Bill_To_Party___Country__Text_");

                entity.Property(e => e.BillToPartyKey).HasColumnName("Bill_To_Party___Key");

                entity.Property(e => e.BillToPartyLongText).HasColumnName("Bill_To_Party___Long_Text");

                entity.Property(e => e.ContractCreationDate).HasColumnName("Contract_Creation_Date");

                entity.Property(e => e.ContractItemNo).HasColumnName("Contract_item_No");

                entity.Property(e => e.ContractLineItemStatusDescription).HasColumnName("Contract_Line_Item_Status_Description");

                entity.Property(e => e.ContractNumber).HasColumnName("Contract_Number");

                entity.Property(e => e.ContractStatusText).HasColumnName("Contract_Status___Text");

                entity.Property(e => e.DiscountDoNotUse).HasColumnName("Discount___Do_Not_Use");

                entity.Property(e => e.EndCustomer).HasColumnName("End_Customer");

                entity.Property(e => e.EndCustomerBasDistrictKey).HasColumnName("End_Customer___BAS__District__Key_");

                entity.Property(e => e.EndCustomerCountryKey).HasColumnName("End_Customer___Country__Key_");

                entity.Property(e => e.EndCustomerDescription).HasColumnName("End_Customer_Description");

                entity.Property(e => e.ExtendedListPriceDoNotUse).HasColumnName("Extended_List_Price___Do_Not_Use");

                entity.Property(e => e.IObjectId).HasColumnName("I_Object_ID");

                entity.Property(e => e.InstalledAtBasDistrictText).HasColumnName("Installed_At___BAS__District__Text_");

                entity.Property(e => e.InstalledAtCountryKey).HasColumnName("Installed_At_Country___Key");

                entity.Property(e => e.InstalledAtKey).HasColumnName("Installed_At___Key");

                entity.Property(e => e.InstalledAtLongText).HasColumnName("Installed_At___Long_Text");

                entity.Property(e => e.MaterialEccnKey).HasColumnName("Material___ECCN__Key_");

                entity.Property(e => e.MaterialHtsKey).HasColumnName("Material___HTS__Key_");

                entity.Property(e => e.MaterialKey).HasColumnName("Material___Key");

                entity.Property(e => e.MaterialText).HasColumnName("Material___Text");

                entity.Property(e => e.NetValue).HasColumnName("Net_Value");

                entity.Property(e => e.PayerBasDistrictKey).HasColumnName("Payer___BAS__District__Key_");

                entity.Property(e => e.PayerCountryText).HasColumnName("Payer___Country__Text_");

                entity.Property(e => e.PayerKey).HasColumnName("Payer___Key");

                entity.Property(e => e.PayerLongText).HasColumnName("Payer___Long_Text");

                entity.Property(e => e.ProductFamily).HasColumnName("Product_Family");

                entity.Property(e => e.ProductLine).HasColumnName("Product_Line");

                entity.Property(e => e.SalesOrderAlpha).HasColumnName("Sales_Order_ALPHA");

                entity.Property(e => e.SerialNumber).HasColumnName("Serial_Number");

                entity.Property(e => e.ServiceContractType).HasColumnName("Service_Contract_Type");

                entity.Property(e => e.ServiceEndDate).HasColumnName("Service_End_date");

                entity.Property(e => e.ServiceMaterial).HasColumnName("Service_Material");

                entity.Property(e => e.ServiceMaterialKey).HasColumnName("Service_Material___Key");

                entity.Property(e => e.ServiceMaterialProductLineText).HasColumnName("Service_Material___Product_Line__Text_");

                entity.Property(e => e.ServiceStartDate).HasColumnName("Service_Start_Date");
            });

            modelBuilder.Entity<ServiceContractMar2017>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ServiceContract_Mar2017", "dsf");

                entity.Property(e => e.BillToPartyBasDistrictKey).HasColumnName("Bill_To_Party___BAS__District__Key_");

                entity.Property(e => e.BillToPartyCountryText).HasColumnName("Bill_To_Party___Country__Text_");

                entity.Property(e => e.BillToPartyKey).HasColumnName("Bill_To_Party___Key");

                entity.Property(e => e.BillToPartyLongText).HasColumnName("Bill_To_Party___Long_Text");

                entity.Property(e => e.ContractCreationDate).HasColumnName("Contract_Creation_Date");

                entity.Property(e => e.ContractItemNo).HasColumnName("Contract_item_No");

                entity.Property(e => e.ContractLineItemStatusDescription).HasColumnName("Contract_Line_Item_Status_Description");

                entity.Property(e => e.ContractNumber).HasColumnName("Contract_Number");

                entity.Property(e => e.ContractStatusText).HasColumnName("Contract_Status___Text");

                entity.Property(e => e.DiscountDoNotUse).HasColumnName("Discount___Do_Not_Use");

                entity.Property(e => e.EndCustomer).HasColumnName("End_Customer");

                entity.Property(e => e.EndCustomerBasDistrictKey).HasColumnName("End_Customer___BAS__District__Key_");

                entity.Property(e => e.EndCustomerCountryKey).HasColumnName("End_Customer___Country__Key_");

                entity.Property(e => e.EndCustomerDescription).HasColumnName("End_Customer_Description");

                entity.Property(e => e.ExtendedListPriceDoNotUse).HasColumnName("Extended_List_Price___Do_Not_Use");

                entity.Property(e => e.IObjectId).HasColumnName("I_Object_ID");

                entity.Property(e => e.InstalledAtBasDistrictText).HasColumnName("Installed_At___BAS__District__Text_");

                entity.Property(e => e.InstalledAtCountryKey).HasColumnName("Installed_At_Country___Key");

                entity.Property(e => e.InstalledAtKey).HasColumnName("Installed_At___Key");

                entity.Property(e => e.InstalledAtLongText).HasColumnName("Installed_At___Long_Text");

                entity.Property(e => e.MaterialEccnKey).HasColumnName("Material___ECCN__Key_");

                entity.Property(e => e.MaterialHtsKey).HasColumnName("Material___HTS__Key_");

                entity.Property(e => e.MaterialKey).HasColumnName("Material___Key");

                entity.Property(e => e.MaterialText).HasColumnName("Material___Text");

                entity.Property(e => e.NetValue).HasColumnName("Net_Value");

                entity.Property(e => e.PayerBasDistrictKey).HasColumnName("Payer___BAS__District__Key_");

                entity.Property(e => e.PayerCountryText).HasColumnName("Payer___Country__Text_");

                entity.Property(e => e.PayerKey).HasColumnName("Payer___Key");

                entity.Property(e => e.PayerLongText).HasColumnName("Payer___Long_Text");

                entity.Property(e => e.ProductFamily).HasColumnName("Product_Family");

                entity.Property(e => e.ProductLine).HasColumnName("Product_Line");

                entity.Property(e => e.SalesOrderAlpha).HasColumnName("Sales_Order_ALPHA");

                entity.Property(e => e.SerialNumber).HasColumnName("Serial_Number");

                entity.Property(e => e.ServiceContractType).HasColumnName("Service_Contract_Type");

                entity.Property(e => e.ServiceEndDate).HasColumnName("Service_End_date");

                entity.Property(e => e.ServiceMaterial).HasColumnName("Service_Material");

                entity.Property(e => e.ServiceMaterialKey).HasColumnName("Service_Material___Key");

                entity.Property(e => e.ServiceMaterialProductLineText).HasColumnName("Service_Material___Product_Line__Text_");

                entity.Property(e => e.ServiceStartDate).HasColumnName("Service_Start_Date");
            });

            modelBuilder.Entity<ServiceContractMay2016>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ServiceContract_May2016", "dsf");

                entity.Property(e => e.BillToPartyBasDistrictKey).HasColumnName("Bill_To_Party___BAS__District__Key_");

                entity.Property(e => e.BillToPartyCountryText).HasColumnName("Bill_To_Party___Country__Text_");

                entity.Property(e => e.BillToPartyKey).HasColumnName("Bill_To_Party___Key");

                entity.Property(e => e.BillToPartyLongText).HasColumnName("Bill_To_Party___Long_Text");

                entity.Property(e => e.ContractCreationDate).HasColumnName("Contract_Creation_Date");

                entity.Property(e => e.ContractItemNo).HasColumnName("Contract_item_No");

                entity.Property(e => e.ContractLineItemStatusDescription).HasColumnName("Contract_Line_Item_Status_Description");

                entity.Property(e => e.ContractNumber).HasColumnName("Contract_Number");

                entity.Property(e => e.ContractStatusText).HasColumnName("Contract_Status___Text");

                entity.Property(e => e.DiscountDoNotUse).HasColumnName("Discount___Do_Not_Use");

                entity.Property(e => e.EndCustomer).HasColumnName("End_Customer");

                entity.Property(e => e.EndCustomerBasDistrictKey).HasColumnName("End_Customer___BAS__District__Key_");

                entity.Property(e => e.EndCustomerCountryKey).HasColumnName("End_Customer___Country__Key_");

                entity.Property(e => e.EndCustomerDescription).HasColumnName("End_Customer_Description");

                entity.Property(e => e.ExtendedListPriceDoNotUse).HasColumnName("Extended_List_Price___Do_Not_Use");

                entity.Property(e => e.IObjectId).HasColumnName("I_Object_ID");

                entity.Property(e => e.InstalledAtBasDistrictText).HasColumnName("Installed_At___BAS__District__Text_");

                entity.Property(e => e.InstalledAtCountryKey).HasColumnName("Installed_At_Country___Key");

                entity.Property(e => e.InstalledAtKey).HasColumnName("Installed_At___Key");

                entity.Property(e => e.InstalledAtLongText).HasColumnName("Installed_At___Long_Text");

                entity.Property(e => e.MaterialEccnKey).HasColumnName("Material___ECCN__Key_");

                entity.Property(e => e.MaterialHtsKey).HasColumnName("Material___HTS__Key_");

                entity.Property(e => e.MaterialKey).HasColumnName("Material___Key");

                entity.Property(e => e.MaterialText).HasColumnName("Material___Text");

                entity.Property(e => e.NetValue).HasColumnName("Net_Value");

                entity.Property(e => e.PayerBasDistrictKey).HasColumnName("Payer___BAS__District__Key_");

                entity.Property(e => e.PayerCountryText).HasColumnName("Payer___Country__Text_");

                entity.Property(e => e.PayerKey).HasColumnName("Payer___Key");

                entity.Property(e => e.PayerLongText).HasColumnName("Payer___Long_Text");

                entity.Property(e => e.ProductFamily).HasColumnName("Product_Family");

                entity.Property(e => e.ProductLine).HasColumnName("Product_Line");

                entity.Property(e => e.SalesOrderAlpha).HasColumnName("Sales_Order_ALPHA");

                entity.Property(e => e.SerialNumber).HasColumnName("Serial_Number");

                entity.Property(e => e.ServiceContractType).HasColumnName("Service_Contract_Type");

                entity.Property(e => e.ServiceEndDate).HasColumnName("Service_End_date");

                entity.Property(e => e.ServiceMaterial).HasColumnName("Service_Material");

                entity.Property(e => e.ServiceMaterialKey).HasColumnName("Service_Material___Key");

                entity.Property(e => e.ServiceMaterialProductLineText).HasColumnName("Service_Material___Product_Line__Text_");

                entity.Property(e => e.ServiceStartDate).HasColumnName("Service_Start_Date");
            });

            modelBuilder.Entity<ServiceContractMay2017>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ServiceContract_May2017", "dsf");

                entity.Property(e => e.BillToPartyBasDistrictKey).HasColumnName("Bill_To_Party___BAS__District__Key_");

                entity.Property(e => e.BillToPartyCountryText).HasColumnName("Bill_To_Party___Country__Text_");

                entity.Property(e => e.BillToPartyKey).HasColumnName("Bill_To_Party___Key");

                entity.Property(e => e.BillToPartyLongText).HasColumnName("Bill_To_Party___Long_Text");

                entity.Property(e => e.ContractCreationDate).HasColumnName("Contract_Creation_Date");

                entity.Property(e => e.ContractItemNo).HasColumnName("Contract_item_No");

                entity.Property(e => e.ContractLineItemStatusDescription).HasColumnName("Contract_Line_Item_Status_Description");

                entity.Property(e => e.ContractNumber).HasColumnName("Contract_Number");

                entity.Property(e => e.ContractStatusText).HasColumnName("Contract_Status___Text");

                entity.Property(e => e.DiscountDoNotUse).HasColumnName("Discount___Do_Not_Use");

                entity.Property(e => e.EndCustomer).HasColumnName("End_Customer");

                entity.Property(e => e.EndCustomerBasDistrictKey).HasColumnName("End_Customer___BAS__District__Key_");

                entity.Property(e => e.EndCustomerCountryKey).HasColumnName("End_Customer___Country__Key_");

                entity.Property(e => e.EndCustomerDescription).HasColumnName("End_Customer_Description");

                entity.Property(e => e.ExtendedListPriceDoNotUse).HasColumnName("Extended_List_Price___Do_Not_Use");

                entity.Property(e => e.IObjectId).HasColumnName("I_Object_ID");

                entity.Property(e => e.InstalledAtBasDistrictText).HasColumnName("Installed_At___BAS__District__Text_");

                entity.Property(e => e.InstalledAtCountryKey).HasColumnName("Installed_At_Country___Key");

                entity.Property(e => e.InstalledAtKey).HasColumnName("Installed_At___Key");

                entity.Property(e => e.InstalledAtLongText).HasColumnName("Installed_At___Long_Text");

                entity.Property(e => e.MaterialEccnKey).HasColumnName("Material___ECCN__Key_");

                entity.Property(e => e.MaterialHtsKey).HasColumnName("Material___HTS__Key_");

                entity.Property(e => e.MaterialKey).HasColumnName("Material___Key");

                entity.Property(e => e.MaterialText).HasColumnName("Material___Text");

                entity.Property(e => e.NetValue).HasColumnName("Net_Value");

                entity.Property(e => e.PayerBasDistrictKey).HasColumnName("Payer___BAS__District__Key_");

                entity.Property(e => e.PayerCountryText).HasColumnName("Payer___Country__Text_");

                entity.Property(e => e.PayerKey).HasColumnName("Payer___Key");

                entity.Property(e => e.PayerLongText).HasColumnName("Payer___Long_Text");

                entity.Property(e => e.ProductFamily).HasColumnName("Product_Family");

                entity.Property(e => e.ProductLine).HasColumnName("Product_Line");

                entity.Property(e => e.SalesOrderAlpha).HasColumnName("Sales_Order_ALPHA");

                entity.Property(e => e.SerialNumber).HasColumnName("Serial_Number");

                entity.Property(e => e.ServiceContractType).HasColumnName("Service_Contract_Type");

                entity.Property(e => e.ServiceEndDate).HasColumnName("Service_End_date");

                entity.Property(e => e.ServiceMaterial).HasColumnName("Service_Material");

                entity.Property(e => e.ServiceMaterialKey).HasColumnName("Service_Material___Key");

                entity.Property(e => e.ServiceMaterialProductLineText).HasColumnName("Service_Material___Product_Line__Text_");

                entity.Property(e => e.ServiceStartDate).HasColumnName("Service_Start_Date");
            });

            modelBuilder.Entity<ServiceContractMetaVw>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("service_contract_meta_vw");

                entity.Property(e => e.BilltoCity)
                    .HasMaxLength(255)
                    .HasColumnName("billto_city");

                entity.Property(e => e.BilltoCountryCode)
                    .HasMaxLength(5)
                    .HasColumnName("billto_country_code");

                entity.Property(e => e.BilltoCountryName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_country_name");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(255)
                    .HasColumnName("billto_name");

                entity.Property(e => e.ContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("contract_creation_date");

                entity.Property(e => e.ContractItemNo).HasColumnName("contract_item_no");

                entity.Property(e => e.ContractLineItemStatus)
                    .HasMaxLength(50)
                    .HasColumnName("contract_line_item_status");

                entity.Property(e => e.ContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("contract_number");

                entity.Property(e => e.ContractStatus)
                    .HasMaxLength(250)
                    .HasColumnName("contract_status");

                entity.Property(e => e.ContractType)
                    .HasMaxLength(250)
                    .HasColumnName("contract_type");

                entity.Property(e => e.Currency)
                    .HasMaxLength(50)
                    .HasColumnName("currency");

                entity.Property(e => e.DiscountDoNoUse).HasColumnName("discount_do_no_use");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("end_cust_country_name");

                entity.Property(e => e.EndCustDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_district");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.ExportedFlag)
                    .HasMaxLength(255)
                    .HasColumnName("exported_flag");

                entity.Property(e => e.ExtendedListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("extended_list_price");

                entity.Property(e => e.IObjectId)
                    .HasMaxLength(50)
                    .HasColumnName("i_object_id");

                entity.Property(e => e.ImportDate)
                    .HasColumnType("datetime")
                    .HasColumnName("import_date");

                entity.Property(e => e.ImportId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("import_id");

                entity.Property(e => e.InstalledAtCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("installed_at_country_code");

                entity.Property(e => e.InstalledAtCountryName)
                    .HasMaxLength(250)
                    .HasColumnName("installed_at_country_name");

                entity.Property(e => e.InstalledAtDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("installed_at_district");

                entity.Property(e => e.InstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("installed_at_key");

                entity.Property(e => e.InstalledAtName)
                    .HasMaxLength(255)
                    .HasColumnName("installed_at_name");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialEccn)
                    .HasMaxLength(50)
                    .HasColumnName("material_eccn");

                entity.Property(e => e.MaterialHts)
                    .HasMaxLength(50)
                    .HasColumnName("material_hts");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("material_key");

                entity.Property(e => e.NetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_value");

                entity.Property(e => e.PayerCity)
                    .HasMaxLength(255)
                    .HasColumnName("payer_city");

                entity.Property(e => e.PayerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("payer_country");

                entity.Property(e => e.PayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("payer_key");

                entity.Property(e => e.PayerName)
                    .HasMaxLength(255)
                    .HasColumnName("payer_name");

                entity.Property(e => e.ProductFamily)
                    .HasMaxLength(255)
                    .HasColumnName("product_family");

                entity.Property(e => e.ProductLine)
                    .HasMaxLength(255)
                    .HasColumnName("product_line");

                entity.Property(e => e.SalesOrderAlpha)
                    .HasMaxLength(50)
                    .HasColumnName("sales_order_alpha");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SerialNumberOrig)
                    .HasMaxLength(50)
                    .HasColumnName("serial_number_orig");

                entity.Property(e => e.ServiceEndDate)
                    .HasColumnType("date")
                    .HasColumnName("service_end_date");

                entity.Property(e => e.ServiceMaterialDesc)
                    .HasMaxLength(255)
                    .HasColumnName("service_material_desc");

                entity.Property(e => e.ServiceMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("service_material_key");

                entity.Property(e => e.ServiceMaterialProductLine)
                    .HasMaxLength(255)
                    .HasColumnName("service_material_product_line");

                entity.Property(e => e.ServiceStartDate)
                    .HasColumnType("date")
                    .HasColumnName("service_start_date");
            });

            modelBuilder.Entity<ServiceContractMetaVw1>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("service_contract_meta_vw", "dev");

                entity.Property(e => e.BilltoPartyCountry)
                    .HasMaxLength(255)
                    .HasColumnName("billto_party_country");

                entity.Property(e => e.BilltoPartyDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("billto_party_district");

                entity.Property(e => e.BilltoPartyKey)
                    .HasMaxLength(50)
                    .HasColumnName("billto_party_key");

                entity.Property(e => e.BilltoPartyName)
                    .HasMaxLength(2000)
                    .HasColumnName("billto_party_name");

                entity.Property(e => e.ContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("contract_creation_date");

                entity.Property(e => e.ContractItemNo).HasColumnName("contract_item_no");

                entity.Property(e => e.ContractLineItemStatus)
                    .HasMaxLength(50)
                    .HasColumnName("contract_line_item_status");

                entity.Property(e => e.ContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("contract_number");

                entity.Property(e => e.ContractStatus)
                    .HasMaxLength(250)
                    .HasColumnName("contract_status");

                entity.Property(e => e.ContractType)
                    .HasMaxLength(250)
                    .HasColumnName("contract_type");

                entity.Property(e => e.Currency)
                    .HasMaxLength(50)
                    .HasColumnName("currency");

                entity.Property(e => e.DiscountDoNoUse).HasColumnName("discount_do_no_use");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("end_cust_district");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(50)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(2000)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.ExtendedListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("extended_list_price");

                entity.Property(e => e.IObjectId)
                    .HasMaxLength(50)
                    .HasColumnName("i_object_id");

                entity.Property(e => e.ImportDate)
                    .HasColumnType("datetime")
                    .HasColumnName("import_date");

                entity.Property(e => e.ImportId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("import_id");

                entity.Property(e => e.ImportStatus)
                    .HasMaxLength(255)
                    .HasColumnName("import_status");

                entity.Property(e => e.InstalledAt)
                    .HasMaxLength(2000)
                    .HasColumnName("installed_at");

                entity.Property(e => e.InstalledAtCountry).HasColumnName("installed_at_country");

                entity.Property(e => e.InstalledAtCountryCode)
                    .HasMaxLength(255)
                    .HasColumnName("installed_at_country_code");

                entity.Property(e => e.InstalledAtDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("installed_at_district");

                entity.Property(e => e.InstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("installed_at_key");

                entity.Property(e => e.Material)
                    .HasMaxLength(1000)
                    .HasColumnName("material");

                entity.Property(e => e.MaterialEccn)
                    .HasMaxLength(50)
                    .HasColumnName("material_eccn");

                entity.Property(e => e.MaterialHts)
                    .HasMaxLength(50)
                    .HasColumnName("material_hts");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("material_key");

                entity.Property(e => e.NetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_value");

                entity.Property(e => e.PayerCountry)
                    .HasMaxLength(255)
                    .HasColumnName("payer_country");

                entity.Property(e => e.PayerDistrict)
                    .HasMaxLength(255)
                    .HasColumnName("payer_district");

                entity.Property(e => e.PayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("payer_key");

                entity.Property(e => e.PayerName)
                    .HasMaxLength(2000)
                    .HasColumnName("payer_name");

                entity.Property(e => e.ProductFamily)
                    .HasMaxLength(1000)
                    .HasColumnName("product_family");

                entity.Property(e => e.ProductLine)
                    .HasMaxLength(1000)
                    .HasColumnName("product_line");

                entity.Property(e => e.SalesOrderAlpha)
                    .HasMaxLength(50)
                    .HasColumnName("sales_order_alpha");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("serial_number");

                entity.Property(e => e.ServiceEndDate)
                    .HasColumnType("date")
                    .HasColumnName("service_end_date");

                entity.Property(e => e.ServiceMaterial)
                    .HasMaxLength(1000)
                    .HasColumnName("service_material");

                entity.Property(e => e.ServiceMaterialKey)
                    .HasMaxLength(255)
                    .HasColumnName("service_material_key");

                entity.Property(e => e.ServiceMaterialProductLine)
                    .HasMaxLength(1000)
                    .HasColumnName("service_material_product_line");

                entity.Property(e => e.ServiceStartDate)
                    .HasColumnType("date")
                    .HasColumnName("service_start_date");
            });

            modelBuilder.Entity<ServiceContractNov2016>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ServiceContract_Nov2016", "dsf");

                entity.Property(e => e.BillToPartyBasDistrictKey).HasColumnName("Bill_To_Party___BAS__District__Key_");

                entity.Property(e => e.BillToPartyCountryText).HasColumnName("Bill_To_Party___Country__Text_");

                entity.Property(e => e.BillToPartyKey).HasColumnName("Bill_To_Party___Key");

                entity.Property(e => e.BillToPartyLongText).HasColumnName("Bill_To_Party___Long_Text");

                entity.Property(e => e.ContractCreationDate).HasColumnName("Contract_Creation_Date");

                entity.Property(e => e.ContractItemNo).HasColumnName("Contract_item_No");

                entity.Property(e => e.ContractLineItemStatusDescription).HasColumnName("Contract_Line_Item_Status_Description");

                entity.Property(e => e.ContractNumber).HasColumnName("Contract_Number");

                entity.Property(e => e.ContractStatusText).HasColumnName("Contract_Status___Text");

                entity.Property(e => e.DiscountDoNotUse).HasColumnName("Discount___Do_Not_Use");

                entity.Property(e => e.EndCustomer).HasColumnName("End_Customer");

                entity.Property(e => e.EndCustomerBasDistrictKey).HasColumnName("End_Customer___BAS__District__Key_");

                entity.Property(e => e.EndCustomerCountryKey).HasColumnName("End_Customer___Country__Key_");

                entity.Property(e => e.EndCustomerDescription).HasColumnName("End_Customer_Description");

                entity.Property(e => e.ExtendedListPriceDoNotUse).HasColumnName("Extended_List_Price___Do_Not_Use");

                entity.Property(e => e.IObjectId).HasColumnName("I_Object_ID");

                entity.Property(e => e.InstalledAtBasDistrictText).HasColumnName("Installed_At___BAS__District__Text_");

                entity.Property(e => e.InstalledAtCountryKey).HasColumnName("Installed_At_Country___Key");

                entity.Property(e => e.InstalledAtKey).HasColumnName("Installed_At___Key");

                entity.Property(e => e.InstalledAtLongText).HasColumnName("Installed_At___Long_Text");

                entity.Property(e => e.MaterialEccnKey).HasColumnName("Material___ECCN__Key_");

                entity.Property(e => e.MaterialHtsKey).HasColumnName("Material___HTS__Key_");

                entity.Property(e => e.MaterialKey).HasColumnName("Material___Key");

                entity.Property(e => e.MaterialText).HasColumnName("Material___Text");

                entity.Property(e => e.NetValue).HasColumnName("Net_Value");

                entity.Property(e => e.PayerBasDistrictKey).HasColumnName("Payer___BAS__District__Key_");

                entity.Property(e => e.PayerCountryText).HasColumnName("Payer___Country__Text_");

                entity.Property(e => e.PayerKey).HasColumnName("Payer___Key");

                entity.Property(e => e.PayerLongText).HasColumnName("Payer___Long_Text");

                entity.Property(e => e.ProductFamily).HasColumnName("Product_Family");

                entity.Property(e => e.ProductLine).HasColumnName("Product_Line");

                entity.Property(e => e.SalesOrderAlpha).HasColumnName("Sales_Order_ALPHA");

                entity.Property(e => e.SerialNumber).HasColumnName("Serial_Number");

                entity.Property(e => e.ServiceContractType).HasColumnName("Service_Contract_Type");

                entity.Property(e => e.ServiceEndDate).HasColumnName("Service_End_date");

                entity.Property(e => e.ServiceMaterial).HasColumnName("Service_Material");

                entity.Property(e => e.ServiceMaterialKey).HasColumnName("Service_Material___Key");

                entity.Property(e => e.ServiceMaterialProductLineText).HasColumnName("Service_Material___Product_Line__Text_");

                entity.Property(e => e.ServiceStartDate).HasColumnName("Service_Start_Date");
            });

            modelBuilder.Entity<ServiceContractNovdec2018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ServiceContract_novdec2018", "dsf");

                entity.Property(e => e.BillToParty)
                    .HasMaxLength(150)
                    .HasColumnName("_Bill_To_Party_");

                entity.Property(e => e.BillToPartyBasDistrictKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Bill_To_Party___BAS__District__Key__");

                entity.Property(e => e.BillToPartyCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("_Bill_To_Party___Country__Text__");

                entity.Property(e => e.BillToPartyKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Bill_To_Party___Key_");

                entity.Property(e => e.BillToPartyLongText)
                    .HasMaxLength(150)
                    .HasColumnName("_Bill_To_Party___Long_Text_");

                entity.Property(e => e.ContractCreationDate)
                    .HasMaxLength(50)
                    .HasColumnName("_Contract_Creation_Date_");

                entity.Property(e => e.ContractItemNo)
                    .HasMaxLength(50)
                    .HasColumnName("_Contract_item_No_");

                entity.Property(e => e.ContractLineItemStatus)
                    .HasMaxLength(50)
                    .HasColumnName("_Contract_Line_Item_Status_");

                entity.Property(e => e.ContractLineItemStatusMediumText)
                    .HasMaxLength(50)
                    .HasColumnName("_Contract_Line_Item_Status___Medium_Text_");

                entity.Property(e => e.ContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("_Contract_Number_");

                entity.Property(e => e.ContractStatusText)
                    .HasMaxLength(50)
                    .HasColumnName("_Contract_Status___Text_");

                entity.Property(e => e.CurrencyKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Currency___Key_");

                entity.Property(e => e.DiscountDoNotUse)
                    .HasMaxLength(50)
                    .HasColumnName("_Discount___Do_Not_Use_");

                entity.Property(e => e.EndCustomer)
                    .HasMaxLength(150)
                    .HasColumnName("_End_Customer_");

                entity.Property(e => e.EndCustomerBasDistrictKey)
                    .HasMaxLength(50)
                    .HasColumnName("_End_Customer___BAS__District__Key__");

                entity.Property(e => e.EndCustomerCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("_End_Customer___Country__Key__");

                entity.Property(e => e.EndCustomerKey)
                    .HasMaxLength(50)
                    .HasColumnName("_End_Customer___Key_");

                entity.Property(e => e.EndCustomerText)
                    .HasMaxLength(150)
                    .HasColumnName("_End_Customer___Text_");

                entity.Property(e => e.ExtendedListPriceDoNotUse)
                    .HasMaxLength(50)
                    .HasColumnName("_Extended_List_Price___Do_Not_Use_");

                entity.Property(e => e.IObjectId)
                    .HasMaxLength(50)
                    .HasColumnName("_I_Object_ID_");

                entity.Property(e => e.InstalledAtBasDistrictText)
                    .HasMaxLength(50)
                    .HasColumnName("_Installed_At___BAS__District__Text__");

                entity.Property(e => e.InstalledAtCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Installed_At_Country___Key_");

                entity.Property(e => e.InstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Installed_At___Key_");

                entity.Property(e => e.InstalledAtLongText)
                    .HasMaxLength(150)
                    .HasColumnName("_Installed_At___Long_Text_");

                entity.Property(e => e.Material)
                    .HasMaxLength(50)
                    .HasColumnName("_Material_");

                entity.Property(e => e.MaterialEccnKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Material___ECCN__Key__");

                entity.Property(e => e.MaterialHtsKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Material___HTS__Key__");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Material___Key_");

                entity.Property(e => e.MaterialText)
                    .HasMaxLength(50)
                    .HasColumnName("_Material___Text_");

                entity.Property(e => e.OrderNetValue)
                    .HasMaxLength(50)
                    .HasColumnName("_Order__Net_Value_");

                entity.Property(e => e.Payer)
                    .HasMaxLength(150)
                    .HasColumnName("_Payer_");

                entity.Property(e => e.PayerBasDistrictKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Payer___BAS__District__Key__");

                entity.Property(e => e.PayerCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("_Payer___Country__Text__");

                entity.Property(e => e.PayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Payer___Key_");

                entity.Property(e => e.PayerLongText)
                    .HasMaxLength(150)
                    .HasColumnName("_Payer___Long_Text_");

                entity.Property(e => e.ProductFamily)
                    .HasMaxLength(50)
                    .HasColumnName("_Product_Family_");

                entity.Property(e => e.ProductLine)
                    .HasMaxLength(50)
                    .HasColumnName("_Product_Line_");

                entity.Property(e => e.SalesOrderAlpha)
                    .HasMaxLength(50)
                    .HasColumnName("_Sales_Order_ALPHA_");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("_Serial_Number_");

                entity.Property(e => e.ServiceContractType)
                    .HasMaxLength(50)
                    .HasColumnName("_Service_Contract_Type_");

                entity.Property(e => e.ServiceEndDate)
                    .HasMaxLength(50)
                    .HasColumnName("_Service_End_date_");

                entity.Property(e => e.ServiceMaterial)
                    .HasMaxLength(50)
                    .HasColumnName("_Service_Material_");

                entity.Property(e => e.ServiceMaterialKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Service_Material___Key_");

                entity.Property(e => e.ServiceMaterialProductLineText)
                    .HasMaxLength(50)
                    .HasColumnName("_Service_Material___Product_Line__Text__");

                entity.Property(e => e.ServiceStartDate)
                    .HasMaxLength(50)
                    .HasColumnName("_Service_Start_Date_");
            });

            modelBuilder.Entity<ServiceContractOct2016>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ServiceContract_Oct2016", "dsf");

                entity.Property(e => e.BillToPartyBasDistrictKey).HasColumnName("Bill_To_Party___BAS__District__Key_");

                entity.Property(e => e.BillToPartyCountryText).HasColumnName("Bill_To_Party___Country__Text_");

                entity.Property(e => e.BillToPartyKey).HasColumnName("Bill_To_Party___Key");

                entity.Property(e => e.BillToPartyLongText).HasColumnName("Bill_To_Party___Long_Text");

                entity.Property(e => e.ContractCreationDate).HasColumnName("Contract_Creation_Date");

                entity.Property(e => e.ContractItemNo).HasColumnName("Contract_item_No");

                entity.Property(e => e.ContractLineItemStatusDescription).HasColumnName("Contract_Line_Item_Status_Description");

                entity.Property(e => e.ContractNumber).HasColumnName("Contract_Number");

                entity.Property(e => e.ContractStatusText).HasColumnName("Contract_Status___Text");

                entity.Property(e => e.DiscountDoNotUse).HasColumnName("Discount___Do_Not_Use");

                entity.Property(e => e.EndCustomer).HasColumnName("End_Customer");

                entity.Property(e => e.EndCustomerBasDistrictKey).HasColumnName("End_Customer___BAS__District__Key_");

                entity.Property(e => e.EndCustomerCountryKey).HasColumnName("End_Customer___Country__Key_");

                entity.Property(e => e.EndCustomerDescription).HasColumnName("End_Customer_Description");

                entity.Property(e => e.ExtendedListPriceDoNotUse).HasColumnName("Extended_List_Price___Do_Not_Use");

                entity.Property(e => e.IObjectId).HasColumnName("I_Object_ID");

                entity.Property(e => e.InstalledAtBasDistrictText).HasColumnName("Installed_At___BAS__District__Text_");

                entity.Property(e => e.InstalledAtCountryKey).HasColumnName("Installed_At_Country___Key");

                entity.Property(e => e.InstalledAtKey).HasColumnName("Installed_At___Key");

                entity.Property(e => e.InstalledAtLongText).HasColumnName("Installed_At___Long_Text");

                entity.Property(e => e.MaterialEccnKey).HasColumnName("Material___ECCN__Key_");

                entity.Property(e => e.MaterialHtsKey).HasColumnName("Material___HTS__Key_");

                entity.Property(e => e.MaterialKey).HasColumnName("Material___Key");

                entity.Property(e => e.MaterialText).HasColumnName("Material___Text");

                entity.Property(e => e.NetValue).HasColumnName("Net_Value");

                entity.Property(e => e.PayerBasDistrictKey).HasColumnName("Payer___BAS__District__Key_");

                entity.Property(e => e.PayerCountryText).HasColumnName("Payer___Country__Text_");

                entity.Property(e => e.PayerKey).HasColumnName("Payer___Key");

                entity.Property(e => e.PayerLongText).HasColumnName("Payer___Long_Text");

                entity.Property(e => e.ProductFamily).HasColumnName("Product_Family");

                entity.Property(e => e.ProductLine).HasColumnName("Product_Line");

                entity.Property(e => e.SalesOrderAlpha).HasColumnName("Sales_Order_ALPHA");

                entity.Property(e => e.SerialNumber).HasColumnName("Serial_Number");

                entity.Property(e => e.ServiceContractType).HasColumnName("Service_Contract_Type");

                entity.Property(e => e.ServiceEndDate).HasColumnName("Service_End_date");

                entity.Property(e => e.ServiceMaterial).HasColumnName("Service_Material");

                entity.Property(e => e.ServiceMaterialKey).HasColumnName("Service_Material___Key");

                entity.Property(e => e.ServiceMaterialProductLineText).HasColumnName("Service_Material___Product_Line__Text_");

                entity.Property(e => e.ServiceStartDate).HasColumnName("Service_Start_Date");
            });

            modelBuilder.Entity<ServiceContractSep2016>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ServiceContract_Sep2016", "dsf");

                entity.Property(e => e.BillToPartyBasDistrictKey).HasColumnName("Bill_To_Party___BAS__District__Key_");

                entity.Property(e => e.BillToPartyCountryText).HasColumnName("Bill_To_Party___Country__Text_");

                entity.Property(e => e.BillToPartyKey).HasColumnName("Bill_To_Party___Key");

                entity.Property(e => e.BillToPartyLongText).HasColumnName("Bill_To_Party___Long_Text");

                entity.Property(e => e.ContractCreationDate).HasColumnName("Contract_Creation_Date");

                entity.Property(e => e.ContractItemNo).HasColumnName("Contract_item_No");

                entity.Property(e => e.ContractLineItemStatusDescription).HasColumnName("Contract_Line_Item_Status_Description");

                entity.Property(e => e.ContractNumber).HasColumnName("Contract_Number");

                entity.Property(e => e.ContractStatusText).HasColumnName("Contract_Status___Text");

                entity.Property(e => e.DiscountDoNotUse).HasColumnName("Discount___Do_Not_Use");

                entity.Property(e => e.EndCustomer).HasColumnName("End_Customer");

                entity.Property(e => e.EndCustomerBasDistrictKey).HasColumnName("End_Customer___BAS__District__Key_");

                entity.Property(e => e.EndCustomerCountryKey).HasColumnName("End_Customer___Country__Key_");

                entity.Property(e => e.EndCustomerDescription).HasColumnName("End_Customer_Description");

                entity.Property(e => e.ExtendedListPriceDoNotUse).HasColumnName("Extended_List_Price___Do_Not_Use");

                entity.Property(e => e.IObjectId).HasColumnName("I_Object_ID");

                entity.Property(e => e.InstalledAtBasDistrictText).HasColumnName("Installed_At___BAS__District__Text_");

                entity.Property(e => e.InstalledAtCountryKey).HasColumnName("Installed_At_Country___Key");

                entity.Property(e => e.InstalledAtKey).HasColumnName("Installed_At___Key");

                entity.Property(e => e.InstalledAtLongText).HasColumnName("Installed_At___Long_Text");

                entity.Property(e => e.MaterialEccnKey).HasColumnName("Material___ECCN__Key_");

                entity.Property(e => e.MaterialHtsKey).HasColumnName("Material___HTS__Key_");

                entity.Property(e => e.MaterialKey).HasColumnName("Material___Key");

                entity.Property(e => e.MaterialText).HasColumnName("Material___Text");

                entity.Property(e => e.NetValue).HasColumnName("Net_Value");

                entity.Property(e => e.PayerBasDistrictKey).HasColumnName("Payer___BAS__District__Key_");

                entity.Property(e => e.PayerCountryText).HasColumnName("Payer___Country__Text_");

                entity.Property(e => e.PayerKey).HasColumnName("Payer___Key");

                entity.Property(e => e.PayerLongText).HasColumnName("Payer___Long_Text");

                entity.Property(e => e.ProductFamily).HasColumnName("Product_Family");

                entity.Property(e => e.ProductLine).HasColumnName("Product_Line");

                entity.Property(e => e.SalesOrderAlpha).HasColumnName("Sales_Order_ALPHA");

                entity.Property(e => e.SerialNumber).HasColumnName("Serial_Number");

                entity.Property(e => e.ServiceContractType).HasColumnName("Service_Contract_Type");

                entity.Property(e => e.ServiceEndDate).HasColumnName("Service_End_date");

                entity.Property(e => e.ServiceMaterial).HasColumnName("Service_Material");

                entity.Property(e => e.ServiceMaterialKey).HasColumnName("Service_Material___Key");

                entity.Property(e => e.ServiceMaterialProductLineText).HasColumnName("Service_Material___Product_Line__Text_");

                entity.Property(e => e.ServiceStartDate).HasColumnName("Service_Start_Date");
            });

            modelBuilder.Entity<ServiceContractSep2017>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ServiceContract_Sep2017", "dsf");

                entity.Property(e => e.BillToPartyBasDistrictKey).HasColumnName("Bill_To_Party___BAS__District__Key_");

                entity.Property(e => e.BillToPartyCountryText).HasColumnName("Bill_To_Party___Country__Text_");

                entity.Property(e => e.BillToPartyKey).HasColumnName("Bill_To_Party___Key");

                entity.Property(e => e.BillToPartyLongText).HasColumnName("Bill_To_Party___Long_Text");

                entity.Property(e => e.ContractCreationDate).HasColumnName("Contract_Creation_Date");

                entity.Property(e => e.ContractItemNo).HasColumnName("Contract_item_No");

                entity.Property(e => e.ContractLineItemStatusDescription).HasColumnName("Contract_Line_Item_Status_Description");

                entity.Property(e => e.ContractNumber).HasColumnName("Contract_Number");

                entity.Property(e => e.ContractStatusText).HasColumnName("Contract_Status___Text");

                entity.Property(e => e.DiscountDoNotUse).HasColumnName("Discount___Do_Not_Use");

                entity.Property(e => e.EndCustomer).HasColumnName("End_Customer");

                entity.Property(e => e.EndCustomerBasDistrictKey).HasColumnName("End_Customer___BAS__District__Key_");

                entity.Property(e => e.EndCustomerCountryKey).HasColumnName("End_Customer___Country__Key_");

                entity.Property(e => e.EndCustomerDescription).HasColumnName("End_Customer_Description");

                entity.Property(e => e.ExtendedListPriceDoNotUse).HasColumnName("Extended_List_Price___Do_Not_Use");

                entity.Property(e => e.IObjectId).HasColumnName("I_Object_ID");

                entity.Property(e => e.InstalledAtBasDistrictText).HasColumnName("Installed_At___BAS__District__Text_");

                entity.Property(e => e.InstalledAtCountryKey).HasColumnName("Installed_At_Country___Key");

                entity.Property(e => e.InstalledAtKey).HasColumnName("Installed_At___Key");

                entity.Property(e => e.InstalledAtLongText).HasColumnName("Installed_At___Long_Text");

                entity.Property(e => e.MaterialEccnKey).HasColumnName("Material___ECCN__Key_");

                entity.Property(e => e.MaterialHtsKey).HasColumnName("Material___HTS__Key_");

                entity.Property(e => e.MaterialKey).HasColumnName("Material___Key");

                entity.Property(e => e.MaterialText).HasColumnName("Material___Text");

                entity.Property(e => e.NetValue).HasColumnName("Net_Value");

                entity.Property(e => e.PayerBasDistrictKey).HasColumnName("Payer___BAS__District__Key_");

                entity.Property(e => e.PayerCountryText).HasColumnName("Payer___Country__Text_");

                entity.Property(e => e.PayerKey).HasColumnName("Payer___Key");

                entity.Property(e => e.PayerLongText).HasColumnName("Payer___Long_Text");

                entity.Property(e => e.ProductFamily).HasColumnName("Product_Family");

                entity.Property(e => e.ProductLine).HasColumnName("Product_Line");

                entity.Property(e => e.SalesOrderAlpha).HasColumnName("Sales_Order_ALPHA");

                entity.Property(e => e.SerialNumber).HasColumnName("Serial_Number");

                entity.Property(e => e.ServiceContractType).HasColumnName("Service_Contract_Type");

                entity.Property(e => e.ServiceEndDate).HasColumnName("Service_End_date");

                entity.Property(e => e.ServiceMaterial).HasColumnName("Service_Material");

                entity.Property(e => e.ServiceMaterialKey).HasColumnName("Service_Material___Key");

                entity.Property(e => e.ServiceMaterialProductLineText).HasColumnName("Service_Material___Product_Line__Text_");

                entity.Property(e => e.ServiceStartDate).HasColumnName("Service_Start_Date");
            });

            modelBuilder.Entity<ServiceContractSepoct2018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ServiceContract_sepoct2018", "dsf");

                entity.Property(e => e.BillToParty)
                    .HasMaxLength(150)
                    .HasColumnName("_Bill_To_Party_");

                entity.Property(e => e.BillToPartyBasDistrictKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Bill_To_Party___BAS__District__Key__");

                entity.Property(e => e.BillToPartyCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("_Bill_To_Party___Country__Text__");

                entity.Property(e => e.BillToPartyKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Bill_To_Party___Key_");

                entity.Property(e => e.BillToPartyLongText)
                    .HasMaxLength(150)
                    .HasColumnName("_Bill_To_Party___Long_Text_");

                entity.Property(e => e.ContractCreationDate)
                    .HasMaxLength(50)
                    .HasColumnName("_Contract_Creation_Date_");

                entity.Property(e => e.ContractItemNo)
                    .HasMaxLength(50)
                    .HasColumnName("_Contract_item_No_");

                entity.Property(e => e.ContractLineItemStatus)
                    .HasMaxLength(50)
                    .HasColumnName("_Contract_Line_Item_Status_");

                entity.Property(e => e.ContractLineItemStatusMediumText)
                    .HasMaxLength(50)
                    .HasColumnName("_Contract_Line_Item_Status___Medium_Text_");

                entity.Property(e => e.ContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("_Contract_Number_");

                entity.Property(e => e.ContractStatusText)
                    .HasMaxLength(50)
                    .HasColumnName("_Contract_Status___Text_");

                entity.Property(e => e.CurrencyKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Currency___Key_");

                entity.Property(e => e.DiscountDoNotUse)
                    .HasMaxLength(50)
                    .HasColumnName("_Discount___Do_Not_Use_");

                entity.Property(e => e.EndCustomer)
                    .HasMaxLength(150)
                    .HasColumnName("_End_Customer_");

                entity.Property(e => e.EndCustomerBasDistrictKey)
                    .HasMaxLength(50)
                    .HasColumnName("_End_Customer___BAS__District__Key__");

                entity.Property(e => e.EndCustomerCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("_End_Customer___Country__Key__");

                entity.Property(e => e.EndCustomerKey)
                    .HasMaxLength(50)
                    .HasColumnName("_End_Customer___Key_");

                entity.Property(e => e.EndCustomerText)
                    .HasMaxLength(150)
                    .HasColumnName("_End_Customer___Text_");

                entity.Property(e => e.ExtendedListPriceDoNotUse)
                    .HasMaxLength(50)
                    .HasColumnName("_Extended_List_Price___Do_Not_Use_");

                entity.Property(e => e.IObjectId)
                    .HasMaxLength(50)
                    .HasColumnName("_I_Object_ID_");

                entity.Property(e => e.InstalledAtBasDistrictText)
                    .HasMaxLength(50)
                    .HasColumnName("_Installed_At___BAS__District__Text__");

                entity.Property(e => e.InstalledAtCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Installed_At_Country___Key_");

                entity.Property(e => e.InstalledAtKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Installed_At___Key_");

                entity.Property(e => e.InstalledAtLongText)
                    .HasMaxLength(150)
                    .HasColumnName("_Installed_At___Long_Text_");

                entity.Property(e => e.Material)
                    .HasMaxLength(50)
                    .HasColumnName("_Material_");

                entity.Property(e => e.MaterialEccnKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Material___ECCN__Key__");

                entity.Property(e => e.MaterialHtsKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Material___HTS__Key__");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Material___Key_");

                entity.Property(e => e.MaterialText)
                    .HasMaxLength(50)
                    .HasColumnName("_Material___Text_");

                entity.Property(e => e.OrderNetValue)
                    .HasMaxLength(50)
                    .HasColumnName("_Order__Net_Value_");

                entity.Property(e => e.Payer)
                    .HasMaxLength(150)
                    .HasColumnName("_Payer_");

                entity.Property(e => e.PayerBasDistrictKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Payer___BAS__District__Key__");

                entity.Property(e => e.PayerCountryText)
                    .HasMaxLength(50)
                    .HasColumnName("_Payer___Country__Text__");

                entity.Property(e => e.PayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Payer___Key_");

                entity.Property(e => e.PayerLongText)
                    .HasMaxLength(150)
                    .HasColumnName("_Payer___Long_Text_");

                entity.Property(e => e.ProductFamily)
                    .HasMaxLength(50)
                    .HasColumnName("_Product_Family_");

                entity.Property(e => e.ProductLine)
                    .HasMaxLength(50)
                    .HasColumnName("_Product_Line_");

                entity.Property(e => e.SalesOrderAlpha)
                    .HasMaxLength(50)
                    .HasColumnName("_Sales_Order_ALPHA_");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("_Serial_Number_");

                entity.Property(e => e.ServiceContractType)
                    .HasMaxLength(50)
                    .HasColumnName("_Service_Contract_Type_");

                entity.Property(e => e.ServiceEndDate)
                    .HasMaxLength(50)
                    .HasColumnName("_Service_End_date_");

                entity.Property(e => e.ServiceMaterial)
                    .HasMaxLength(50)
                    .HasColumnName("_Service_Material_");

                entity.Property(e => e.ServiceMaterialKey)
                    .HasMaxLength(50)
                    .HasColumnName("_Service_Material___Key_");

                entity.Property(e => e.ServiceMaterialProductLineText)
                    .HasMaxLength(50)
                    .HasColumnName("_Service_Material___Product_Line__Text__");

                entity.Property(e => e.ServiceStartDate)
                    .HasMaxLength(50)
                    .HasColumnName("_Service_Start_Date_");
            });

            modelBuilder.Entity<ServiceContractsQ42017>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Service_Contracts_Q42017", "dsf");

                entity.Property(e => e.BillToPartyBasDistrictKey).HasColumnName("Bill_To_Party___BAS__District__Key_");

                entity.Property(e => e.BillToPartyCountryText).HasColumnName("Bill_To_Party___Country__Text_");

                entity.Property(e => e.BillToPartyKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party___Key");

                entity.Property(e => e.BillToPartyLongText).HasColumnName("Bill_To_Party___Long_Text");

                entity.Property(e => e.ContractCreationDate)
                    .HasMaxLength(50)
                    .HasColumnName("Contract_Creation_Date");

                entity.Property(e => e.ContractItemNo)
                    .HasMaxLength(50)
                    .HasColumnName("Contract_item_No");

                entity.Property(e => e.ContractLineItemStatusDescription).HasColumnName("Contract_Line_Item_Status_Description");

                entity.Property(e => e.ContractNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Contract_Number");

                entity.Property(e => e.ContractStatusText)
                    .HasMaxLength(50)
                    .HasColumnName("Contract_Status___Text");

                entity.Property(e => e.DiscountDoNotUse)
                    .HasMaxLength(50)
                    .HasColumnName("Discount___Do_Not_Use");

                entity.Property(e => e.EndCustomer)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer");

                entity.Property(e => e.EndCustomerBasDistrictKey).HasColumnName("End_Customer___BAS__District__Key_");

                entity.Property(e => e.EndCustomerCountryKey).HasColumnName("End_Customer___Country__Key_");

                entity.Property(e => e.EndCustomerDescription).HasColumnName("End_Customer_Description");

                entity.Property(e => e.ExtendedListPriceDoNotUse)
                    .HasMaxLength(50)
                    .HasColumnName("Extended_List_Price___Do_Not_Use");

                entity.Property(e => e.IObjectId).HasColumnName("I_Object_ID");

                entity.Property(e => e.InstalledAtBasDistrictText).HasColumnName("Installed_At___BAS__District__Text_");

                entity.Property(e => e.InstalledAtCountryKey).HasColumnName("Installed_At_Country___Key");

                entity.Property(e => e.InstalledAtKey).HasColumnName("Installed_At___Key");

                entity.Property(e => e.InstalledAtLongText).HasColumnName("Installed_At___Long_Text");

                entity.Property(e => e.MaterialEccnKey).HasColumnName("Material___ECCN__Key_");

                entity.Property(e => e.MaterialHtsKey).HasColumnName("Material___HTS__Key_");

                entity.Property(e => e.MaterialKey).HasColumnName("Material___Key");

                entity.Property(e => e.MaterialText).HasColumnName("Material___Text");

                entity.Property(e => e.NetValue)
                    .HasMaxLength(50)
                    .HasColumnName("Net_Value");

                entity.Property(e => e.PayerBasDistrictKey).HasColumnName("Payer___BAS__District__Key_");

                entity.Property(e => e.PayerCountryText).HasColumnName("Payer___Country__Text_");

                entity.Property(e => e.PayerKey)
                    .HasMaxLength(50)
                    .HasColumnName("Payer___Key");

                entity.Property(e => e.PayerLongText).HasColumnName("Payer___Long_Text");

                entity.Property(e => e.ProductFamily).HasColumnName("Product_Family");

                entity.Property(e => e.ProductLine).HasColumnName("Product_Line");

                entity.Property(e => e.SalesOrderAlpha).HasColumnName("Sales_Order_ALPHA");

                entity.Property(e => e.SerialNumber).HasColumnName("Serial_Number");

                entity.Property(e => e.ServiceContractType)
                    .HasMaxLength(50)
                    .HasColumnName("Service_Contract_Type");

                entity.Property(e => e.ServiceEndDate)
                    .HasMaxLength(50)
                    .HasColumnName("Service_End_date");

                entity.Property(e => e.ServiceMaterial).HasColumnName("Service_Material");

                entity.Property(e => e.ServiceMaterialKey).HasColumnName("Service_Material___Key");

                entity.Property(e => e.ServiceMaterialProductLineText).HasColumnName("Service_Material___Product_Line__Text_");

                entity.Property(e => e.ServiceStartDate)
                    .HasMaxLength(50)
                    .HasColumnName("Service_Start_Date");
            });

            modelBuilder.Entity<Set>(entity =>
            {
                entity.ToTable("Set", "HangFire");

                entity.HasIndex(e => e.ExpireAt, "IX_HangFire_Set_ExpireAt");

                entity.HasIndex(e => e.Key, "IX_HangFire_Set_Key");

                entity.HasIndex(e => new { e.Key, e.Value }, "UX_HangFire_Set_KeyAndValue")
                    .IsUnique();

                entity.Property(e => e.ExpireAt).HasColumnType("datetime");

                entity.Property(e => e.Key).HasMaxLength(100);

                entity.Property(e => e.Value).HasMaxLength(256);
            });

            modelBuilder.Entity<SetGlobalAcct1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("setGlobalAcct1", "dev");

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(20)
                    .HasColumnName("country_code");

                entity.Property(e => e.EntityKey)
                    .HasMaxLength(50)
                    .HasColumnName("entity_key");

                entity.Property(e => e.GId).HasColumnName("g_id");

                entity.Property(e => e.GentityKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("gentity_key");

                entity.Property(e => e.GgroupName)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("ggroup_name");

                entity.Property(e => e.GroupWord2)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("group_word2");

                entity.Property(e => e.Name1)
                    .HasMaxLength(255)
                    .HasColumnName("name1");
            });

            modelBuilder.Entity<SetGlobalAcct2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("setGlobalAcct2", "dev");

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(20)
                    .HasColumnName("country_code");

                entity.Property(e => e.EntityKey)
                    .HasMaxLength(50)
                    .HasColumnName("entity_key");

                entity.Property(e => e.GId).HasColumnName("g_id");

                entity.Property(e => e.GentityKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("gentity_key");

                entity.Property(e => e.GgroupName)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("ggroup_name");

                entity.Property(e => e.GroupWord2)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("group_word2");

                entity.Property(e => e.Name1)
                    .HasMaxLength(255)
                    .HasColumnName("name1");
            });

            modelBuilder.Entity<SetGlobalIdStg>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("setGlobalId_stg", "stg");

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(20)
                    .HasColumnName("country_code");

                entity.Property(e => e.EntityKey)
                    .HasMaxLength(50)
                    .HasColumnName("entity_key");

                entity.Property(e => e.GId1).HasColumnName("g_id");

                entity.Property(e => e.Gid).HasColumnName("gid");

                entity.Property(e => e.Gparent)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("gparent");

                entity.Property(e => e.Name1)
                    .HasMaxLength(255)
                    .HasColumnName("name1");
            });

            modelBuilder.Entity<ShipmentHdrMetaVw>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("shipment_hdr_meta_vw");

                entity.Property(e => e.BilltoCity)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("billto_city");

                entity.Property(e => e.BilltoCountry)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("billto_country");

                entity.Property(e => e.BilltoKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("billto_key");

                entity.Property(e => e.BilltoLoc)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("billto_loc");

                entity.Property(e => e.BilltoName)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("billto_name");

                entity.Property(e => e.BilltoPostalCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("billto_postal_code");

                entity.Property(e => e.BilltoRegion)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("billto_region");

                entity.Property(e => e.BilltoStreet1)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("billto_street1");

                entity.Property(e => e.BilltoStreet2)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("billto_street2");

                entity.Property(e => e.BilltoStreet3)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("billto_street3");

                entity.Property(e => e.BilltoStreet4)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("billto_street4");

                entity.Property(e => e.BilltoStreet5)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("billto_street5");

                entity.Property(e => e.CompleteDelivery)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("complete_delivery");

                entity.Property(e => e.CumulativeSoQty).HasColumnName("cumulative_so_qty");

                entity.Property(e => e.CustomerPo)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("customer_po");

                entity.Property(e => e.DeliveryCreated)
                    .HasColumnType("date")
                    .HasColumnName("delivery_created");

                entity.Property(e => e.DeliveryNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("delivery_number");

                entity.Property(e => e.DeliveryType)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("delivery_type");

                entity.Property(e => e.EndUserCity)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("end_user_city");

                entity.Property(e => e.EndUserCountry)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("end_user_country");

                entity.Property(e => e.EndUserKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("end_user_key");

                entity.Property(e => e.EndUserLoc)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("end_user_loc");

                entity.Property(e => e.EndUserName)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("end_user_name");

                entity.Property(e => e.EndUserPostalCode)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("end_user_postal_code");

                entity.Property(e => e.EndUserRegion)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("end_user_region");

                entity.Property(e => e.EndUserStreet1)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("end_user_street1");

                entity.Property(e => e.EndUserStreet2)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("end_user_street2");

                entity.Property(e => e.EndUserStreet3)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("end_user_street3");

                entity.Property(e => e.EndUserStreet4)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("end_user_street4");

                entity.Property(e => e.EndUserStreet5)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("end_user_street5");

                entity.Property(e => e.FreightForwarder1Contry)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("freight_forwarder1_contry");

                entity.Property(e => e.FreightForwarder1Key)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("freight_forwarder1_key");

                entity.Property(e => e.FreightForwarder1Loc)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("freight_forwarder1_loc");

                entity.Property(e => e.FreightForwarder1Name)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("freight_forwarder1_name");

                entity.Property(e => e.FreightForwarder1Stree1)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("freight_forwarder1_stree1");

                entity.Property(e => e.HigherLevelItem).HasColumnName("higher_level_item");

                entity.Property(e => e.ImportDate)
                    .HasColumnType("datetime")
                    .HasColumnName("import_date");

                entity.Property(e => e.ImportId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("import_id");

                entity.Property(e => e.ImportStatus)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("import_status");

                entity.Property(e => e.Incoterms1)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("incoterms1");

                entity.Property(e => e.Incoterms2)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("incoterms2");

                entity.Property(e => e.Material)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("material");

                entity.Property(e => e.MaterialDesc)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("material_desc");

                entity.Property(e => e.MaterialEccn)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("material_eccn");

                entity.Property(e => e.MaterialGrossWt)
                    .HasColumnType("decimal(12, 3)")
                    .HasColumnName("material_gross_wt");

                entity.Property(e => e.MaterialHts)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("material_hts");

                entity.Property(e => e.MaterialNetWt)
                    .HasColumnType("decimal(12, 3)")
                    .HasColumnName("material_net_wt");

                entity.Property(e => e.MaterialWtUnit)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("material_wt_unit");

                entity.Property(e => e.MaterialWtUnitDesc)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("material_wt_unit_desc");

                entity.Property(e => e.Plant)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("plant");

                entity.Property(e => e.PlantName)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("plant_name");

                entity.Property(e => e.PodControl)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("pod_control");

                entity.Property(e => e.PodHdrStatus)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("pod_hdr_status");

                entity.Property(e => e.PosLineStatus)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("pos_line_status");

                entity.Property(e => e.SalesDocItemCat)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("sales_doc_item_cat");

                entity.Property(e => e.ShipDate)
                    .HasColumnType("date")
                    .HasColumnName("ship_date");

                entity.Property(e => e.ShipmentCogsValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("shipment_cogs_value");

                entity.Property(e => e.ShipmentListValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("shipment_list_value");

                entity.Property(e => e.ShipmentNetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("shipment_net_value");

                entity.Property(e => e.ShipmentQty).HasColumnName("shipment_qty");

                entity.Property(e => e.ShippingNote)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("shipping_note");

                entity.Property(e => e.ShippingType)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("shipping_type");

                entity.Property(e => e.ShiptoCity)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("shipto_city");

                entity.Property(e => e.ShiptoCountry)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("shipto_country");

                entity.Property(e => e.ShiptoKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShiptoLoc)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("shipto_loc");

                entity.Property(e => e.ShiptoName)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("shipto_name");

                entity.Property(e => e.ShiptoPostalCode)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("shipto_postal_code");

                entity.Property(e => e.ShiptoRegion)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("shipto_region");

                entity.Property(e => e.ShiptoStreet1)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street1");

                entity.Property(e => e.ShiptoStreet2)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street2");

                entity.Property(e => e.ShiptoStreet3)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street3");

                entity.Property(e => e.ShiptoStreet4)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street4");

                entity.Property(e => e.ShiptoStreet5)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street5");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoReason)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("so_reason");

                entity.Property(e => e.SoType)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoCity)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("soldto_city");

                entity.Property(e => e.SoldtoCountry)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("soldto_country");

                entity.Property(e => e.SoldtoKey)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoLoc)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("soldto_loc");

                entity.Property(e => e.SoldtoName)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SoldtoPostalCode)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("soldto_postal_code");

                entity.Property(e => e.SoldtoRegion)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("soldto_region");

                entity.Property(e => e.SoldtoStreet1)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("soldto_street1");

                entity.Property(e => e.SoldtoStreet2)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("soldto_street2");

                entity.Property(e => e.SoldtoStreet3)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("soldto_street3");

                entity.Property(e => e.SoldtoStreet4)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("soldto_street4");

                entity.Property(e => e.SoldtoStreet5)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("soldto_street5");

                entity.Property(e => e.TrackingNumber)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("tracking_number");

                entity.Property(e => e.VarExtLicenseNum)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("var_ext_license_num");

                entity.Property(e => e.VarLegRegLegalCtrl)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("var_leg_reg_legal_ctrl");

                entity.Property(e => e.VarLicenseAppliedDate)
                    .HasColumnType("date")
                    .HasColumnName("var_license_applied_date");

                entity.Property(e => e.VarLicenseNum)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("var_license_num");

                entity.Property(e => e.VarLicenseType)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("var_license_type");

                entity.Property(e => e.VarLicenseValidFrom)
                    .HasColumnType("date")
                    .HasColumnName("var_license_valid_from");

                entity.Property(e => e.VarLicenseValidTo)
                    .HasColumnType("date")
                    .HasColumnName("var_license_valid_to");
            });

            modelBuilder.Entity<ShipmentLineApr2017>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ShipmentLine_Apr2017", "dsf");

                entity.Property(e => e.BillToPartyCity).HasColumnName("Bill_To_Party_City");

                entity.Property(e => e.BillToPartyCountry).HasColumnName("Bill_To_Party_Country");

                entity.Property(e => e.BillToPartyKey).HasColumnName("Bill_To_Party_Key");

                entity.Property(e => e.BillToPartyName).HasColumnName("Bill_To_Party_Name");

                entity.Property(e => e.BillToPartyStreet1).HasColumnName("Bill_To_Party_Street1");

                entity.Property(e => e.BillToPartyStreet2).HasColumnName("Bill_To_Party_Street2");

                entity.Property(e => e.BillToPartyStreet3).HasColumnName("Bill_To_Party_Street3");

                entity.Property(e => e.BillToPartyStreet4).HasColumnName("Bill_To_Party_Street4");

                entity.Property(e => e.BillToPartyStreet5).HasColumnName("Bill_To_Party_Street5");

                entity.Property(e => e.CustomerGroup).HasColumnName("Customer_Group");

                entity.Property(e => e.DeliveryDate)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Date");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Item");

                entity.Property(e => e.DeliveryNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Number");

                entity.Property(e => e.DeliveryType).HasColumnName("Delivery_Type");

                entity.Property(e => e.Eccn).HasColumnName("ECCN");

                entity.Property(e => e.EndUserCity).HasColumnName("End_User_City");

                entity.Property(e => e.EndUserCountry).HasColumnName("End_User_Country");

                entity.Property(e => e.EndUserKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_User_Key");

                entity.Property(e => e.EndUserName).HasColumnName("End_User_Name");

                entity.Property(e => e.EndUserStreet1).HasColumnName("End_User_Street1");

                entity.Property(e => e.EndUserStreet2).HasColumnName("End_User_Street2");

                entity.Property(e => e.EndUserStreet3).HasColumnName("End_User_Street3");

                entity.Property(e => e.EndUserStreet4).HasColumnName("End_User_Street4");

                entity.Property(e => e.EndUserStreet5).HasColumnName("End_User_Street5");

                entity.Property(e => e.Hts)
                    .HasMaxLength(50)
                    .HasColumnName("HTS");

                entity.Property(e => e.ListPrice).HasColumnName("List_Price");

                entity.Property(e => e.MaterialOfferingType).HasColumnName("Material_Offering_Type");

                entity.Property(e => e.MaterialType).HasColumnName("Material_Type");

                entity.Property(e => e.NetValue).HasColumnName("Net_Value");

                entity.Property(e => e.PlantKey)
                    .HasMaxLength(50)
                    .HasColumnName("Plant_Key");

                entity.Property(e => e.PlantName).HasColumnName("Plant_Name");

                entity.Property(e => e.PoType).HasColumnName("PO_Type");

                entity.Property(e => e.SalesOrgKey)
                    .HasMaxLength(50)
                    .HasColumnName("Sales_Org_Key");

                entity.Property(e => e.SalesOrgName).HasColumnName("Sales_Org_Name");

                entity.Property(e => e.SerialNumber).HasColumnName("Serial_Number");

                entity.Property(e => e.ShipToCity).HasColumnName("Ship_To_City");

                entity.Property(e => e.ShipToCountry).HasColumnName("Ship_To_Country");

                entity.Property(e => e.ShipToCustomer).HasColumnName("Ship_To_Customer");

                entity.Property(e => e.ShipToKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_Key");

                entity.Property(e => e.ShipToStreet1).HasColumnName("Ship_To_Street1");

                entity.Property(e => e.ShipToStreet2).HasColumnName("Ship_To_Street2");

                entity.Property(e => e.ShipToStreet3).HasColumnName("Ship_To_Street3");

                entity.Property(e => e.ShipToStreet4).HasColumnName("Ship_To_Street4");

                entity.Property(e => e.ShipToStreet5).HasColumnName("Ship_To_Street5");

                entity.Property(e => e.SoDate)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Date");

                entity.Property(e => e.SoItem)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Number");

                entity.Property(e => e.SoType).HasColumnName("SO_Type");

                entity.Property(e => e.SoldToCity).HasColumnName("Sold_To_City");

                entity.Property(e => e.SoldToCountry).HasColumnName("Sold_To_Country");

                entity.Property(e => e.SoldToKey).HasColumnName("Sold_To_Key");

                entity.Property(e => e.SoldToName).HasColumnName("Sold_To_Name");

                entity.Property(e => e.SoldToStreet1).HasColumnName("Sold_To_Street1");

                entity.Property(e => e.SoldToStreet2).HasColumnName("Sold_To_Street2");

                entity.Property(e => e.SoldToStreet3).HasColumnName("Sold_To_Street3");

                entity.Property(e => e.SoldToStreet4).HasColumnName("Sold_To_Street4");

                entity.Property(e => e.SoldToStreet5).HasColumnName("Sold_To_Street5");
            });

            modelBuilder.Entity<ShipmentLineAug2016>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ShipmentLine_Aug2016", "dsf");

                entity.Property(e => e.BillToPartyCity).HasColumnName("Bill_To_Party_City");

                entity.Property(e => e.BillToPartyCountry).HasColumnName("Bill_To_Party_Country");

                entity.Property(e => e.BillToPartyKey).HasColumnName("Bill_To_Party_Key");

                entity.Property(e => e.BillToPartyName).HasColumnName("Bill_To_Party_Name");

                entity.Property(e => e.BillToPartyStreet1).HasColumnName("Bill_To_Party_Street1");

                entity.Property(e => e.BillToPartyStreet2).HasColumnName("Bill_To_Party_Street2");

                entity.Property(e => e.BillToPartyStreet3).HasColumnName("Bill_To_Party_Street3");

                entity.Property(e => e.BillToPartyStreet4).HasColumnName("Bill_To_Party_Street4");

                entity.Property(e => e.BillToPartyStreet5).HasColumnName("Bill_To_Party_Street5");

                entity.Property(e => e.CustomerGroup).HasColumnName("Customer_Group");

                entity.Property(e => e.DeliveryDate)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Date");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Item");

                entity.Property(e => e.DeliveryNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Number");

                entity.Property(e => e.DeliveryType).HasColumnName("Delivery_Type");

                entity.Property(e => e.Eccn).HasColumnName("ECCN");

                entity.Property(e => e.EndUserCity).HasColumnName("End_User_City");

                entity.Property(e => e.EndUserCountry).HasColumnName("End_User_Country");

                entity.Property(e => e.EndUserKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_User_Key");

                entity.Property(e => e.EndUserName).HasColumnName("End_User_Name");

                entity.Property(e => e.EndUserStreet1).HasColumnName("End_User_Street1");

                entity.Property(e => e.EndUserStreet2).HasColumnName("End_User_Street2");

                entity.Property(e => e.EndUserStreet3).HasColumnName("End_User_Street3");

                entity.Property(e => e.EndUserStreet4).HasColumnName("End_User_Street4");

                entity.Property(e => e.EndUserStreet5).HasColumnName("End_User_Street5");

                entity.Property(e => e.Hts)
                    .HasMaxLength(50)
                    .HasColumnName("HTS");

                entity.Property(e => e.ListPrice).HasColumnName("List_Price");

                entity.Property(e => e.MaterialOfferingType).HasColumnName("Material_Offering_Type");

                entity.Property(e => e.MaterialType).HasColumnName("Material_Type");

                entity.Property(e => e.NetValue).HasColumnName("Net_Value");

                entity.Property(e => e.PlantKey)
                    .HasMaxLength(50)
                    .HasColumnName("Plant_Key");

                entity.Property(e => e.PlantName).HasColumnName("Plant_Name");

                entity.Property(e => e.PoType).HasColumnName("PO_Type");

                entity.Property(e => e.SalesOrgKey)
                    .HasMaxLength(50)
                    .HasColumnName("Sales_Org_Key");

                entity.Property(e => e.SalesOrgName).HasColumnName("Sales_Org_Name");

                entity.Property(e => e.SerialNumber).HasColumnName("Serial_Number");

                entity.Property(e => e.ShipToCity).HasColumnName("Ship_To_City");

                entity.Property(e => e.ShipToCountry).HasColumnName("Ship_To_Country");

                entity.Property(e => e.ShipToCustomer).HasColumnName("Ship_To_Customer");

                entity.Property(e => e.ShipToKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_Key");

                entity.Property(e => e.ShipToStreet1).HasColumnName("Ship_To_Street1");

                entity.Property(e => e.ShipToStreet2).HasColumnName("Ship_To_Street2");

                entity.Property(e => e.ShipToStreet3).HasColumnName("Ship_To_Street3");

                entity.Property(e => e.ShipToStreet4).HasColumnName("Ship_To_Street4");

                entity.Property(e => e.ShipToStreet5).HasColumnName("Ship_To_Street5");

                entity.Property(e => e.SoDate)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Date");

                entity.Property(e => e.SoItem)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Number");

                entity.Property(e => e.SoType).HasColumnName("SO_Type");

                entity.Property(e => e.SoldToCity).HasColumnName("Sold_To_City");

                entity.Property(e => e.SoldToCountry).HasColumnName("Sold_To_Country");

                entity.Property(e => e.SoldToKey).HasColumnName("Sold_To_Key");

                entity.Property(e => e.SoldToName).HasColumnName("Sold_To_Name");

                entity.Property(e => e.SoldToStreet1).HasColumnName("Sold_To_Street1");

                entity.Property(e => e.SoldToStreet2).HasColumnName("Sold_To_Street2");

                entity.Property(e => e.SoldToStreet3).HasColumnName("Sold_To_Street3");

                entity.Property(e => e.SoldToStreet4).HasColumnName("Sold_To_Street4");

                entity.Property(e => e.SoldToStreet5).HasColumnName("Sold_To_Street5");
            });

            modelBuilder.Entity<ShipmentLineAug2017>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ShipmentLine_Aug2017", "dsf");

                entity.Property(e => e.BillToPartyCity).HasColumnName("Bill_To_Party_City");

                entity.Property(e => e.BillToPartyCountry).HasColumnName("Bill_To_Party_Country");

                entity.Property(e => e.BillToPartyKey).HasColumnName("Bill_To_Party_Key");

                entity.Property(e => e.BillToPartyName).HasColumnName("Bill_To_Party_Name");

                entity.Property(e => e.BillToPartyStreet1).HasColumnName("Bill_To_Party_Street1");

                entity.Property(e => e.BillToPartyStreet2).HasColumnName("Bill_To_Party_Street2");

                entity.Property(e => e.BillToPartyStreet3).HasColumnName("Bill_To_Party_Street3");

                entity.Property(e => e.BillToPartyStreet4).HasColumnName("Bill_To_Party_Street4");

                entity.Property(e => e.BillToPartyStreet5).HasColumnName("Bill_To_Party_Street5");

                entity.Property(e => e.CustomerGroup).HasColumnName("Customer_Group");

                entity.Property(e => e.DeliveryDate)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Date");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Item");

                entity.Property(e => e.DeliveryNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Number");

                entity.Property(e => e.DeliveryType).HasColumnName("Delivery_Type");

                entity.Property(e => e.Eccn).HasColumnName("ECCN");

                entity.Property(e => e.EndUserCity).HasColumnName("End_User_City");

                entity.Property(e => e.EndUserCountry).HasColumnName("End_User_Country");

                entity.Property(e => e.EndUserKey).HasColumnName("End_User_Key");

                entity.Property(e => e.EndUserName).HasColumnName("End_User_Name");

                entity.Property(e => e.EndUserStreet1).HasColumnName("End_User_Street1");

                entity.Property(e => e.EndUserStreet2).HasColumnName("End_User_Street2");

                entity.Property(e => e.EndUserStreet3).HasColumnName("End_User_Street3");

                entity.Property(e => e.EndUserStreet4).HasColumnName("End_User_Street4");

                entity.Property(e => e.EndUserStreet5).HasColumnName("End_User_Street5");

                entity.Property(e => e.Hts)
                    .HasMaxLength(50)
                    .HasColumnName("HTS");

                entity.Property(e => e.ListPrice).HasColumnName("List_Price");

                entity.Property(e => e.MaterialOfferingType).HasColumnName("Material_Offering_Type");

                entity.Property(e => e.MaterialType).HasColumnName("Material_Type");

                entity.Property(e => e.NetValue).HasColumnName("Net_Value");

                entity.Property(e => e.PlantKey)
                    .HasMaxLength(50)
                    .HasColumnName("Plant_Key");

                entity.Property(e => e.PlantName).HasColumnName("Plant_Name");

                entity.Property(e => e.PoType).HasColumnName("PO_Type");

                entity.Property(e => e.SalesOrgKey)
                    .HasMaxLength(50)
                    .HasColumnName("Sales_Org_Key");

                entity.Property(e => e.SalesOrgName).HasColumnName("Sales_Org_Name");

                entity.Property(e => e.SerialNumber).HasColumnName("Serial_Number");

                entity.Property(e => e.ShipToCity).HasColumnName("Ship_To_City");

                entity.Property(e => e.ShipToCountry).HasColumnName("Ship_To_Country");

                entity.Property(e => e.ShipToCustomer).HasColumnName("Ship_To_Customer");

                entity.Property(e => e.ShipToKey).HasColumnName("Ship_To_Key");

                entity.Property(e => e.ShipToStreet1).HasColumnName("Ship_To_Street1");

                entity.Property(e => e.ShipToStreet2).HasColumnName("Ship_To_Street2");

                entity.Property(e => e.ShipToStreet3).HasColumnName("Ship_To_Street3");

                entity.Property(e => e.ShipToStreet4).HasColumnName("Ship_To_Street4");

                entity.Property(e => e.ShipToStreet5).HasColumnName("Ship_To_Street5");

                entity.Property(e => e.SoDate)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Date");

                entity.Property(e => e.SoItem)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Number");

                entity.Property(e => e.SoType).HasColumnName("SO_Type");

                entity.Property(e => e.SoldToCity).HasColumnName("Sold_To_City");

                entity.Property(e => e.SoldToCountry).HasColumnName("Sold_To_Country");

                entity.Property(e => e.SoldToKey).HasColumnName("Sold_To_Key");

                entity.Property(e => e.SoldToName).HasColumnName("Sold_To_Name");

                entity.Property(e => e.SoldToStreet1).HasColumnName("Sold_To_Street1");

                entity.Property(e => e.SoldToStreet2).HasColumnName("Sold_To_Street2");

                entity.Property(e => e.SoldToStreet3).HasColumnName("Sold_To_Street3");

                entity.Property(e => e.SoldToStreet4).HasColumnName("Sold_To_Street4");

                entity.Property(e => e.SoldToStreet5).HasColumnName("Sold_To_Street5");
            });

            modelBuilder.Entity<ShipmentLineDec2016>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ShipmentLine_Dec2016", "dsf");

                entity.Property(e => e.BillToPartyCity).HasColumnName("Bill_To_Party_City");

                entity.Property(e => e.BillToPartyCountry).HasColumnName("Bill_To_Party_Country");

                entity.Property(e => e.BillToPartyKey).HasColumnName("Bill_To_Party_Key");

                entity.Property(e => e.BillToPartyName).HasColumnName("Bill_To_Party_Name");

                entity.Property(e => e.BillToPartyStreet1).HasColumnName("Bill_To_Party_Street1");

                entity.Property(e => e.BillToPartyStreet2).HasColumnName("Bill_To_Party_Street2");

                entity.Property(e => e.BillToPartyStreet3).HasColumnName("Bill_To_Party_Street3");

                entity.Property(e => e.BillToPartyStreet4).HasColumnName("Bill_To_Party_Street4");

                entity.Property(e => e.BillToPartyStreet5).HasColumnName("Bill_To_Party_Street5");

                entity.Property(e => e.CustomerGroup).HasColumnName("Customer_Group");

                entity.Property(e => e.DeliveryDate)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Date");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Item");

                entity.Property(e => e.DeliveryNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Number");

                entity.Property(e => e.DeliveryType).HasColumnName("Delivery_Type");

                entity.Property(e => e.Eccn).HasColumnName("ECCN");

                entity.Property(e => e.EndUserCity).HasColumnName("End_User_City");

                entity.Property(e => e.EndUserCountry).HasColumnName("End_User_Country");

                entity.Property(e => e.EndUserKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_User_Key");

                entity.Property(e => e.EndUserName).HasColumnName("End_User_Name");

                entity.Property(e => e.EndUserStreet1).HasColumnName("End_User_Street1");

                entity.Property(e => e.EndUserStreet2).HasColumnName("End_User_Street2");

                entity.Property(e => e.EndUserStreet3).HasColumnName("End_User_Street3");

                entity.Property(e => e.EndUserStreet4).HasColumnName("End_User_Street4");

                entity.Property(e => e.EndUserStreet5).HasColumnName("End_User_Street5");

                entity.Property(e => e.Hts)
                    .HasMaxLength(50)
                    .HasColumnName("HTS");

                entity.Property(e => e.ListPrice).HasColumnName("List_Price");

                entity.Property(e => e.MaterialOfferingType).HasColumnName("Material_Offering_Type");

                entity.Property(e => e.MaterialType).HasColumnName("Material_Type");

                entity.Property(e => e.NetValue).HasColumnName("Net_Value");

                entity.Property(e => e.PlantKey)
                    .HasMaxLength(50)
                    .HasColumnName("Plant_Key");

                entity.Property(e => e.PlantName).HasColumnName("Plant_Name");

                entity.Property(e => e.PoType).HasColumnName("PO_Type");

                entity.Property(e => e.SalesOrgKey)
                    .HasMaxLength(50)
                    .HasColumnName("Sales_Org_Key");

                entity.Property(e => e.SalesOrgName).HasColumnName("Sales_Org_Name");

                entity.Property(e => e.SerialNumber).HasColumnName("Serial_Number");

                entity.Property(e => e.ShipToCity).HasColumnName("Ship_To_City");

                entity.Property(e => e.ShipToCountry).HasColumnName("Ship_To_Country");

                entity.Property(e => e.ShipToCustomer).HasColumnName("Ship_To_Customer");

                entity.Property(e => e.ShipToKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_Key");

                entity.Property(e => e.ShipToStreet1).HasColumnName("Ship_To_Street1");

                entity.Property(e => e.ShipToStreet2).HasColumnName("Ship_To_Street2");

                entity.Property(e => e.ShipToStreet3).HasColumnName("Ship_To_Street3");

                entity.Property(e => e.ShipToStreet4).HasColumnName("Ship_To_Street4");

                entity.Property(e => e.ShipToStreet5).HasColumnName("Ship_To_Street5");

                entity.Property(e => e.SoDate)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Date");

                entity.Property(e => e.SoItem)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Number");

                entity.Property(e => e.SoType).HasColumnName("SO_Type");

                entity.Property(e => e.SoldToCity).HasColumnName("Sold_To_City");

                entity.Property(e => e.SoldToCountry).HasColumnName("Sold_To_Country");

                entity.Property(e => e.SoldToKey).HasColumnName("Sold_To_Key");

                entity.Property(e => e.SoldToName).HasColumnName("Sold_To_Name");

                entity.Property(e => e.SoldToStreet1).HasColumnName("Sold_To_Street1");

                entity.Property(e => e.SoldToStreet2).HasColumnName("Sold_To_Street2");

                entity.Property(e => e.SoldToStreet3).HasColumnName("Sold_To_Street3");

                entity.Property(e => e.SoldToStreet4).HasColumnName("Sold_To_Street4");

                entity.Property(e => e.SoldToStreet5).HasColumnName("Sold_To_Street5");
            });

            modelBuilder.Entity<ShipmentLineFeb2017>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ShipmentLine_Feb2017", "dsf");

                entity.Property(e => e.BillToPartyCity).HasColumnName("Bill_To_Party_City");

                entity.Property(e => e.BillToPartyCountry).HasColumnName("Bill_To_Party_Country");

                entity.Property(e => e.BillToPartyKey).HasColumnName("Bill_To_Party_Key");

                entity.Property(e => e.BillToPartyName).HasColumnName("Bill_To_Party_Name");

                entity.Property(e => e.BillToPartyStreet1).HasColumnName("Bill_To_Party_Street1");

                entity.Property(e => e.BillToPartyStreet2).HasColumnName("Bill_To_Party_Street2");

                entity.Property(e => e.BillToPartyStreet3).HasColumnName("Bill_To_Party_Street3");

                entity.Property(e => e.BillToPartyStreet4).HasColumnName("Bill_To_Party_Street4");

                entity.Property(e => e.BillToPartyStreet5).HasColumnName("Bill_To_Party_Street5");

                entity.Property(e => e.CustomerGroup).HasColumnName("Customer_Group");

                entity.Property(e => e.DeliveryDate)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Date");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Item");

                entity.Property(e => e.DeliveryNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Number");

                entity.Property(e => e.DeliveryType).HasColumnName("Delivery_Type");

                entity.Property(e => e.Eccn).HasColumnName("ECCN");

                entity.Property(e => e.EndUserCity).HasColumnName("End_User_City");

                entity.Property(e => e.EndUserCountry).HasColumnName("End_User_Country");

                entity.Property(e => e.EndUserKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_User_Key");

                entity.Property(e => e.EndUserName).HasColumnName("End_User_Name");

                entity.Property(e => e.EndUserStreet1).HasColumnName("End_User_Street1");

                entity.Property(e => e.EndUserStreet2).HasColumnName("End_User_Street2");

                entity.Property(e => e.EndUserStreet3).HasColumnName("End_User_Street3");

                entity.Property(e => e.EndUserStreet4).HasColumnName("End_User_Street4");

                entity.Property(e => e.EndUserStreet5).HasColumnName("End_User_Street5");

                entity.Property(e => e.Hts).HasColumnName("HTS");

                entity.Property(e => e.ListPrice).HasColumnName("List_Price");

                entity.Property(e => e.MaterialOfferingType).HasColumnName("Material_Offering_Type");

                entity.Property(e => e.MaterialType).HasColumnName("Material_Type");

                entity.Property(e => e.NetValue).HasColumnName("Net_Value");

                entity.Property(e => e.PlantKey)
                    .HasMaxLength(50)
                    .HasColumnName("Plant_Key");

                entity.Property(e => e.PlantName).HasColumnName("Plant_Name");

                entity.Property(e => e.PoType).HasColumnName("PO_Type");

                entity.Property(e => e.SalesOrgKey)
                    .HasMaxLength(50)
                    .HasColumnName("Sales_Org_Key");

                entity.Property(e => e.SalesOrgName).HasColumnName("Sales_Org_Name");

                entity.Property(e => e.SerialNumber).HasColumnName("Serial_Number");

                entity.Property(e => e.ShipToCity).HasColumnName("Ship_To_City");

                entity.Property(e => e.ShipToCountry).HasColumnName("Ship_To_Country");

                entity.Property(e => e.ShipToCustomer).HasColumnName("Ship_To_Customer");

                entity.Property(e => e.ShipToKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_Key");

                entity.Property(e => e.ShipToStreet1).HasColumnName("Ship_To_Street1");

                entity.Property(e => e.ShipToStreet2).HasColumnName("Ship_To_Street2");

                entity.Property(e => e.ShipToStreet3).HasColumnName("Ship_To_Street3");

                entity.Property(e => e.ShipToStreet4).HasColumnName("Ship_To_Street4");

                entity.Property(e => e.ShipToStreet5).HasColumnName("Ship_To_Street5");

                entity.Property(e => e.SoDate)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Date");

                entity.Property(e => e.SoItem)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Number");

                entity.Property(e => e.SoType).HasColumnName("SO_Type");

                entity.Property(e => e.SoldToCity).HasColumnName("Sold_To_City");

                entity.Property(e => e.SoldToCountry).HasColumnName("Sold_To_Country");

                entity.Property(e => e.SoldToKey).HasColumnName("Sold_To_Key");

                entity.Property(e => e.SoldToName).HasColumnName("Sold_To_Name");

                entity.Property(e => e.SoldToStreet1).HasColumnName("Sold_To_Street1");

                entity.Property(e => e.SoldToStreet2).HasColumnName("Sold_To_Street2");

                entity.Property(e => e.SoldToStreet3).HasColumnName("Sold_To_Street3");

                entity.Property(e => e.SoldToStreet4).HasColumnName("Sold_To_Street4");

                entity.Property(e => e.SoldToStreet5).HasColumnName("Sold_To_Street5");
            });

            modelBuilder.Entity<ShipmentLineJan2017>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ShipmentLine_Jan2017", "dsf");

                entity.Property(e => e.BillToPartyCity).HasColumnName("Bill_To_Party_City");

                entity.Property(e => e.BillToPartyCountry).HasColumnName("Bill_To_Party_Country");

                entity.Property(e => e.BillToPartyKey).HasColumnName("Bill_To_Party_Key");

                entity.Property(e => e.BillToPartyName).HasColumnName("Bill_To_Party_Name");

                entity.Property(e => e.BillToPartyStreet1).HasColumnName("Bill_To_Party_Street1");

                entity.Property(e => e.BillToPartyStreet2).HasColumnName("Bill_To_Party_Street2");

                entity.Property(e => e.BillToPartyStreet3).HasColumnName("Bill_To_Party_Street3");

                entity.Property(e => e.BillToPartyStreet4).HasColumnName("Bill_To_Party_Street4");

                entity.Property(e => e.BillToPartyStreet5).HasColumnName("Bill_To_Party_Street5");

                entity.Property(e => e.CustomerGroup).HasColumnName("Customer_Group");

                entity.Property(e => e.DeliveryDate)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Date");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Item");

                entity.Property(e => e.DeliveryNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Number");

                entity.Property(e => e.DeliveryType).HasColumnName("Delivery_Type");

                entity.Property(e => e.Eccn).HasColumnName("ECCN");

                entity.Property(e => e.EndUserCity).HasColumnName("End_User_City");

                entity.Property(e => e.EndUserCountry).HasColumnName("End_User_Country");

                entity.Property(e => e.EndUserKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_User_Key");

                entity.Property(e => e.EndUserName).HasColumnName("End_User_Name");

                entity.Property(e => e.EndUserStreet1).HasColumnName("End_User_Street1");

                entity.Property(e => e.EndUserStreet2).HasColumnName("End_User_Street2");

                entity.Property(e => e.EndUserStreet3).HasColumnName("End_User_Street3");

                entity.Property(e => e.EndUserStreet4).HasColumnName("End_User_Street4");

                entity.Property(e => e.EndUserStreet5).HasColumnName("End_User_Street5");

                entity.Property(e => e.Hts)
                    .HasMaxLength(50)
                    .HasColumnName("HTS");

                entity.Property(e => e.ListPrice).HasColumnName("List_Price");

                entity.Property(e => e.MaterialOfferingType).HasColumnName("Material_Offering_Type");

                entity.Property(e => e.MaterialType).HasColumnName("Material_Type");

                entity.Property(e => e.NetValue).HasColumnName("Net_Value");

                entity.Property(e => e.PlantKey)
                    .HasMaxLength(50)
                    .HasColumnName("Plant_Key");

                entity.Property(e => e.PlantName).HasColumnName("Plant_Name");

                entity.Property(e => e.PoType).HasColumnName("PO_Type");

                entity.Property(e => e.SalesOrgKey)
                    .HasMaxLength(50)
                    .HasColumnName("Sales_Org_Key");

                entity.Property(e => e.SalesOrgName).HasColumnName("Sales_Org_Name");

                entity.Property(e => e.SerialNumber).HasColumnName("Serial_Number");

                entity.Property(e => e.ShipToCity).HasColumnName("Ship_To_City");

                entity.Property(e => e.ShipToCountry).HasColumnName("Ship_To_Country");

                entity.Property(e => e.ShipToCustomer).HasColumnName("Ship_To_Customer");

                entity.Property(e => e.ShipToKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_Key");

                entity.Property(e => e.ShipToStreet1).HasColumnName("Ship_To_Street1");

                entity.Property(e => e.ShipToStreet2).HasColumnName("Ship_To_Street2");

                entity.Property(e => e.ShipToStreet3).HasColumnName("Ship_To_Street3");

                entity.Property(e => e.ShipToStreet4).HasColumnName("Ship_To_Street4");

                entity.Property(e => e.ShipToStreet5).HasColumnName("Ship_To_Street5");

                entity.Property(e => e.SoDate)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Date");

                entity.Property(e => e.SoItem)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Number");

                entity.Property(e => e.SoType).HasColumnName("SO_Type");

                entity.Property(e => e.SoldToCity).HasColumnName("Sold_To_City");

                entity.Property(e => e.SoldToCountry).HasColumnName("Sold_To_Country");

                entity.Property(e => e.SoldToKey).HasColumnName("Sold_To_Key");

                entity.Property(e => e.SoldToName).HasColumnName("Sold_To_Name");

                entity.Property(e => e.SoldToStreet1).HasColumnName("Sold_To_Street1");

                entity.Property(e => e.SoldToStreet2).HasColumnName("Sold_To_Street2");

                entity.Property(e => e.SoldToStreet3).HasColumnName("Sold_To_Street3");

                entity.Property(e => e.SoldToStreet4).HasColumnName("Sold_To_Street4");

                entity.Property(e => e.SoldToStreet5).HasColumnName("Sold_To_Street5");
            });

            modelBuilder.Entity<ShipmentLineJul2016>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ShipmentLine_Jul2016", "dsf");

                entity.Property(e => e.BillToPartyCity).HasColumnName("Bill_To_Party_City");

                entity.Property(e => e.BillToPartyCountry).HasColumnName("Bill_To_Party_Country");

                entity.Property(e => e.BillToPartyKey).HasColumnName("Bill_To_Party_Key");

                entity.Property(e => e.BillToPartyName).HasColumnName("Bill_To_Party_Name");

                entity.Property(e => e.BillToPartyStreet1).HasColumnName("Bill_To_Party_Street1");

                entity.Property(e => e.BillToPartyStreet2).HasColumnName("Bill_To_Party_Street2");

                entity.Property(e => e.BillToPartyStreet3).HasColumnName("Bill_To_Party_Street3");

                entity.Property(e => e.BillToPartyStreet4).HasColumnName("Bill_To_Party_Street4");

                entity.Property(e => e.BillToPartyStreet5).HasColumnName("Bill_To_Party_Street5");

                entity.Property(e => e.CustomerGroup).HasColumnName("Customer_Group");

                entity.Property(e => e.DeliveryDate)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Date");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Item");

                entity.Property(e => e.DeliveryNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Number");

                entity.Property(e => e.DeliveryType).HasColumnName("Delivery_Type");

                entity.Property(e => e.Eccn).HasColumnName("ECCN");

                entity.Property(e => e.EndUserCity).HasColumnName("End_User_City");

                entity.Property(e => e.EndUserCountry).HasColumnName("End_User_Country");

                entity.Property(e => e.EndUserKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_User_Key");

                entity.Property(e => e.EndUserName).HasColumnName("End_User_Name");

                entity.Property(e => e.EndUserStreet1).HasColumnName("End_User_Street1");

                entity.Property(e => e.EndUserStreet2).HasColumnName("End_User_Street2");

                entity.Property(e => e.EndUserStreet3).HasColumnName("End_User_Street3");

                entity.Property(e => e.EndUserStreet4).HasColumnName("End_User_Street4");

                entity.Property(e => e.EndUserStreet5).HasColumnName("End_User_Street5");

                entity.Property(e => e.Hts).HasColumnName("HTS");

                entity.Property(e => e.ListPrice).HasColumnName("List_Price");

                entity.Property(e => e.MaterialOfferingType).HasColumnName("Material_Offering_Type");

                entity.Property(e => e.MaterialType).HasColumnName("Material_Type");

                entity.Property(e => e.NetValue).HasColumnName("Net_Value");

                entity.Property(e => e.PlantKey).HasColumnName("Plant_Key");

                entity.Property(e => e.PlantName).HasColumnName("Plant_Name");

                entity.Property(e => e.PoType).HasColumnName("PO_Type");

                entity.Property(e => e.SalesOrgKey)
                    .HasMaxLength(50)
                    .HasColumnName("Sales_Org_Key");

                entity.Property(e => e.SalesOrgName).HasColumnName("Sales_Org_Name");

                entity.Property(e => e.SerialNumber).HasColumnName("Serial_Number");

                entity.Property(e => e.ShipToCity).HasColumnName("Ship_To_City");

                entity.Property(e => e.ShipToCountry).HasColumnName("Ship_To_Country");

                entity.Property(e => e.ShipToCustomer).HasColumnName("Ship_To_Customer");

                entity.Property(e => e.ShipToKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_Key");

                entity.Property(e => e.ShipToStreet1).HasColumnName("Ship_To_Street1");

                entity.Property(e => e.ShipToStreet2).HasColumnName("Ship_To_Street2");

                entity.Property(e => e.ShipToStreet3).HasColumnName("Ship_To_Street3");

                entity.Property(e => e.ShipToStreet4).HasColumnName("Ship_To_Street4");

                entity.Property(e => e.ShipToStreet5).HasColumnName("Ship_To_Street5");

                entity.Property(e => e.SoDate)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Date");

                entity.Property(e => e.SoItem)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Number");

                entity.Property(e => e.SoType).HasColumnName("SO_Type");

                entity.Property(e => e.SoldToCity).HasColumnName("Sold_To_City");

                entity.Property(e => e.SoldToCountry).HasColumnName("Sold_To_Country");

                entity.Property(e => e.SoldToKey).HasColumnName("Sold_To_Key");

                entity.Property(e => e.SoldToName).HasColumnName("Sold_To_Name");

                entity.Property(e => e.SoldToStreet1).HasColumnName("Sold_To_Street1");

                entity.Property(e => e.SoldToStreet2).HasColumnName("Sold_To_Street2");

                entity.Property(e => e.SoldToStreet3).HasColumnName("Sold_To_Street3");

                entity.Property(e => e.SoldToStreet4).HasColumnName("Sold_To_Street4");

                entity.Property(e => e.SoldToStreet5).HasColumnName("Sold_To_Street5");
            });

            modelBuilder.Entity<ShipmentLineJul2017>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ShipmentLine_Jul2017", "dsf");

                entity.Property(e => e.BillToPartyCity).HasColumnName("Bill_To_Party_City");

                entity.Property(e => e.BillToPartyCountry).HasColumnName("Bill_To_Party_Country");

                entity.Property(e => e.BillToPartyKey).HasColumnName("Bill_To_Party_Key");

                entity.Property(e => e.BillToPartyName).HasColumnName("Bill_To_Party_Name");

                entity.Property(e => e.BillToPartyStreet1).HasColumnName("Bill_To_Party_Street1");

                entity.Property(e => e.BillToPartyStreet2).HasColumnName("Bill_To_Party_Street2");

                entity.Property(e => e.BillToPartyStreet3).HasColumnName("Bill_To_Party_Street3");

                entity.Property(e => e.BillToPartyStreet4).HasColumnName("Bill_To_Party_Street4");

                entity.Property(e => e.BillToPartyStreet5).HasColumnName("Bill_To_Party_Street5");

                entity.Property(e => e.CustomerGroup).HasColumnName("Customer_Group");

                entity.Property(e => e.DeliveryDate)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Date");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Item");

                entity.Property(e => e.DeliveryNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Number");

                entity.Property(e => e.DeliveryType).HasColumnName("Delivery_Type");

                entity.Property(e => e.Eccn).HasColumnName("ECCN");

                entity.Property(e => e.EndUserCity).HasColumnName("End_User_City");

                entity.Property(e => e.EndUserCountry).HasColumnName("End_User_Country");

                entity.Property(e => e.EndUserKey).HasColumnName("End_User_Key");

                entity.Property(e => e.EndUserName).HasColumnName("End_User_Name");

                entity.Property(e => e.EndUserStreet1).HasColumnName("End_User_Street1");

                entity.Property(e => e.EndUserStreet2).HasColumnName("End_User_Street2");

                entity.Property(e => e.EndUserStreet3).HasColumnName("End_User_Street3");

                entity.Property(e => e.EndUserStreet4).HasColumnName("End_User_Street4");

                entity.Property(e => e.EndUserStreet5).HasColumnName("End_User_Street5");

                entity.Property(e => e.Hts)
                    .HasMaxLength(50)
                    .HasColumnName("HTS");

                entity.Property(e => e.ListPrice).HasColumnName("List_Price");

                entity.Property(e => e.MaterialOfferingType).HasColumnName("Material_Offering_Type");

                entity.Property(e => e.MaterialType).HasColumnName("Material_Type");

                entity.Property(e => e.NetValue).HasColumnName("Net_Value");

                entity.Property(e => e.PlantKey)
                    .HasMaxLength(50)
                    .HasColumnName("Plant_Key");

                entity.Property(e => e.PlantName).HasColumnName("Plant_Name");

                entity.Property(e => e.PoType).HasColumnName("PO_Type");

                entity.Property(e => e.SalesOrgKey)
                    .HasMaxLength(50)
                    .HasColumnName("Sales_Org_Key");

                entity.Property(e => e.SalesOrgName).HasColumnName("Sales_Org_Name");

                entity.Property(e => e.SerialNumber).HasColumnName("Serial_Number");

                entity.Property(e => e.ShipToCity).HasColumnName("Ship_To_City");

                entity.Property(e => e.ShipToCountry).HasColumnName("Ship_To_Country");

                entity.Property(e => e.ShipToCustomer).HasColumnName("Ship_To_Customer");

                entity.Property(e => e.ShipToKey).HasColumnName("Ship_To_Key");

                entity.Property(e => e.ShipToStreet1).HasColumnName("Ship_To_Street1");

                entity.Property(e => e.ShipToStreet2).HasColumnName("Ship_To_Street2");

                entity.Property(e => e.ShipToStreet3).HasColumnName("Ship_To_Street3");

                entity.Property(e => e.ShipToStreet4).HasColumnName("Ship_To_Street4");

                entity.Property(e => e.ShipToStreet5).HasColumnName("Ship_To_Street5");

                entity.Property(e => e.SoDate)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Date");

                entity.Property(e => e.SoItem)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Number");

                entity.Property(e => e.SoType).HasColumnName("SO_Type");

                entity.Property(e => e.SoldToCity).HasColumnName("Sold_To_City");

                entity.Property(e => e.SoldToCountry).HasColumnName("Sold_To_Country");

                entity.Property(e => e.SoldToKey).HasColumnName("Sold_To_Key");

                entity.Property(e => e.SoldToName).HasColumnName("Sold_To_Name");

                entity.Property(e => e.SoldToStreet1).HasColumnName("Sold_To_Street1");

                entity.Property(e => e.SoldToStreet2).HasColumnName("Sold_To_Street2");

                entity.Property(e => e.SoldToStreet3).HasColumnName("Sold_To_Street3");

                entity.Property(e => e.SoldToStreet4).HasColumnName("Sold_To_Street4");

                entity.Property(e => e.SoldToStreet5).HasColumnName("Sold_To_Street5");
            });

            modelBuilder.Entity<ShipmentLineJun2016>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ShipmentLine_Jun2016", "dsf");

                entity.Property(e => e.BillToPartyCity).HasColumnName("Bill_To_Party_City");

                entity.Property(e => e.BillToPartyCountry).HasColumnName("Bill_To_Party_Country");

                entity.Property(e => e.BillToPartyKey).HasColumnName("Bill_To_Party_Key");

                entity.Property(e => e.BillToPartyName).HasColumnName("Bill_To_Party_Name");

                entity.Property(e => e.BillToPartyStreet1).HasColumnName("Bill_To_Party_Street1");

                entity.Property(e => e.BillToPartyStreet2).HasColumnName("Bill_To_Party_Street2");

                entity.Property(e => e.BillToPartyStreet3).HasColumnName("Bill_To_Party_Street3");

                entity.Property(e => e.BillToPartyStreet4).HasColumnName("Bill_To_Party_Street4");

                entity.Property(e => e.BillToPartyStreet5).HasColumnName("Bill_To_Party_Street5");

                entity.Property(e => e.CustomerGroup).HasColumnName("Customer_Group");

                entity.Property(e => e.DeliveryDate)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Date");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Item");

                entity.Property(e => e.DeliveryNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Number");

                entity.Property(e => e.DeliveryType).HasColumnName("Delivery_Type");

                entity.Property(e => e.Eccn).HasColumnName("ECCN");

                entity.Property(e => e.EndUserCity).HasColumnName("End_User_City");

                entity.Property(e => e.EndUserCountry).HasColumnName("End_User_Country");

                entity.Property(e => e.EndUserKey).HasColumnName("End_User_Key");

                entity.Property(e => e.EndUserName).HasColumnName("End_User_Name");

                entity.Property(e => e.EndUserStreet1).HasColumnName("End_User_Street1");

                entity.Property(e => e.EndUserStreet2).HasColumnName("End_User_Street2");

                entity.Property(e => e.EndUserStreet3).HasColumnName("End_User_Street3");

                entity.Property(e => e.EndUserStreet4).HasColumnName("End_User_Street4");

                entity.Property(e => e.EndUserStreet5).HasColumnName("End_User_Street5");

                entity.Property(e => e.Hts)
                    .HasMaxLength(50)
                    .HasColumnName("HTS");

                entity.Property(e => e.ListPrice).HasColumnName("List_Price");

                entity.Property(e => e.MaterialOfferingType).HasColumnName("Material_Offering_Type");

                entity.Property(e => e.MaterialType).HasColumnName("Material_Type");

                entity.Property(e => e.NetValue).HasColumnName("Net_Value");

                entity.Property(e => e.PlantKey)
                    .HasMaxLength(50)
                    .HasColumnName("Plant_Key");

                entity.Property(e => e.PlantName).HasColumnName("Plant_Name");

                entity.Property(e => e.PoType).HasColumnName("PO_Type");

                entity.Property(e => e.SalesOrgKey)
                    .HasMaxLength(50)
                    .HasColumnName("Sales_Org_Key");

                entity.Property(e => e.SalesOrgName).HasColumnName("Sales_Org_Name");

                entity.Property(e => e.SerialNumber).HasColumnName("Serial_Number");

                entity.Property(e => e.ShipToCity).HasColumnName("Ship_To_City");

                entity.Property(e => e.ShipToCountry).HasColumnName("Ship_To_Country");

                entity.Property(e => e.ShipToCustomer).HasColumnName("Ship_To_Customer");

                entity.Property(e => e.ShipToKey).HasColumnName("Ship_To_Key");

                entity.Property(e => e.ShipToStreet1).HasColumnName("Ship_To_Street1");

                entity.Property(e => e.ShipToStreet2).HasColumnName("Ship_To_Street2");

                entity.Property(e => e.ShipToStreet3).HasColumnName("Ship_To_Street3");

                entity.Property(e => e.ShipToStreet4).HasColumnName("Ship_To_Street4");

                entity.Property(e => e.ShipToStreet5).HasColumnName("Ship_To_Street5");

                entity.Property(e => e.SoDate)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Date");

                entity.Property(e => e.SoItem)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Number");

                entity.Property(e => e.SoType).HasColumnName("SO_Type");

                entity.Property(e => e.SoldToCity).HasColumnName("Sold_To_City");

                entity.Property(e => e.SoldToCountry).HasColumnName("Sold_To_Country");

                entity.Property(e => e.SoldToKey).HasColumnName("Sold_To_Key");

                entity.Property(e => e.SoldToName).HasColumnName("Sold_To_Name");

                entity.Property(e => e.SoldToStreet1).HasColumnName("Sold_To_Street1");

                entity.Property(e => e.SoldToStreet2).HasColumnName("Sold_To_Street2");

                entity.Property(e => e.SoldToStreet3).HasColumnName("Sold_To_Street3");

                entity.Property(e => e.SoldToStreet4).HasColumnName("Sold_To_Street4");

                entity.Property(e => e.SoldToStreet5).HasColumnName("Sold_To_Street5");
            });

            modelBuilder.Entity<ShipmentLineJun2017>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ShipmentLine_Jun2017", "dsf");

                entity.Property(e => e.BillToPartyCity).HasColumnName("Bill_To_Party_City");

                entity.Property(e => e.BillToPartyCountry).HasColumnName("Bill_To_Party_Country");

                entity.Property(e => e.BillToPartyKey).HasColumnName("Bill_To_Party_Key");

                entity.Property(e => e.BillToPartyName).HasColumnName("Bill_To_Party_Name");

                entity.Property(e => e.BillToPartyStreet1).HasColumnName("Bill_To_Party_Street1");

                entity.Property(e => e.BillToPartyStreet2).HasColumnName("Bill_To_Party_Street2");

                entity.Property(e => e.BillToPartyStreet3).HasColumnName("Bill_To_Party_Street3");

                entity.Property(e => e.BillToPartyStreet4).HasColumnName("Bill_To_Party_Street4");

                entity.Property(e => e.BillToPartyStreet5).HasColumnName("Bill_To_Party_Street5");

                entity.Property(e => e.CustomerGroup).HasColumnName("Customer_Group");

                entity.Property(e => e.DeliveryDate)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Date");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Item");

                entity.Property(e => e.DeliveryNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Number");

                entity.Property(e => e.DeliveryType).HasColumnName("Delivery_Type");

                entity.Property(e => e.Eccn).HasColumnName("ECCN");

                entity.Property(e => e.EndUserCity).HasColumnName("End_User_City");

                entity.Property(e => e.EndUserCountry).HasColumnName("End_User_Country");

                entity.Property(e => e.EndUserKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_User_Key");

                entity.Property(e => e.EndUserName).HasColumnName("End_User_Name");

                entity.Property(e => e.EndUserStreet1).HasColumnName("End_User_Street1");

                entity.Property(e => e.EndUserStreet2).HasColumnName("End_User_Street2");

                entity.Property(e => e.EndUserStreet3).HasColumnName("End_User_Street3");

                entity.Property(e => e.EndUserStreet4).HasColumnName("End_User_Street4");

                entity.Property(e => e.EndUserStreet5).HasColumnName("End_User_Street5");

                entity.Property(e => e.Hts)
                    .HasMaxLength(50)
                    .HasColumnName("HTS");

                entity.Property(e => e.ListPrice).HasColumnName("List_Price");

                entity.Property(e => e.MaterialOfferingType).HasColumnName("Material_Offering_Type");

                entity.Property(e => e.MaterialType).HasColumnName("Material_Type");

                entity.Property(e => e.NetValue).HasColumnName("Net_Value");

                entity.Property(e => e.PlantKey)
                    .HasMaxLength(50)
                    .HasColumnName("Plant_Key");

                entity.Property(e => e.PlantName).HasColumnName("Plant_Name");

                entity.Property(e => e.PoType).HasColumnName("PO_Type");

                entity.Property(e => e.SalesOrgKey)
                    .HasMaxLength(50)
                    .HasColumnName("Sales_Org_Key");

                entity.Property(e => e.SalesOrgName).HasColumnName("Sales_Org_Name");

                entity.Property(e => e.SerialNumber).HasColumnName("Serial_Number");

                entity.Property(e => e.ShipToCity).HasColumnName("Ship_To_City");

                entity.Property(e => e.ShipToCountry).HasColumnName("Ship_To_Country");

                entity.Property(e => e.ShipToCustomer).HasColumnName("Ship_To_Customer");

                entity.Property(e => e.ShipToKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_Key");

                entity.Property(e => e.ShipToStreet1).HasColumnName("Ship_To_Street1");

                entity.Property(e => e.ShipToStreet2).HasColumnName("Ship_To_Street2");

                entity.Property(e => e.ShipToStreet3).HasColumnName("Ship_To_Street3");

                entity.Property(e => e.ShipToStreet4).HasColumnName("Ship_To_Street4");

                entity.Property(e => e.ShipToStreet5).HasColumnName("Ship_To_Street5");

                entity.Property(e => e.SoDate)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Date");

                entity.Property(e => e.SoItem)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Number");

                entity.Property(e => e.SoType).HasColumnName("SO_Type");

                entity.Property(e => e.SoldToCity).HasColumnName("Sold_To_City");

                entity.Property(e => e.SoldToCountry).HasColumnName("Sold_To_Country");

                entity.Property(e => e.SoldToKey).HasColumnName("Sold_To_Key");

                entity.Property(e => e.SoldToName).HasColumnName("Sold_To_Name");

                entity.Property(e => e.SoldToStreet1).HasColumnName("Sold_To_Street1");

                entity.Property(e => e.SoldToStreet2).HasColumnName("Sold_To_Street2");

                entity.Property(e => e.SoldToStreet3).HasColumnName("Sold_To_Street3");

                entity.Property(e => e.SoldToStreet4).HasColumnName("Sold_To_Street4");

                entity.Property(e => e.SoldToStreet5).HasColumnName("Sold_To_Street5");
            });

            modelBuilder.Entity<ShipmentLineMar2017>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ShipmentLine_Mar2017", "dsf");

                entity.Property(e => e.BillToPartyCity).HasColumnName("Bill_To_Party_City");

                entity.Property(e => e.BillToPartyCountry).HasColumnName("Bill_To_Party_Country");

                entity.Property(e => e.BillToPartyKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party_Key");

                entity.Property(e => e.BillToPartyName).HasColumnName("Bill_To_Party_Name");

                entity.Property(e => e.BillToPartyStreet1).HasColumnName("Bill_To_Party_Street1");

                entity.Property(e => e.BillToPartyStreet2).HasColumnName("Bill_To_Party_Street2");

                entity.Property(e => e.BillToPartyStreet3).HasColumnName("Bill_To_Party_Street3");

                entity.Property(e => e.BillToPartyStreet4).HasColumnName("Bill_To_Party_Street4");

                entity.Property(e => e.BillToPartyStreet5).HasColumnName("Bill_To_Party_Street5");

                entity.Property(e => e.CustomerGroup).HasColumnName("Customer_Group");

                entity.Property(e => e.DeliveryDate)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Date");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Item");

                entity.Property(e => e.DeliveryNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Number");

                entity.Property(e => e.DeliveryType).HasColumnName("Delivery_Type");

                entity.Property(e => e.Eccn).HasColumnName("ECCN");

                entity.Property(e => e.EndUserCity).HasColumnName("End_User_City");

                entity.Property(e => e.EndUserCountry).HasColumnName("End_User_Country");

                entity.Property(e => e.EndUserKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_User_Key");

                entity.Property(e => e.EndUserName).HasColumnName("End_User_Name");

                entity.Property(e => e.EndUserStreet1).HasColumnName("End_User_Street1");

                entity.Property(e => e.EndUserStreet2).HasColumnName("End_User_Street2");

                entity.Property(e => e.EndUserStreet3).HasColumnName("End_User_Street3");

                entity.Property(e => e.EndUserStreet4).HasColumnName("End_User_Street4");

                entity.Property(e => e.EndUserStreet5).HasColumnName("End_User_Street5");

                entity.Property(e => e.Hts)
                    .HasMaxLength(50)
                    .HasColumnName("HTS");

                entity.Property(e => e.ListPrice).HasColumnName("List_Price");

                entity.Property(e => e.MaterialOfferingType).HasColumnName("Material_Offering_Type");

                entity.Property(e => e.MaterialType).HasColumnName("Material_Type");

                entity.Property(e => e.NetValue).HasColumnName("Net_Value");

                entity.Property(e => e.PlantKey)
                    .HasMaxLength(50)
                    .HasColumnName("Plant_Key");

                entity.Property(e => e.PlantName).HasColumnName("Plant_Name");

                entity.Property(e => e.PoType).HasColumnName("PO_Type");

                entity.Property(e => e.SalesOrgKey)
                    .HasMaxLength(50)
                    .HasColumnName("Sales_Org_Key");

                entity.Property(e => e.SalesOrgName).HasColumnName("Sales_Org_Name");

                entity.Property(e => e.SerialNumber).HasColumnName("Serial_Number");

                entity.Property(e => e.ShipToCity).HasColumnName("Ship_To_City");

                entity.Property(e => e.ShipToCountry).HasColumnName("Ship_To_Country");

                entity.Property(e => e.ShipToCustomer).HasColumnName("Ship_To_Customer");

                entity.Property(e => e.ShipToKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_Key");

                entity.Property(e => e.ShipToStreet1).HasColumnName("Ship_To_Street1");

                entity.Property(e => e.ShipToStreet2).HasColumnName("Ship_To_Street2");

                entity.Property(e => e.ShipToStreet3).HasColumnName("Ship_To_Street3");

                entity.Property(e => e.ShipToStreet4).HasColumnName("Ship_To_Street4");

                entity.Property(e => e.ShipToStreet5).HasColumnName("Ship_To_Street5");

                entity.Property(e => e.SoDate)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Date");

                entity.Property(e => e.SoItem)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Number");

                entity.Property(e => e.SoType).HasColumnName("SO_Type");

                entity.Property(e => e.SoldToCity).HasColumnName("Sold_To_City");

                entity.Property(e => e.SoldToCountry).HasColumnName("Sold_To_Country");

                entity.Property(e => e.SoldToKey)
                    .HasMaxLength(50)
                    .HasColumnName("Sold_To_Key");

                entity.Property(e => e.SoldToName).HasColumnName("Sold_To_Name");

                entity.Property(e => e.SoldToStreet1).HasColumnName("Sold_To_Street1");

                entity.Property(e => e.SoldToStreet2).HasColumnName("Sold_To_Street2");

                entity.Property(e => e.SoldToStreet3).HasColumnName("Sold_To_Street3");

                entity.Property(e => e.SoldToStreet4).HasColumnName("Sold_To_Street4");

                entity.Property(e => e.SoldToStreet5).HasColumnName("Sold_To_Street5");
            });

            modelBuilder.Entity<ShipmentLineMay2017>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ShipmentLine_May2017", "dsf");

                entity.Property(e => e.BillToPartyCity).HasColumnName("Bill_To_Party_City");

                entity.Property(e => e.BillToPartyCountry).HasColumnName("Bill_To_Party_Country");

                entity.Property(e => e.BillToPartyKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party_Key");

                entity.Property(e => e.BillToPartyName).HasColumnName("Bill_To_Party_Name");

                entity.Property(e => e.BillToPartyStreet1).HasColumnName("Bill_To_Party_Street1");

                entity.Property(e => e.BillToPartyStreet2).HasColumnName("Bill_To_Party_Street2");

                entity.Property(e => e.BillToPartyStreet3).HasColumnName("Bill_To_Party_Street3");

                entity.Property(e => e.BillToPartyStreet4).HasColumnName("Bill_To_Party_Street4");

                entity.Property(e => e.BillToPartyStreet5).HasColumnName("Bill_To_Party_Street5");

                entity.Property(e => e.CustomerGroup).HasColumnName("Customer_Group");

                entity.Property(e => e.DeliveryDate)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Date");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Item");

                entity.Property(e => e.DeliveryNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Number");

                entity.Property(e => e.DeliveryType).HasColumnName("Delivery_Type");

                entity.Property(e => e.Eccn).HasColumnName("ECCN");

                entity.Property(e => e.EndUserCity).HasColumnName("End_User_City");

                entity.Property(e => e.EndUserCountry).HasColumnName("End_User_Country");

                entity.Property(e => e.EndUserKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_User_Key");

                entity.Property(e => e.EndUserName).HasColumnName("End_User_Name");

                entity.Property(e => e.EndUserStreet1).HasColumnName("End_User_Street1");

                entity.Property(e => e.EndUserStreet2).HasColumnName("End_User_Street2");

                entity.Property(e => e.EndUserStreet3).HasColumnName("End_User_Street3");

                entity.Property(e => e.EndUserStreet4).HasColumnName("End_User_Street4");

                entity.Property(e => e.EndUserStreet5).HasColumnName("End_User_Street5");

                entity.Property(e => e.Hts)
                    .HasMaxLength(50)
                    .HasColumnName("HTS");

                entity.Property(e => e.ListPrice).HasColumnName("List_Price");

                entity.Property(e => e.MaterialOfferingType).HasColumnName("Material_Offering_Type");

                entity.Property(e => e.MaterialType).HasColumnName("Material_Type");

                entity.Property(e => e.NetValue).HasColumnName("Net_Value");

                entity.Property(e => e.PlantKey)
                    .HasMaxLength(50)
                    .HasColumnName("Plant_Key");

                entity.Property(e => e.PlantName).HasColumnName("Plant_Name");

                entity.Property(e => e.PoType).HasColumnName("PO_Type");

                entity.Property(e => e.SalesOrgKey)
                    .HasMaxLength(50)
                    .HasColumnName("Sales_Org_Key");

                entity.Property(e => e.SalesOrgName).HasColumnName("Sales_Org_Name");

                entity.Property(e => e.SerialNumber).HasColumnName("Serial_Number");

                entity.Property(e => e.ShipToCity).HasColumnName("Ship_To_City");

                entity.Property(e => e.ShipToCountry).HasColumnName("Ship_To_Country");

                entity.Property(e => e.ShipToCustomer).HasColumnName("Ship_To_Customer");

                entity.Property(e => e.ShipToKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_Key");

                entity.Property(e => e.ShipToStreet1).HasColumnName("Ship_To_Street1");

                entity.Property(e => e.ShipToStreet2).HasColumnName("Ship_To_Street2");

                entity.Property(e => e.ShipToStreet3).HasColumnName("Ship_To_Street3");

                entity.Property(e => e.ShipToStreet4).HasColumnName("Ship_To_Street4");

                entity.Property(e => e.ShipToStreet5).HasColumnName("Ship_To_Street5");

                entity.Property(e => e.SoDate)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Date");

                entity.Property(e => e.SoItem)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Number");

                entity.Property(e => e.SoType).HasColumnName("SO_Type");

                entity.Property(e => e.SoldToCity).HasColumnName("Sold_To_City");

                entity.Property(e => e.SoldToCountry).HasColumnName("Sold_To_Country");

                entity.Property(e => e.SoldToKey)
                    .HasMaxLength(50)
                    .HasColumnName("Sold_To_Key");

                entity.Property(e => e.SoldToName).HasColumnName("Sold_To_Name");

                entity.Property(e => e.SoldToStreet1).HasColumnName("Sold_To_Street1");

                entity.Property(e => e.SoldToStreet2).HasColumnName("Sold_To_Street2");

                entity.Property(e => e.SoldToStreet3).HasColumnName("Sold_To_Street3");

                entity.Property(e => e.SoldToStreet4).HasColumnName("Sold_To_Street4");

                entity.Property(e => e.SoldToStreet5).HasColumnName("Sold_To_Street5");
            });

            modelBuilder.Entity<ShipmentLineMetaVw>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("shipment_line_meta_vw");

                entity.Property(e => e.BilltoPartyCity)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_city");

                entity.Property(e => e.BilltoPartyCountry)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_country");

                entity.Property(e => e.BilltoPartyKey)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_key");

                entity.Property(e => e.BilltoPartyName)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_name");

                entity.Property(e => e.BilltoPartyStreet1)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_street1");

                entity.Property(e => e.BilltoPartyStreet2)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_street2");

                entity.Property(e => e.BilltoPartyStreet3)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_street3");

                entity.Property(e => e.BilltoPartyStreet4)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_street4");

                entity.Property(e => e.BilltoPartyStreet5)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_street5");

                entity.Property(e => e.CustomerGroup)
                    .IsUnicode(false)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DeliveryDate)
                    .HasColumnType("date")
                    .HasColumnName("delivery_date");

                entity.Property(e => e.DeliveryItem).HasColumnName("delivery_item");

                entity.Property(e => e.DeliveryNumber)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_number");

                entity.Property(e => e.DeliveryType)
                    .IsUnicode(false)
                    .HasColumnName("delivery_type");

                entity.Property(e => e.EndUserCity)
                    .IsUnicode(false)
                    .HasColumnName("end_user_city");

                entity.Property(e => e.EndUserCountry)
                    .IsUnicode(false)
                    .HasColumnName("end_user_country");

                entity.Property(e => e.EndUserKey)
                    .IsUnicode(false)
                    .HasColumnName("end_user_key");

                entity.Property(e => e.EndUserName)
                    .IsUnicode(false)
                    .HasColumnName("end_user_name");

                entity.Property(e => e.EndUserStreet1)
                    .IsUnicode(false)
                    .HasColumnName("end_user_street1");

                entity.Property(e => e.EndUserStreet2)
                    .IsUnicode(false)
                    .HasColumnName("end_user_street2");

                entity.Property(e => e.EndUserStreet3)
                    .IsUnicode(false)
                    .HasColumnName("end_user_street3");

                entity.Property(e => e.EndUserStreet4)
                    .IsUnicode(false)
                    .HasColumnName("end_user_street4");

                entity.Property(e => e.EndUserStreet5)
                    .IsUnicode(false)
                    .HasColumnName("end_user_street5");

                entity.Property(e => e.ImportDate)
                    .HasColumnType("datetime")
                    .HasColumnName("import_date");

                entity.Property(e => e.ImportId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("import_id");

                entity.Property(e => e.ImportStatus)
                    .HasMaxLength(255)
                    .HasColumnName("import_status");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.Material)
                    .IsUnicode(false)
                    .HasColumnName("material");

                entity.Property(e => e.MaterialEccn)
                    .IsUnicode(false)
                    .HasColumnName("material_eccn");

                entity.Property(e => e.MaterialHts)
                    .IsUnicode(false)
                    .HasColumnName("material_hts");

                entity.Property(e => e.MaterialOfferingType)
                    .IsUnicode(false)
                    .HasColumnName("material_offering_type");

                entity.Property(e => e.MaterialType)
                    .IsUnicode(false)
                    .HasColumnName("material_type");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PlantKey)
                    .IsUnicode(false)
                    .HasColumnName("plant_key");

                entity.Property(e => e.PlantName)
                    .IsUnicode(false)
                    .HasColumnName("plant_name");

                entity.Property(e => e.PoType)
                    .IsUnicode(false)
                    .HasColumnName("po_type");

                entity.Property(e => e.Qty)
                    .HasColumnType("decimal(10, 0)")
                    .HasColumnName("qty");

                entity.Property(e => e.SalesOrgKey)
                    .IsUnicode(false)
                    .HasColumnName("sales_org_key");

                entity.Property(e => e.SalesOrgName)
                    .IsUnicode(false)
                    .HasColumnName("sales_org_name");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("serial_number");

                entity.Property(e => e.ShiptoCity)
                    .IsUnicode(false)
                    .HasColumnName("shipto_city");

                entity.Property(e => e.ShiptoCountry)
                    .IsUnicode(false)
                    .HasColumnName("shipto_country");

                entity.Property(e => e.ShiptoCustomer)
                    .IsUnicode(false)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .IsUnicode(false)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShiptoStreet1)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street1");

                entity.Property(e => e.ShiptoStreet2)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street2");

                entity.Property(e => e.ShiptoStreet3)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street3");

                entity.Property(e => e.ShiptoStreet4)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street4");

                entity.Property(e => e.ShiptoStreet5)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street5");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoType)
                    .IsUnicode(false)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoCity)
                    .IsUnicode(false)
                    .HasColumnName("soldto_city");

                entity.Property(e => e.SoldtoCountry)
                    .IsUnicode(false)
                    .HasColumnName("soldto_country");

                entity.Property(e => e.SoldtoKey)
                    .IsUnicode(false)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .IsUnicode(false)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SoldtoStreet1)
                    .IsUnicode(false)
                    .HasColumnName("soldto_street1");

                entity.Property(e => e.SoldtoStreet2)
                    .IsUnicode(false)
                    .HasColumnName("soldto_street2");

                entity.Property(e => e.SoldtoStreet3)
                    .IsUnicode(false)
                    .HasColumnName("soldto_street3");

                entity.Property(e => e.SoldtoStreet4)
                    .IsUnicode(false)
                    .HasColumnName("soldto_street4");

                entity.Property(e => e.SoldtoStreet5)
                    .IsUnicode(false)
                    .HasColumnName("soldto_street5");

                entity.Property(e => e.TotNetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("tot_net_price");
            });

            modelBuilder.Entity<ShipmentLineNov2016>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ShipmentLine_Nov2016", "dsf");

                entity.Property(e => e.BillToPartyCity).HasColumnName("Bill_To_Party_City");

                entity.Property(e => e.BillToPartyCountry).HasColumnName("Bill_To_Party_Country");

                entity.Property(e => e.BillToPartyKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party_Key");

                entity.Property(e => e.BillToPartyName).HasColumnName("Bill_To_Party_Name");

                entity.Property(e => e.BillToPartyStreet1).HasColumnName("Bill_To_Party_Street1");

                entity.Property(e => e.BillToPartyStreet2).HasColumnName("Bill_To_Party_Street2");

                entity.Property(e => e.BillToPartyStreet3).HasColumnName("Bill_To_Party_Street3");

                entity.Property(e => e.BillToPartyStreet4).HasColumnName("Bill_To_Party_Street4");

                entity.Property(e => e.BillToPartyStreet5).HasColumnName("Bill_To_Party_Street5");

                entity.Property(e => e.CustomerGroup).HasColumnName("Customer_Group");

                entity.Property(e => e.DeliveryDate)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Date");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Item");

                entity.Property(e => e.DeliveryNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Number");

                entity.Property(e => e.DeliveryType).HasColumnName("Delivery_Type");

                entity.Property(e => e.Eccn).HasColumnName("ECCN");

                entity.Property(e => e.EndUserCity).HasColumnName("End_User_City");

                entity.Property(e => e.EndUserCountry).HasColumnName("End_User_Country");

                entity.Property(e => e.EndUserKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_User_Key");

                entity.Property(e => e.EndUserName).HasColumnName("End_User_Name");

                entity.Property(e => e.EndUserStreet1).HasColumnName("End_User_Street1");

                entity.Property(e => e.EndUserStreet2).HasColumnName("End_User_Street2");

                entity.Property(e => e.EndUserStreet3).HasColumnName("End_User_Street3");

                entity.Property(e => e.EndUserStreet4).HasColumnName("End_User_Street4");

                entity.Property(e => e.EndUserStreet5).HasColumnName("End_User_Street5");

                entity.Property(e => e.Hts)
                    .HasMaxLength(50)
                    .HasColumnName("HTS");

                entity.Property(e => e.ListPrice).HasColumnName("List_Price");

                entity.Property(e => e.MaterialOfferingType).HasColumnName("Material_Offering_Type");

                entity.Property(e => e.MaterialType).HasColumnName("Material_Type");

                entity.Property(e => e.NetValue).HasColumnName("Net_Value");

                entity.Property(e => e.PlantKey)
                    .HasMaxLength(50)
                    .HasColumnName("Plant_Key");

                entity.Property(e => e.PlantName).HasColumnName("Plant_Name");

                entity.Property(e => e.PoType).HasColumnName("PO_Type");

                entity.Property(e => e.SalesOrgKey)
                    .HasMaxLength(50)
                    .HasColumnName("Sales_Org_Key");

                entity.Property(e => e.SalesOrgName).HasColumnName("Sales_Org_Name");

                entity.Property(e => e.SerialNumber).HasColumnName("Serial_Number");

                entity.Property(e => e.ShipToCity).HasColumnName("Ship_To_City");

                entity.Property(e => e.ShipToCountry).HasColumnName("Ship_To_Country");

                entity.Property(e => e.ShipToCustomer).HasColumnName("Ship_To_Customer");

                entity.Property(e => e.ShipToKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_Key");

                entity.Property(e => e.ShipToStreet1).HasColumnName("Ship_To_Street1");

                entity.Property(e => e.ShipToStreet2).HasColumnName("Ship_To_Street2");

                entity.Property(e => e.ShipToStreet3).HasColumnName("Ship_To_Street3");

                entity.Property(e => e.ShipToStreet4).HasColumnName("Ship_To_Street4");

                entity.Property(e => e.ShipToStreet5).HasColumnName("Ship_To_Street5");

                entity.Property(e => e.SoDate)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Date");

                entity.Property(e => e.SoItem)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Number");

                entity.Property(e => e.SoType).HasColumnName("SO_Type");

                entity.Property(e => e.SoldToCity).HasColumnName("Sold_To_City");

                entity.Property(e => e.SoldToCountry).HasColumnName("Sold_To_Country");

                entity.Property(e => e.SoldToKey)
                    .HasMaxLength(50)
                    .HasColumnName("Sold_To_Key");

                entity.Property(e => e.SoldToName).HasColumnName("Sold_To_Name");

                entity.Property(e => e.SoldToStreet1).HasColumnName("Sold_To_Street1");

                entity.Property(e => e.SoldToStreet2).HasColumnName("Sold_To_Street2");

                entity.Property(e => e.SoldToStreet3).HasColumnName("Sold_To_Street3");

                entity.Property(e => e.SoldToStreet4).HasColumnName("Sold_To_Street4");

                entity.Property(e => e.SoldToStreet5).HasColumnName("Sold_To_Street5");
            });

            modelBuilder.Entity<ShipmentLineOct2016>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ShipmentLine_Oct2016", "dsf");

                entity.Property(e => e.BillToPartyCity).HasColumnName("Bill_To_Party_City");

                entity.Property(e => e.BillToPartyCountry).HasColumnName("Bill_To_Party_Country");

                entity.Property(e => e.BillToPartyKey).HasColumnName("Bill_To_Party_Key");

                entity.Property(e => e.BillToPartyName).HasColumnName("Bill_To_Party_Name");

                entity.Property(e => e.BillToPartyStreet1).HasColumnName("Bill_To_Party_Street1");

                entity.Property(e => e.BillToPartyStreet2).HasColumnName("Bill_To_Party_Street2");

                entity.Property(e => e.BillToPartyStreet3).HasColumnName("Bill_To_Party_Street3");

                entity.Property(e => e.BillToPartyStreet4).HasColumnName("Bill_To_Party_Street4");

                entity.Property(e => e.BillToPartyStreet5).HasColumnName("Bill_To_Party_Street5");

                entity.Property(e => e.CustomerGroup).HasColumnName("Customer_Group");

                entity.Property(e => e.DeliveryDate)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Date");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Item");

                entity.Property(e => e.DeliveryNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Number");

                entity.Property(e => e.DeliveryType).HasColumnName("Delivery_Type");

                entity.Property(e => e.Eccn).HasColumnName("ECCN");

                entity.Property(e => e.EndUserCity).HasColumnName("End_User_City");

                entity.Property(e => e.EndUserCountry).HasColumnName("End_User_Country");

                entity.Property(e => e.EndUserKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_User_Key");

                entity.Property(e => e.EndUserName).HasColumnName("End_User_Name");

                entity.Property(e => e.EndUserStreet1).HasColumnName("End_User_Street1");

                entity.Property(e => e.EndUserStreet2).HasColumnName("End_User_Street2");

                entity.Property(e => e.EndUserStreet3).HasColumnName("End_User_Street3");

                entity.Property(e => e.EndUserStreet4).HasColumnName("End_User_Street4");

                entity.Property(e => e.EndUserStreet5).HasColumnName("End_User_Street5");

                entity.Property(e => e.Hts)
                    .HasMaxLength(50)
                    .HasColumnName("HTS");

                entity.Property(e => e.ListPrice).HasColumnName("List_Price");

                entity.Property(e => e.MaterialOfferingType).HasColumnName("Material_Offering_Type");

                entity.Property(e => e.MaterialType).HasColumnName("Material_Type");

                entity.Property(e => e.NetValue).HasColumnName("Net_Value");

                entity.Property(e => e.PlantKey)
                    .HasMaxLength(50)
                    .HasColumnName("Plant_Key");

                entity.Property(e => e.PlantName).HasColumnName("Plant_Name");

                entity.Property(e => e.PoType).HasColumnName("PO_Type");

                entity.Property(e => e.SalesOrgKey)
                    .HasMaxLength(50)
                    .HasColumnName("Sales_Org_Key");

                entity.Property(e => e.SalesOrgName).HasColumnName("Sales_Org_Name");

                entity.Property(e => e.SerialNumber).HasColumnName("Serial_Number");

                entity.Property(e => e.ShipToCity).HasColumnName("Ship_To_City");

                entity.Property(e => e.ShipToCountry).HasColumnName("Ship_To_Country");

                entity.Property(e => e.ShipToCustomer).HasColumnName("Ship_To_Customer");

                entity.Property(e => e.ShipToKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_Key");

                entity.Property(e => e.ShipToStreet1).HasColumnName("Ship_To_Street1");

                entity.Property(e => e.ShipToStreet2).HasColumnName("Ship_To_Street2");

                entity.Property(e => e.ShipToStreet3).HasColumnName("Ship_To_Street3");

                entity.Property(e => e.ShipToStreet4).HasColumnName("Ship_To_Street4");

                entity.Property(e => e.ShipToStreet5).HasColumnName("Ship_To_Street5");

                entity.Property(e => e.SoDate)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Date");

                entity.Property(e => e.SoItem)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Number");

                entity.Property(e => e.SoType).HasColumnName("SO_Type");

                entity.Property(e => e.SoldToCity).HasColumnName("Sold_To_City");

                entity.Property(e => e.SoldToCountry).HasColumnName("Sold_To_Country");

                entity.Property(e => e.SoldToKey).HasColumnName("Sold_To_Key");

                entity.Property(e => e.SoldToName).HasColumnName("Sold_To_Name");

                entity.Property(e => e.SoldToStreet1).HasColumnName("Sold_To_Street1");

                entity.Property(e => e.SoldToStreet2).HasColumnName("Sold_To_Street2");

                entity.Property(e => e.SoldToStreet3).HasColumnName("Sold_To_Street3");

                entity.Property(e => e.SoldToStreet4).HasColumnName("Sold_To_Street4");

                entity.Property(e => e.SoldToStreet5).HasColumnName("Sold_To_Street5");
            });

            modelBuilder.Entity<ShipmentLineSep2016>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ShipmentLine_Sep2016", "dsf");

                entity.Property(e => e.BillToPartyCity).HasColumnName("Bill_To_Party_City");

                entity.Property(e => e.BillToPartyCountry).HasColumnName("Bill_To_Party_Country");

                entity.Property(e => e.BillToPartyKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party_Key");

                entity.Property(e => e.BillToPartyName).HasColumnName("Bill_To_Party_Name");

                entity.Property(e => e.BillToPartyStreet1).HasColumnName("Bill_To_Party_Street1");

                entity.Property(e => e.BillToPartyStreet2).HasColumnName("Bill_To_Party_Street2");

                entity.Property(e => e.BillToPartyStreet3).HasColumnName("Bill_To_Party_Street3");

                entity.Property(e => e.BillToPartyStreet4).HasColumnName("Bill_To_Party_Street4");

                entity.Property(e => e.BillToPartyStreet5).HasColumnName("Bill_To_Party_Street5");

                entity.Property(e => e.CustomerGroup).HasColumnName("Customer_Group");

                entity.Property(e => e.DeliveryDate)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Date");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Item");

                entity.Property(e => e.DeliveryNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Number");

                entity.Property(e => e.DeliveryType).HasColumnName("Delivery_Type");

                entity.Property(e => e.Eccn).HasColumnName("ECCN");

                entity.Property(e => e.EndUserCity).HasColumnName("End_User_City");

                entity.Property(e => e.EndUserCountry).HasColumnName("End_User_Country");

                entity.Property(e => e.EndUserKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_User_Key");

                entity.Property(e => e.EndUserName).HasColumnName("End_User_Name");

                entity.Property(e => e.EndUserStreet1).HasColumnName("End_User_Street1");

                entity.Property(e => e.EndUserStreet2).HasColumnName("End_User_Street2");

                entity.Property(e => e.EndUserStreet3).HasColumnName("End_User_Street3");

                entity.Property(e => e.EndUserStreet4).HasColumnName("End_User_Street4");

                entity.Property(e => e.EndUserStreet5).HasColumnName("End_User_Street5");

                entity.Property(e => e.Hts)
                    .HasMaxLength(50)
                    .HasColumnName("HTS");

                entity.Property(e => e.ListPrice).HasColumnName("List_Price");

                entity.Property(e => e.MaterialOfferingType).HasColumnName("Material_Offering_Type");

                entity.Property(e => e.MaterialType).HasColumnName("Material_Type");

                entity.Property(e => e.NetValue).HasColumnName("Net_Value");

                entity.Property(e => e.PlantKey)
                    .HasMaxLength(50)
                    .HasColumnName("Plant_Key");

                entity.Property(e => e.PlantName).HasColumnName("Plant_Name");

                entity.Property(e => e.PoType).HasColumnName("PO_Type");

                entity.Property(e => e.SalesOrgKey)
                    .HasMaxLength(50)
                    .HasColumnName("Sales_Org_Key");

                entity.Property(e => e.SalesOrgName).HasColumnName("Sales_Org_Name");

                entity.Property(e => e.SerialNumber).HasColumnName("Serial_Number");

                entity.Property(e => e.ShipToCity).HasColumnName("Ship_To_City");

                entity.Property(e => e.ShipToCountry).HasColumnName("Ship_To_Country");

                entity.Property(e => e.ShipToCustomer).HasColumnName("Ship_To_Customer");

                entity.Property(e => e.ShipToKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_Key");

                entity.Property(e => e.ShipToStreet1).HasColumnName("Ship_To_Street1");

                entity.Property(e => e.ShipToStreet2).HasColumnName("Ship_To_Street2");

                entity.Property(e => e.ShipToStreet3).HasColumnName("Ship_To_Street3");

                entity.Property(e => e.ShipToStreet4).HasColumnName("Ship_To_Street4");

                entity.Property(e => e.ShipToStreet5).HasColumnName("Ship_To_Street5");

                entity.Property(e => e.SoDate)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Date");

                entity.Property(e => e.SoItem)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Number");

                entity.Property(e => e.SoType).HasColumnName("SO_Type");

                entity.Property(e => e.SoldToCity).HasColumnName("Sold_To_City");

                entity.Property(e => e.SoldToCountry).HasColumnName("Sold_To_Country");

                entity.Property(e => e.SoldToKey)
                    .HasMaxLength(50)
                    .HasColumnName("Sold_To_Key");

                entity.Property(e => e.SoldToName).HasColumnName("Sold_To_Name");

                entity.Property(e => e.SoldToStreet1).HasColumnName("Sold_To_Street1");

                entity.Property(e => e.SoldToStreet2).HasColumnName("Sold_To_Street2");

                entity.Property(e => e.SoldToStreet3).HasColumnName("Sold_To_Street3");

                entity.Property(e => e.SoldToStreet4).HasColumnName("Sold_To_Street4");

                entity.Property(e => e.SoldToStreet5).HasColumnName("Sold_To_Street5");
            });

            modelBuilder.Entity<ShipmentLineSep2017>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ShipmentLine_Sep2017", "dsf");

                entity.Property(e => e.BillToPartyCity).HasColumnName("Bill_To_Party_City");

                entity.Property(e => e.BillToPartyCountry).HasColumnName("Bill_To_Party_Country");

                entity.Property(e => e.BillToPartyKey).HasColumnName("Bill_To_Party_Key");

                entity.Property(e => e.BillToPartyName).HasColumnName("Bill_To_Party_Name");

                entity.Property(e => e.BillToPartyStreet1).HasColumnName("Bill_To_Party_Street1");

                entity.Property(e => e.BillToPartyStreet2).HasColumnName("Bill_To_Party_Street2");

                entity.Property(e => e.BillToPartyStreet3).HasColumnName("Bill_To_Party_Street3");

                entity.Property(e => e.BillToPartyStreet4).HasColumnName("Bill_To_Party_Street4");

                entity.Property(e => e.BillToPartyStreet5).HasColumnName("Bill_To_Party_Street5");

                entity.Property(e => e.CustomerGroup).HasColumnName("Customer_Group");

                entity.Property(e => e.DeliveryDate)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Date");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Item");

                entity.Property(e => e.DeliveryNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Number");

                entity.Property(e => e.DeliveryType).HasColumnName("Delivery_Type");

                entity.Property(e => e.Eccn).HasColumnName("ECCN");

                entity.Property(e => e.EndUserCity).HasColumnName("End_User_City");

                entity.Property(e => e.EndUserCountry).HasColumnName("End_User_Country");

                entity.Property(e => e.EndUserKey).HasColumnName("End_User_Key");

                entity.Property(e => e.EndUserName).HasColumnName("End_User_Name");

                entity.Property(e => e.EndUserStreet1).HasColumnName("End_User_Street1");

                entity.Property(e => e.EndUserStreet2).HasColumnName("End_User_Street2");

                entity.Property(e => e.EndUserStreet3).HasColumnName("End_User_Street3");

                entity.Property(e => e.EndUserStreet4).HasColumnName("End_User_Street4");

                entity.Property(e => e.EndUserStreet5).HasColumnName("End_User_Street5");

                entity.Property(e => e.Hts)
                    .HasMaxLength(50)
                    .HasColumnName("HTS");

                entity.Property(e => e.ListPrice).HasColumnName("List_Price");

                entity.Property(e => e.MaterialOfferingType).HasColumnName("Material_Offering_Type");

                entity.Property(e => e.MaterialType).HasColumnName("Material_Type");

                entity.Property(e => e.NetValue).HasColumnName("Net_Value");

                entity.Property(e => e.PlantKey)
                    .HasMaxLength(50)
                    .HasColumnName("Plant_Key");

                entity.Property(e => e.PlantName).HasColumnName("Plant_Name");

                entity.Property(e => e.PoType).HasColumnName("PO_Type");

                entity.Property(e => e.SalesOrgKey)
                    .HasMaxLength(50)
                    .HasColumnName("Sales_Org_Key");

                entity.Property(e => e.SalesOrgName).HasColumnName("Sales_Org_Name");

                entity.Property(e => e.SerialNumber).HasColumnName("Serial_Number");

                entity.Property(e => e.ShipToCity).HasColumnName("Ship_To_City");

                entity.Property(e => e.ShipToCountry).HasColumnName("Ship_To_Country");

                entity.Property(e => e.ShipToCustomer).HasColumnName("Ship_To_Customer");

                entity.Property(e => e.ShipToKey).HasColumnName("Ship_To_Key");

                entity.Property(e => e.ShipToStreet1).HasColumnName("Ship_To_Street1");

                entity.Property(e => e.ShipToStreet2).HasColumnName("Ship_To_Street2");

                entity.Property(e => e.ShipToStreet3).HasColumnName("Ship_To_Street3");

                entity.Property(e => e.ShipToStreet4).HasColumnName("Ship_To_Street4");

                entity.Property(e => e.ShipToStreet5).HasColumnName("Ship_To_Street5");

                entity.Property(e => e.SoDate)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Date");

                entity.Property(e => e.SoItem)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Number");

                entity.Property(e => e.SoType).HasColumnName("SO_Type");

                entity.Property(e => e.SoldToCity).HasColumnName("Sold_To_City");

                entity.Property(e => e.SoldToCountry).HasColumnName("Sold_To_Country");

                entity.Property(e => e.SoldToKey).HasColumnName("Sold_To_Key");

                entity.Property(e => e.SoldToName).HasColumnName("Sold_To_Name");

                entity.Property(e => e.SoldToStreet1).HasColumnName("Sold_To_Street1");

                entity.Property(e => e.SoldToStreet2).HasColumnName("Sold_To_Street2");

                entity.Property(e => e.SoldToStreet3).HasColumnName("Sold_To_Street3");

                entity.Property(e => e.SoldToStreet4).HasColumnName("Sold_To_Street4");

                entity.Property(e => e.SoldToStreet5).HasColumnName("Sold_To_Street5");
            });

            modelBuilder.Entity<ShipmentLinesApr2018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ShipmentLines_apr2018", "dsf");

                entity.Property(e => e.BillToPartyCity)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party_City");

                entity.Property(e => e.BillToPartyCountry)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party_Country");

                entity.Property(e => e.BillToPartyKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party_Key");

                entity.Property(e => e.BillToPartyName)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party_Name");

                entity.Property(e => e.BillToPartyStreet1)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party_Street1");

                entity.Property(e => e.BillToPartyStreet2)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party_Street2");

                entity.Property(e => e.BillToPartyStreet3)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party_Street3");

                entity.Property(e => e.BillToPartyStreet4)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party_Street4");

                entity.Property(e => e.BillToPartyStreet5)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party_Street5");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(50)
                    .HasColumnName("Customer_Group");

                entity.Property(e => e.DeliveryDate)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Date");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Item");

                entity.Property(e => e.DeliveryNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Number");

                entity.Property(e => e.DeliveryType)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Type");

                entity.Property(e => e.Eccn)
                    .HasMaxLength(50)
                    .HasColumnName("ECCN");

                entity.Property(e => e.EndUserCity)
                    .HasMaxLength(50)
                    .HasColumnName("End_User_City");

                entity.Property(e => e.EndUserCountry)
                    .HasMaxLength(50)
                    .HasColumnName("End_User_Country");

                entity.Property(e => e.EndUserKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_User_Key");

                entity.Property(e => e.EndUserName)
                    .HasMaxLength(250)
                    .HasColumnName("End_User_Name");

                entity.Property(e => e.EndUserStreet1)
                    .HasMaxLength(250)
                    .HasColumnName("End_User_Street1");

                entity.Property(e => e.EndUserStreet2)
                    .HasMaxLength(250)
                    .HasColumnName("End_User_Street2");

                entity.Property(e => e.EndUserStreet3)
                    .HasMaxLength(250)
                    .HasColumnName("End_User_Street3");

                entity.Property(e => e.EndUserStreet4)
                    .HasMaxLength(250)
                    .HasColumnName("End_User_Street4");

                entity.Property(e => e.EndUserStreet5)
                    .HasMaxLength(250)
                    .HasColumnName("End_User_Street5");

                entity.Property(e => e.Hts)
                    .HasMaxLength(50)
                    .HasColumnName("HTS");

                entity.Property(e => e.ListPrice)
                    .HasMaxLength(50)
                    .HasColumnName("List_Price");

                entity.Property(e => e.Material).HasMaxLength(50);

                entity.Property(e => e.MaterialOfferingType)
                    .HasMaxLength(50)
                    .HasColumnName("Material_Offering_Type");

                entity.Property(e => e.MaterialType)
                    .HasMaxLength(50)
                    .HasColumnName("Material_Type");

                entity.Property(e => e.NetValue)
                    .HasMaxLength(50)
                    .HasColumnName("Net_Value");

                entity.Property(e => e.PlantKey)
                    .HasMaxLength(50)
                    .HasColumnName("Plant_Key");

                entity.Property(e => e.PlantName)
                    .HasMaxLength(250)
                    .HasColumnName("Plant_Name");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("PO_Type");

                entity.Property(e => e.Quantity).HasMaxLength(50);

                entity.Property(e => e.SalesOrgKey)
                    .HasMaxLength(50)
                    .HasColumnName("Sales_Org_Key");

                entity.Property(e => e.SalesOrgName)
                    .HasMaxLength(250)
                    .HasColumnName("Sales_Org_Name");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Serial_Number");

                entity.Property(e => e.ShipToCity)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_City");

                entity.Property(e => e.ShipToCountry)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_Country");

                entity.Property(e => e.ShipToCustomer)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Customer");

                entity.Property(e => e.ShipToKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_Key");

                entity.Property(e => e.ShipToStreet1)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Street1");

                entity.Property(e => e.ShipToStreet2)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Street2");

                entity.Property(e => e.ShipToStreet3)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Street3");

                entity.Property(e => e.ShipToStreet4)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Street4");

                entity.Property(e => e.ShipToStreet5)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Street5");

                entity.Property(e => e.SoDate)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Date");

                entity.Property(e => e.SoItem)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Number");

                entity.Property(e => e.SoType)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Type");

                entity.Property(e => e.SoldToCity)
                    .HasMaxLength(50)
                    .HasColumnName("Sold_To_City");

                entity.Property(e => e.SoldToCountry)
                    .HasMaxLength(50)
                    .HasColumnName("Sold_To_Country");

                entity.Property(e => e.SoldToKey)
                    .HasMaxLength(50)
                    .HasColumnName("Sold_To_Key");

                entity.Property(e => e.SoldToName)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Name");

                entity.Property(e => e.SoldToStreet1)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Street1");

                entity.Property(e => e.SoldToStreet2)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Street2");

                entity.Property(e => e.SoldToStreet3)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Street3");

                entity.Property(e => e.SoldToStreet4)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Street4");

                entity.Property(e => e.SoldToStreet5)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Street5");
            });

            modelBuilder.Entity<ShipmentLinesAugsep2018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ShipmentLines_augsep2018", "dsf");

                entity.Property(e => e.BillToPartyCity)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party_City");

                entity.Property(e => e.BillToPartyCountry)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party_Country");

                entity.Property(e => e.BillToPartyKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party_Key");

                entity.Property(e => e.BillToPartyName)
                    .HasMaxLength(150)
                    .HasColumnName("Bill_To_Party_Name");

                entity.Property(e => e.BillToPartyStreet1)
                    .HasMaxLength(150)
                    .HasColumnName("Bill_To_Party_Street1");

                entity.Property(e => e.BillToPartyStreet2)
                    .HasMaxLength(150)
                    .HasColumnName("Bill_To_Party_Street2");

                entity.Property(e => e.BillToPartyStreet3)
                    .HasMaxLength(150)
                    .HasColumnName("Bill_To_Party_Street3");

                entity.Property(e => e.BillToPartyStreet4)
                    .HasMaxLength(150)
                    .HasColumnName("Bill_To_Party_Street4");

                entity.Property(e => e.BillToPartyStreet5)
                    .HasMaxLength(150)
                    .HasColumnName("Bill_To_Party_Street5");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(50)
                    .HasColumnName("Customer_Group");

                entity.Property(e => e.DeliveryDate)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Date");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Item");

                entity.Property(e => e.DeliveryNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Number");

                entity.Property(e => e.DeliveryType)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Type");

                entity.Property(e => e.Eccn)
                    .HasMaxLength(50)
                    .HasColumnName("ECCN");

                entity.Property(e => e.EndUserCity)
                    .HasMaxLength(50)
                    .HasColumnName("End_User_City");

                entity.Property(e => e.EndUserCountry)
                    .HasMaxLength(50)
                    .HasColumnName("End_User_Country");

                entity.Property(e => e.EndUserKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_User_Key");

                entity.Property(e => e.EndUserName)
                    .HasMaxLength(150)
                    .HasColumnName("End_User_Name");

                entity.Property(e => e.EndUserStreet1)
                    .HasMaxLength(150)
                    .HasColumnName("End_User_Street1");

                entity.Property(e => e.EndUserStreet2)
                    .HasMaxLength(150)
                    .HasColumnName("End_User_Street2");

                entity.Property(e => e.EndUserStreet3)
                    .HasMaxLength(150)
                    .HasColumnName("End_User_Street3");

                entity.Property(e => e.EndUserStreet4)
                    .HasMaxLength(150)
                    .HasColumnName("End_User_Street4");

                entity.Property(e => e.EndUserStreet5)
                    .HasMaxLength(150)
                    .HasColumnName("End_User_Street5");

                entity.Property(e => e.Hts)
                    .HasMaxLength(50)
                    .HasColumnName("HTS");

                entity.Property(e => e.ListPrice)
                    .HasMaxLength(50)
                    .HasColumnName("List_Price");

                entity.Property(e => e.Material).HasMaxLength(50);

                entity.Property(e => e.MaterialOfferingType)
                    .HasMaxLength(50)
                    .HasColumnName("Material_Offering_Type");

                entity.Property(e => e.MaterialType)
                    .HasMaxLength(50)
                    .HasColumnName("Material_Type");

                entity.Property(e => e.NetValue)
                    .HasMaxLength(50)
                    .HasColumnName("Net_Value");

                entity.Property(e => e.PlantKey)
                    .HasMaxLength(50)
                    .HasColumnName("Plant_Key");

                entity.Property(e => e.PlantName)
                    .HasMaxLength(150)
                    .HasColumnName("Plant_Name");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("PO_Type");

                entity.Property(e => e.Quantity).HasMaxLength(50);

                entity.Property(e => e.SalesOrgKey)
                    .HasMaxLength(50)
                    .HasColumnName("Sales_Org_Key");

                entity.Property(e => e.SalesOrgName)
                    .HasMaxLength(150)
                    .HasColumnName("Sales_Org_Name");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Serial_Number");

                entity.Property(e => e.ShipToCity)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_City");

                entity.Property(e => e.ShipToCountry)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_Country");

                entity.Property(e => e.ShipToKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_Key");

                entity.Property(e => e.ShipToName)
                    .HasMaxLength(150)
                    .HasColumnName("Ship_To_Name");

                entity.Property(e => e.ShipToStreet1)
                    .HasMaxLength(150)
                    .HasColumnName("Ship_To_Street1");

                entity.Property(e => e.ShipToStreet2)
                    .HasMaxLength(150)
                    .HasColumnName("Ship_To_Street2");

                entity.Property(e => e.ShipToStreet3)
                    .HasMaxLength(150)
                    .HasColumnName("Ship_To_Street3");

                entity.Property(e => e.ShipToStreet4)
                    .HasMaxLength(150)
                    .HasColumnName("Ship_To_Street4");

                entity.Property(e => e.ShipToStreet5)
                    .HasMaxLength(150)
                    .HasColumnName("Ship_To_Street5");

                entity.Property(e => e.SoDate)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Date");

                entity.Property(e => e.SoItem)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Number");

                entity.Property(e => e.SoType)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Type");

                entity.Property(e => e.SoldToCity)
                    .HasMaxLength(50)
                    .HasColumnName("Sold_To_City");

                entity.Property(e => e.SoldToCountry)
                    .HasMaxLength(50)
                    .HasColumnName("Sold_To_Country");

                entity.Property(e => e.SoldToKey)
                    .HasMaxLength(150)
                    .HasColumnName("Sold_To_Key");

                entity.Property(e => e.SoldToName)
                    .HasMaxLength(150)
                    .HasColumnName("Sold_To_Name");

                entity.Property(e => e.SoldToStreet1)
                    .HasMaxLength(150)
                    .HasColumnName("Sold_To_Street1");

                entity.Property(e => e.SoldToStreet2)
                    .HasMaxLength(150)
                    .HasColumnName("Sold_To_Street2");

                entity.Property(e => e.SoldToStreet3)
                    .HasMaxLength(150)
                    .HasColumnName("Sold_To_Street3");

                entity.Property(e => e.SoldToStreet4)
                    .HasMaxLength(150)
                    .HasColumnName("Sold_To_Street4");

                entity.Property(e => e.SoldToStreet5)
                    .HasMaxLength(50)
                    .HasColumnName("Sold_To_Street5");
            });

            modelBuilder.Entity<ShipmentLinesFeb2018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ShipmentLines_feb2018", "dsf");

                entity.Property(e => e.BillToPartyCity)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party_City");

                entity.Property(e => e.BillToPartyCountry)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party_Country");

                entity.Property(e => e.BillToPartyKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party_Key");

                entity.Property(e => e.BillToPartyName)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party_Name");

                entity.Property(e => e.BillToPartyStreet1)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party_Street1");

                entity.Property(e => e.BillToPartyStreet2)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party_Street2");

                entity.Property(e => e.BillToPartyStreet3)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party_Street3");

                entity.Property(e => e.BillToPartyStreet4)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party_Street4");

                entity.Property(e => e.BillToPartyStreet5)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party_Street5");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(50)
                    .HasColumnName("Customer_Group");

                entity.Property(e => e.DeliveryDate)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Date");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Item");

                entity.Property(e => e.DeliveryNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Number");

                entity.Property(e => e.DeliveryType)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Type");

                entity.Property(e => e.Eccn)
                    .HasMaxLength(50)
                    .HasColumnName("ECCN");

                entity.Property(e => e.EndUserCity)
                    .HasMaxLength(50)
                    .HasColumnName("End_User_City");

                entity.Property(e => e.EndUserCountry)
                    .HasMaxLength(50)
                    .HasColumnName("End_User_Country");

                entity.Property(e => e.EndUserKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_User_Key");

                entity.Property(e => e.EndUserName)
                    .HasMaxLength(250)
                    .HasColumnName("End_User_Name");

                entity.Property(e => e.EndUserStreet1)
                    .HasMaxLength(250)
                    .HasColumnName("End_User_Street1");

                entity.Property(e => e.EndUserStreet2)
                    .HasMaxLength(250)
                    .HasColumnName("End_User_Street2");

                entity.Property(e => e.EndUserStreet3)
                    .HasMaxLength(250)
                    .HasColumnName("End_User_Street3");

                entity.Property(e => e.EndUserStreet4)
                    .HasMaxLength(250)
                    .HasColumnName("End_User_Street4");

                entity.Property(e => e.EndUserStreet5)
                    .HasMaxLength(250)
                    .HasColumnName("End_User_Street5");

                entity.Property(e => e.Hts)
                    .HasMaxLength(50)
                    .HasColumnName("HTS");

                entity.Property(e => e.ListPrice)
                    .HasMaxLength(50)
                    .HasColumnName("List_Price");

                entity.Property(e => e.Material).HasMaxLength(50);

                entity.Property(e => e.MaterialOfferingType)
                    .HasMaxLength(50)
                    .HasColumnName("Material_Offering_Type");

                entity.Property(e => e.MaterialType)
                    .HasMaxLength(50)
                    .HasColumnName("Material_Type");

                entity.Property(e => e.NetValue)
                    .HasMaxLength(50)
                    .HasColumnName("Net_Value");

                entity.Property(e => e.PlantKey)
                    .HasMaxLength(50)
                    .HasColumnName("Plant_Key");

                entity.Property(e => e.PlantName)
                    .HasMaxLength(50)
                    .HasColumnName("Plant_Name");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("PO_Type");

                entity.Property(e => e.Quantity).HasMaxLength(50);

                entity.Property(e => e.SalesOrgKey)
                    .HasMaxLength(50)
                    .HasColumnName("Sales_Org_Key");

                entity.Property(e => e.SalesOrgName)
                    .HasMaxLength(250)
                    .HasColumnName("Sales_Org_Name");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Serial_Number");

                entity.Property(e => e.ShipToCity)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_City");

                entity.Property(e => e.ShipToCountry)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_Country");

                entity.Property(e => e.ShipToCustomer)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Customer");

                entity.Property(e => e.ShipToKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_Key");

                entity.Property(e => e.ShipToStreet1)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Street1");

                entity.Property(e => e.ShipToStreet2)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Street2");

                entity.Property(e => e.ShipToStreet3)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Street3");

                entity.Property(e => e.ShipToStreet4)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Street4");

                entity.Property(e => e.ShipToStreet5)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Street5");

                entity.Property(e => e.SoDate)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Date");

                entity.Property(e => e.SoItem)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Number");

                entity.Property(e => e.SoType)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Type");

                entity.Property(e => e.SoldToCity)
                    .HasMaxLength(50)
                    .HasColumnName("Sold_To_City");

                entity.Property(e => e.SoldToCountry)
                    .HasMaxLength(50)
                    .HasColumnName("Sold_To_Country");

                entity.Property(e => e.SoldToKey)
                    .HasMaxLength(50)
                    .HasColumnName("Sold_To_Key");

                entity.Property(e => e.SoldToName)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Name");

                entity.Property(e => e.SoldToStreet1)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Street1");

                entity.Property(e => e.SoldToStreet2)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Street2");

                entity.Property(e => e.SoldToStreet3)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Street3");

                entity.Property(e => e.SoldToStreet4)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Street4");

                entity.Property(e => e.SoldToStreet5)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Street5");
            });

            modelBuilder.Entity<ShipmentLinesJan2018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ShipmentLines_jan2018", "dsf");

                entity.Property(e => e.BillToPartyCity)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party_City");

                entity.Property(e => e.BillToPartyCountry)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party_Country");

                entity.Property(e => e.BillToPartyKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party_Key");

                entity.Property(e => e.BillToPartyName)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party_Name");

                entity.Property(e => e.BillToPartyStreet1)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party_Street1");

                entity.Property(e => e.BillToPartyStreet2)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party_Street2");

                entity.Property(e => e.BillToPartyStreet3)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party_Street3");

                entity.Property(e => e.BillToPartyStreet4)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party_Street4");

                entity.Property(e => e.BillToPartyStreet5)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party_Street5");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(50)
                    .HasColumnName("Customer_Group");

                entity.Property(e => e.DeliveryDate)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Date");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Item");

                entity.Property(e => e.DeliveryNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Number");

                entity.Property(e => e.DeliveryType)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Type");

                entity.Property(e => e.Eccn)
                    .HasMaxLength(50)
                    .HasColumnName("ECCN");

                entity.Property(e => e.EndUserCity)
                    .HasMaxLength(50)
                    .HasColumnName("End_User_City");

                entity.Property(e => e.EndUserCountry)
                    .HasMaxLength(50)
                    .HasColumnName("End_User_Country");

                entity.Property(e => e.EndUserKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_User_Key");

                entity.Property(e => e.EndUserName)
                    .HasMaxLength(250)
                    .HasColumnName("End_User_Name");

                entity.Property(e => e.EndUserStreet1)
                    .HasMaxLength(250)
                    .HasColumnName("End_User_Street1");

                entity.Property(e => e.EndUserStreet2)
                    .HasMaxLength(250)
                    .HasColumnName("End_User_Street2");

                entity.Property(e => e.EndUserStreet3)
                    .HasMaxLength(250)
                    .HasColumnName("End_User_Street3");

                entity.Property(e => e.EndUserStreet4)
                    .HasMaxLength(250)
                    .HasColumnName("End_User_Street4");

                entity.Property(e => e.EndUserStreet5)
                    .HasMaxLength(250)
                    .HasColumnName("End_User_Street5");

                entity.Property(e => e.Hts)
                    .HasMaxLength(50)
                    .HasColumnName("HTS");

                entity.Property(e => e.ListPrice)
                    .HasMaxLength(50)
                    .HasColumnName("List_Price");

                entity.Property(e => e.Material).HasMaxLength(50);

                entity.Property(e => e.MaterialOfferingType)
                    .HasMaxLength(50)
                    .HasColumnName("Material_Offering_Type");

                entity.Property(e => e.MaterialType)
                    .HasMaxLength(50)
                    .HasColumnName("Material_Type");

                entity.Property(e => e.NetValue)
                    .HasMaxLength(50)
                    .HasColumnName("Net_Value");

                entity.Property(e => e.PlantKey)
                    .HasMaxLength(50)
                    .HasColumnName("Plant_Key");

                entity.Property(e => e.PlantName)
                    .HasMaxLength(50)
                    .HasColumnName("Plant_Name");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("PO_Type");

                entity.Property(e => e.Quantity).HasMaxLength(50);

                entity.Property(e => e.SalesOrgKey)
                    .HasMaxLength(50)
                    .HasColumnName("Sales_Org_Key");

                entity.Property(e => e.SalesOrgName)
                    .HasMaxLength(250)
                    .HasColumnName("Sales_Org_Name");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Serial_Number");

                entity.Property(e => e.ShipToCity)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_City");

                entity.Property(e => e.ShipToCountry)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_Country");

                entity.Property(e => e.ShipToCustomer)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Customer");

                entity.Property(e => e.ShipToKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_Key");

                entity.Property(e => e.ShipToStreet1)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Street1");

                entity.Property(e => e.ShipToStreet2)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Street2");

                entity.Property(e => e.ShipToStreet3)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Street3");

                entity.Property(e => e.ShipToStreet4)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Street4");

                entity.Property(e => e.ShipToStreet5)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Street5");

                entity.Property(e => e.SoDate)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Date");

                entity.Property(e => e.SoItem)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Number");

                entity.Property(e => e.SoType)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Type");

                entity.Property(e => e.SoldToCity)
                    .HasMaxLength(50)
                    .HasColumnName("Sold_To_City");

                entity.Property(e => e.SoldToCountry)
                    .HasMaxLength(50)
                    .HasColumnName("Sold_To_Country");

                entity.Property(e => e.SoldToKey)
                    .HasMaxLength(50)
                    .HasColumnName("Sold_To_Key");

                entity.Property(e => e.SoldToName)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Name");

                entity.Property(e => e.SoldToStreet1)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Street1");

                entity.Property(e => e.SoldToStreet2)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Street2");

                entity.Property(e => e.SoldToStreet3)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Street3");

                entity.Property(e => e.SoldToStreet4)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Street4");

                entity.Property(e => e.SoldToStreet5)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Street5");
            });

            modelBuilder.Entity<ShipmentLinesJunjul2018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ShipmentLines_junjul2018", "dsf");

                entity.Property(e => e.BillToPartyCity)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party_City");

                entity.Property(e => e.BillToPartyCountry)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party_Country");

                entity.Property(e => e.BillToPartyKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party_Key");

                entity.Property(e => e.BillToPartyName)
                    .HasMaxLength(150)
                    .HasColumnName("Bill_To_Party_Name");

                entity.Property(e => e.BillToPartyStreet1)
                    .HasMaxLength(150)
                    .HasColumnName("Bill_To_Party_Street1");

                entity.Property(e => e.BillToPartyStreet2)
                    .HasMaxLength(150)
                    .HasColumnName("Bill_To_Party_Street2");

                entity.Property(e => e.BillToPartyStreet3)
                    .HasMaxLength(150)
                    .HasColumnName("Bill_To_Party_Street3");

                entity.Property(e => e.BillToPartyStreet4)
                    .HasMaxLength(150)
                    .HasColumnName("Bill_To_Party_Street4");

                entity.Property(e => e.BillToPartyStreet5)
                    .HasMaxLength(150)
                    .HasColumnName("Bill_To_Party_Street5");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(50)
                    .HasColumnName("Customer_Group");

                entity.Property(e => e.DeliveryDate)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Date");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Item");

                entity.Property(e => e.DeliveryNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Number");

                entity.Property(e => e.DeliveryType)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Type");

                entity.Property(e => e.Eccn)
                    .HasMaxLength(50)
                    .HasColumnName("ECCN");

                entity.Property(e => e.EndUserCity)
                    .HasMaxLength(50)
                    .HasColumnName("End_User_City");

                entity.Property(e => e.EndUserCountry)
                    .HasMaxLength(50)
                    .HasColumnName("End_User_Country");

                entity.Property(e => e.EndUserKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_User_Key");

                entity.Property(e => e.EndUserName)
                    .HasMaxLength(150)
                    .HasColumnName("End_User_Name");

                entity.Property(e => e.EndUserStreet1)
                    .HasMaxLength(150)
                    .HasColumnName("End_User_Street1");

                entity.Property(e => e.EndUserStreet2)
                    .HasMaxLength(150)
                    .HasColumnName("End_User_Street2");

                entity.Property(e => e.EndUserStreet3)
                    .HasMaxLength(150)
                    .HasColumnName("End_User_Street3");

                entity.Property(e => e.EndUserStreet4)
                    .HasMaxLength(150)
                    .HasColumnName("End_User_Street4");

                entity.Property(e => e.EndUserStreet5)
                    .HasMaxLength(150)
                    .HasColumnName("End_User_Street5");

                entity.Property(e => e.Hts)
                    .HasMaxLength(50)
                    .HasColumnName("HTS");

                entity.Property(e => e.ListPrice)
                    .HasMaxLength(50)
                    .HasColumnName("List_Price");

                entity.Property(e => e.Material).HasMaxLength(50);

                entity.Property(e => e.MaterialOfferingType)
                    .HasMaxLength(50)
                    .HasColumnName("Material_Offering_Type");

                entity.Property(e => e.MaterialType)
                    .HasMaxLength(50)
                    .HasColumnName("Material_Type");

                entity.Property(e => e.NetValue)
                    .HasMaxLength(50)
                    .HasColumnName("Net_Value");

                entity.Property(e => e.PlantKey)
                    .HasMaxLength(50)
                    .HasColumnName("Plant_Key");

                entity.Property(e => e.PlantName)
                    .HasMaxLength(150)
                    .HasColumnName("Plant_Name");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("PO_Type");

                entity.Property(e => e.Quantity).HasMaxLength(50);

                entity.Property(e => e.SalesOrgKey)
                    .HasMaxLength(50)
                    .HasColumnName("Sales_Org_Key");

                entity.Property(e => e.SalesOrgName)
                    .HasMaxLength(150)
                    .HasColumnName("Sales_Org_Name");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Serial_Number");

                entity.Property(e => e.ShipToCity)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_City");

                entity.Property(e => e.ShipToCountry)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_Country");

                entity.Property(e => e.ShipToKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_Key");

                entity.Property(e => e.ShipToName)
                    .HasMaxLength(150)
                    .HasColumnName("Ship_To_Name");

                entity.Property(e => e.ShipToStreet1)
                    .HasMaxLength(150)
                    .HasColumnName("Ship_To_Street1");

                entity.Property(e => e.ShipToStreet2)
                    .HasMaxLength(150)
                    .HasColumnName("Ship_To_Street2");

                entity.Property(e => e.ShipToStreet3)
                    .HasMaxLength(150)
                    .HasColumnName("Ship_To_Street3");

                entity.Property(e => e.ShipToStreet4)
                    .HasMaxLength(150)
                    .HasColumnName("Ship_To_Street4");

                entity.Property(e => e.ShipToStreet5)
                    .HasMaxLength(150)
                    .HasColumnName("Ship_To_Street5");

                entity.Property(e => e.SoDate)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Date");

                entity.Property(e => e.SoItem)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Number");

                entity.Property(e => e.SoType)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Type");

                entity.Property(e => e.SoldToCity)
                    .HasMaxLength(50)
                    .HasColumnName("Sold_To_City");

                entity.Property(e => e.SoldToCountry)
                    .HasMaxLength(50)
                    .HasColumnName("Sold_To_Country");

                entity.Property(e => e.SoldToKey)
                    .HasMaxLength(50)
                    .HasColumnName("Sold_To_Key");

                entity.Property(e => e.SoldToName)
                    .HasMaxLength(150)
                    .HasColumnName("Sold_To_Name");

                entity.Property(e => e.SoldToStreet1)
                    .HasMaxLength(150)
                    .HasColumnName("Sold_To_Street1");

                entity.Property(e => e.SoldToStreet2)
                    .HasMaxLength(150)
                    .HasColumnName("Sold_To_Street2");

                entity.Property(e => e.SoldToStreet3)
                    .HasMaxLength(150)
                    .HasColumnName("Sold_To_Street3");

                entity.Property(e => e.SoldToStreet4)
                    .HasMaxLength(150)
                    .HasColumnName("Sold_To_Street4");

                entity.Property(e => e.SoldToStreet5)
                    .HasMaxLength(150)
                    .HasColumnName("Sold_To_Street5");
            });

            modelBuilder.Entity<ShipmentLinesMar2018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ShipmentLines_mar2018", "dsf");

                entity.Property(e => e.BillToPartyCity)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party_City");

                entity.Property(e => e.BillToPartyCountry)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party_Country");

                entity.Property(e => e.BillToPartyKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party_Key");

                entity.Property(e => e.BillToPartyName)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party_Name");

                entity.Property(e => e.BillToPartyStreet1)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party_Street1");

                entity.Property(e => e.BillToPartyStreet2)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party_Street2");

                entity.Property(e => e.BillToPartyStreet3)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party_Street3");

                entity.Property(e => e.BillToPartyStreet4)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party_Street4");

                entity.Property(e => e.BillToPartyStreet5)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party_Street5");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(50)
                    .HasColumnName("Customer_Group");

                entity.Property(e => e.DeliveryDate)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Date");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Item");

                entity.Property(e => e.DeliveryNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Number");

                entity.Property(e => e.DeliveryType)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Type");

                entity.Property(e => e.Eccn)
                    .HasMaxLength(50)
                    .HasColumnName("ECCN");

                entity.Property(e => e.EndUserCity)
                    .HasMaxLength(50)
                    .HasColumnName("End_User_City");

                entity.Property(e => e.EndUserCountry)
                    .HasMaxLength(50)
                    .HasColumnName("End_User_Country");

                entity.Property(e => e.EndUserKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_User_Key");

                entity.Property(e => e.EndUserName)
                    .HasMaxLength(250)
                    .HasColumnName("End_User_Name");

                entity.Property(e => e.EndUserStreet1)
                    .HasMaxLength(250)
                    .HasColumnName("End_User_Street1");

                entity.Property(e => e.EndUserStreet2)
                    .HasMaxLength(250)
                    .HasColumnName("End_User_Street2");

                entity.Property(e => e.EndUserStreet3)
                    .HasMaxLength(250)
                    .HasColumnName("End_User_Street3");

                entity.Property(e => e.EndUserStreet4)
                    .HasMaxLength(250)
                    .HasColumnName("End_User_Street4");

                entity.Property(e => e.EndUserStreet5)
                    .HasMaxLength(250)
                    .HasColumnName("End_User_Street5");

                entity.Property(e => e.Hts)
                    .HasMaxLength(50)
                    .HasColumnName("HTS");

                entity.Property(e => e.ListPrice)
                    .HasMaxLength(50)
                    .HasColumnName("List_Price");

                entity.Property(e => e.Material).HasMaxLength(50);

                entity.Property(e => e.MaterialOfferingType)
                    .HasMaxLength(50)
                    .HasColumnName("Material_Offering_Type");

                entity.Property(e => e.MaterialType)
                    .HasMaxLength(50)
                    .HasColumnName("Material_Type");

                entity.Property(e => e.NetValue)
                    .HasMaxLength(50)
                    .HasColumnName("Net_Value");

                entity.Property(e => e.PlantKey)
                    .HasMaxLength(50)
                    .HasColumnName("Plant_Key");

                entity.Property(e => e.PlantName)
                    .HasMaxLength(250)
                    .HasColumnName("Plant_Name");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("PO_Type");

                entity.Property(e => e.Quantity).HasMaxLength(50);

                entity.Property(e => e.SalesOrgKey)
                    .HasMaxLength(50)
                    .HasColumnName("Sales_Org_Key");

                entity.Property(e => e.SalesOrgName)
                    .HasMaxLength(250)
                    .HasColumnName("Sales_Org_Name");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Serial_Number");

                entity.Property(e => e.ShipToCity)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_City");

                entity.Property(e => e.ShipToCountry)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_Country");

                entity.Property(e => e.ShipToCustomer)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Customer");

                entity.Property(e => e.ShipToKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_Key");

                entity.Property(e => e.ShipToStreet1)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Street1");

                entity.Property(e => e.ShipToStreet2)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Street2");

                entity.Property(e => e.ShipToStreet3)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Street3");

                entity.Property(e => e.ShipToStreet4)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Street4");

                entity.Property(e => e.ShipToStreet5)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Street5");

                entity.Property(e => e.SoDate)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Date");

                entity.Property(e => e.SoItem)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Number");

                entity.Property(e => e.SoType)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Type");

                entity.Property(e => e.SoldToCity)
                    .HasMaxLength(50)
                    .HasColumnName("Sold_To_City");

                entity.Property(e => e.SoldToCountry)
                    .HasMaxLength(50)
                    .HasColumnName("Sold_To_Country");

                entity.Property(e => e.SoldToKey)
                    .HasMaxLength(50)
                    .HasColumnName("Sold_To_Key");

                entity.Property(e => e.SoldToName)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Name");

                entity.Property(e => e.SoldToStreet1)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Street1");

                entity.Property(e => e.SoldToStreet2)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Street2");

                entity.Property(e => e.SoldToStreet3)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Street3");

                entity.Property(e => e.SoldToStreet4)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Street4");

                entity.Property(e => e.SoldToStreet5)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Street5");
            });

            modelBuilder.Entity<ShipmentLinesMay2018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ShipmentLines_may2018", "dsf");

                entity.Property(e => e.BillToPartyCity)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party_City");

                entity.Property(e => e.BillToPartyCountry)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party_Country");

                entity.Property(e => e.BillToPartyKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party_Key");

                entity.Property(e => e.BillToPartyName)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party_Name");

                entity.Property(e => e.BillToPartyStreet1)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party_Street1");

                entity.Property(e => e.BillToPartyStreet2)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party_Street2");

                entity.Property(e => e.BillToPartyStreet3)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party_Street3");

                entity.Property(e => e.BillToPartyStreet4)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party_Street4");

                entity.Property(e => e.BillToPartyStreet5)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party_Street5");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(50)
                    .HasColumnName("Customer_Group");

                entity.Property(e => e.DeliveryDate)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Date");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Item");

                entity.Property(e => e.DeliveryNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Number");

                entity.Property(e => e.DeliveryType)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Type");

                entity.Property(e => e.Eccn)
                    .HasMaxLength(50)
                    .HasColumnName("ECCN");

                entity.Property(e => e.EndUserCity)
                    .HasMaxLength(50)
                    .HasColumnName("End_User_City");

                entity.Property(e => e.EndUserCountry)
                    .HasMaxLength(50)
                    .HasColumnName("End_User_Country");

                entity.Property(e => e.EndUserKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_User_Key");

                entity.Property(e => e.EndUserName)
                    .HasMaxLength(250)
                    .HasColumnName("End_User_Name");

                entity.Property(e => e.EndUserStreet1)
                    .HasMaxLength(250)
                    .HasColumnName("End_User_Street1");

                entity.Property(e => e.EndUserStreet2)
                    .HasMaxLength(250)
                    .HasColumnName("End_User_Street2");

                entity.Property(e => e.EndUserStreet3)
                    .HasMaxLength(250)
                    .HasColumnName("End_User_Street3");

                entity.Property(e => e.EndUserStreet4)
                    .HasMaxLength(250)
                    .HasColumnName("End_User_Street4");

                entity.Property(e => e.EndUserStreet5)
                    .HasMaxLength(250)
                    .HasColumnName("End_User_Street5");

                entity.Property(e => e.Hts)
                    .HasMaxLength(50)
                    .HasColumnName("HTS");

                entity.Property(e => e.ListPrice)
                    .HasMaxLength(50)
                    .HasColumnName("List_Price");

                entity.Property(e => e.Material).HasMaxLength(50);

                entity.Property(e => e.MaterialOfferingType)
                    .HasMaxLength(50)
                    .HasColumnName("Material_Offering_Type");

                entity.Property(e => e.MaterialType)
                    .HasMaxLength(50)
                    .HasColumnName("Material_Type");

                entity.Property(e => e.NetValue)
                    .HasMaxLength(50)
                    .HasColumnName("Net_Value");

                entity.Property(e => e.PlantKey)
                    .HasMaxLength(50)
                    .HasColumnName("Plant_Key");

                entity.Property(e => e.PlantName)
                    .HasMaxLength(50)
                    .HasColumnName("Plant_Name");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("PO_Type");

                entity.Property(e => e.Quantity).HasMaxLength(50);

                entity.Property(e => e.SalesOrgKey)
                    .HasMaxLength(50)
                    .HasColumnName("Sales_Org_Key");

                entity.Property(e => e.SalesOrgName)
                    .HasMaxLength(250)
                    .HasColumnName("Sales_Org_Name");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Serial_Number");

                entity.Property(e => e.ShipToCity)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_City");

                entity.Property(e => e.ShipToCountry)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_Country");

                entity.Property(e => e.ShipToCustomer)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Customer");

                entity.Property(e => e.ShipToKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_Key");

                entity.Property(e => e.ShipToStreet1)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Street1");

                entity.Property(e => e.ShipToStreet2)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Street2");

                entity.Property(e => e.ShipToStreet3)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Street3");

                entity.Property(e => e.ShipToStreet4)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Street4");

                entity.Property(e => e.ShipToStreet5)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Street5");

                entity.Property(e => e.SoDate)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Date");

                entity.Property(e => e.SoItem)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Number");

                entity.Property(e => e.SoType)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Type");

                entity.Property(e => e.SoldToCity)
                    .HasMaxLength(50)
                    .HasColumnName("Sold_To_City");

                entity.Property(e => e.SoldToCountry)
                    .HasMaxLength(50)
                    .HasColumnName("Sold_To_Country");

                entity.Property(e => e.SoldToKey)
                    .HasMaxLength(50)
                    .HasColumnName("Sold_To_Key");

                entity.Property(e => e.SoldToName)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Name");

                entity.Property(e => e.SoldToStreet1)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Street1");

                entity.Property(e => e.SoldToStreet2)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Street2");

                entity.Property(e => e.SoldToStreet3)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Street3");

                entity.Property(e => e.SoldToStreet4)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Street4");

                entity.Property(e => e.SoldToStreet5)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Street5");
            });

            modelBuilder.Entity<ShipmentLinesOctdec2018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ShipmentLines_octdec2018", "dsf");

                entity.Property(e => e.BillToPartyCity)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party_City");

                entity.Property(e => e.BillToPartyCountry)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party_Country");

                entity.Property(e => e.BillToPartyKey)
                    .HasMaxLength(50)
                    .HasColumnName("Bill_To_Party_Key");

                entity.Property(e => e.BillToPartyName)
                    .HasMaxLength(150)
                    .HasColumnName("Bill_To_Party_Name");

                entity.Property(e => e.BillToPartyStreet1)
                    .HasMaxLength(150)
                    .HasColumnName("Bill_To_Party_Street1");

                entity.Property(e => e.BillToPartyStreet2)
                    .HasMaxLength(150)
                    .HasColumnName("Bill_To_Party_Street2");

                entity.Property(e => e.BillToPartyStreet3)
                    .HasMaxLength(150)
                    .HasColumnName("Bill_To_Party_Street3");

                entity.Property(e => e.BillToPartyStreet4)
                    .HasMaxLength(150)
                    .HasColumnName("Bill_To_Party_Street4");

                entity.Property(e => e.BillToPartyStreet5)
                    .HasMaxLength(150)
                    .HasColumnName("Bill_To_Party_Street5");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(50)
                    .HasColumnName("Customer_Group");

                entity.Property(e => e.DeliveryDate)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Date");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Item");

                entity.Property(e => e.DeliveryNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Number");

                entity.Property(e => e.DeliveryType)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Type");

                entity.Property(e => e.Eccn)
                    .HasMaxLength(50)
                    .HasColumnName("ECCN");

                entity.Property(e => e.EndUserCity)
                    .HasMaxLength(50)
                    .HasColumnName("End_User_City");

                entity.Property(e => e.EndUserCountry)
                    .HasMaxLength(50)
                    .HasColumnName("End_User_Country");

                entity.Property(e => e.EndUserKey)
                    .HasMaxLength(50)
                    .HasColumnName("End_User_Key");

                entity.Property(e => e.EndUserName)
                    .HasMaxLength(150)
                    .HasColumnName("End_User_Name");

                entity.Property(e => e.EndUserStreet1)
                    .HasMaxLength(150)
                    .HasColumnName("End_User_Street1");

                entity.Property(e => e.EndUserStreet2)
                    .HasMaxLength(150)
                    .HasColumnName("End_User_Street2");

                entity.Property(e => e.EndUserStreet3)
                    .HasMaxLength(150)
                    .HasColumnName("End_User_Street3");

                entity.Property(e => e.EndUserStreet4)
                    .HasMaxLength(150)
                    .HasColumnName("End_User_Street4");

                entity.Property(e => e.EndUserStreet5)
                    .HasMaxLength(150)
                    .HasColumnName("End_User_Street5");

                entity.Property(e => e.Hts)
                    .HasMaxLength(50)
                    .HasColumnName("HTS");

                entity.Property(e => e.ListPrice)
                    .HasMaxLength(50)
                    .HasColumnName("List_Price");

                entity.Property(e => e.Material).HasMaxLength(50);

                entity.Property(e => e.MaterialOfferingType)
                    .HasMaxLength(50)
                    .HasColumnName("Material_Offering_Type");

                entity.Property(e => e.MaterialType)
                    .HasMaxLength(50)
                    .HasColumnName("Material_Type");

                entity.Property(e => e.NetValue)
                    .HasMaxLength(50)
                    .HasColumnName("Net_Value");

                entity.Property(e => e.PlantKey)
                    .HasMaxLength(50)
                    .HasColumnName("Plant_Key");

                entity.Property(e => e.PlantName)
                    .HasMaxLength(150)
                    .HasColumnName("Plant_Name");

                entity.Property(e => e.PoType)
                    .HasMaxLength(50)
                    .HasColumnName("PO_Type");

                entity.Property(e => e.Quantity).HasMaxLength(50);

                entity.Property(e => e.SalesOrgKey)
                    .HasMaxLength(50)
                    .HasColumnName("Sales_Org_Key");

                entity.Property(e => e.SalesOrgName)
                    .HasMaxLength(150)
                    .HasColumnName("Sales_Org_Name");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Serial_Number");

                entity.Property(e => e.ShipToCity)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_City");

                entity.Property(e => e.ShipToCountry)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_Country");

                entity.Property(e => e.ShipToKey)
                    .HasMaxLength(50)
                    .HasColumnName("Ship_To_Key");

                entity.Property(e => e.ShipToName)
                    .HasMaxLength(150)
                    .HasColumnName("Ship_To_Name");

                entity.Property(e => e.ShipToStreet1)
                    .HasMaxLength(150)
                    .HasColumnName("Ship_To_Street1");

                entity.Property(e => e.ShipToStreet2)
                    .HasMaxLength(150)
                    .HasColumnName("Ship_To_Street2");

                entity.Property(e => e.ShipToStreet3)
                    .HasMaxLength(150)
                    .HasColumnName("Ship_To_Street3");

                entity.Property(e => e.ShipToStreet4)
                    .HasMaxLength(150)
                    .HasColumnName("Ship_To_Street4");

                entity.Property(e => e.ShipToStreet5)
                    .HasMaxLength(150)
                    .HasColumnName("Ship_To_Street5");

                entity.Property(e => e.SoDate)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Date");

                entity.Property(e => e.SoItem)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Number");

                entity.Property(e => e.SoType)
                    .HasMaxLength(50)
                    .HasColumnName("SO_Type");

                entity.Property(e => e.SoldToCity)
                    .HasMaxLength(50)
                    .HasColumnName("Sold_To_City");

                entity.Property(e => e.SoldToCountry)
                    .HasMaxLength(50)
                    .HasColumnName("Sold_To_Country");

                entity.Property(e => e.SoldToKey)
                    .HasMaxLength(50)
                    .HasColumnName("Sold_To_Key");

                entity.Property(e => e.SoldToName)
                    .HasMaxLength(150)
                    .HasColumnName("Sold_To_Name");

                entity.Property(e => e.SoldToStreet1)
                    .HasMaxLength(150)
                    .HasColumnName("Sold_To_Street1");

                entity.Property(e => e.SoldToStreet2)
                    .HasMaxLength(150)
                    .HasColumnName("Sold_To_Street2");

                entity.Property(e => e.SoldToStreet3)
                    .HasMaxLength(150)
                    .HasColumnName("Sold_To_Street3");

                entity.Property(e => e.SoldToStreet4)
                    .HasMaxLength(150)
                    .HasColumnName("Sold_To_Street4");

                entity.Property(e => e.SoldToStreet5)
                    .HasMaxLength(150)
                    .HasColumnName("Sold_To_Street5");
            });

            modelBuilder.Entity<SnShipmentsQ42017>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("sn_shipments_q42017", "dsf");

                entity.Property(e => e.BillToPartyCity)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party_City");

                entity.Property(e => e.BillToPartyCountry)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party_Country");

                entity.Property(e => e.BillToPartyKey)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party_Key");

                entity.Property(e => e.BillToPartyName)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party_Name");

                entity.Property(e => e.BillToPartyStreet1)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party_Street1");

                entity.Property(e => e.BillToPartyStreet2)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party_Street2");

                entity.Property(e => e.BillToPartyStreet3)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party_Street3");

                entity.Property(e => e.BillToPartyStreet4)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party_Street4");

                entity.Property(e => e.BillToPartyStreet5)
                    .HasMaxLength(250)
                    .HasColumnName("Bill_To_Party_Street5");

                entity.Property(e => e.CustomerGroup)
                    .HasMaxLength(250)
                    .HasColumnName("Customer_Group");

                entity.Property(e => e.DeliveryDate)
                    .HasMaxLength(250)
                    .HasColumnName("Delivery_Date");

                entity.Property(e => e.DeliveryItem)
                    .HasMaxLength(250)
                    .HasColumnName("Delivery_Item");

                entity.Property(e => e.DeliveryNumber)
                    .HasMaxLength(250)
                    .HasColumnName("Delivery_Number");

                entity.Property(e => e.DeliveryType)
                    .HasMaxLength(250)
                    .HasColumnName("Delivery_Type");

                entity.Property(e => e.Dummy)
                    .HasMaxLength(250)
                    .HasColumnName("dummy");

                entity.Property(e => e.Eccn)
                    .HasMaxLength(250)
                    .HasColumnName("ECCN");

                entity.Property(e => e.EndUserCity)
                    .HasMaxLength(250)
                    .HasColumnName("End_User_City");

                entity.Property(e => e.EndUserCountry)
                    .HasMaxLength(250)
                    .HasColumnName("End_User_Country");

                entity.Property(e => e.EndUserKey)
                    .HasMaxLength(250)
                    .HasColumnName("End_User_Key");

                entity.Property(e => e.EndUserName)
                    .HasMaxLength(250)
                    .HasColumnName("End_User_Name");

                entity.Property(e => e.EndUserStreet1)
                    .HasMaxLength(250)
                    .HasColumnName("End_User_Street1");

                entity.Property(e => e.EndUserStreet2)
                    .HasMaxLength(250)
                    .HasColumnName("End_User_Street2");

                entity.Property(e => e.EndUserStreet3)
                    .HasMaxLength(250)
                    .HasColumnName("End_User_Street3");

                entity.Property(e => e.EndUserStreet4)
                    .HasMaxLength(250)
                    .HasColumnName("End_User_Street4");

                entity.Property(e => e.EndUserStreet5)
                    .HasMaxLength(250)
                    .HasColumnName("End_User_Street5");

                entity.Property(e => e.Hts)
                    .HasMaxLength(250)
                    .HasColumnName("HTS");

                entity.Property(e => e.ListPrice)
                    .HasMaxLength(250)
                    .HasColumnName("List_Price");

                entity.Property(e => e.Material).HasMaxLength(250);

                entity.Property(e => e.MaterialOfferingType)
                    .HasMaxLength(250)
                    .HasColumnName("Material_Offering_Type");

                entity.Property(e => e.MaterialType)
                    .HasMaxLength(250)
                    .HasColumnName("Material_Type");

                entity.Property(e => e.NetValue)
                    .HasMaxLength(250)
                    .HasColumnName("Net_Value");

                entity.Property(e => e.PlantKey)
                    .HasMaxLength(250)
                    .HasColumnName("Plant_Key");

                entity.Property(e => e.PlantName)
                    .HasMaxLength(250)
                    .HasColumnName("Plant_Name");

                entity.Property(e => e.PoType)
                    .HasMaxLength(250)
                    .HasColumnName("PO_Type");

                entity.Property(e => e.Quantity).HasMaxLength(250);

                entity.Property(e => e.SalesOrgKey)
                    .HasMaxLength(250)
                    .HasColumnName("Sales_Org_Key");

                entity.Property(e => e.SalesOrgName)
                    .HasMaxLength(250)
                    .HasColumnName("Sales_Org_Name");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(250)
                    .HasColumnName("Serial_Number");

                entity.Property(e => e.ShipToCity)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_City");

                entity.Property(e => e.ShipToCountry)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Country");

                entity.Property(e => e.ShipToCustomer)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Customer");

                entity.Property(e => e.ShipToKey)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Key");

                entity.Property(e => e.ShipToStreet1)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Street1");

                entity.Property(e => e.ShipToStreet2)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Street2");

                entity.Property(e => e.ShipToStreet3)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Street3");

                entity.Property(e => e.ShipToStreet4)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Street4");

                entity.Property(e => e.ShipToStreet5)
                    .HasMaxLength(250)
                    .HasColumnName("Ship_To_Street5");

                entity.Property(e => e.SoDate)
                    .HasMaxLength(250)
                    .HasColumnName("SO_Date");

                entity.Property(e => e.SoItem)
                    .HasMaxLength(250)
                    .HasColumnName("SO_Item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(250)
                    .HasColumnName("SO_Number");

                entity.Property(e => e.SoType)
                    .HasMaxLength(250)
                    .HasColumnName("SO_Type");

                entity.Property(e => e.SoldToCity)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_City");

                entity.Property(e => e.SoldToCountry)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Country");

                entity.Property(e => e.SoldToKey)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Key");

                entity.Property(e => e.SoldToName)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Name");

                entity.Property(e => e.SoldToStreet1)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Street1");

                entity.Property(e => e.SoldToStreet2)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Street2");

                entity.Property(e => e.SoldToStreet3)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Street3");

                entity.Property(e => e.SoldToStreet4)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Street4");

                entity.Property(e => e.SoldToStreet5)
                    .HasMaxLength(250)
                    .HasColumnName("Sold_To_Street5");
            });

            modelBuilder.Entity<SnowflakeToSql>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("snowflake_to_sql");

                entity.HasIndex(e => e.Index, "ix_snowflake_to_sql_index");

                entity.Property(e => e.CAcctbal).HasColumnName("c_acctbal");

                entity.Property(e => e.CAddress)
                    .IsUnicode(false)
                    .HasColumnName("c_address");

                entity.Property(e => e.CComment)
                    .IsUnicode(false)
                    .HasColumnName("c_comment");

                entity.Property(e => e.CCustkey).HasColumnName("c_custkey");

                entity.Property(e => e.CMktsegment)
                    .IsUnicode(false)
                    .HasColumnName("c_mktsegment");

                entity.Property(e => e.CName)
                    .IsUnicode(false)
                    .HasColumnName("c_name");

                entity.Property(e => e.CNationkey).HasColumnName("c_nationkey");

                entity.Property(e => e.CPhone)
                    .IsUnicode(false)
                    .HasColumnName("c_phone");

                entity.Property(e => e.Index).HasColumnName("index");
            });

            modelBuilder.Entity<SoResellerAm2016>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("so_reseller_am_2016", "dsf");

                entity.Property(e => e.EmployeeResponsibleCountryKey).HasColumnName("Employee_Responsible___Country__Key_");

                entity.Property(e => e.EmployeeResponsibleLongText).HasColumnName("Employee_Responsible___Long_Text");

                entity.Property(e => e.EndCustomerGsaFlagText).HasColumnName("End_Customer___GSA_Flag__Text_");

                entity.Property(e => e.EndCustomerPartnerLevelText).HasColumnName("End_Customer___Partner_Level__Text_");

                entity.Property(e => e.OrderIdKey)
                    .HasMaxLength(50)
                    .HasColumnName("Order_ID___Key");

                entity.Property(e => e.ResellerBasDistrictText).HasColumnName("Reseller___BAS__District__Text_");

                entity.Property(e => e.ResellerCountryKey).HasColumnName("Reseller___Country__Key_");

                entity.Property(e => e.ResellerGsaFlagText).HasColumnName("Reseller___GSA_Flag__Text_");

                entity.Property(e => e.ResellerKey).HasColumnName("Reseller___Key");

                entity.Property(e => e.ResellerLongText).HasColumnName("Reseller___Long_Text");

                entity.Property(e => e.ResellerPartnerLevelKey).HasColumnName("Reseller___Partner_Level__Key_");

                entity.Property(e => e.SoldToPartyGsaFlagText).HasColumnName("Sold_To_Party___GSA_Flag__Text_");

                entity.Property(e => e.TransactionCreatedKey).HasColumnName("Transaction_Created___Key");
            });

            modelBuilder.Entity<SoResellerAm2017>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("so_reseller_am_2017", "dsf");

                entity.Property(e => e.AccountManager).HasColumnName("Account_Manager");

                entity.Property(e => e.EmployeeResponsibleCountryKey).HasColumnName("Employee_Responsible___Country__Key_");

                entity.Property(e => e.EndCustomerGsaFlagText).HasColumnName("End_Customer___GSA_Flag__Text_");

                entity.Property(e => e.EndCustomerPartnerLevelText).HasColumnName("End_Customer___Partner_Level__Text_");

                entity.Property(e => e.OrderIdKey)
                    .HasMaxLength(50)
                    .HasColumnName("Order_ID___Key");

                entity.Property(e => e.ResellerBasDistrictText).HasColumnName("Reseller___BAS__District__Text_");

                entity.Property(e => e.ResellerCountryKey).HasColumnName("Reseller___Country__Key_");

                entity.Property(e => e.ResellerGsaFlagText).HasColumnName("Reseller___GSA_Flag__Text_");

                entity.Property(e => e.ResellerKey).HasColumnName("Reseller___Key");

                entity.Property(e => e.ResellerLongText).HasColumnName("Reseller___Long_Text");

                entity.Property(e => e.ResellerPartnerLevelKey).HasColumnName("Reseller___Partner_Level__Key_");

                entity.Property(e => e.SoldToPartyGsaFlagText).HasColumnName("Sold_To_Party___GSA_Flag__Text_");

                entity.Property(e => e.TransactionCreatedKey).HasColumnName("Transaction_Created___Key");
            });

            modelBuilder.Entity<SoResellerAmFebmay2018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("so_reseller_am_febmay2018", "dsf");

                entity.Property(e => e.EmployeeResponsibleCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("Employee_Responsible___Country__Key_");

                entity.Property(e => e.EmployeeResponsibleLongText)
                    .HasMaxLength(150)
                    .HasColumnName("Employee_Responsible___Long_Text");

                entity.Property(e => e.EndCustomerGsaFlagText)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___GSA_Flag__Text_");

                entity.Property(e => e.EndCustomerPartnerLevelText)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Partner_Level__Text_");

                entity.Property(e => e.OrderIdKey)
                    .HasMaxLength(50)
                    .HasColumnName("Order_ID___Key");

                entity.Property(e => e.ResellerBasDistrictText)
                    .HasMaxLength(50)
                    .HasColumnName("Reseller___BAS__District__Text_");

                entity.Property(e => e.ResellerCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("Reseller___Country__Key_");

                entity.Property(e => e.ResellerGsaFlagText)
                    .HasMaxLength(50)
                    .HasColumnName("Reseller___GSA_Flag__Text_");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("Reseller___Key");

                entity.Property(e => e.ResellerLongText)
                    .HasMaxLength(250)
                    .HasColumnName("Reseller___Long_Text");

                entity.Property(e => e.ResellerPartnerLevelKey)
                    .HasMaxLength(50)
                    .HasColumnName("Reseller___Partner_Level__Key_");

                entity.Property(e => e.SoldToPartyGsaFlagText)
                    .HasMaxLength(50)
                    .HasColumnName("Sold_To_Party___GSA_Flag__Text_");

                entity.Property(e => e.TransactionCreatedKey)
                    .HasMaxLength(50)
                    .HasColumnName("Transaction_Created___Key");
            });

            modelBuilder.Entity<SoResellerAmJan2018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("so_reseller_am_jan2018", "dsf");

                entity.Property(e => e.EmployeeResponsibleCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("Employee_Responsible___Country__Key_");

                entity.Property(e => e.EmployeeResponsibleLongText)
                    .HasMaxLength(150)
                    .HasColumnName("Employee_Responsible___Long_Text");

                entity.Property(e => e.EndCustomerGsaFlagText)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___GSA_Flag__Text_");

                entity.Property(e => e.EndCustomerPartnerLevelText)
                    .HasMaxLength(50)
                    .HasColumnName("End_Customer___Partner_Level__Text_");

                entity.Property(e => e.OrderIdKey)
                    .HasMaxLength(50)
                    .HasColumnName("Order_ID___Key");

                entity.Property(e => e.ResellerBasDistrictText)
                    .HasMaxLength(50)
                    .HasColumnName("Reseller___BAS__District__Text_");

                entity.Property(e => e.ResellerCountryKey)
                    .HasMaxLength(50)
                    .HasColumnName("Reseller___Country__Key_");

                entity.Property(e => e.ResellerGsaFlagText)
                    .HasMaxLength(50)
                    .HasColumnName("Reseller___GSA_Flag__Text_");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(50)
                    .HasColumnName("Reseller___Key");

                entity.Property(e => e.ResellerLongText)
                    .HasMaxLength(250)
                    .HasColumnName("Reseller___Long_Text");

                entity.Property(e => e.ResellerPartnerLevelKey)
                    .HasMaxLength(50)
                    .HasColumnName("Reseller___Partner_Level__Key_");

                entity.Property(e => e.SoldToPartyGsaFlagText)
                    .HasMaxLength(50)
                    .HasColumnName("Sold_To_Party___GSA_Flag__Text_");

                entity.Property(e => e.TransactionCreatedKey)
                    .HasMaxLength(50)
                    .HasColumnName("Transaction_Created___Key");
            });

            modelBuilder.Entity<SoResellerAmQ42017>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("so_reseller_am_Q42017", "dsf");

                entity.Property(e => e.AccountManager)
                    .HasMaxLength(250)
                    .HasColumnName("account_manager");

                entity.Property(e => e.AccountManagerCountry)
                    .HasMaxLength(250)
                    .HasColumnName("account_manager_country");

                entity.Property(e => e.EndCustomerGsaFlag)
                    .HasMaxLength(250)
                    .HasColumnName("end_customer_gsa_flag");

                entity.Property(e => e.EndCustomerPartnerLevel)
                    .HasMaxLength(250)
                    .HasColumnName("end_customer_partner_level");

                entity.Property(e => e.ResellerCountryCode)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_country_code");

                entity.Property(e => e.ResellerDistrict)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_district");

                entity.Property(e => e.ResellerGsaFlag)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_gsa_flag");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerPartnerLevelKey)
                    .HasMaxLength(250)
                    .HasColumnName("reseller_partner_level_key");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(250)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoldtoPartyGsaFlag)
                    .HasMaxLength(250)
                    .HasColumnName("soldto_party_gsa_flag");

                entity.Property(e => e.TransactionCreated)
                    .HasMaxLength(250)
                    .HasColumnName("transaction_created");
            });

            modelBuilder.Entity<SqlalchemyPo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("sqlalchemy_pos");

                entity.Property(e => e.BilltoPartyCountry)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_country");

                entity.Property(e => e.BilltoPartyDistrict)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_district");

                entity.Property(e => e.BilltoPartyKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_key");

                entity.Property(e => e.BilltoPartyName)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_name");

                entity.Property(e => e.BilltoPartyPostalCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_postal_code");

                entity.Property(e => e.BilltoPartyRegion)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_region");

                entity.Property(e => e.BilltoPartyStreet1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_street1");

                entity.Property(e => e.BilltoPartyStreet2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_street2");

                entity.Property(e => e.BilltoPartyStreet3)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_street3");

                entity.Property(e => e.BilltoPartyStreet4)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_street4");

                entity.Property(e => e.ChannelPartnerKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("channel_partner_key");

                entity.Property(e => e.CiStatus)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("ci_status");

                entity.Property(e => e.ClaimStatus)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("claim_status");

                entity.Property(e => e.DedupId).HasColumnName("dedup_id");

                entity.Property(e => e.DistiCountry)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_country");

                entity.Property(e => e.DistiDistrict)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_district");

                entity.Property(e => e.DistiKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_key");

                entity.Property(e => e.DistiName)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_name");

                entity.Property(e => e.DistiPostalCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_postal_code");

                entity.Property(e => e.DistiRegion)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_region");

                entity.Property(e => e.DistiSales)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_sales");

                entity.Property(e => e.DistiStreet1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_street1");

                entity.Property(e => e.DistiStreet2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_street2");

                entity.Property(e => e.DistiStreet3)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_street3");

                entity.Property(e => e.DistiStreet4)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("disti_street4");

                entity.Property(e => e.DocOrderNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("doc_order_number");

                entity.Property(e => e.EndCustCountry)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_country");

                entity.Property(e => e.EndCustCountryCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustDistrict)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_district");

                entity.Property(e => e.EndCustKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.EndCustPoNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_po_number");

                entity.Property(e => e.EndCustPostalCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_postal_code");

                entity.Property(e => e.EndCustRegion)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_region");

                entity.Property(e => e.EndCustStreet1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_street1");

                entity.Property(e => e.EndCustStreet2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_street2");

                entity.Property(e => e.EndCustStreet3)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_street3");

                entity.Property(e => e.EndCustStreet4)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_street4");

                entity.Property(e => e.ImportDate)
                    .HasColumnType("datetime")
                    .HasColumnName("import_date");

                entity.Property(e => e.ImportId).HasColumnName("import_id");

                entity.Property(e => e.ImportStatus)
                    .HasMaxLength(255)
                    .HasColumnName("import_status");

                entity.Property(e => e.ItemCreatedDate)
                    .HasColumnType("date")
                    .HasColumnName("item_created_date");

                entity.Property(e => e.ItemNumber).HasColumnName("item_number");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.Material)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material");

                entity.Property(e => e.MaterialEccn)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material_eccn");

                entity.Property(e => e.MaterialHts)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material_hts");

                entity.Property(e => e.MaterialKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material_key");

                entity.Property(e => e.MaterialProductCat)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material_product_cat");

                entity.Property(e => e.MaterialType)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material_type");

                entity.Property(e => e.MaterialTypeKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("material_type_key");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.NpSerialNumber)
                    .HasMaxLength(50)
                    .HasColumnName("np_serial_number");

                entity.Property(e => e.ReportedQty)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reported_qty");

                entity.Property(e => e.ResaleShipDate)
                    .HasColumnType("date")
                    .HasColumnName("resale_ship_date");

                entity.Property(e => e.ResellerCountry)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_country");

                entity.Property(e => e.ResellerDistrict)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_district");

                entity.Property(e => e.ResellerKey)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_key");

                entity.Property(e => e.ResellerName)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_name");

                entity.Property(e => e.ResellerPoNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_po_number");

                entity.Property(e => e.ResellerPostalCode)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_postal_code");

                entity.Property(e => e.ResellerStreet1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_street1");

                entity.Property(e => e.ResellerStreet2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_street2");

                entity.Property(e => e.ResellerStreet3)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_street3");

                entity.Property(e => e.ResellerStreet4)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("reseller_street4");

                entity.Property(e => e.SdContractNumber)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("sd_contract_number");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("serial_number");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("so_number");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("transaction_date");

                entity.Property(e => e.TransactionQty)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("transaction_qty");

                entity.Property(e => e.TransmissionNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("transmission_number");
            });

            modelBuilder.Entity<State>(entity =>
            {
                entity.ToTable("State", "HangFire");

                entity.HasIndex(e => e.JobId, "IX_HangFire_State_JobId");

                entity.Property(e => e.CreatedAt).HasColumnType("datetime");

                entity.Property(e => e.Name).HasMaxLength(20);

                entity.Property(e => e.Reason).HasMaxLength(100);

                entity.HasOne(d => d.Job)
                    .WithMany(p => p.States)
                    .HasForeignKey(d => d.JobId)
                    .HasConstraintName("FK_HangFire_State_Job");
            });

            modelBuilder.Entity<StatusCases061218>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("status_cases_061218", "dsf");

                entity.Property(e => e.CaseNumber)
                    .HasMaxLength(255)
                    .HasColumnName("Case Number");

                entity.Property(e => e.Classification).HasMaxLength(255);

                entity.Property(e => e.ClassificationChangeDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Classification Change Date");

                entity.Property(e => e.CompleteDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Complete Date");

                entity.Property(e => e.Country).HasMaxLength(255);

                entity.Property(e => e.DueDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Due Date");

                entity.Property(e => e.Natureofbusiness).HasMaxLength(255);

                entity.Property(e => e.NsFlag)
                    .HasMaxLength(255)
                    .HasColumnName("ns_flag");

                entity.Property(e => e.OrderDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Order Date");

                entity.Property(e => e.PartnerType).HasMaxLength(255);

                entity.Property(e => e.ServiceName)
                    .HasMaxLength(255)
                    .HasColumnName("service_name");

                entity.Property(e => e.ServiceNameStandardized)
                    .HasMaxLength(255)
                    .HasColumnName("service Name Standardized");

                entity.Property(e => e.ServiceStatus)
                    .HasMaxLength(255)
                    .HasColumnName("Service Status");

                entity.Property(e => e.StateName)
                    .HasMaxLength(255)
                    .HasColumnName("STATE_NAME");

                entity.Property(e => e.Theatre).HasMaxLength(255);

                entity.Property(e => e.ThirdPartyCreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("Third Party Created By");

                entity.Property(e => e.ThirdPartyCreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Third party Created Date");

                entity.Property(e => e.ThirdPartyName)
                    .HasMaxLength(255)
                    .HasColumnName("Third Party Name");

                entity.Property(e => e.ThirdPartyType).HasMaxLength(255);

                entity.Property(e => e.Type).HasMaxLength(255);
            });

            modelBuilder.Entity<StatusCases07132018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("status_cases_07132018", "dsf");

                entity.Property(e => e.CaseNumber)
                    .HasMaxLength(255)
                    .HasColumnName("Case Number");

                entity.Property(e => e.CompleteDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Complete Date");

                entity.Property(e => e.Country).HasMaxLength(255);

                entity.Property(e => e.DueDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Due Date");

                entity.Property(e => e.OrderDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Order Date");

                entity.Property(e => e.Reason).HasMaxLength(255);

                entity.Property(e => e.ServiceName)
                    .HasMaxLength(255)
                    .HasColumnName("Service Name");

                entity.Property(e => e.ServiceNameStandardized)
                    .HasMaxLength(255)
                    .HasColumnName("Service Name Standardized");

                entity.Property(e => e.ServiceStatus)
                    .HasMaxLength(255)
                    .HasColumnName("Service Status");

                entity.Property(e => e.ThirdPartyName)
                    .HasMaxLength(255)
                    .HasColumnName("Third Party Name");
            });

            modelBuilder.Entity<StatusCases07242018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("status_cases_07242018", "dsf");

                entity.Property(e => e.CaseNumber)
                    .HasMaxLength(255)
                    .HasColumnName("Case Number");

                entity.Property(e => e.CompleteDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Complete Date");

                entity.Property(e => e.Country).HasMaxLength(255);

                entity.Property(e => e.DueDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Due Date");

                entity.Property(e => e.OrderDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Order Date");

                entity.Property(e => e.Reason).HasMaxLength(255);

                entity.Property(e => e.ServiceName)
                    .HasMaxLength(255)
                    .HasColumnName("Service Name");

                entity.Property(e => e.ServiceNameStandardized)
                    .HasMaxLength(255)
                    .HasColumnName("Service Name Standardized");

                entity.Property(e => e.ServiceStatus)
                    .HasMaxLength(255)
                    .HasColumnName("Service Status");

                entity.Property(e => e.ThirdPartyId).HasColumnName("Third Party Id");

                entity.Property(e => e.ThirdPartyName)
                    .HasMaxLength(255)
                    .HasColumnName("Third Party Name");
            });

            modelBuilder.Entity<StatusCases20180921>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("status_cases_20180921", "dsf");

                entity.Property(e => e.CaseNumber)
                    .HasMaxLength(255)
                    .HasColumnName("Case Number");

                entity.Property(e => e.CompleteDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Complete Date");

                entity.Property(e => e.Country).HasMaxLength(255);

                entity.Property(e => e.DueDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Due Date");

                entity.Property(e => e.OrderDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Order Date");

                entity.Property(e => e.Reason).HasMaxLength(255);

                entity.Property(e => e.ServiceName)
                    .HasMaxLength(255)
                    .HasColumnName("Service Name");

                entity.Property(e => e.ServiceNameStandardized)
                    .HasMaxLength(255)
                    .HasColumnName("Service Name Standardized");

                entity.Property(e => e.ServiceStatus)
                    .HasMaxLength(255)
                    .HasColumnName("Service Status");

                entity.Property(e => e.ThirdPartyId).HasColumnName("Third Party Id");

                entity.Property(e => e.ThirdPartyName)
                    .HasMaxLength(255)
                    .HasColumnName("Third Party Name");
            });

            modelBuilder.Entity<StatusCases20181203>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("status_cases_20181203", "dsf");

                entity.Property(e => e.CaseNumber)
                    .HasMaxLength(255)
                    .HasColumnName("Case Number");

                entity.Property(e => e.CompleteDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Complete Date");

                entity.Property(e => e.Country).HasMaxLength(255);

                entity.Property(e => e.DueDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Due Date");

                entity.Property(e => e.OrderDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Order Date");

                entity.Property(e => e.Reason).HasMaxLength(255);

                entity.Property(e => e.ServiceName)
                    .HasMaxLength(255)
                    .HasColumnName("Service Name");

                entity.Property(e => e.ServiceNameStandardized)
                    .HasMaxLength(255)
                    .HasColumnName("Service Name Standardized");

                entity.Property(e => e.ServiceStatus)
                    .HasMaxLength(255)
                    .HasColumnName("Service Status");

                entity.Property(e => e.ThirdPartyId).HasColumnName("Third Party Id");

                entity.Property(e => e.ThirdPartyName)
                    .HasMaxLength(255)
                    .HasColumnName("Third Party Name");
            });

            modelBuilder.Entity<StatusCasesSr>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("status_cases_sr", "dsf");

                entity.Property(e => e.CaseCreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("Case Created By");

                entity.Property(e => e.CaseNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Case Number");

                entity.Property(e => e.Classification).HasMaxLength(255);

                entity.Property(e => e.ClassificationChangeDate)
                    .HasMaxLength(255)
                    .HasColumnName("Classification Change date");

                entity.Property(e => e.CompleteDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Complete Date");

                entity.Property(e => e.Country).HasMaxLength(255);

                entity.Property(e => e.DistiDvarReseller)
                    .HasMaxLength(255)
                    .HasColumnName("Disti/DVAR/Reseller");

                entity.Property(e => e.DueDate)
                    .HasMaxLength(255)
                    .HasColumnName("Due Date");

                entity.Property(e => e.Natureofbusiness).HasMaxLength(255);

                entity.Property(e => e.OrderDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Order Date");

                entity.Property(e => e.PrimaryContactPerson)
                    .HasMaxLength(255)
                    .HasColumnName("Primary Contact Person");

                entity.Property(e => e.PrimaryContactPersonEmail)
                    .HasMaxLength(255)
                    .HasColumnName("Primary Contact Person email");

                entity.Property(e => e.Reason).HasMaxLength(255);

                entity.Property(e => e.ServiceName)
                    .HasMaxLength(255)
                    .HasColumnName("service Name");

                entity.Property(e => e.ServiceNameStandardized)
                    .HasMaxLength(255)
                    .HasColumnName("service Name Standardized");

                entity.Property(e => e.ServiceStatus)
                    .HasMaxLength(255)
                    .HasColumnName("Service Status");

                entity.Property(e => e.StateName)
                    .HasMaxLength(255)
                    .HasColumnName("STATE NAME");

                entity.Property(e => e.Theatre).HasMaxLength(255);

                entity.Property(e => e.ThirdPartyCreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("Third Party Created By");

                entity.Property(e => e.ThirdPartyCreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Third party Created Date");

                entity.Property(e => e.ThirdPartyName)
                    .HasMaxLength(255)
                    .HasColumnName("Third Party Name");

                entity.Property(e => e.ThirdPartyType).HasMaxLength(255);

                entity.Property(e => e.Type).HasMaxLength(255);
            });

            modelBuilder.Entity<StatusClassification061218>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("status_classification_061218", "dsf");

                entity.Property(e => e.Classification).HasMaxLength(255);

                entity.Property(e => e.ClassificationChangeDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Classification Change date");

                entity.Property(e => e.Country).HasMaxLength(255);

                entity.Property(e => e.Natureofbusiness).HasMaxLength(255);

                entity.Property(e => e.PartnerType).HasMaxLength(255);

                entity.Property(e => e.StateName)
                    .HasMaxLength(255)
                    .HasColumnName("STATE NAME");

                entity.Property(e => e.Theatre).HasMaxLength(255);

                entity.Property(e => e.ThirdPartyName)
                    .HasMaxLength(255)
                    .HasColumnName("Third Party Name");

                entity.Property(e => e.ThirdPartyType).HasMaxLength(255);
            });

            modelBuilder.Entity<StatusClassification07132018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("status_classification_07132018", "dsf");

                entity.Property(e => e.Classification).HasMaxLength(255);

                entity.Property(e => e.ClassificationChangeDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Classification Change Date");

                entity.Property(e => e.Country).HasMaxLength(255);

                entity.Property(e => e.ThirdPartyName)
                    .HasMaxLength(255)
                    .HasColumnName("Third Party Name");
            });

            modelBuilder.Entity<StatusClassification07242018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("status_classification_07242018", "dsf");

                entity.Property(e => e.Classification).HasMaxLength(255);

                entity.Property(e => e.ClassificationChangeDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Classification Change Date");

                entity.Property(e => e.Country).HasMaxLength(255);

                entity.Property(e => e.ThirdPartyId).HasColumnName("Third Party Id");

                entity.Property(e => e.ThirdPartyName)
                    .HasMaxLength(255)
                    .HasColumnName("Third Party Name");
            });

            modelBuilder.Entity<StatusClassification20180921>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("status_classification_20180921", "dsf");

                entity.Property(e => e.Classification).HasMaxLength(255);

                entity.Property(e => e.ClassificationChangeDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Classification Change Date");

                entity.Property(e => e.Country).HasMaxLength(255);

                entity.Property(e => e.ThirdPartyId).HasColumnName("Third Party Id");

                entity.Property(e => e.ThirdPartyName)
                    .HasMaxLength(255)
                    .HasColumnName("Third Party Name");
            });

            modelBuilder.Entity<StatusClassification20181203>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("status_classification_20181203", "dsf");

                entity.Property(e => e.Classification).HasMaxLength(255);

                entity.Property(e => e.ClassificationChangeDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Classification Change Date");

                entity.Property(e => e.Country).HasMaxLength(255);

                entity.Property(e => e.ThirdPartyId).HasColumnName("Third Party Id");

                entity.Property(e => e.ThirdPartyName)
                    .HasMaxLength(255)
                    .HasColumnName("Third Party Name");
            });

            modelBuilder.Entity<StatusClassification20181210>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("status_classification_20181210", "dsf");

                entity.Property(e => e.Classification).HasMaxLength(255);

                entity.Property(e => e.ClassificationChangeDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Classification Change Date");

                entity.Property(e => e.Country).HasMaxLength(255);

                entity.Property(e => e.ThirdPartyId).HasColumnName("Third Party Id");

                entity.Property(e => e.ThirdPartyName)
                    .HasMaxLength(255)
                    .HasColumnName("Third Party Name");
            });

            modelBuilder.Entity<StatusData06252018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("status_data_06252018", "dsf");

                entity.Property(e => e.CaseNumber)
                    .HasMaxLength(50)
                    .HasColumnName("Case Number");

                entity.Property(e => e.Classification).HasMaxLength(255);

                entity.Property(e => e.ClassificationChangeDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Classification Change date");

                entity.Property(e => e.CompleteDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Complete Date");

                entity.Property(e => e.Country).HasMaxLength(255);

                entity.Property(e => e.DueDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Due Date");

                entity.Property(e => e.Natureofbusiness).HasMaxLength(255);

                entity.Property(e => e.Nob)
                    .HasMaxLength(255)
                    .HasColumnName("nob");

                entity.Property(e => e.NsFlag)
                    .HasMaxLength(50)
                    .HasColumnName("ns_flag");

                entity.Property(e => e.OrderDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Order Date");

                entity.Property(e => e.PartnerType).HasMaxLength(255);

                entity.Property(e => e.ServiceName)
                    .HasMaxLength(255)
                    .HasColumnName("service_name");

                entity.Property(e => e.ServiceNameStandardized)
                    .HasMaxLength(255)
                    .HasColumnName("Service Name Standardized");

                entity.Property(e => e.ServiceStatus)
                    .HasMaxLength(255)
                    .HasColumnName("Service Status");

                entity.Property(e => e.StateName)
                    .HasMaxLength(255)
                    .HasColumnName("STATE_NAME");

                entity.Property(e => e.Theatre).HasMaxLength(255);

                entity.Property(e => e.ThirdPartyCreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("Third Party Created By");

                entity.Property(e => e.ThirdPartyCreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Third party Created Date");

                entity.Property(e => e.ThirdPartyName)
                    .HasMaxLength(255)
                    .HasColumnName("Third Party Name");

                entity.Property(e => e.ThirdPartyType).HasMaxLength(255);

                entity.Property(e => e.Type).HasMaxLength(255);
            });

            modelBuilder.Entity<StatusFbc061218>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("status_fbc_061218", "dsf");

                entity.Property(e => e.ApproverEmail)
                    .HasMaxLength(255)
                    .HasColumnName("Approver Email");

                entity.Property(e => e.ApproverName)
                    .HasMaxLength(255)
                    .HasColumnName("Approver Name");

                entity.Property(e => e.ApproverStatus)
                    .HasMaxLength(255)
                    .HasColumnName("Approver Status");

                entity.Property(e => e.Classification).HasMaxLength(255);

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("createdDate");

                entity.Property(e => e.IsSsoUser).HasColumnName("isSsoUser");

                entity.Property(e => e.Natureofbusiness).HasMaxLength(255);

                entity.Property(e => e.ProposerEmail)
                    .HasMaxLength(255)
                    .HasColumnName("Proposer Email");

                entity.Property(e => e.ProposerName)
                    .HasMaxLength(255)
                    .HasColumnName("Proposer Name");

                entity.Property(e => e.ProposerStatus)
                    .HasMaxLength(255)
                    .HasColumnName("Proposer Status");

                entity.Property(e => e.SsoUserId).HasMaxLength(255);

                entity.Property(e => e.Theatre).HasMaxLength(255);

                entity.Property(e => e.ThirdPartyName)
                    .HasMaxLength(255)
                    .HasColumnName("Third Party Name");
            });

            modelBuilder.Entity<StatusFbc07242018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("status_fbc_07242018", "dsf");

                entity.Property(e => e.CaseNumber)
                    .HasMaxLength(255)
                    .HasColumnName("Case Number");

                entity.Property(e => e.CompleteDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Complete Date");

                entity.Property(e => e.Country).HasMaxLength(255);

                entity.Property(e => e.DueDate)
                    .HasMaxLength(255)
                    .HasColumnName("Due Date");

                entity.Property(e => e.F12).HasMaxLength(255);

                entity.Property(e => e.F13).HasMaxLength(255);

                entity.Property(e => e.F14).HasMaxLength(255);

                entity.Property(e => e.OrderDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Order Date");

                entity.Property(e => e.Reason).HasMaxLength(255);

                entity.Property(e => e.ServiceName)
                    .HasMaxLength(255)
                    .HasColumnName("Service Name");

                entity.Property(e => e.ServiceNameStandardized)
                    .HasMaxLength(255)
                    .HasColumnName("Service Name Standardized");

                entity.Property(e => e.ServiceStatus)
                    .HasMaxLength(255)
                    .HasColumnName("Service Status");

                entity.Property(e => e.ThirdPartyId).HasColumnName("Third Party Id");

                entity.Property(e => e.ThirdPartyName)
                    .HasMaxLength(255)
                    .HasColumnName("Third Party Name");
            });

            modelBuilder.Entity<StatusFbc20180921>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("status_fbc_20180921", "dsf");

                entity.Property(e => e.CaseNumber)
                    .HasMaxLength(255)
                    .HasColumnName("Case Number");

                entity.Property(e => e.CompleteDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Complete Date");

                entity.Property(e => e.Country).HasMaxLength(255);

                entity.Property(e => e.DueDate)
                    .HasMaxLength(255)
                    .HasColumnName("Due Date");

                entity.Property(e => e.OrderDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Order Date");

                entity.Property(e => e.Reason).HasMaxLength(255);

                entity.Property(e => e.ServiceName)
                    .HasMaxLength(255)
                    .HasColumnName("Service Name");

                entity.Property(e => e.ServiceNameStandardized)
                    .HasMaxLength(255)
                    .HasColumnName("Service Name Standardized");

                entity.Property(e => e.ServiceStatus)
                    .HasMaxLength(255)
                    .HasColumnName("Service Status");

                entity.Property(e => e.ThirdPartyId).HasColumnName("Third Party Id");

                entity.Property(e => e.ThirdPartyName)
                    .HasMaxLength(255)
                    .HasColumnName("Third Party Name");
            });

            modelBuilder.Entity<StatusNobSr>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("status_nob_sr");

                entity.Property(e => e.Country)
                    .HasMaxLength(100)
                    .HasColumnName("country");

                entity.Property(e => e.NobSr)
                    .HasMaxLength(50)
                    .HasColumnName("nob_sr");

                entity.Property(e => e.ThirdpartyName)
                    .HasMaxLength(100)
                    .HasColumnName("thirdparty_name");
            });

            modelBuilder.Entity<StatusPartner07132018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("status_partner_07132018", "dsf");

                entity.Property(e => e.ClassificationChangeDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Classification Change date");

                entity.Property(e => e.Country).HasMaxLength(255);

                entity.Property(e => e.CurrentClassification)
                    .HasMaxLength(255)
                    .HasColumnName("Current Classification");

                entity.Property(e => e.NatureOfBusiness)
                    .HasMaxLength(255)
                    .HasColumnName("Nature of Business");

                entity.Property(e => e.Reason).HasMaxLength(255);

                entity.Property(e => e.Theatre).HasMaxLength(255);

                entity.Property(e => e.ThirdPartyCreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("Third Party Created By");

                entity.Property(e => e.ThirdPartyCreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Third party Created Date");

                entity.Property(e => e.ThirdPartyName)
                    .HasMaxLength(255)
                    .HasColumnName("Third Party Name");

                entity.Property(e => e.ThirdPartyType).HasMaxLength(255);
            });

            modelBuilder.Entity<StatusPartner07242018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("status_partner_07242018", "dsf");

                entity.Property(e => e.ClassificationChangeDate)
                    .HasMaxLength(255)
                    .HasColumnName("Classification Change date");

                entity.Property(e => e.Country).HasMaxLength(255);

                entity.Property(e => e.CurrentClassification)
                    .HasMaxLength(255)
                    .HasColumnName("Current Classification");

                entity.Property(e => e.Natureofbusiness).HasMaxLength(255);

                entity.Property(e => e.Reason).HasMaxLength(255);

                entity.Property(e => e.Theatre).HasMaxLength(255);

                entity.Property(e => e.ThirdPartyCreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("Third Party Created By");

                entity.Property(e => e.ThirdPartyCreatedDate)
                    .HasMaxLength(255)
                    .HasColumnName("Third party Created Date");

                entity.Property(e => e.ThirdPartyId).HasColumnName("Third Party Id");

                entity.Property(e => e.ThirdPartyName)
                    .HasMaxLength(255)
                    .HasColumnName("Third Party Name");

                entity.Property(e => e.ThirdPartyType).HasMaxLength(255);
            });

            modelBuilder.Entity<StatusPartner20180921>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("status_partner_20180921", "dsf");

                entity.Property(e => e.ClassificationChangeDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Classification Change date");

                entity.Property(e => e.Country).HasMaxLength(255);

                entity.Property(e => e.CurrentClassification)
                    .HasMaxLength(255)
                    .HasColumnName("Current Classification");

                entity.Property(e => e.Natureofbusiness).HasMaxLength(255);

                entity.Property(e => e.Reason).HasMaxLength(255);

                entity.Property(e => e.Theatre).HasMaxLength(255);

                entity.Property(e => e.ThirdPartyCreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("Third Party Created By");

                entity.Property(e => e.ThirdPartyCreatedDate)
                    .HasMaxLength(255)
                    .HasColumnName("Third party Created Date");

                entity.Property(e => e.ThirdPartyId).HasColumnName("Third Party Id");

                entity.Property(e => e.ThirdPartyName)
                    .HasMaxLength(255)
                    .HasColumnName("Third Party Name");

                entity.Property(e => e.ThirdPartyType).HasMaxLength(255);
            });

            modelBuilder.Entity<StatusPartner20180921a>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("status_partner_20180921a", "dsf");

                entity.Property(e => e.ClassificationChangeDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Classification Change date");

                entity.Property(e => e.Country).HasMaxLength(255);

                entity.Property(e => e.CurrentClassification)
                    .HasMaxLength(255)
                    .HasColumnName("Current Classification");

                entity.Property(e => e.Natureofbusiness).HasMaxLength(255);

                entity.Property(e => e.Reason).HasMaxLength(255);

                entity.Property(e => e.Theatre).HasMaxLength(255);

                entity.Property(e => e.ThirdPartyCreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("Third Party Created By");

                entity.Property(e => e.ThirdPartyCreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Third party Created Date");

                entity.Property(e => e.ThirdPartyId).HasColumnName("Third Party Id");

                entity.Property(e => e.ThirdPartyName)
                    .HasMaxLength(255)
                    .HasColumnName("Third Party Name");

                entity.Property(e => e.ThirdPartyType).HasMaxLength(255);
            });

            modelBuilder.Entity<StatusPartner20181203>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("status_partner_20181203", "dsf");

                entity.Property(e => e.ClassificationChangeDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Classification Change date");

                entity.Property(e => e.Country).HasMaxLength(255);

                entity.Property(e => e.CurrentClassification)
                    .HasMaxLength(255)
                    .HasColumnName("Current Classification");

                entity.Property(e => e.Natureofbusiness).HasMaxLength(255);

                entity.Property(e => e.Reason).HasMaxLength(255);

                entity.Property(e => e.Theatre).HasMaxLength(255);

                entity.Property(e => e.ThirdPartyCreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("Third Party Created By");

                entity.Property(e => e.ThirdPartyCreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Third party Created Date");

                entity.Property(e => e.ThirdPartyId).HasColumnName("Third Party Id");

                entity.Property(e => e.ThirdPartyName)
                    .HasMaxLength(255)
                    .HasColumnName("Third Party Name");

                entity.Property(e => e.ThirdPartyType).HasMaxLength(255);
            });

            modelBuilder.Entity<StatusPartnerCases20181210>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("status_partner_cases_20181210", "dsf");

                entity.Property(e => e.CaseNumber)
                    .HasMaxLength(255)
                    .HasColumnName("Case Number");

                entity.Property(e => e.ClassificationChangeDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Classification Change date");

                entity.Property(e => e.CompleteDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Complete Date");

                entity.Property(e => e.Country).HasMaxLength(255);

                entity.Property(e => e.CurrentClassification)
                    .HasMaxLength(255)
                    .HasColumnName("Current Classification");

                entity.Property(e => e.DueDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Due Date");

                entity.Property(e => e.Natureofbusiness).HasMaxLength(255);

                entity.Property(e => e.OrderDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Order Date");

                entity.Property(e => e.Reason).HasMaxLength(255);

                entity.Property(e => e.ServiceName)
                    .HasMaxLength(255)
                    .HasColumnName("Service Name");

                entity.Property(e => e.ServiceNameStandardized)
                    .HasMaxLength(255)
                    .HasColumnName("Service Name Standardized");

                entity.Property(e => e.ServiceStatus)
                    .HasMaxLength(255)
                    .HasColumnName("Service Status");

                entity.Property(e => e.Theatre).HasMaxLength(255);

                entity.Property(e => e.ThirdPartyCreatedBy)
                    .HasMaxLength(255)
                    .HasColumnName("Third Party Created By");

                entity.Property(e => e.ThirdPartyCreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Third party Created Date");

                entity.Property(e => e.ThirdPartyId).HasColumnName("Third Party Id");

                entity.Property(e => e.ThirdPartyName)
                    .HasMaxLength(255)
                    .HasColumnName("Third Party Name");

                entity.Property(e => e.ThirdPartyType).HasMaxLength(255);
            });

            modelBuilder.Entity<StatusQcApac07242018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("status_qc_apac_07242018", "dsf");

                entity.Property(e => e.CaseNumber)
                    .HasMaxLength(255)
                    .HasColumnName("Case Number");

                entity.Property(e => e.CompleteDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Complete Date");

                entity.Property(e => e.Country).HasMaxLength(255);

                entity.Property(e => e.CurrentClassification)
                    .HasMaxLength(255)
                    .HasColumnName("Current Classification");

                entity.Property(e => e.DueDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Due Date");

                entity.Property(e => e.OrderDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Order Date");

                entity.Property(e => e.Reason).HasMaxLength(255);

                entity.Property(e => e.ServiceName)
                    .HasMaxLength(255)
                    .HasColumnName("Service Name");

                entity.Property(e => e.ServiceNameStandardized)
                    .HasMaxLength(255)
                    .HasColumnName("Service Name Standardized");

                entity.Property(e => e.ServiceStatus)
                    .HasMaxLength(255)
                    .HasColumnName("Service Status");

                entity.Property(e => e.Theatre).HasMaxLength(255);

                entity.Property(e => e.ThirdPartyId).HasColumnName("Third Party Id");

                entity.Property(e => e.ThirdPartyName)
                    .HasMaxLength(255)
                    .HasColumnName("Third Party Name");
            });

            modelBuilder.Entity<Svc4ewmd>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("svc_4ewmd", "dev");

                entity.HasIndex(e => e.EndCustName, "svc_ecname");

                entity.Property(e => e.BilltoPartyCountry).HasColumnName("billto_party_country");

                entity.Property(e => e.BilltoPartyDistrict).HasColumnName("billto_party_district");

                entity.Property(e => e.BilltoPartyKey).HasColumnName("billto_party_key");

                entity.Property(e => e.BilltoPartyName).HasColumnName("billto_party_name");

                entity.Property(e => e.ContractCreationDate)
                    .HasColumnType("date")
                    .HasColumnName("contract_creation_date");

                entity.Property(e => e.ContractItemNo).HasColumnName("contract_item_no");

                entity.Property(e => e.ContractLineItemStatus).HasColumnName("contract_line_item_status");

                entity.Property(e => e.ContractNumber).HasColumnName("contract_number");

                entity.Property(e => e.ContractStatus).HasColumnName("contract_status");

                entity.Property(e => e.ContractType).HasColumnName("contract_type");

                entity.Property(e => e.Currency).HasColumnName("currency");

                entity.Property(e => e.DiscountDoNoUse).HasColumnName("discount_do_no_use");

                entity.Property(e => e.EndCustCountryCode).HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustDistrict).HasColumnName("end_cust_district");

                entity.Property(e => e.EndCustKey).HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("end_cust_name");

                entity.Property(e => e.ExtendedListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("extended_list_price");

                entity.Property(e => e.IObjectId).HasColumnName("i_object_id");

                entity.Property(e => e.ImportDate)
                    .HasColumnType("datetime")
                    .HasColumnName("import_date");

                entity.Property(e => e.ImportId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("import_id");

                entity.Property(e => e.ImportStatus)
                    .HasMaxLength(255)
                    .HasColumnName("import_status");

                entity.Property(e => e.InstalledAt).HasColumnName("installed_at");

                entity.Property(e => e.InstalledAtCountry).HasColumnName("installed_at_country");

                entity.Property(e => e.InstalledAtDistrict).HasColumnName("installed_at_district");

                entity.Property(e => e.InstalledAtKey).HasColumnName("installed_at_key");

                entity.Property(e => e.Material).HasColumnName("material");

                entity.Property(e => e.MaterialEccn).HasColumnName("material_eccn");

                entity.Property(e => e.MaterialHts).HasColumnName("material_hts");

                entity.Property(e => e.MaterialKey).HasColumnName("material_key");

                entity.Property(e => e.NetValue)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_value");

                entity.Property(e => e.PayerCountry).HasColumnName("payer_country");

                entity.Property(e => e.PayerDistrict).HasColumnName("payer_district");

                entity.Property(e => e.PayerKey).HasColumnName("payer_key");

                entity.Property(e => e.PayerName).HasColumnName("payer_name");

                entity.Property(e => e.ProductFamily).HasColumnName("product_family");

                entity.Property(e => e.ProductLine).HasColumnName("product_line");

                entity.Property(e => e.SalesOrderAlpha).HasColumnName("sales_order_alpha");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("serial_number");

                entity.Property(e => e.ServiceEndDate)
                    .HasColumnType("date")
                    .HasColumnName("service_end_date");

                entity.Property(e => e.ServiceMaterial).HasColumnName("service_material");

                entity.Property(e => e.ServiceMaterialKey).HasColumnName("service_material_key");

                entity.Property(e => e.ServiceMaterialProductLine).HasColumnName("service_material_product_line");

                entity.Property(e => e.ServiceStartDate)
                    .HasColumnType("date")
                    .HasColumnName("service_start_date");
            });

            modelBuilder.Entity<TEmployee>(entity =>
            {
                entity.ToTable("t_employees");

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("id");

                entity.Property(e => e.Name)
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("name");

                entity.Property(e => e.TextEncrypted)
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("text_encrypted");
            });

            modelBuilder.Entity<TblConsigneeUndertaking>(entity =>
            {
                entity.ToTable("tbl_ConsigneeUndertaking");

                entity.Property(e => e.City).HasMaxLength(100);

                entity.Property(e => e.CompanyName)
                    .HasMaxLength(100)
                    .HasColumnName("Company_Name");

                entity.Property(e => e.Country).HasMaxLength(100);

                entity.Property(e => e.DateSigned)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Date_Signed");

                entity.Property(e => e.Email).HasMaxLength(100);

                entity.Property(e => e.EnvelopeId)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.JobTitle)
                    .HasMaxLength(100)
                    .HasColumnName("Job_Title");

                entity.Property(e => e.Name).HasMaxLength(100);

                entity.Property(e => e.PostalCode)
                    .HasMaxLength(100)
                    .HasColumnName("Postal_Code");

                entity.Property(e => e.SignerEmail)
                    .HasMaxLength(100)
                    .HasColumnName("Signer_email");

                entity.Property(e => e.State).HasMaxLength(100);

                entity.Property(e => e.Street).HasMaxLength(100);

                entity.Property(e => e.TemplateId)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Template_Id");

                entity.Property(e => e.WebSite)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Tbldocusignpowerform>(entity =>
            {
                entity.ToTable("tbldocusignpowerforms");

                entity.Property(e => e.DateCreated)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PowerFormId)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TemplateId)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Tbldocusigntemplate>(entity =>
            {
                entity.ToTable("tbldocusigntemplates");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedById)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.DateCreated)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.LastModified)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TemplateId)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TemplateName)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TcCountry>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tc_country", "dev");

                entity.Property(e => e.ConsUndertakingRequired).HasMaxLength(10);

                entity.Property(e => e.CountryCode).HasMaxLength(10);

                entity.Property(e => e.CountryName).HasMaxLength(255);

                entity.Property(e => e.Embargoed).HasMaxLength(10);

                entity.Property(e => e.HighRisk).HasMaxLength(10);

                entity.Property(e => e.JuniperWatchList).HasMaxLength(10);

                entity.Property(e => e.LowRisk).HasMaxLength(10);

                entity.Property(e => e.MidRisk).HasMaxLength(10);

                entity.Property(e => e.NetherlandsBrokerNotif).HasMaxLength(10);

                entity.Property(e => e.NoGlobalLicForMilitaryEu)
                    .HasMaxLength(10)
                    .HasColumnName("NoGlobalLicForMilitaryEU");

                entity.Property(e => e.UsnonSupp3)
                    .HasMaxLength(10)
                    .HasColumnName("USNonSupp3");
            });

            modelBuilder.Entity<TcProfileForm>(entity =>
            {
                entity.ToTable("TC_PROFILE_FORM");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AckDate)
                    .HasColumnType("date")
                    .HasColumnName("ACK_DATE");

                entity.Property(e => e.AuthRepreJob)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("AUTH_REPRE_JOB");

                entity.Property(e => e.AuthRepreName)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("AUTH_REPRE_NAME");

                entity.Property(e => e.CpCompname)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("CP_COMPNAME");

                entity.Property(e => e.CpName)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("CP_NAME");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("date")
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.DCity)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("D_CITY");

                entity.Property(e => e.DCompname)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("D_COMPNAME");

                entity.Property(e => e.DCty)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("D_CTY");

                entity.Property(e => e.DPostal)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("D_POSTAL");

                entity.Property(e => e.DState)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("D_STATE");

                entity.Property(e => e.DStreet)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("D_STREET");

                entity.Property(e => e.DistiResl)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("DISTI_RESL");

                entity.Property(e => e.EliasCopy)
                    .HasMaxLength(400)
                    .IsUnicode(false)
                    .HasColumnName("Elias_Copy");

                entity.Property(e => e.EuBussFn)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("EU_BUSS_FN");

                entity.Property(e => e.EuCity)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("EU_CITY");

                entity.Property(e => e.EuCompname)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("EU_COMPNAME");

                entity.Property(e => e.EuCty)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("EU_CTY");

                entity.Property(e => e.EuEmail)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("EU_EMAIL");

                entity.Property(e => e.EuName)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("EU_NAME");

                entity.Property(e => e.EuOffering)
                    .HasMaxLength(8000)
                    .IsUnicode(false)
                    .HasColumnName("EU_OFFERING");

                entity.Property(e => e.EuPostal)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("EU_POSTAL");

                entity.Property(e => e.EuQ1)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("EU_Q1");

                entity.Property(e => e.EuQ2)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("EU_Q2");

                entity.Property(e => e.EuQ3)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("EU_Q3");

                entity.Property(e => e.EuState)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("EU_STATE");

                entity.Property(e => e.EuStreet)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("EU_STREET");

                entity.Property(e => e.EuUrl)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("EU_URL");

                entity.Property(e => e.EuUrlText)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("EU_URL_TEXT");

                entity.Property(e => e.JVarid)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("J_VARID");

                entity.Property(e => e.JobTitle)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("JOB_TITLE");

                entity.Property(e => e.Neu1City)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NEU1_CITY");

                entity.Property(e => e.Neu1Compname)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NEU1_COMPNAME");

                entity.Property(e => e.Neu1Cty)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NEU1_CTY");

                entity.Property(e => e.Neu1Email)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NEU1_EMAIL");

                entity.Property(e => e.Neu1Name)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NEU1_NAME");

                entity.Property(e => e.Neu1Postal)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NEU1_POSTAL");

                entity.Property(e => e.Neu1State)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NEU1_STATE");

                entity.Property(e => e.Neu1Street)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NEU1_STREET");

                entity.Property(e => e.Neu1Url)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("NEU1_URL");

                entity.Property(e => e.Neu2City)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NEU2_CITY");

                entity.Property(e => e.Neu2Compname)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NEU2_COMPNAME");

                entity.Property(e => e.Neu2Cty)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NEU2_CTY");

                entity.Property(e => e.Neu2Email)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NEU2_EMAIL");

                entity.Property(e => e.Neu2Name)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NEU2_NAME");

                entity.Property(e => e.Neu2Postal)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NEU2_POSTAL");

                entity.Property(e => e.Neu2State)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NEU2_STATE");

                entity.Property(e => e.Neu2Street)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NEU2_STREET");

                entity.Property(e => e.Neu2Url)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("NEU2_URL");

                entity.Property(e => e.Neu3City)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NEU3_CITY");

                entity.Property(e => e.Neu3Compname)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NEU3_COMPNAME");

                entity.Property(e => e.Neu3Cty)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NEU3_CTY");

                entity.Property(e => e.Neu3Email)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NEU3_EMAIL");

                entity.Property(e => e.Neu3Name)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NEU3_NAME");

                entity.Property(e => e.Neu3Postal)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NEU3_POSTAL");

                entity.Property(e => e.Neu3State)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NEU3_STATE");

                entity.Property(e => e.Neu3Street)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NEU3_STREET");

                entity.Property(e => e.Neu3Url)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("NEU3_URL");

                entity.Property(e => e.Neu4City)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NEU4_CITY");

                entity.Property(e => e.Neu4Compname)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NEU4_COMPNAME");

                entity.Property(e => e.Neu4Cty)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NEU4_CTY");

                entity.Property(e => e.Neu4Email)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NEU4_EMAIL");

                entity.Property(e => e.Neu4Name)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NEU4_NAME");

                entity.Property(e => e.Neu4Postal)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NEU4_POSTAL");

                entity.Property(e => e.Neu4State)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NEU4_STATE");

                entity.Property(e => e.Neu4Street)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NEU4_STREET");

                entity.Property(e => e.Neu4Url)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("NEU4_URL");

                entity.Property(e => e.OpCity)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("OP_CITY");

                entity.Property(e => e.OpCompname)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("OP_COMPNAME");

                entity.Property(e => e.OpCty)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("OP_CTY");

                entity.Property(e => e.OpEmail)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("OP_EMAIL");

                entity.Property(e => e.OpName)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("OP_NAME");

                entity.Property(e => e.OpPostal)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("OP_POSTAL");

                entity.Property(e => e.OpState)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("OP_STATE");

                entity.Property(e => e.OpStreet)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("OP_STREET");

                entity.Property(e => e.OpUrl)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("OP_URL");

                entity.Property(e => e.Po)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PO");

                entity.Property(e => e.QDate)
                    .HasColumnType("date")
                    .HasColumnName("Q_DATE");

                entity.Property(e => e.Quote)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("QUOTE");

                entity.Property(e => e.S1City)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("S1_CITY");

                entity.Property(e => e.S1Compname)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("S1_COMPNAME");

                entity.Property(e => e.S1Cty)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("S1_CTY");

                entity.Property(e => e.S1Postal)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("S1_POSTAL");

                entity.Property(e => e.S1State)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("S1_STATE");

                entity.Property(e => e.S1Street)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("S1_STREET");

                entity.Property(e => e.S1Url)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("S1_URL");

                entity.Property(e => e.S2City)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("S2_CITY");

                entity.Property(e => e.S2Compname)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("S2_COMPNAME");

                entity.Property(e => e.S2Cty)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("S2_CTY");

                entity.Property(e => e.S2Postal)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("S2_POSTAL");

                entity.Property(e => e.S2State)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("S2_STATE");

                entity.Property(e => e.S2Street)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("S2_STREET");

                entity.Property(e => e.S2Url)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("S2_URL");

                entity.Property(e => e.S3City)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("S3_CITY");

                entity.Property(e => e.S3Compname)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("S3_COMPNAME");

                entity.Property(e => e.S3Cty)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("S3_CTY");

                entity.Property(e => e.S3Postal)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("S3_POSTAL");

                entity.Property(e => e.S3State)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("S3_STATE");

                entity.Property(e => e.S3Street)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("S3_STREET");

                entity.Property(e => e.S3Url)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("S3_URL");

                entity.Property(e => e.S4City)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("S4_CITY");

                entity.Property(e => e.S4Compname)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("S4_COMPNAME");

                entity.Property(e => e.S4Cty)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("S4_CTY");

                entity.Property(e => e.S4Postal)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("S4_POSTAL");

                entity.Property(e => e.S4State)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("S4_STATE");

                entity.Property(e => e.S4Street)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("S4_STREET");

                entity.Property(e => e.S4Url)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("S4_URL");

                entity.Property(e => e.S5City)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("S5_CITY");

                entity.Property(e => e.S5Compname)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("S5_COMPNAME");

                entity.Property(e => e.S5Cty)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("S5_CTY");

                entity.Property(e => e.S5Postal)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("S5_POSTAL");

                entity.Property(e => e.S5State)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("S5_STATE");

                entity.Property(e => e.S5Street)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("S5_STREET");

                entity.Property(e => e.S5Url)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("S5_URL");

                entity.Property(e => e.So)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SO");

                entity.Property(e => e.SubEmail)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("SUB_EMAIL");

                entity.Property(e => e.SubFn)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("SUB_FN");

                entity.Property(e => e.SubLn)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("SUB_LN");
            });

            modelBuilder.Entity<Test2CertDatum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Test2_Cert_Data");

                entity.Property(e => e.Acceptance)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("acceptance")
                    .IsFixedLength();

                entity.Property(e => e.AdditionalComments)
                    .IsUnicode(false)
                    .HasColumnName("additional_comments");

                entity.Property(e => e.CertificationType)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("certification_type");

                entity.Property(e => e.ComplianceReview)
                    .IsUnicode(false)
                    .HasColumnName("compliance_review");

                entity.Property(e => e.ComplianceReviewComments)
                    .IsUnicode(false)
                    .HasColumnName("compliance_review_comments");

                entity.Property(e => e.DisclosureType)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("disclosure_type");

                entity.Property(e => e.DisclosureTypeComments)
                    .IsUnicode(false)
                    .HasColumnName("disclosure_type_comments");

                entity.Property(e => e.EmployeeEmail)
                    .IsUnicode(false)
                    .HasColumnName("employee_email");

                entity.Property(e => e.EmployeeName)
                    .IsUnicode(false)
                    .HasColumnName("employee_name");

                entity.Property(e => e.FinanceReview)
                    .IsUnicode(false)
                    .HasColumnName("finance_review");

                entity.Property(e => e.FinanceReviewComments)
                    .IsUnicode(false)
                    .HasColumnName("finance_review_comments");

                entity.Property(e => e.Quarter)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("quarter");

                entity.Property(e => e.ResponseType)
                    .IsUnicode(false)
                    .HasColumnName("response_type");

                entity.Property(e => e.WorkflowName)
                    .IsUnicode(false)
                    .HasColumnName("workflow_name");
            });

            modelBuilder.Entity<TestCertDatum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Test_Cert_Data");

                entity.Property(e => e.Acceptance)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("acceptance")
                    .IsFixedLength();

                entity.Property(e => e.AcceptanceDate)
                    .HasColumnType("datetime")
                    .HasColumnName("acceptance_date");

                entity.Property(e => e.AdditionalComments)
                    .IsUnicode(false)
                    .HasColumnName("additional_comments");

                entity.Property(e => e.CertificationType)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("certification_type");

                entity.Property(e => e.ComplianceReview)
                    .IsUnicode(false)
                    .HasColumnName("compliance_review");

                entity.Property(e => e.ComplianceReviewComments)
                    .IsUnicode(false)
                    .HasColumnName("compliance_review_comments");

                entity.Property(e => e.CustomVal)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("custom_val");

                entity.Property(e => e.DisclosureType)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("disclosure_type");

                entity.Property(e => e.DisclosureTypeComments)
                    .IsUnicode(false)
                    .HasColumnName("disclosure_type_comments");

                entity.Property(e => e.EmployeeEmail)
                    .IsUnicode(false)
                    .HasColumnName("employee_email");

                entity.Property(e => e.EmployeeName)
                    .IsUnicode(false)
                    .HasColumnName("employee_name");

                entity.Property(e => e.FinanceReview)
                    .IsUnicode(false)
                    .HasColumnName("finance_review");

                entity.Property(e => e.FinanceReviewComments)
                    .IsUnicode(false)
                    .HasColumnName("finance_review_comments");

                entity.Property(e => e.Quarter)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("quarter");

                entity.Property(e => e.ResponseType)
                    .IsUnicode(false)
                    .HasColumnName("response_type");

                entity.Property(e => e.WorkflowName)
                    .IsUnicode(false)
                    .HasColumnName("workflow_name");
            });

            modelBuilder.Entity<TestRownum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("test_rownum", "wp");

                entity.Property(e => e.BilltoPartyCity)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_city");

                entity.Property(e => e.BilltoPartyCountry)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_country");

                entity.Property(e => e.BilltoPartyKey)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_key");

                entity.Property(e => e.BilltoPartyName)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_name");

                entity.Property(e => e.BilltoPartyStreet1)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_street1");

                entity.Property(e => e.BilltoPartyStreet2)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_street2");

                entity.Property(e => e.BilltoPartyStreet3)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_street3");

                entity.Property(e => e.BilltoPartyStreet4)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_street4");

                entity.Property(e => e.BilltoPartyStreet5)
                    .IsUnicode(false)
                    .HasColumnName("billto_party_street5");

                entity.Property(e => e.CustomerGroup)
                    .IsUnicode(false)
                    .HasColumnName("customer_group");

                entity.Property(e => e.DeliveryDate)
                    .HasColumnType("date")
                    .HasColumnName("delivery_date");

                entity.Property(e => e.DeliveryItem).HasColumnName("delivery_item");

                entity.Property(e => e.DeliveryNumber)
                    .HasMaxLength(50)
                    .HasColumnName("delivery_number");

                entity.Property(e => e.DeliveryType)
                    .IsUnicode(false)
                    .HasColumnName("delivery_type");

                entity.Property(e => e.EndUserCity)
                    .IsUnicode(false)
                    .HasColumnName("end_user_city");

                entity.Property(e => e.EndUserCountry)
                    .IsUnicode(false)
                    .HasColumnName("end_user_country");

                entity.Property(e => e.EndUserKey)
                    .IsUnicode(false)
                    .HasColumnName("end_user_key");

                entity.Property(e => e.EndUserName)
                    .IsUnicode(false)
                    .HasColumnName("end_user_name");

                entity.Property(e => e.EndUserStreet1)
                    .IsUnicode(false)
                    .HasColumnName("end_user_street1");

                entity.Property(e => e.EndUserStreet2)
                    .IsUnicode(false)
                    .HasColumnName("end_user_street2");

                entity.Property(e => e.EndUserStreet3)
                    .IsUnicode(false)
                    .HasColumnName("end_user_street3");

                entity.Property(e => e.EndUserStreet4)
                    .IsUnicode(false)
                    .HasColumnName("end_user_street4");

                entity.Property(e => e.EndUserStreet5)
                    .IsUnicode(false)
                    .HasColumnName("end_user_street5");

                entity.Property(e => e.ImportDate)
                    .HasColumnType("datetime")
                    .HasColumnName("import_date");

                entity.Property(e => e.ImportId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("import_id");

                entity.Property(e => e.ImportStatus)
                    .HasMaxLength(255)
                    .HasColumnName("import_status");

                entity.Property(e => e.ListPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("list_price");

                entity.Property(e => e.Material)
                    .IsUnicode(false)
                    .HasColumnName("material");

                entity.Property(e => e.MaterialEccn)
                    .IsUnicode(false)
                    .HasColumnName("material_eccn");

                entity.Property(e => e.MaterialHts)
                    .IsUnicode(false)
                    .HasColumnName("material_hts");

                entity.Property(e => e.MaterialOfferingType)
                    .IsUnicode(false)
                    .HasColumnName("material_offering_type");

                entity.Property(e => e.MaterialType)
                    .IsUnicode(false)
                    .HasColumnName("material_type");

                entity.Property(e => e.NetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("net_price");

                entity.Property(e => e.PlantKey)
                    .IsUnicode(false)
                    .HasColumnName("plant_key");

                entity.Property(e => e.PlantName)
                    .IsUnicode(false)
                    .HasColumnName("plant_name");

                entity.Property(e => e.PoType)
                    .IsUnicode(false)
                    .HasColumnName("po_type");

                entity.Property(e => e.Qty)
                    .HasColumnType("decimal(10, 0)")
                    .HasColumnName("qty");

                entity.Property(e => e.SalesOrgKey)
                    .IsUnicode(false)
                    .HasColumnName("sales_org_key");

                entity.Property(e => e.SalesOrgName)
                    .IsUnicode(false)
                    .HasColumnName("sales_org_name");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("serial_number");

                entity.Property(e => e.ShiptoCity)
                    .IsUnicode(false)
                    .HasColumnName("shipto_city");

                entity.Property(e => e.ShiptoCountry)
                    .IsUnicode(false)
                    .HasColumnName("shipto_country");

                entity.Property(e => e.ShiptoCustomer)
                    .IsUnicode(false)
                    .HasColumnName("shipto_customer");

                entity.Property(e => e.ShiptoKey)
                    .IsUnicode(false)
                    .HasColumnName("shipto_key");

                entity.Property(e => e.ShiptoStreet1)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street1");

                entity.Property(e => e.ShiptoStreet2)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street2");

                entity.Property(e => e.ShiptoStreet3)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street3");

                entity.Property(e => e.ShiptoStreet4)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street4");

                entity.Property(e => e.ShiptoStreet5)
                    .IsUnicode(false)
                    .HasColumnName("shipto_street5");

                entity.Property(e => e.SoDate)
                    .HasColumnType("date")
                    .HasColumnName("so_date");

                entity.Property(e => e.SoItem).HasColumnName("so_item");

                entity.Property(e => e.SoNumber)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("so_number");

                entity.Property(e => e.SoType)
                    .IsUnicode(false)
                    .HasColumnName("so_type");

                entity.Property(e => e.SoldtoCity)
                    .IsUnicode(false)
                    .HasColumnName("soldto_city");

                entity.Property(e => e.SoldtoCountry)
                    .IsUnicode(false)
                    .HasColumnName("soldto_country");

                entity.Property(e => e.SoldtoKey)
                    .IsUnicode(false)
                    .HasColumnName("soldto_key");

                entity.Property(e => e.SoldtoName)
                    .IsUnicode(false)
                    .HasColumnName("soldto_name");

                entity.Property(e => e.SoldtoStreet1)
                    .IsUnicode(false)
                    .HasColumnName("soldto_street1");

                entity.Property(e => e.SoldtoStreet2)
                    .IsUnicode(false)
                    .HasColumnName("soldto_street2");

                entity.Property(e => e.SoldtoStreet3)
                    .IsUnicode(false)
                    .HasColumnName("soldto_street3");

                entity.Property(e => e.SoldtoStreet4)
                    .IsUnicode(false)
                    .HasColumnName("soldto_street4");

                entity.Property(e => e.SoldtoStreet5)
                    .IsUnicode(false)
                    .HasColumnName("soldto_street5");

                entity.Property(e => e.TotNetPrice)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("tot_net_price");
            });

            modelBuilder.Entity<TestSvc>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("test_svc", "wp");

                entity.Property(e => e.ContractNumber).HasColumnName("contract_number");

                entity.Property(e => e.EndCustCountryCode).HasColumnName("end_cust_country_code");

                entity.Property(e => e.EndCustKey).HasColumnName("end_cust_key");

                entity.Property(e => e.EndCustName).HasColumnName("end_cust_name");

                entity.Property(e => e.SerialNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("serial_number");
            });

            modelBuilder.Entity<TestTable>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("test_table", "dsf");

                entity.Property(e => e.Column1)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("column1");

                entity.Property(e => e.Column2)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("column2");
            });

            modelBuilder.Entity<TransposeTest>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("transpose_test", "dev");

                entity.Property(e => e.TagId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TagID");
            });

            modelBuilder.Entity<TransposeTest2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("transpose_test2", "dev");

                entity.Property(e => e.Color)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("color");
            });

            modelBuilder.Entity<UniqEcSvc>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("uniq_ec_svc", "wp");

                entity.Property(e => e.Ec)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("EC");
            });

            modelBuilder.Entity<UserRoleMapping>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("user_role_mapping");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("created_date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.RoleId).HasColumnName("role_id");

                entity.Property(e => e.Status)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("status");

                entity.Property(e => e.UserId).HasColumnName("user_id");
            });

            modelBuilder.Entity<Wapp11302017>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WAPP_11302017");

                entity.HasIndex(e => e.UserId, "wapp_userid");

                entity.Property(e => e.AccountStatus)
                    .HasMaxLength(50)
                    .HasColumnName("ACCOUNT_STATUS");

                entity.Property(e => e.AddressLine1).HasColumnName("ADDRESS_LINE_1");

                entity.Property(e => e.AddressLine2).HasColumnName("ADDRESS_LINE_2");

                entity.Property(e => e.AddressLine3).HasColumnName("ADDRESS_LINE_3");

                entity.Property(e => e.City)
                    .HasMaxLength(250)
                    .HasColumnName("CITY");

                entity.Property(e => e.CompanyName).HasColumnName("COMPANY_NAME");

                entity.Property(e => e.ContactStatus)
                    .HasMaxLength(50)
                    .HasColumnName("CONTACT_STATUS");

                entity.Property(e => e.Country)
                    .HasMaxLength(250)
                    .HasColumnName("COUNTRY");

                entity.Property(e => e.CreatedDate)
                    .HasMaxLength(50)
                    .HasColumnName("CREATED_DATE");

                entity.Property(e => e.CtyGrp)
                    .HasMaxLength(250)
                    .HasColumnName("Cty_Grp");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(250)
                    .HasColumnName("FIRST_NAME");

                entity.Property(e => e.LastName)
                    .HasMaxLength(250)
                    .HasColumnName("LAST_NAME");

                entity.Property(e => e.RolesEntitled).HasColumnName("ROLES_ENTITLED");

                entity.Property(e => e.SapAcctid)
                    .HasMaxLength(250)
                    .HasColumnName("SAP_ACCTID");

                entity.Property(e => e.SapBpid)
                    .HasMaxLength(250)
                    .HasColumnName("SAP_BPID");

                entity.Property(e => e.Status)
                    .HasMaxLength(250)
                    .HasColumnName("STATUS");

                entity.Property(e => e.SubStatus)
                    .HasMaxLength(50)
                    .HasColumnName("SUB_STATUS");

                entity.Property(e => e.UserId)
                    .HasMaxLength(250)
                    .HasColumnName("USER_ID");

                entity.Property(e => e.UserType)
                    .HasMaxLength(50)
                    .HasColumnName("USER_TYPE");
            });

            modelBuilder.HasSequence<int>("customer_er_seq").StartsAt(999);

            modelBuilder.HasSequence("lamp_customer_master_seq").StartsAt(1091711);

            modelBuilder.HasSequence("ns_seq")
                .StartsAt(999)
                .HasMin(-2147483648)
                .HasMax(2147483647);

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}
